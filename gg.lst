   181 |  void MMSP::name(bool const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"bool",&__48);
   183 |    return;
          } /* function */ 


   184 |  void MMSP::name(char const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"char",&__54);
   186 |    return;
          } /* function */ 


   187 |  void MMSP::name(unsigned char const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"unsigned char",&__60);
   189 |    return;
          } /* function */ 


   190 |  void MMSP::name(int const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"int",&__66);
   192 |    return;
          } /* function */ 


   193 |  void MMSP::name(unsigned int const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"unsigned int",&__72);
   195 |    return;
          } /* function */ 


   196 |  void MMSP::name(long const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"long",&__78);
   198 |    return;
          } /* function */ 


   199 |  void MMSP::name(unsigned long const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"unsigned long",&__84);
   201 |    return;
          } /* function */ 


   202 |  void MMSP::name(short const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"short",&__90);
   204 |    return;
          } /* function */ 


   205 |  void MMSP::name(unsigned short const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"unsigned short",&__96);
   207 |    return;
          } /* function */ 


   208 |  void MMSP::name(float const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"float",&__102);
   210 |    return;
          } /* function */ 


   211 |  void MMSP::name(double const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"double",&__108);
   213 |    return;
          } /* function */ 


   214 |  void MMSP::name(__float128 const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"long double",&__114);
   216 |    return;
          } /* function */ 


    14 |  void MMSP::Init(int, char**)(int argc, char * argv)
          {
    19 |    return;
          } /* function */ 


    22 |  void MMSP::Finalize()()
          {
    27 |    return;
          } /* function */ 


    30 |  void MMSP::Abort(int)(int err)
    35 |  {
            exit(err)
            return;
    36 |  } /* function */ 


    42 |  void MMSP::check_boundary(int&, int, int, int, int)(int *x, int x0, int x1, int b0, int b1)
    44 |  {
            if (!(*x < x0)) goto lab_1;
    45 |    if (b0 == 1) goto lab_4;
            if (!(b0 == 4)) goto lab_3;
          lab_4:
            *x = x0;
            goto lab_12;
          lab_3:
    47 |    if (!(b0 == 2)) goto lab_7;
            *x = *x + (x1 - x0);
            goto lab_12;
          lab_7:
    49 |    if (!(b0 == 0)) goto lab_12;
            *x = x0 * 2 - *x;
    50 |    goto lab_12;
          lab_1:
            if (!(*x >= x1)) goto lab_13;
    51 |    if (b1 == 1) goto lab_16;
            if (!(b1 == 4)) goto lab_15;
          lab_16:
            *x = x1 - 1;
            goto lab_18;
          lab_15:
    53 |    if (!(b1 == 2)) goto lab_19;
            *x = *x + (x0 - x1);
            goto lab_21;
          lab_19:
    55 |    if (!(b1 == 0)) goto lab_22;
            *x = (x1 * 2 - *x) - 2;
          lab_22:
          lab_21:
          lab_18:
    56 |  lab_13:
          lab_12:
    57 |    return;
          } /* function */ 


   136 |  void MMSP::print_progress(int, int)(int step, int steps)
   137 |  {
            guard_iterations6 = 1;
   156 |    if (!(step == 0)) goto lab_2;
   157 |    iterations = iterations + 1;
   158 |    tstart = (unsigned long long) time(NULL);
   160 |    time(&rawtime);
   161 |    timeinfo = localtime(&rawtime);
   162 |    timestring = asctime(timeinfo);
            $$RET0 = __builtin_strlen(timestring);
   163 |    timestring[(long long) ($$RET0 + 18446744073709551615ull)] = 0u;
   548 |    $$RET1 = (long long) __builtin_strlen("No. ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"No. ",$$RET1);
   513 |    __260 = std::ostream::operator<<(int)(&std::cout,iterations);
   548 |    $$RET2 = (long long) __builtin_strlen(":.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__260,":.",$$RET2);
   507 |    if (timestring != NULL) goto lab_22;
   148 |    if (!(__260 == NULL)) goto lab_25;
            __311 = NULL;
            goto lab_26;
          lab_25:
   164 |    __311 = ((char *)__260  + ((long long *)(*((char * *)__260)))[-24ll / 8]);
            goto lab_28;
          lab_26:
   148 |    __312 = NULL;
            goto lab_29;
          lab_28:
   164 |    __312 = ((char *)__260  + ((long long *)(*((char * *)__260)))[-24ll / 8]);
          lab_29:
   507 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(__311,*((int *)((char *)__312 + 32)) | 1)
   548 |    goto lab_30;
          lab_22:
            $$RET3 = (long long) __builtin_strlen(timestring);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__260,timestring,$$RET3);
          lab_30:
   548 |    $$RET4 = (long long) __builtin_strlen(" [");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__260," [",$$RET4);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::flush<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns32.(__260);
   165 |    goto lab_40;
          lab_2:
            if (!(steps - step == 1)) goto lab_41;
            $$RET5 = (unsigned long long) time(NULL);
   167 |    printf("...] %2luh:%2lum:%2lus",($$RET5 - tstart) / 3600ull,(($$RET5 - tstart) % 3600ull) / 60ull,($$RET5 - tstart) % 60ull);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns34.(&std::cout);
   169 |    goto lab_43;
          lab_41:
            if (!(0 == (step * 20) % steps)) goto lab_44;
   548 |    $$RET6 = (long long) __builtin_strlen("... ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"... ",$$RET6);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::flush<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns35.(&std::cout);
   114 |  lab_44:
          lab_43:
          lab_40:
   171 |    return;
          } /* function */ 


          void __init__0()()
          {
            std::allocator<char>::allocator()(&__320);
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&PROGRAM,"gg",&__320);
            __cxa_atexit(&__srterm__1(),NULL,&__dso_handle);
            return;
          } /* function */ 


          void __init__1()()
          {
            std::allocator<char>::allocator()(&__324);
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&MESSAGE,"Grain growth hybrid code",&__324);
            __cxa_atexit(&__srterm__2(),NULL,&__dso_handle);
            return;
          } /* function */ 


    52 |  double radius(int, int, int, int, int, int)(int x0, int x1, int y0, int y1, int z0, int z1)
    54 |  {
            rstr = __sqrt@18((__pow@6((double) (x0 - x1), 2.0000000000000000E+000) + __pow@6((double) (y0 - y1), 2.0000000000000000E+000)) + __pow@6((double) (z0 - z1), 2.0000000000000000E+000));
            return rstr;
    55 |  } /* function */ 


   631 |  int MMSP::seeds_to_buffer(std::vector<Point<int>, std::allocator<Point<int> > > const&, int*&)(_Vector_base<Point<int>,std::allocator<Point<int> > > *vp, char * *q)
   635 |  {
            if (!(*q == NULL)) goto lab_1;
   548 |    $$RET7 = (long long) __builtin_strlen("/nError in seeds_to_buffer: send_buffer not initialized.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"/nError in seeds_to_buffer: send_buffer not initialized.",$$RET7);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns47.(&std::cerr);
   637 |    exit(1)
            return;
   638 |  lab_1:
   633 |    size = 0;
   640 |    if (!(0ull < (unsigned long long) ((*((char * *)((char *)vp + 8)) - *((char * *)vp)) / 12ll))) goto lab_14;
            $$CIV0 = 0ll;
            do {   /* id=1 guarded */ /* ~12 */ 
              /* region = 10 */
              /* bump-normalized */
   642 |      ((int *)*q)[($$CIV0 * 12ll) / 4] = *((int *)((char *)(*((char * *)vp)) + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV0)) * 12ull)));
   644 |      *((int *)((char *)*q + $$CIV0 * 12ll + 4ll)) = *((int *)((char *)(*((char * *)vp)) + 4 + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV0)) * 12ull)));
   646 |      *((int *)((char *)*q + $$CIV0 * 12ll + 8ll)) = *((int *)((char *)(*((char * *)vp)) + 8 + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV0)) * 12ull)));
   640 |      $$CIV0 = $$CIV0 + 1ll;
            } while ((unsigned long long) $$CIV0 < (unsigned long long) ((*((char * *)((char *)vp + 8)) - *((char * *)vp)) / 12ll));    /* ~12 */
            size = (int) ((unsigned long long) ((*((char * *)((char *)vp + 8)) - *((char * *)vp)) / 12ll)) * 3;
          lab_14:
   649 |    rstr = size;
            return rstr;
   650 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       297           642                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       297           642                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       297           644                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       297           644                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       297           646                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       297           646                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

   653 |  void MMSP::seeds_from_buffer(std::vector<Point<int>, std::allocator<Point<int> > >&, int*&, int const&)(_Vector_base<Point<int>,std::allocator<Point<int> > > *vp, char * *q, int *size)
   655 |  {
            if (!(0ll < (long long) *size * 4ll - 8ll)) goto lab_3;
            p = ((char *)*q  + 8ll);
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 13 */
   657 |      y = ((int *)((char *)p  - 4ll))->(int).rns59.;
   658 |      z = *p;
   659 |      __368.x@0 = ((int *)((char *)p  - 8ll))->(int).rns61.;
    11 |      __368.y@4 = y;
              __368.z@8 = z;
   735 |      if (!(*((char * *)((char *)vp + 8)) != *((char * *)((char *)vp + 16)))) goto lab_4;
   101 |      if (!(*((char * *)((char *)vp + 8)) != NULL)) goto lab_13;
    12 |      *((char * *)((char *)vp + 8))->(Point<int>).x@0.rns93.$$47 = &__368->(Point<int>).x@0.rns94.$$47;
              *((char * *)((char *)vp + 8))->(Point<int>).y@4.rns95.$$47 = &__368->(Point<int>).y@4.rns96.$$47;
              *((char * *)((char *)vp + 8))->(Point<int>).z@8.rns97.$$47 = &__368->(Point<int>).z@8.rns98.$$47;
   105 |    lab_13:
   738 |      *((char * *)((char *)vp + 8)) = ((char *)*((char * *)((char *)vp + 8))  + 12ll);
   739 |      goto lab_6;
            lab_4:
   686 |      __392._M_current@0 = *((char * *)((char *)vp + 8));
   444 |      std::vector<Point<int>, std::allocator<Point<int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int> const&)(vp,__392,&__368)
            lab_6:
   655 |      p = ((char *)p  + 12ll);
            } while (p < ((char *)*q  + (long long) *size * 4ll));    /* ~1 */
          lab_3:
   661 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       297           655             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       297           655             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           655             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

    22 |  void MMSP::generate(int, char const*)(int dim, char * filename)
    23 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    27 |    number_of_fields = 318946;
    81 |    phases._M_start@0 = NULL;
            phases._M_finish@8 = NULL;
            phases._M_end_of_storage@10 = NULL;
   208 |    __es.__c4@3 = 1u;
    35 |    if (!1) goto lab_3;
            i = 0;
            do {   /* id=3 guarded */ /* ~1 */ 
              /* region = 56 */
              $$RET8 = rand();
   734 |      __398 = $$RET8 % 2;
   735 |      if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_4;
   169 |      if (!(phases._M_finish@8 != NULL)) goto lab_7;
   105 |      *phases._M_finish@8 = $$RET8 % 2;
            lab_7:
   738 |      phases._M_finish@8 = ((char *)phases._M_finish@8  + 4ll);
   739 |      goto lab_9;
            lab_4:
   686 |      __492._M_current@0 = phases._M_finish@8;
   444 |      std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)(&phases,__492,&__398)
            lab_9:
    35 |      i = i + 1;
            } while (i < number_of_fields);    /* ~1 */
          lab_3:
    39 |    $$VAMEMBERC = &grid;
            $$VAMEMBERD = 1;
            $$VAMEMBERE = 0;
            $$VAMEMBERF = 1001;
            $$VAMEMBER10 = 0;
            $$VAMEMBER11 = 1001;
    48 |    *((int *)((char *)$$VAMEMBERC + 16)) = $$VAMEMBERD;
            $$RET89 = (unsigned long long) __builtinParameterAddress(&$$VAMEMBERD);
    53 |    if (!1) goto lab_74;
    52 |    list = (char *) ($$RET89 + 11ull & 18446744073709551608ull);
    53 |    $$CIV3 = 0ll;
            do {   /* id=5 guarded */ /* ~75 */ 
              /* region = 55 */
              /* bump-normalized */
    54 |      ((int *)((char *)$$VAMEMBERC + 24))[$$CIV3] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)$$VAMEMBERC + 32))[$$CIV3] = (list + -4ll / 4)[0ll];
    53 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < 2ull);    /* ~75 */
          lab_74:
    61 |    *((int *)((char *)$$VAMEMBERC + 20)) = 0;
    68 |    MMSP::grid<2, unsigned long>::setup(bool)($$VAMEMBERC,0u)
    39 |    __es.__c4@3 = 2u;
    41 |    __400 = 16;
            unsigned long MMSP::tessellate<2, unsigned long>(MMSP::grid<2, unsigned long>&, int const&, int const&)(&grid,&number_of_fields,&__400);
    43 |    if (!(dim == 2)) goto lab_10;
    44 |    $$VAMEMBER0 = &initGrid;
            $$VAMEMBER1 = 3;
            $$VAMEMBER2 = 0;
            $$VAMEMBER3 = 1001;
            $$VAMEMBER4 = 0;
            $$VAMEMBER5 = 1001;
    48 |    *((int *)((char *)$$VAMEMBER0 + 16)) = $$VAMEMBER1;
            $$RET8A = (unsigned long long) __builtinParameterAddress(&$$VAMEMBER1);
    53 |    if (!1) goto lab_63;
    52 |    list = (char *) ($$RET8A + 11ull & 18446744073709551608ull);
    53 |    $$CIV4 = 0ll;
            do {   /* id=4 guarded */ /* ~64 */ 
              /* region = 54 */
              /* bump-normalized */
    54 |      ((int *)((char *)$$VAMEMBER0 + 24))[$$CIV4] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)$$VAMEMBER0 + 32))[$$CIV4] = (list + -4ll / 4)[0ll];
    53 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < 2ull);    /* ~64 */
          lab_63:
    61 |    *((int *)((char *)$$VAMEMBER0 + 20)) = 0;
    68 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)($$VAMEMBER0,0u)
    44 |    __es.__c4@3 = 3u;
    45 |    if (!(0 < dim)) goto lab_14;
            $$CIV1 = 0ll;
            do {   /* id=2 guarded */ /* ~12 */ 
              /* region = 52 */
              /* bump-normalized */
   333 |      (((double *)&initGrid) + 104ll / 8)[$$CIV1] =  2.5000000000000001E-002;
    45 |      $$CIV1 = $$CIV1 + 1ll;
            } while ((unsigned long long) $$CIV1 < (unsigned long long) ((long long) dim));    /* ~12 */
          lab_14:
    48 |    if (!(0 < initGrid.nodes@8)) goto lab_17;
            i = 0;
            do {   /* id=1 guarded */ /* ~15 */ 
              /* region = 53 */
    29 |      MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |      if (2 < *(((int *)((char *)&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65 + 8)) + (long long) i * 16ll / 4)) goto lab_45;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_45:
    49 |      ((double *)(*(((char * *)(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65)) + (long long) i * 16ll / 8)))[2ll] = (double) ((unsigned long long *)(&grid->(grid<2,unsigned long>).data@0.rns160.$$61))[(long long) i];
   611 |      if (!(*((int *)((char *)phases._M_start@0 + (long long) (((unsigned long long *)(&grid->(grid<2,unsigned long>).data@0.rns160.$$61))[(long long) i] * 4ull))) == 1)) goto lab_18;
    29 |      MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |      if (1 < *(((int *)((char *)&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65 + 8)) + (long long) i * 16ll / 4)) goto lab_49;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_49:
    51 |      ((double *)(*(((char * *)(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65)) + (long long) i * 16ll / 8)))[1ll] =  1.0000000000000000E+000;
    29 |      MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |      if (0 < *(((int *)((char *)&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65 + 8)) + (long long) i * 16ll / 4)) goto lab_51;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_51:
    52 |      ((double *)(*(((char * *)(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65)) + (long long) i * 16ll / 8)))[0ll] =  6.9999999999999995E-001;
    53 |      goto lab_20;
            lab_18:
    29 |      MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |      if (1 < *(((int *)((char *)&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65 + 8)) + (long long) i * 16ll / 4)) goto lab_47;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_47:
    55 |      ((double *)(*(((char * *)(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65)) + (long long) i * 16ll / 8)))[1ll] =  0.0000000000000000E+000;
    29 |      MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |      if (0 < *(((int *)((char *)&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65 + 8)) + (long long) i * 16ll / 4)) goto lab_43;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_43:
    56 |      ((double *)(*(((char * *)(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65)) + (long long) i * 16ll / 8)))[0ll] =  2.9999999999999998E-001;
    57 |    lab_20:
    48 |      i = i + 1;
            } while (i < initGrid.nodes@8);    /* ~15 */
          lab_17:
   567 |    MMSP::grid<2, MMSP::vector<double> >::output(char const*) const(&initGrid,filename)
    60 |    __es.__c4@3 = 2u;
   331 |    if (!(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns173.$$58 != NULL)) goto lab_60;
   332 |    __cxa_vec_delete3(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns173.$$58,16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |    &initGrid->(grid<2,MMSP::vector<double> >).data@0.rns173.$$58 = NULL;
   334 |  lab_60:
    60 |    goto lab_21;
          lab_10:
   548 |    $$RET14 = (long long) __builtin_strlen("Grain Growth code is only implemented for 2D.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"Grain Growth code is only implemented for 2D.",$$RET14);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns88.(&std::cerr);
    35 |    exit(-1)
            return;
    63 |  lab_21:
    64 |    __es.__c4@3 = 1u;
   331 |    if (!(&grid->(grid<2,unsigned long>).data@0.rns158.$$54 != NULL)) goto lab_72;
   332 |    operator delete[](void*)(&grid->(grid<2,unsigned long>).data@0.rns158.$$54)
   333 |    &grid->(grid<2,unsigned long>).data@0.rns158.$$54 = NULL;
   334 |  lab_72:
    64 |    __es.__c4@3 = 0u;
   145 |    if (!(phases._M_start@0 != NULL)) goto lab_66;
    95 |    operator delete(void*)(phases._M_start@0)
   110 |  lab_66:
    64 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0            35             3    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0            35             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0            35             3    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275            53             5    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            53             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)$$VAMEMBERC + 
                                          (4ll)*($$CIV3)) with  non-vectorizable strides.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)$$VAMEMBERC 
                                          + (4ll)*($$CIV3)).
       275            55                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)(char *) ((unsigned long long) 
                                          ((char *)(char *) ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll) + 7ull & 
                                          18446744073709551608ull)  + 8ll) which is not  
                                          suitable for SIMD vectorization.
       275            55                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)$$VAMEMBERC + 
                                          (4ll)*($$CIV3)) with  non-vectorizable strides.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)$$VAMEMBERC 
                                          + (4ll)*($$CIV3)).
       275            53             4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)$$VAMEMBER0 + 
                                          (4ll)*($$CIV4)) with  non-vectorizable strides.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)$$VAMEMBER0 
                                          + (4ll)*($$CIV4)).
       275            55                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)(char *) ((unsigned long long) 
                                          ((char *)(char *) ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll) + 7ull & 
                                          18446744073709551608ull)  + 8ll) which is not  
                                          suitable for SIMD vectorization.
       275            55                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)$$VAMEMBER0 + 
                                          (4ll)*($$CIV4)) with  non-vectorizable strides.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)$$VAMEMBER0 
                                          + (4ll)*($$CIV4)).
         0            45             2    Loop was not SIMD vectorized because it is not 
                                          profitable to vectorize.
       274           333                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            48             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
         0            48             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
         0            48             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

    51 |  int main(int argc, char * *argv)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    52 |    MMSP::Init(int, char**)(argc,argv)
    55 |    if (!(argc < 2)) goto lab_1;
  2503 |    __6287 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET15 = (long long) __builtin_strlen(": bad argument list.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6287,": bad argument list.  Use/n/n",$$RET15);
   548 |    $$RET16 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET16);
  2503 |    __6312 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET17 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6312," --help/n/n",$$RET17);
   548 |    $$RET18 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET18);
    59 |    MMSP::Abort(int)(-1)
    60 |  lab_1:
    64 |    $$RET19 = time(NULL);
    68 |    srand((unsigned int) $$RET19)
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__5852,argv[1ll],&__5854);
            __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__5855,"--help",&__5857);
            __es.__c4@3 = 2u;
  2241 |    if (!(*(((unsigned long long *)&__5852->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8) == *(((unsigned long long *)&__5855->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8))) goto lab_41;
   259 |    __6350 = __builtin_memcmp(&__5852->(_Alloc_hider)._M_p@0,&__5855->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__5852->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
  2255 |    if (!(__6350 != 0)) goto lab_42;
          lab_41:
            __9992 = 0u;
            goto lab_43;
          lab_42:
            __9992 = 1u;
          lab_43:
  2243 |    __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__5855);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__5852);
            if (!(__9992 != 0u)) goto lab_39;
  2503 |    __6411 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET1A = (long long) __builtin_strlen(": ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6411,": ",$$RET1A);
  2503 |    __6428 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6411,&MESSAGE->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&MESSAGE->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET1B = (long long) __builtin_strlen("/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6428,"/n/n",$$RET1B);
   548 |    $$RET1C = (long long) __builtin_strlen("Valid command lines have the form:/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"Valid command lines have the form:/n/n",$$RET1C);
   548 |    $$RET1D = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET1D);
  2503 |    __6461 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET1E = (long long) __builtin_strlen(" ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6461," ",$$RET1E);
   548 |    $$RET1F = (long long) __builtin_strlen("[--help] [--example dimension [outfile]] [infile [outfile] steps [increment]]/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"[--help] [--example dimension [outfile]] [infile [outfile] steps [increment]]/n/n",$$RET1F);
   548 |    $$RET20 = (long long) __builtin_strlen("A few examples of using the command line follow./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"A few examples of using the command line follow./n/n",$$RET20);
   548 |    $$RET21 = (long long) __builtin_strlen("The command/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The command/n/n",$$RET21);
   548 |    $$RET22 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET22);
  2503 |    __6510 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET23 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6510," --help/n/n",$$RET23);
   548 |    $$RET24 = (long long) __builtin_strlen("generates this help message and exits.  ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"generates this help message and exits.  ",$$RET24);
   548 |    $$RET25 = (long long) __builtin_strlen("The "--example" option can be used to gen-/nerate a relevant test grid, e.g./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The "--example" option can be used to gen-/nerate a relevant test grid, e.g./n/n",$$RET25);
   548 |    $$RET26 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET26);
  2503 |    __6551 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET27 = (long long) __builtin_strlen(" --example 3/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6551," --example 3/n/n",$$RET27);
   548 |    $$RET28 = (long long) __builtin_strlen("generates an example test problem on a grid of dimension 3 and writes this to the /n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"generates an example test problem on a grid of dimension 3 and writes this to the /n",$$RET28);
   548 |    $$RET29 = (long long) __builtin_strlen("file named "example", while/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"file named "example", while/n/n",$$RET29);
   548 |    $$RET2A = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET2A);
  2503 |    __6592 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET2B = (long long) __builtin_strlen(" --example 2 start/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6592," --example 2 start/n/n",$$RET2B);
   548 |    $$RET2C = (long long) __builtin_strlen("generates an example test problem on a grid of dimension 2 and writes this to the /n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"generates an example test problem on a grid of dimension 2 and writes this to the /n",$$RET2C);
   548 |    $$RET2D = (long long) __builtin_strlen("file named "start"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"file named "start"./n/n",$$RET2D);
   548 |    $$RET2E = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET2E);
  2503 |    __6633 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET2F = (long long) __builtin_strlen(" start 1000/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6633," start 1000/n/n",$$RET2F);
   548 |    $$RET30 = (long long) __builtin_strlen("reads the grid contained within "start" and runs a simulation for 1000 time steps./n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"reads the grid contained within "start" and runs a simulation for 1000 time steps./n",$$RET30);
   548 |    $$RET31 = (long long) __builtin_strlen("The final grid is written to a file named "start.1000"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The final grid is written to a file named "start.1000"./n/n",$$RET31);
   548 |    $$RET32 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET32);
  2503 |    __6674 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET33 = (long long) __builtin_strlen(" start final 1000/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6674," start final 1000/n/n",$$RET33);
   548 |    $$RET34 = (long long) __builtin_strlen("reads the grid contained within "start" and runs a simulation for 1000 time steps./n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"reads the grid contained within "start" and runs a simulation for 1000 time steps./n",$$RET34);
   548 |    $$RET35 = (long long) __builtin_strlen("The final grid is written to a file named "final.1000"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The final grid is written to a file named "final.1000"./n/n",$$RET35);
   548 |    $$RET36 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET36);
  2503 |    __6715 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET37 = (long long) __builtin_strlen(" start 1000 100/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6715," start 1000 100/n/n",$$RET37);
   548 |    $$RET38 = (long long) __builtin_strlen("reads the grid contained within "start" and runs a simulation for 1000 time steps./n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"reads the grid contained within "start" and runs a simulation for 1000 time steps./n",$$RET38);
   548 |    $$RET39 = (long long) __builtin_strlen("The grid is then written to a file every 100 time steps.  ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The grid is then written to a file every 100 time steps.  ",$$RET39);
   548 |    $$RET3A = (long long) __builtin_strlen("The resulting files are /nnamed "start.0100", "start.0200", ... "start.1000"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The resulting files are /nnamed "start.0100", "start.0200", ... "start.1000"./n/n",$$RET3A);
   548 |    $$RET3B = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET3B);
  2503 |    __6764 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET3C = (long long) __builtin_strlen(" start final 1000 100/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6764," start final 1000 100/n/n",$$RET3C);
   548 |    $$RET3D = (long long) __builtin_strlen("reads the grid contained within "start" and runs a simulation for 1000 time steps./n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"reads the grid contained within "start" and runs a simulation for 1000 time steps./n",$$RET3D);
   548 |    $$RET3E = (long long) __builtin_strlen("The grid is then written to a file every 100 time steps.  ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The grid is then written to a file every 100 time steps.  ",$$RET3E);
   548 |    $$RET3F = (long long) __builtin_strlen("The resulting files are /nnamed "final.0100", "final.0200", ... "final.1000"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The resulting files are /nnamed "final.0100", "final.0200", ... "final.1000"./n/n",$$RET3F);
   101 |    exit(0)
            return;
   102 |  lab_39:
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6115,argv[1ll],&__6117);
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6118,"--example",&__6120);
            __es.__c4@3 = 4u;
  2241 |    if (!(*(((unsigned long long *)&__6115->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8) == *(((unsigned long long *)&__6118->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8))) goto lab_390;
   259 |    __6818 = __builtin_memcmp(&__6115->(_Alloc_hider)._M_p@0,&__6118->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__6115->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
  2255 |    if (!(__6818 != 0)) goto lab_391;
          lab_390:
            __10069 = 0u;
            goto lab_392;
          lab_391:
            __10069 = 1u;
          lab_392:
  2243 |    __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6118);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6115);
            if (!(__10069 != 0u)) goto lab_388;
   107 |    if (argc < 3) goto lab_395;
            if (!(argc > 4)) goto lab_394;
          lab_395:
  2503 |    __6879 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET40 = (long long) __builtin_strlen(": bad argument list.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6879,": bad argument list.  Use/n/n",$$RET40);
   548 |    $$RET41 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET41);
  2503 |    __6904 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET42 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6904," --help/n/n",$$RET42);
   548 |    $$RET43 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET43);
   111 |    MMSP::Abort(int)(-1)
   112 |  lab_394:
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6123,argv[2ll],&__6125);
            __es.__c4@3 = 5u;
            $$RET44 = __builtin_strlen("0123456789");
  1913 |    __6926 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6123,"0123456789",0ull,$$RET44);
  1914 |    __6269 = (char) (__6926 != 18446744073709551615ull);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6123);
            if (!(__6269 != 0u)) goto lab_433;
  2503 |    __6959 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET45 = (long long) __builtin_strlen(": example grid must have integral dimension.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6959,": example grid must have integral dimension.  Use/n/n",$$RET45);
   548 |    $$RET46 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET46);
  2503 |    __6984 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET47 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6984," --help/n/n",$$RET47);
   548 |    $$RET48 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET48);
   119 |    MMSP::Abort(int)(-1)
   120 |  lab_433:
   286 |    __7001 = (int) strtol(argv[2ll],NULL,10);
   260 |    outfile._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 6u;
   126 |    if (!(argc < 4)) goto lab_471;
   519 |    $$RET49 = __builtin_strlen("example");
   975 |    std::string::assign(char const*, unsigned long)(&outfile,"example",$$RET49);
   519 |    goto lab_473;
          lab_471:
            __7031 = argv[3ll];
            $$RET4A = __builtin_strlen(argv[3ll]);
   975 |    std::string::assign(char const*, unsigned long)(&outfile,__7031,$$RET4A);
   519 |  lab_473:
   129 |    filename = operator new[](unsigned long)(*(((unsigned long long *)outfile._M_p@0) + -1ll * 24ll / 8) + 1ull);
   130 |    i = 0u;
            if (!(0ull < *(((unsigned long long *)outfile._M_p@0) + -1ll * 24ll / 8))) goto lab_476;
            do {   /* id=14 guarded */ /* ~474 */ 
              /* region = 142 */
   184 |      if (*(((int *)(outfile._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_477;
   302 |      std::string::_M_leak_hard()(&outfile)
            lab_477:
   748 |      filename[(long long) i] = ((char *)outfile._M_p@0)[(long long) ((unsigned long long) i)];
   130 |      i = i + 1u;
            } while ((unsigned long long) i < *(((unsigned long long *)outfile._M_p@0) + -1ll * 24ll / 8));    /* ~474 */
          lab_476:
   132 |    filename[(long long) *(((unsigned long long *)outfile._M_p@0) + -1ll * 24ll / 8)] = 0u;
   135 |    MMSP::generate(int, char const*)(__7001,filename)
   137 |    operator delete[](void*)(filename)
   138 |    __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&outfile);
            goto lab_479;
          lab_388:
   143 |    if (argc < 3) goto lab_481;
            if (!(argc > 5)) goto lab_480;
          lab_481:
  2503 |    __7086 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET4B = (long long) __builtin_strlen(": bad argument list.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7086,": bad argument list.  Use/n/n",$$RET4B);
   548 |    $$RET4C = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET4C);
  2503 |    __7111 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET4D = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7111," --help/n/n",$$RET4D);
   548 |    $$RET4E = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET4E);
   147 |    MMSP::Abort(int)(-1)
   148 |  lab_480:
   260 |    outfile._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 7u;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6141,argv[2ll],&__6143);
            __es.__c4@3 = 8u;
            $$RET4F = __builtin_strlen("0123456789");
  1913 |    __7151 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6141,"0123456789",0ull,$$RET4F);
  1914 |    __6270 = (char) (__7151 == 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6141);
            if (!(__6270 != 0u)) goto lab_519;
   519 |    __7177 = argv[1ll];
            $$RET50 = __builtin_strlen(argv[1ll]);
   975 |    std::string::assign(char const*, unsigned long)(&outfile,__7177,$$RET50);
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6144,argv[2ll],&__6146);
            __es.__c4@3 = 9u;
            $$RET51 = __builtin_strlen("0123456789");
  1913 |    __7188 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6144,"0123456789",0ull,$$RET51);
  1914 |    __6271 = (char) (__7188 != 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6144);
            if (!(__6271 != 0u)) goto lab_521;
  2503 |    __7221 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET52 = (long long) __builtin_strlen(": number of time steps must have integral value.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7221,": number of time steps must have integral value.  Use/n/n",$$RET52);
   548 |    $$RET53 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET53);
  2503 |    __7246 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET54 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7246," --help/n/n",$$RET54);
   548 |    $$RET55 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET55);
   163 |    MMSP::Abort(int)(-1)
   164 |  lab_521:
   286 |    __7263 = (int) strtol(argv[2ll],NULL,10);
   285 |    steps = __7263;
   167 |    increment = __7263;
   169 |    if (!(argc > 3)) goto lab_637;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6160,argv[3ll],&__6162);
            __es.__c4@3 = 10u;
            $$RET56 = __builtin_strlen("0123456789");
  1913 |    __7272 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6160,"0123456789",0ull,$$RET56);
  1914 |    __6272 = (char) (__7272 != 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6160);
            if (!(__6272 != 0u)) goto lab_561;
  2503 |    __7305 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET57 = (long long) __builtin_strlen(": output increment must have integral value.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7305,": output increment must have integral value.  Use/n/n",$$RET57);
   548 |    $$RET58 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET58);
  2503 |    __7330 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET59 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7330," --help/n/n",$$RET59);
   548 |    $$RET5A = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET5A);
   175 |    MMSP::Abort(int)(-1)
   176 |  lab_561:
   286 |    __7347 = (int) strtol(argv[3ll],NULL,10);
   285 |    increment = __7347;
   181 |    if (!(__7347 > __7263)) goto lab_637;
  2503 |    __7359 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET5B = (long long) __builtin_strlen(": output increment must be smaller than number of time steps.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7359,": output increment must be smaller than number of time steps.  Use/n/n",$$RET5B);
   548 |    $$RET5C = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET5C);
  2503 |    __7384 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET5D = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7384," --help/n/n",$$RET5D);
   548 |    $$RET5E = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET5E);
   185 |    MMSP::Abort(int)(-1)
   188 |    goto lab_637;
          lab_519:
   519 |    __7402 = argv[2ll];
            $$RET5F = __builtin_strlen(argv[2ll]);
   975 |    std::string::assign(char const*, unsigned long)(&outfile,__7402,$$RET5F);
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6176,argv[3ll],&__6178);
            __es.__c4@3 = 11u;
            $$RET60 = __builtin_strlen("0123456789");
  1913 |    __7413 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6176,"0123456789",0ull,$$RET60);
  1914 |    __6273 = (char) (__7413 != 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6176);
            if (!(__6273 != 0u)) goto lab_638;
  2503 |    __7446 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET61 = (long long) __builtin_strlen(": number of time steps must have integral value.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7446,": number of time steps must have integral value.  Use/n/n",$$RET61);
   548 |    $$RET62 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET62);
  2503 |    __7471 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET63 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7471," --help/n/n",$$RET63);
   548 |    $$RET64 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET64);
   200 |    MMSP::Abort(int)(-1)
   201 |  lab_638:
   286 |    __7488 = (int) strtol(argv[3ll],NULL,10);
   285 |    steps = __7488;
   204 |    increment = __7488;
   206 |    if (!(argc > 4)) goto lab_676;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6179,argv[4ll],&__6181);
            __es.__c4@3 = 12u;
            $$RET65 = __builtin_strlen("0123456789");
  1913 |    __7497 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6179,"0123456789",0ull,$$RET65);
  1914 |    __6274 = (char) (__7497 != 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6179);
            if (!(__6274 != 0u)) goto lab_678;
  2503 |    __7530 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET66 = (long long) __builtin_strlen(": output increment must have integral value.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7530,": output increment must have integral value.  Use/n/n",$$RET66);
   548 |    $$RET67 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET67);
  2503 |    __7555 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET68 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7555," --help/n/n",$$RET68);
   548 |    $$RET69 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET69);
   212 |    MMSP::Abort(int)(-1)
   213 |  lab_678:
   286 |    __7572 = (int) strtol(argv[4ll],NULL,10);
   285 |    increment = __7572;
   218 |    if (!(__7572 > __7488)) goto lab_716;
  2503 |    __7584 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET6A = (long long) __builtin_strlen(": output increment must be smaller than number of time steps.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7584,": output increment must be smaller than number of time steps.  Use/n/n",$$RET6A);
   548 |    $$RET6B = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET6B);
  2503 |    __7609 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET6C = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7609," --help/n/n",$$RET6C);
   548 |    $$RET6D = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET6D);
   222 |    MMSP::Abort(int)(-1)
   223 |  lab_716:
   224 |  lab_676:
   225 |  lab_637:
   228 |    std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)(&input,argv[1ll],8);
            __es.__c4@3 = 13u;
   116 |    $$VOL0 = &input->(basic_ifstream<char,std::char_traits<char> >)[]@0;
   192 |    __7636 = (char) (0 != (*((int *)((char *)&input + 32 + $$VOL0[-24ll / 8])) & 5));
   116 |    if (!(__7636 != 0u)) goto lab_754;
   548 |    $$RET6E = (long long) __builtin_strlen("File input error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: could not open ",$$RET6E);
   513 |    __9804 = argv[1ll];
   507 |    if (argv[1ll] != NULL) goto lab_765;
   230 |    __10144 = ((char *)&std::cerr  + ((long long *)(&std::cerr->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8]);
            __10145 = ((char *)&std::cerr  + ((long long *)(&std::cerr->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8]);
   507 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(__10144,*((int *)((char *)__10145 + 32)) | 1)
   548 |    goto lab_773;
          lab_765:
            $$RET6F = (long long) __builtin_strlen(argv[1ll]);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,__9804,$$RET6F);
          lab_773:
   548 |    $$RET70 = (long long) __builtin_strlen("./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"./n/n",$$RET70);
   231 |    MMSP::Abort(int)(-1)
   232 |  lab_754:
   260 |    type._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 14u;
   236 |    std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)(&input,&type,10u);
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6221,&type,0ull,4ull);
  2003 |    __es.__c4@3 = 15u;
  2304 |    $$RET71 = std::string::compare(char const*) const(&__6221,"grid");
  2267 |    __7691 = (char) ($$RET71 == 0);
  2304 |    __6275 = (char) (0u == __7691);
            __es.__c4@3 = 14u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6221);
            if (!(__6275 != 0u)) goto lab_783;
   548 |    $$RET72 = (long long) __builtin_strlen("File input error: file does not contain grid data.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: file does not contain grid data.",$$RET72);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &))(&std::cerr);
   241 |    MMSP::Abort(int)(-1)
   242 |  lab_783:
   246 |    std::istream::operator>>(int&)(&input,&dim);
            $$RET73 = std::basic_filebuf<char, std::char_traits<char> >::close()(&input._M_filebuf@10);
   565 |    if ($$RET73 != NULL) goto lab_796;
   566 |    $$VOL1 = &input->(basic_ifstream<char,std::char_traits<char> >)[]@0;
            __10150 = ((char *)&input  + $$VOL1[-24ll / 8]);
            $$VOL2 = &input->(basic_ifstream<char,std::char_traits<char> >)[]@0;
            __10151 = ((char *)&input  + $$VOL2[-24ll / 8]);
   419 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(__10150,*((int *)((char *)__10151 + 32)) | 4)
   527 |  lab_796:
   251 |    iterations_start = 0;
            $$RET74 = __builtin_strlen(".");
  1790 |    __7740 = std::string::find_first_of(char const*, unsigned long, unsigned long) const(&outfile,".",0ull,$$RET74);
  1791 |    $$RET75 = __builtin_strlen(".");
  1851 |    __7743 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET75);
  1852 |    if (!(__7740 != __7743)) goto lab_804;
            $$RET76 = __builtin_strlen(".");
  1790 |    __7746 = std::string::find_first_of(char const*, unsigned long, unsigned long) const(&outfile,".",0ull,$$RET76);
  1791 |    $$RET77 = __builtin_strlen(".");
  1851 |    __7749 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET77);
   629 |    if (!(__7746 + 1ull > *(((unsigned long long *)(&outfile->(_Alloc_hider;basic_string<char,std::char_traits<char>,std::allocator<char> >)._M_p@0)) + -1ll * 24ll / 8))) goto lab_806;
   309 |    std::__throw_out_of_range(char const*)("basic_string::substr")
            return;
          lab_806:
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&number,&outfile,__7746 + 1ull,__7749 - 1ull);
  2003 |    __es.__c4@3 = 17u;
   286 |    __7761 = (int) strtol(number._M_p@0,NULL,10);
   285 |    iterations_start = __7761;
   255 |    __es.__c4@3 = 14u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&number);
          lab_804:
   260 |    base._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 18u;
            $$RET78 = __builtin_strlen(".");
  1790 |    __7809 = std::string::find_first_of(char const*, unsigned long, unsigned long) const(&outfile,".",0ull,$$RET78);
  1791 |    $$RET79 = __builtin_strlen(".");
  1674 |    __7813 = std::string::find(char const*, unsigned long, unsigned long) const(&outfile,".",__7809 + 1ull,$$RET79);
  1675 |    if (!(__7813 == 18446744073709551615ull)) goto lab_808;
   511 |    $$RET7A = __builtin_strlen(".");
  1851 |    __7816 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET7A);
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6224,&outfile,0ull,__7816);
  2003 |    __es.__c4@3 = 19u;
  2201 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)(&__6226,&__6224);
   258 |    __es.__c4@3 = 20u;
  2200 |    $$RET7B = __builtin_strlen(".");
   871 |    std::string::append(char const*, unsigned long)(&__6226,".",$$RET7B);
  2204 |    __es.__c4@3 = 21u;
            std::string::assign(std::string const&)(&base,&__6226);
   511 |    __es.__c4@3 = 19u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6226);
            __es.__c4@3 = 18u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6224);
            goto lab_812;
          lab_808:
            $$RET7C = __builtin_strlen(".");
  1851 |    __7882 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET7C);
   261 |    prev_dot = (int) std::string::rfind(char, unsigned long) const(&outfile,46u,(unsigned long long) ((int) __7882 - 1));
   629 |    if (!((unsigned long long) (prev_dot + 1) > *(((unsigned long long *)(&outfile->(_Alloc_hider;basic_string<char,std::char_traits<char>,std::allocator<char> >)._M_p@0)) + -1ll * 24ll / 8))) goto lab_813;
   309 |    std::__throw_out_of_range(char const*)("basic_string::substr")
            return;
          lab_813:
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&number,&outfile,(unsigned long long) (prev_dot + 1),(unsigned long long) ((int) __7882 + (-1 - prev_dot)));
  2003 |    __es.__c4@3 = 23u;
   263 |    isNumeric = 1u;
   264 |    i = 0u;
            if (!(0ull < *(((unsigned long long *)number._M_p@0) + -1ll * 24ll / 8))) goto lab_817;
            do {   /* id=13 guarded */ /* ~815 */ 
              /* region = 143 */
   184 |      if (*(((int *)(number._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_820;
   302 |      std::string::_M_leak_hard()(&number)
            lab_820:
   747 |      $$RET7D = isdigit((int) ((char *)number._M_p@0)[(long long) ((unsigned long long) i)]);
   265 |      isNumeric = ($$RET7D != 0 ? isNumeric : 0u);
   264 |      i = i + 1u;
            } while ((unsigned long long) i < *(((unsigned long long *)number._M_p@0) + -1ll * 24ll / 8));    /* ~815 */
          lab_817:
   267 |    if (!(isNumeric != 0u)) goto lab_822;
   511 |    $$RET7E = __builtin_strlen(".");
  1851 |    __7905 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET7E);
  1852 |    $$RET7F = __builtin_strlen(".");
  1732 |    __7909 = std::string::rfind(char const*, unsigned long, unsigned long) const(&outfile,".",__7905 - 1ull,$$RET7F);
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6229,&outfile,0ull,__7909);
  2003 |    __es.__c4@3 = 24u;
  2201 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)(&__6231,&__6229);
   268 |    __es.__c4@3 = 25u;
  2200 |    $$RET80 = __builtin_strlen(".");
   871 |    std::string::append(char const*, unsigned long)(&__6231,".",$$RET80);
  2204 |    __es.__c4@3 = 26u;
            std::string::assign(std::string const&)(&base,&__6231);
   511 |    __es.__c4@3 = 24u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6231);
            __es.__c4@3 = 23u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6229);
            goto lab_826;
          lab_822:
            $$RET81 = __builtin_strlen(".");
  1851 |    __7975 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET81);
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6233,&outfile,0ull,__7975);
  2003 |    __es.__c4@3 = 27u;
  2201 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)(&__6235,&__6233);
   269 |    __es.__c4@3 = 28u;
  2200 |    $$RET82 = __builtin_strlen(".");
   871 |    std::string::append(char const*, unsigned long)(&__6235,".",$$RET82);
  2204 |    __es.__c4@3 = 29u;
            std::string::assign(std::string const&)(&base,&__6235);
   511 |    __es.__c4@3 = 27u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6235);
            __es.__c4@3 = 23u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6233);
          lab_826:
   270 |    __es.__c4@3 = 18u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&number);
          lab_812:
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&suffix,"",&__6239);
            __es.__c4@3 = 30u;
            $$RET83 = __builtin_strlen(".");
  1851 |    __8067 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET83);
  1852 |    if (!(__8067 != 18446744073709551615ull)) goto lab_829;
   511 |    $$RET84 = __builtin_strlen(".");
  1851 |    __8070 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET84);
   629 |    if (!(__8070 > *(((unsigned long long *)(&outfile->(_Alloc_hider;basic_string<char,std::char_traits<char>,std::allocator<char> >)._M_p@0)) + -1ll * 24ll / 8))) goto lab_831;
   309 |    std::__throw_out_of_range(char const*)("basic_string::substr")
            return;
          lab_831:
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6240,&outfile,__8070,18446744073709551615ull);
  2003 |    __es.__c4@3 = 31u;
            std::string::assign(std::string const&)(&suffix,&__6240);
   511 |    __es.__c4@3 = 30u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6240);
          lab_829:
   278 |    length = (int) (*(((unsigned long long *)suffix._M_p@0) + -1ll * 24ll / 8) + *(((unsigned long long *)base._M_p@0) + -1ll * 24ll / 8));
   280 |    std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&slength,24);
            __es.__c4@3 = 32u;
   281 |    std::ostream::operator<<(int)(((char *)&slength  + 16ll),steps);
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6242,&slength._M_stringbuf@18)
            __es.__c4@3 = 33u;
   635 |    length = (int) (*(((unsigned long long *)&__6242->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8) + (unsigned long long) length);
            __es.__c4@3 = 32u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6242);
   283 |    __es.__c4@3 = 30u;
            std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&slength);
   286 |    if (!(dim == 1)) goto lab_833;
   288 |    MMSP::grid<1, MMSP::vector<double> >::grid(char const*, int)(&grid,argv[1ll],1);
            __es.__c4@3 = 34u;
   291 |    i = iterations_start;
            if (!(iterations_start < steps)) goto lab_837;
            do {   /* id=9 guarded */ /* ~835 */ 
              /* region = 147 */
   292 |      void MMSP::update<1, double>(MMSP::grid<1, MMSP::vector<double> >&, int)(&grid,increment)
   295 |      std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
              __es.__c4@3 = 35u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6243,&outstr._M_stringbuf@18)
              __es.__c4@3 = 36u;
   635 |      n = (int) *(((unsigned long long *)&__6243->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
              __es.__c4@3 = 35u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6243);
   297 |      j = 0;
              if (!(n < length)) goto lab_840;
              do {   /* id=11 guarded */ /* ~838 */ 
                /* region = 145 */
   101 |        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6244,"",&__6246);
                __es.__c4@3 = 37u;
   147 |        std::string::assign(char const*, unsigned long)(&outstr._M_string@60,&__6244->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__6244->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   148 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_stringbuf_init(std::_Ios_Openmode)(&outstr._M_stringbuf@18,outstr._M_mode@58)
   567 |        __es.__c4@3 = 35u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6244);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),&base->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&base->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   300 |        k = 0;
                if (!(0 < j)) goto lab_843;
                do {   /* id=12 guarded */ /* ~841 */ 
                  /* region = 144 */
                  std::ostream::operator<<(int)(((char *)&outstr  + 16ll),0);
                  k = k + 1;
                } while (k < j);    /* ~841 */
              lab_843:
  2500 |        __8232 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),i + increment);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__8232,&suffix->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&suffix->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6248,&outstr._M_stringbuf@18)
                __es.__c4@3 = 38u;
   635 |        n = (int) *(((unsigned long long *)&__6248->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
                __es.__c4@3 = 35u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6248);
   297 |        j = j + 1;
              } while (n < length);    /* ~838 */
            lab_840:
   305 |      fill(&filename, 0);
   306 |      j = 0u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6249,&outstr._M_stringbuf@18)
              __es.__c4@3 = 39u;
   635 |      __6276 = (char) (0ull < *(((unsigned long long *)&__6249->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
              __es.__c4@3 = 35u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6249);
              if (!(__6276 != 0u)) goto lab_846;
              do {   /* id=10 guarded */ /* ~844 */ 
                /* region = 146 */
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6250,&outstr._M_stringbuf@18)
                __es.__c4@3 = 40u;
   184 |        if (*(((int *)((char *)&__6250->(_Alloc_hider)._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_847;
   302 |        std::string::_M_leak_hard()(&__6250)
              lab_847:
   748 |        filename[(long long) j] = ((char *)&__6250->(_Alloc_hider)._M_p@0)[(long long) ((unsigned long long) j)];
                __es.__c4@3 = 35u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6250);
   306 |        j = j + 1u;
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6249,&outstr._M_stringbuf@18)
                __es.__c4@3 = 39u;
   635 |        __6276 = (char) ((unsigned long long) j < *(((unsigned long long *)&__6249->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
                __es.__c4@3 = 35u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6249);
              } while (__6276 != 0u);    /* ~844 */
            lab_846:
   310 |      void MMSP::output<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, char const*)(&grid,&filename)
   311 |      __es.__c4@3 = 34u;
              std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
   291 |      i = i + increment;
            } while (i < steps);    /* ~835 */
          lab_837:
   312 |    __es.__c4@3 = 30u;
            MMSP::grid<1, MMSP::vector<double> >::~grid()(&grid);
            goto lab_849;
          lab_833:
            if (!(dim == 2)) goto lab_850;
   314 |    MMSP::grid<2, MMSP::vector<double> >::grid(char const*, int)(&grid,argv[1ll],1);
            __es.__c4@3 = 41u;
   343 |    MCFUNCx(&tmp,268,1,"r& i:","mfspr %0,%1",1,1)
            start_cycles = tmp;
   318 |    i = iterations_start;
            if (!(iterations_start < steps)) goto lab_854;
            do {   /* id=5 guarded */ /* ~852 */ 
              /* region = 151 */
   319 |      void MMSP::update<2, double>(MMSP::grid<2, MMSP::vector<double> >&, int)(&grid,increment)
   322 |      std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
              __es.__c4@3 = 42u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6251,&outstr._M_stringbuf@18)
              __es.__c4@3 = 43u;
   635 |      n = (int) *(((unsigned long long *)&__6251->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
              __es.__c4@3 = 42u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6251);
   324 |      j = 0;
              if (!(n < length)) goto lab_857;
              do {   /* id=7 guarded */ /* ~855 */ 
                /* region = 149 */
   101 |        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6252,"",&__6254);
                __es.__c4@3 = 44u;
   147 |        std::string::assign(char const*, unsigned long)(&outstr._M_string@60,&__6252->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__6252->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   148 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_stringbuf_init(std::_Ios_Openmode)(&outstr._M_stringbuf@18,outstr._M_mode@58)
   567 |        __es.__c4@3 = 42u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6252);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),&base->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&base->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   327 |        k = 0;
                if (!(0 < j)) goto lab_860;
                do {   /* id=8 guarded */ /* ~858 */ 
                  /* region = 148 */
                  std::ostream::operator<<(int)(((char *)&outstr  + 16ll),0);
                  k = k + 1;
                } while (k < j);    /* ~858 */
              lab_860:
  2500 |        __8423 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),i + increment);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__8423,&suffix->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&suffix->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6256,&outstr._M_stringbuf@18)
                __es.__c4@3 = 45u;
   635 |        n = (int) *(((unsigned long long *)&__6256->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
                __es.__c4@3 = 42u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6256);
   324 |        j = j + 1;
              } while (n < length);    /* ~855 */
            lab_857:
   343 |      MCFUNCx(&tmp,268,1,"r& i:","mfspr %0,%1",1,1)
              end_cycles = tmp;
   334 |      time_in_secs1 = (double) (tmp - start_cycles) / processor_frequency;
   351 |      ptrFileOut = fopen("time.dat","a");
   352 |      fprintf(ptrFileOut,"%d %f /n",0u,time_in_secs1);
   353 |      fclose(ptrFileOut);
   355 |      fill(&filename, 0);
   356 |      j = 0u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6257,&outstr._M_stringbuf@18)
              __es.__c4@3 = 46u;
   635 |      __6277 = (char) (0ull < *(((unsigned long long *)&__6257->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
              __es.__c4@3 = 42u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6257);
              if (!(__6277 != 0u)) goto lab_865;
              do {   /* id=6 guarded */ /* ~863 */ 
                /* region = 150 */
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6258,&outstr._M_stringbuf@18)
                __es.__c4@3 = 47u;
   184 |        if (*(((int *)((char *)&__6258->(_Alloc_hider)._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_866;
   302 |        std::string::_M_leak_hard()(&__6258)
              lab_866:
   748 |        filename[(long long) j] = ((char *)&__6258->(_Alloc_hider)._M_p@0)[(long long) ((unsigned long long) j)];
                __es.__c4@3 = 42u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6258);
   356 |        j = j + 1u;
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6257,&outstr._M_stringbuf@18)
                __es.__c4@3 = 46u;
   635 |        __6277 = (char) ((unsigned long long) j < *(((unsigned long long *)&__6257->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
                __es.__c4@3 = 42u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6257);
              } while (__6277 != 0u);    /* ~863 */
            lab_865:
   360 |      void MMSP::output<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, char const*)(&grid,&filename)
   361 |      __es.__c4@3 = 41u;
              std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
   318 |      i = i + increment;
            } while (i < steps);    /* ~852 */
          lab_854:
   362 |    __es.__c4@3 = 30u;
            MMSP::grid<2, MMSP::vector<double> >::~grid()(&grid);
            goto lab_868;
          lab_850:
            if (!(dim == 3)) goto lab_869;
   364 |    MMSP::grid<3, MMSP::vector<double> >::grid(char const*, int)(&grid,argv[1ll],1);
            __es.__c4@3 = 48u;
   367 |    i = iterations_start;
            if (!(iterations_start < steps)) goto lab_873;
            do {   /* id=1 guarded */ /* ~871 */ 
              /* region = 155 */
   368 |      void MMSP::update<3, double>(MMSP::grid<3, MMSP::vector<double> >&, int)(&grid,increment)
   371 |      std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
              __es.__c4@3 = 49u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6259,&outstr._M_stringbuf@18)
              __es.__c4@3 = 50u;
   635 |      n = (int) *(((unsigned long long *)&__6259->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
              __es.__c4@3 = 49u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6259);
   373 |      j = 0;
              if (!(n < length)) goto lab_876;
              do {   /* id=3 guarded */ /* ~874 */ 
                /* region = 153 */
   101 |        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6260,"",&__6262);
                __es.__c4@3 = 51u;
   147 |        std::string::assign(char const*, unsigned long)(&outstr._M_string@60,&__6260->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__6260->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   148 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_stringbuf_init(std::_Ios_Openmode)(&outstr._M_stringbuf@18,outstr._M_mode@58)
   567 |        __es.__c4@3 = 49u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6260);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),&base->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&base->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   376 |        k = 0;
                if (!(0 < j)) goto lab_879;
                do {   /* id=4 guarded */ /* ~877 */ 
                  /* region = 152 */
                  std::ostream::operator<<(int)(((char *)&outstr  + 16ll),0);
                  k = k + 1;
                } while (k < j);    /* ~877 */
              lab_879:
  2500 |        __8614 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),i + increment);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__8614,&suffix->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&suffix->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6264,&outstr._M_stringbuf@18)
                __es.__c4@3 = 52u;
   635 |        n = (int) *(((unsigned long long *)&__6264->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
                __es.__c4@3 = 49u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6264);
   373 |        j = j + 1;
              } while (n < length);    /* ~874 */
            lab_876:
   380 |      fill(&filename, 0);
   381 |      j = 0u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6265,&outstr._M_stringbuf@18)
              __es.__c4@3 = 53u;
   635 |      __6278 = (char) (0ull < *(((unsigned long long *)&__6265->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
              __es.__c4@3 = 49u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6265);
              if (!(__6278 != 0u)) goto lab_882;
              do {   /* id=2 guarded */ /* ~880 */ 
                /* region = 154 */
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6266,&outstr._M_stringbuf@18)
                __es.__c4@3 = 54u;
   184 |        if (*(((int *)((char *)&__6266->(_Alloc_hider)._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_883;
   302 |        std::string::_M_leak_hard()(&__6266)
              lab_883:
   748 |        filename[(long long) j] = ((char *)&__6266->(_Alloc_hider)._M_p@0)[(long long) ((unsigned long long) j)];
                __es.__c4@3 = 49u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6266);
   381 |        j = j + 1u;
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6265,&outstr._M_stringbuf@18)
                __es.__c4@3 = 53u;
   635 |        __6278 = (char) ((unsigned long long) j < *(((unsigned long long *)&__6265->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
                __es.__c4@3 = 49u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6265);
              } while (__6278 != 0u);    /* ~880 */
            lab_882:
   385 |      void MMSP::output<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, char const*)(&grid,&filename)
   386 |      __es.__c4@3 = 48u;
              std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
   367 |      i = i + increment;
            } while (i < steps);    /* ~871 */
          lab_873:
   387 |    __es.__c4@3 = 30u;
            MMSP::grid<3, MMSP::vector<double> >::~grid()(&grid);
          lab_869:
          lab_868:
          lab_849:
   388 |    __es.__c4@3 = 18u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&suffix);
            __es.__c4@3 = 14u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&base);
            __es.__c4@3 = 13u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 7u;
            std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()(&input);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&outfile);
          lab_479:
   390 |    MMSP::Finalize()()
   391 |    rstr = 0;
            return rstr;
          } /* function */ 


   104 |  void __gnu_cxx::new_allocator<Point<int> >::construct(Point<int>*, Point<int> const&)(char * this, Point<int> *__p, Point<int> *__val)
   101 |  {
            if (!(__p != NULL)) goto lab_2;
    12 |    *((int *)__p) = *((int *)__val);
            *((int *)((char *)__p + 4)) = *((int *)((char *)__val + 4));
            *((int *)((char *)__p + 8)) = *((int *)((char *)__val + 8));
          lab_2:
   105 |    return;
          } /* function */ 


   295 |  void std::vector<Point<int>, std::allocator<Point<int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int> const&)(char * this, aggr8 __position, Point<int> *__x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    if (!(*((char * *)(this + 8)) != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!(*((char * *)(this + 8)) != NULL)) goto lab_6;
    12 |    *((char * *)(this + 8))->(Point<int>).x@0.rns115. = ((int *)((char *)*((char * *)(this + 8))  - 12ll))->(Point<int>).x@0.rns116.;
            *((char * *)(this + 8))->(Point<int>).y@4.rns117. = ((int *)((char *)*((char * *)(this + 8))  - 12ll))->(Point<int>).y@4.rns118.;
            *((char * *)(this + 8))->(Point<int>).z@8.rns119. = ((int *)((char *)*((char * *)(this + 8))  - 12ll))->(Point<int>).z@8.rns120.;
    73 |  lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + 12ll);
    12 |    __x_copy.x@0 = *((int *)__x);
            __x_copy.y@4 = *((int *)((char *)__x + 4));
            __x_copy.z@8 = *((int *)((char *)__x + 8));
   545 |    if (!((((char *)*((char * *)(this + 8))  - 24ll) - __position._M_current@0) / 12ll > 0ll)) goto lab_10;
            $$CIV2 = 0ll;
            do {   /* id=1 guarded */ /* ~8 */ 
              /* region = 35 */
              /* bump-normalized */
   546 |      *((aggr12 *)((char *)(*((char * *)(this + 8))) + -24ll - $$CIV2 * 12ll)) = *((aggr12 *)((char *)(*((char * *)(this + 8))) + -36ll - $$CIV2 * 12ll));
   545 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((((char *)*((char * *)(this + 8))  - 24ll) - __position._M_current@0) / 12ll));    /* ~8 */
          lab_10:
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_11;
          lab_3:
   319 |    $$PARM.__n382 = 1ull;
   538 |    if (!((unsigned long long) (1537228672809129301ll - (*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < 1ull)) goto lab_43;
  1137 |    std::__throw_length_error(char const*)("vector::_M_insert_aux")
            return;
          lab_43:
  1139 |    __12982 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll);
  1140 |    if ((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < 1ull ? &$$PARM.__n382 : &__12982->(unsigned long).rns249.$$496 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll)) goto lab_45;
   538 |    if (!((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < 1ull ? &$$PARM.__n382 : &__12982->(unsigned long).rns249.$$496 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) > 1537228672809129301ull)) goto lab_46;
          lab_45:
            __13007 = 1537228672809129301ull;
            goto lab_47;
          lab_46:
            __13007 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < 1ull ? &$$PARM.__n382 : &__12982->(unsigned long).rns249.$$496 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll);
          lab_47:
   686 |    __10267._M_current@0 = *((char * *)this);
   426 |    __10183 = __10267;
   140 |    if (!(__13007 != 0ull)) goto lab_13;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__13007 > 1537228672809129301ull),0ll))) goto lab_15;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_15:
    89 |    __10280 = operator new(unsigned long)(__13007 * 12ull);
   107 |    __10478 = __10280;
            goto lab_14;
          lab_13:
            __10478 = NULL;
          lab_14:
   325 |    __es.__c4@3 = 1u;
    55 |    if (!(NULL != ((char *)__10478  + ((__position._M_current@0 - __10267._M_current@0) / 12ll) * 12ll))) goto lab_18;
    12 |    ((int *)__10478)[(((__position._M_current@0 - __10267._M_current@0) / 12ll) * 12ll) / 4] = *((int *)__x);
            ((int *)((char *)__10478 + 4))[(((__position._M_current@0 - __10267._M_current@0) / 12ll) * 12ll) / 4] = *((int *)((char *)__x + 4));
            ((int *)((char *)__10478 + 8))[(((__position._M_current@0 - __10267._M_current@0) / 12ll) * 12ll) / 4] = *((int *)((char *)__x + 8));
    73 |  lab_18:
   336 |    __new_finish = NULL;
   264 |    $$RET85 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(*((char * *)this),__position._M_current@0,__10478);
            goto __10473;
            goto __10474;
   342 |    __new_finish = ((char *)$$RET85  + 12ll);
   264 |    $$RET86 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET85  + 12ll));
            goto __10473;
            goto __10474;
   268 |    __new_finish = $$RET86;
   349 |    __es.__c4@3 = 0u;
            goto @10475;
   351 |  lab_33:
            /* GLAB  id_no=1651{__10473} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __10476 = __int_register_value(29u);
            __cxa_begin_catch((char *) __10476)
   145 |    if (!(__10478 != NULL)) goto lab_24;
    95 |    operator delete(void*)(__10478)
   110 |  lab_24:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @10475:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_26;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_26:
   364 |    *((char * *)this) = __10478;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__10478  + (long long) (__13007 * 12ull));
   367 |  lab_11:
   368 |    return;
   351 |    /* GLAB  id_no=1657{__10474} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __10477 = __int_register_value(29u);
            _Unwind_Resume((char *) __10477)
            goto lab_33;
   368 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       109           546                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       109           546                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

   312 |  char * std::vector<int, std::allocator<int> >::~vector()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this35E = this;
   109 |    $$PARM.this35C = $$PARM.this35E;
    73 |    $$IRET1BF = $$PARM.this35C;
   109 |    $$IRET1C0 = $$PARM.this35E;
   132 |    $$IRET1C1 = $$PARM.this35E;
   133 |    $$IRET1C2 = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   295 |  void std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)(char * this, aggr8 __position, int *__x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    if (!(*((char * *)(this + 8)) != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!(*((char * *)(this + 8)) != NULL)) goto lab_6;
   105 |    *((char * *)(this + 8))->(int).rns131. = ((int *)((char *)*((char * *)(this + 8))  - 4ll))->(int).rns132.;
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + 4ll);
   306 |    __x_copy = *__x;
   638 |    $$PARM.__first22D = __position._M_current@0;
            $$PARM.__last22E = ((char *)*((char * *)(this + 8))  - 8ll);
            $$PARM.__result22F = ((char *)*((char * *)(this + 8))  - 4ll);
   575 |    __builtin_memmove(((char *)$$PARM.__result22F  - (($$PARM.__last22E - $$PARM.__first22D) / 4ll) * 4ll),$$PARM.__first22D,(unsigned long long) ((($$PARM.__last22E - $$PARM.__first22D) / 4ll) * 4ll));
   577 |    $$IRET12E = ((char *)$$PARM.__result22F  - (($$PARM.__last22E - $$PARM.__first22D) / 4ll) * 4ll);
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_8;
          lab_3:
   319 |    $$PARM.__n231 = 1ull;
            $$PARM.__s232 = "vector::_M_insert_aux";
   538 |    if (!((unsigned long long) (4611686018427387903ll - (*((char * *)(this + 8)) - *((char * *)this)) / 4ll) < $$PARM.__n231)) goto lab_35;
  1137 |    std::__throw_length_error(char const*)($$PARM.__s232)
            return;
          lab_35:
  1139 |    __13009 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 4ll);
   215 |    __13020 = ((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 4ll) < $$PARM.__n231 ? &$$PARM.__n231 : &__13009);
  1140 |    if (*__13020 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 4ll) < (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 4ll)) goto lab_37;
   538 |    if (!(*__13020 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 4ll) > 4611686018427387903ull)) goto lab_38;
          lab_37:
            __13034 = 4611686018427387903ull;
            goto lab_39;
          lab_38:
            __13034 = *__13020 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 4ll);
          lab_39:
            $$IRET12F = __13034;
   319 |    __len = $$IRET12F;
   686 |    __10612._M_current@0 = *((char * *)this);
   426 |    __10534 = __10612;
   858 |    $$FSM1 = (__normal_iterator<int *,std::vector<int,std::allocator<int> > >)._M_current@0.rns149..mga.__10534;
   140 |    if (!(__len != 0ull)) goto lab_10;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__len > 4611686018427387903ull),0ll))) goto lab_12;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_12:
    89 |    __10625 = operator new(unsigned long)(__len * 4ull);
   107 |    __10825 = __10625;
            goto lab_11;
          lab_10:
            __10825 = NULL;
          lab_11:
   858 |    __elems_before = (unsigned long long) ((__position._M_current@0 - $$FSM1) / 4ll);
   325 |    __es.__c4@3 = 1u;
    55 |    if (!(NULL != ((char *)__10825  + (long long) (__elems_before * 4ull)))) goto lab_15;
   105 |    *((int *)((char *)__10825 + (long long) (__elems_before * 4ull))) = *__x;
          lab_15:
   336 |    __new_finish = NULL;
   264 |    $$RET87 = int* std::copy<int*, int*>(int*, int*, int*)(*((char * *)this),__position._M_current@0,__10825);
            goto __10820;
            goto __10821;
   342 |    __new_finish = ((char *)$$RET87  + 4ll);
   264 |    $$RET88 = int* std::copy<int*, int*>(int*, int*, int*)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET87  + 4ll));
            goto __10820;
            goto __10821;
   268 |    __new_finish = $$RET88;
   349 |    __es.__c4@3 = 0u;
            goto @10822;
   351 |  lab_30:
            /* GLAB  id_no=1810{__10820} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __10823 = __int_register_value(29u);
            __cxa_begin_catch((char *) __10823)
   145 |    if (!(__10825 != NULL)) goto lab_21;
    95 |    operator delete(void*)(__10825)
   110 |  lab_21:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @10822:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_23;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_23:
   364 |    *((char * *)this) = __10825;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__10825  + (long long) (__len * 4ull));
   367 |  lab_8:
   368 |    return;
   351 |    /* GLAB  id_no=1816{__10821} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __10824 = __int_register_value(29u);
            _Unwind_Resume((char *) __10824)
            goto lab_30;
   368 |  } /* function */ 


    45 |  char * MMSP::grid<2, unsigned long>::grid(int, ...)(grid<2,unsigned long> *this, int FIELDS)
    48 |  {
            *((int *)((char *)this + 16)) = FIELDS;
            $$RET89 = (unsigned long long) __builtinParameterAddress(&FIELDS);
    53 |    if (!1) goto lab_3;
    52 |    list = (char *) ($$RET89 + 11ull & 18446744073709551608ull);
    53 |    $$CIV3 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    54 |      ((int *)((char *)this + 24))[$$CIV3] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)this + 32))[$$CIV3] = (list + -4ll / 4)[0ll];
    53 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < 2ull);    /* ~1 */
          lab_3:
    61 |    *((int *)((char *)this + 20)) = 0;
    68 |    MMSP::grid<2, unsigned long>::setup(bool)(this,0u)
    69 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            53             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char *)(char *) 
                                          ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll)  + -4ll + 
                                          (4ll)*(0ll)) with  non-vectorizable strides.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)(char *) ((unsigned long long) 
                                          ((char *)(char *) ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll) + 7ull & 
                                          18446744073709551608ull)  + 8ll) which is not  
                                          suitable for SIMD vectorization.
       275            55                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)list  + -4ll + 
                                          (4ll)*(0ll)) with  non-vectorizable strides.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

   329 |  char * MMSP::grid<2, unsigned long>::~grid()(grid<2,unsigned long> *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    operator delete[](void*)(*((char * *)this))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   384 |  char * MMSP::grid<2, unsigned long>::operator()(int) const(grid<2,unsigned long> *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (8ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


    45 |  char * MMSP::grid<2, MMSP::vector<double> >::grid(int, ...)(grid<2,MMSP::vector<double> > *this, int FIELDS)
    48 |  {
            *((int *)((char *)this + 16)) = FIELDS;
            $$RET8A = (unsigned long long) __builtinParameterAddress(&FIELDS);
    53 |    if (!1) goto lab_3;
    52 |    list = (char *) ($$RET8A + 11ull & 18446744073709551608ull);
    53 |    $$CIV4 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    54 |      ((int *)((char *)this + 24))[$$CIV4] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)this + 32))[$$CIV4] = (list + -4ll / 4)[0ll];
    53 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < 2ull);    /* ~1 */
          lab_3:
    61 |    *((int *)((char *)this + 20)) = 0;
    68 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)(this,0u)
    69 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            53             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char *)(char *) 
                                          ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll)  + -4ll + 
                                          (4ll)*(0ll)) with  non-vectorizable strides.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)(char *) ((unsigned long long) 
                                          ((char *)(char *) ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll) + 7ull & 
                                          18446744073709551608ull)  + 8ll) which is not  
                                          suitable for SIMD vectorization.
       275            55                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)list  + -4ll + 
                                          (4ll)*(0ll)) with  non-vectorizable strides.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

   132 |  char * MMSP::grid<2, MMSP::vector<double> >::grid(char const*, int)(grid<2,MMSP::vector<double> > *this, char * filename, int GHOSTS)
   135 |  {
            *((char * *)this) = NULL;
   138 |    MMSP::grid<2, MMSP::vector<double> >::input(char const*, int, int)(this,filename,GHOSTS,0)
   139 |    rstr = this;
            return rstr;
          } /* function */ 


   329 |  char * MMSP::grid<2, MMSP::vector<double> >::~grid()(grid<2,MMSP::vector<double> > *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   384 |  char * MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(grid<2,MMSP::vector<double> > *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (16ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


  1162 |  unsigned long long unsigned long MMSP::tessellate<2, unsigned long>(MMSP::grid<2, unsigned long>&, int const&, int const&)(grid<2,unsigned long> *grid, int *nseeds, char * nthreads)
  1163 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
  1170 |    pseudorand_seed = (unsigned long long) time(NULL);
   176 |    &pseudorand_number->(unsigned long).rns237.$$534 = pseudorand_seed & 4294967295ull;
   177 |    if (!1) goto lab_87;
   175 |    $$CIV6 = 0ll;
   177 |    $$PRC0 = &pseudorand_number->(unsigned long).rns237.$$534;
            do {   /* id=13 guarded */ /* ~88 */ 
              /* region = 98 */
              /* bump-normalized */
   179 |      $$PRC1 = ($$PRC0 >> 30 ^ $$PRC0) * 1812433253ull + (unsigned long long) ((int) ($$CIV6 + 1ll)) & 4294967295ull;
              *((unsigned long long *)((char *)&pseudorand_number + $$CIV6 * 8ll + 8ll)) = $$PRC1;
              $$PRC0 = $$PRC1;
   177 |      $$CIV6 = $$CIV6 + 1ll;
            } while ((unsigned long long) $$CIV6 < 623ull);    /* ~88 */
          lab_87:
   188 |    MTRand::reload()::guard_MmN2 = 1;
   189 |    p = &pseudorand_number;
   191 |    if (!1) goto lab_48;
            i.rnn35 = 226;
            do {   /* id=6 guarded */ /* ~49 */ 
              /* region = 97 */
   136 |      *p = (p[1ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[397ll] ^ (0ull != (p[1ll] & 1ull) ? 2567483615ull : 0ull));
   191 |      p = ((char *)p  + 8ll);
              __12904 = (char) (i.rnn35 != 0);
              i.rnn35 = i.rnn35 + -1;
            } while (__12904 != 0u);    /* ~49 */
          lab_48:
   193 |    if (!1) goto lab_50;
            $$CIV7 = 0ll;
            do {   /* id=7 guarded */ /* ~51 */ 
              /* region = 96 */
              /* bump-normalized */
   136 |      p[$$CIV7] = (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 2147483647ull | ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[0ll] & 2147483648ull) >> 1 ^ ((0ull != (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 1ull) ? 2567483615ull : 0ull) ^ ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[-227ll]);
   193 |      $$CIV7 = $$CIV7 + 1ll;
            } while ((unsigned long long) $$CIV7 < 396ull);    /* ~51 */
            p = ((char *)p  + 3168ll);
          lab_50:
   129 |    if (!(0ull != (((unsigned long long *)&pseudorand_number)[0ll] & 1ull))) goto lab_52;
   136 |    *p = 2567483615ull ^ ((((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll]);
   197 |    &pseudorand_number->(MTRand).left@1388.rns240.$$535 = 624;
            &pseudorand_number->(MTRand).pNext@1380.rns241.$$535 = &pseudorand_number;
            goto lab_54;
   129 |  lab_52:
   136 |    *p = (((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll];
   197 |    &pseudorand_number->(MTRand).left@1388.rns240.$$535 = 624;
            &pseudorand_number->(MTRand).pNext@1380.rns241.$$535 = &pseudorand_number;
   198 |  lab_54:
    81 |    local_seeds._M_start@0 = NULL;
            local_seeds._M_finish@8 = NULL;
            local_seeds._M_end_of_storage@10 = NULL;
            seeds._M_start@0 = NULL;
            seeds._M_finish@8 = NULL;
            seeds._M_end_of_storage@10 = NULL;
   208 |    __es.__c4@3 = 2u;
  1180 |    if (!1) goto lab_3;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 95 */
   735 |      if (!(seeds._M_finish@8 != seeds._M_end_of_storage@10)) goto lab_4;
   101 |      if (!(seeds._M_finish@8 != NULL)) goto lab_39;
   105 |      std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(seeds._M_finish@8,&local_seeds);
            lab_39:
   738 |      seeds._M_finish@8 = ((char *)seeds._M_finish@8  + 24ll);
   739 |      goto lab_6;
            lab_4:
   686 |      __11183._M_current@0 = seeds._M_finish@8;
   444 |      std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > > >, std::vector<Point<int>, std::allocator<Point<int> > > const&)(&seeds,__11183,&local_seeds)
            lab_6:
  1180 |    } while ((unsigned long long) ((seeds._M_finish@8 - seeds._M_start@0) / 24ll) <= 1ull);    /* ~1 */
          lab_3:
  1186 |    if (!(0 < *nseeds)) goto lab_9;
            i = 0;
            do {   /* id=1 guarded */ /* ~7 */ 
              /* region = 93 */
   313 |      do {   /* id=4 */ /* ~10 */ 
                /* region = 92 */
   289 |        if (!(&pseudorand_number->(MTRand).left@1388.rns245.$$543 == 0)) goto lab_64;
   188 |        MTRand::reload()::guard_MmN2 = 1;
   189 |        p = &pseudorand_number;
   191 |        if (!1) goto lab_65;
                i.rnn35 = 226;
                do {   /* id=10 guarded */ /* ~66 */ 
                  /* region = 87 */
   136 |          *p = (p[1ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[397ll] ^ (0ull != (p[1ll] & 1ull) ? 2567483615ull : 0ull));
   191 |          p = ((char *)p  + 8ll);
                  __12904 = (char) (i.rnn35 != 0);
                  i.rnn35 = i.rnn35 + -1;
                } while (__12904 != 0u);    /* ~66 */
              lab_65:
   193 |        if (!1) goto lab_67;
                $$CIV7 = 0ll;
                do {   /* id=11 guarded */ /* ~68 */ 
                  /* region = 86 */
                  /* bump-normalized */
   136 |          p[$$CIV7] = (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 2147483647ull | ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[0ll] & 2147483648ull) >> 1 ^ ((0ull != (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 1ull) ? 2567483615ull : 0ull) ^ ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[-227ll]);
   193 |          $$CIV7 = $$CIV7 + 1ll;
                } while ((unsigned long long) $$CIV7 < 396ull);    /* ~68 */
                p = ((char *)p  + 3168ll);
              lab_67:
   129 |        if (!(0ull != (((unsigned long long *)&pseudorand_number)[0ll] & 1ull))) goto lab_69;
   136 |        *p = 2567483615ull ^ ((((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll]);
   197 |        &pseudorand_number->(MTRand).left@1388.rns240.$$1152$$542 = 624;
                &pseudorand_number->(MTRand).pNext@1380.rns241.$$1152$$542 = &pseudorand_number;
                goto lab_70;
   129 |      lab_69:
   136 |        *p = (((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll];
   197 |        &pseudorand_number->(MTRand).left@1388.rns240.$$1152$$542 = 624;
                &pseudorand_number->(MTRand).pNext@1380.rns241.$$1152$$542 = &pseudorand_number;
              lab_70:
   289 |      lab_64:
   290 |        &pseudorand_number->(MTRand).left@1388.rns245.$$543 = &pseudorand_number->(MTRand).left@1388.rns245.$$543 + -1;
   293 |        s1 = &pseudorand_number->(MTRand).pNext@1380.rns246.$$543->(unsigned long).rns244.$$542;
                &pseudorand_number->(MTRand).pNext@1380.rns246.$$543 = ((char *)&pseudorand_number->(MTRand).pNext@1380.rns246.$$543  + 8ll);
   296 |        s1.rnn38 = (s1 ^ (s1 >> 11 ^ s1) << 7 & 2636928640ull) ^ (((s1 >> 11 ^ s1) << 7 & 2636928640ull ^ (s1 >> 11 ^ s1)) << 15 & 4022730752ull ^ s1 >> 11);
   314 |        i = (((((((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1))) >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1) | ((((((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1))) >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1) | (((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1))) >> 8 | (((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)))) >> 16 | ((((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1))) >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1)) | ((((((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1))) >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1) | (((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1))) >> 8 | (((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)))) & (s1.rnn38 >> 18 ^ s1.rnn38);
   315 |      } while (i > (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1));    /* ~10 */
   313 |      do {   /* id=3 */ /* ~13 */ 
                /* region = 91 */
   289 |        if (!(&pseudorand_number->(MTRand).left@1388.rns245.$$543 == 0)) goto lab_55;
   188 |        MTRand::reload()::guard_MmN2 = 1;
   189 |        p = &pseudorand_number;
   191 |        if (!1) goto lab_56;
                i.rnn35 = 226;
                do {   /* id=8 guarded */ /* ~57 */ 
                  /* region = 89 */
   136 |          *p = (p[1ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[397ll] ^ (0ull != (p[1ll] & 1ull) ? 2567483615ull : 0ull));
   191 |          p = ((char *)p  + 8ll);
                  __12904 = (char) (i.rnn35 != 0);
                  i.rnn35 = i.rnn35 + -1;
                } while (__12904 != 0u);    /* ~57 */
              lab_56:
   193 |        if (!1) goto lab_58;
                $$CIV7 = 0ll;
                do {   /* id=9 guarded */ /* ~59 */ 
                  /* region = 88 */
                  /* bump-normalized */
   136 |          p[$$CIV7] = (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 2147483647ull | ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[0ll] & 2147483648ull) >> 1 ^ ((0ull != (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 1ull) ? 2567483615ull : 0ull) ^ ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[-227ll]);
   193 |          $$CIV7 = $$CIV7 + 1ll;
                } while ((unsigned long long) $$CIV7 < 396ull);    /* ~59 */
                p = ((char *)p  + 3168ll);
              lab_58:
   129 |        if (!(0ull != (((unsigned long long *)&pseudorand_number)[0ll] & 1ull))) goto lab_60;
   136 |        *p = 2567483615ull ^ ((((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll]);
   197 |        &pseudorand_number->(MTRand).left@1388.rns240.$$1152$$543 = 624;
                &pseudorand_number->(MTRand).pNext@1380.rns241.$$1152$$543 = &pseudorand_number;
                goto lab_61;
   129 |      lab_60:
   136 |        *p = (((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll];
   197 |        &pseudorand_number->(MTRand).left@1388.rns240.$$1152$$543 = 624;
                &pseudorand_number->(MTRand).pNext@1380.rns241.$$1152$$543 = &pseudorand_number;
              lab_61:
   289 |      lab_55:
   290 |        &pseudorand_number->(MTRand).left@1388.rns245.$$543 = &pseudorand_number->(MTRand).left@1388.rns245.$$543 + -1;
   293 |        s1 = &pseudorand_number->(MTRand).pNext@1380.rns246.$$543->(unsigned long).rns244.$$543;
                &pseudorand_number->(MTRand).pNext@1380.rns246.$$543 = ((char *)&pseudorand_number->(MTRand).pNext@1380.rns246.$$543  + 8ll);
   296 |        s1.rnn38 = (s1 ^ (s1 >> 11 ^ s1) << 7 & 2636928640ull) ^ (((s1 >> 11 ^ s1) << 7 & 2636928640ull ^ (s1 >> 11 ^ s1)) << 15 & 4022730752ull ^ s1 >> 11);
   314 |        i = (((((((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1))) >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1) | ((((((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1))) >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1) | (((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1))) >> 8 | (((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)))) >> 16 | ((((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1))) >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1)) | ((((((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1))) >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1) | (((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1))) >> 8 | (((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)))) & (s1.rnn38 >> 18 ^ s1.rnn38);
   315 |      } while (i > (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1));    /* ~13 */
  1189 |      dupe = 0u;
   533 |      if (!(0ull < (unsigned long long) ((*((char * *)((char *)seeds._M_start@0 + 8)) - *((char * *)seeds._M_start@0)) / 12ll))) goto lab_18;
  1190 |      $$CIVFINAL5 = (unsigned long long) ((*((char * *)((char *)seeds._M_start@0 + 8)) - *((char * *)seeds._M_start@0)) / 12ll);
              $$CIV5 = 0ll;
   533 |      do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 90 */
                /* bump-normalized */
   611 |        if (!(*((int *)((char *)(*((char * *)seeds._M_start@0)) + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV5)) * 12ull))) == (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[0ll]))) goto lab_19;
                if (!(*((int *)((char *)(*((char * *)seeds._M_start@0)) + 4 + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV5)) * 12ull))) == (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[1ll]))) goto lab_19;
  1193 |        i = i + -1;
  1194 |        dupe = 1u;
  1196 |        if (dupe != 0u) goto lab_18;
                goto lab_35;
  1195 |      lab_19:
  1196 |        if (dupe != 0u) goto lab_18;
              lab_35:
   533 |        $$CIV5 = $$CIV5 + 1ll;
              } while ((unsigned long long) $$CIV5 < $$CIVFINAL5);    /* ~16 */
            lab_18:
  1198 |      if (dupe != 0u) goto lab_8;
  1199 |      __10830.x@0 = (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[0ll]);
    11 |      __10830.y@4 = (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[1ll]);
              __10830.z@8 = 0;
   735 |      if (!(local_seeds._M_finish@8 != local_seeds._M_end_of_storage@10)) goto lab_26;
   101 |      if (!(local_seeds._M_finish@8 != NULL)) goto lab_47;
    12 |      *((int *)local_seeds._M_finish@8) = (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[0ll]);
              *((int *)((char *)local_seeds._M_finish@8 + 4)) = (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[1ll]);
              *((int *)((char *)local_seeds._M_finish@8 + 8)) = 0;
   105 |    lab_47:
   738 |      local_seeds._M_finish@8 = ((char *)local_seeds._M_finish@8  + 12ll);
   739 |      goto lab_28;
            lab_26:
   686 |      __11198._M_current@0 = local_seeds._M_finish@8;
   444 |      std::vector<Point<int>, std::allocator<Point<int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int> const&)(&local_seeds,__11198,&__10830)
            lab_28:
  1200 |    lab_8:
  1186 |      i = i + 1;
            } while (i < *nseeds);    /* ~7 */
          lab_9:
   611 |    __11084 = seeds._M_start@0;
   686 |    __11064._M_current@0 = *((char * *)((char *)seeds._M_start@0 + 8));
            __11069._M_current@0 = local_seeds._M_start@0;
            __11073._M_current@0 = local_seeds._M_finish@8;
   874 |    __memset(&__11077,0,1ull);
  1102 |    __memset(&__11078,0,1ull);
            void std::vector<Point<int>, std::allocator<Point<int> > >::_M_range_insert<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > > >(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, std::forward_iterator_tag)(__11084,__11064,__11069,__11073,__11078)
  1269 |    timer.rnn21 = unsigned long MMSP::approximate_voronoi<2, unsigned long>(MMSP::grid<2, unsigned long>&, std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > > const&)(grid,&seeds);
  1280 |    __es.__c4@3 = 1u;
   141 |    if (!(seeds._M_start@0 != seeds._M_finish@8)) goto lab_73;
            $$CIVINIT26 = seeds._M_start@0;
            $$CIVFINAL26 = (unsigned long long) ((seeds._M_finish@8 - seeds._M_start@0) / 24ll);
            $$CIV26 = 0ll;
            do {   /* id=12 guarded */ /* ~74 */ 
              /* region = 94 */
              /* bump-normalized */
   145 |      if (!(((char * *)$$CIVINIT26)[($$CIV26 * 24ll) / 8] != NULL)) goto lab_75;
    95 |      operator delete(void*)(((char * *)$$CIVINIT26)[($$CIV26 * 24ll) / 8])
   110 |    lab_75:
    92 |      $$CIV26 = $$CIV26 + 1ll;
            } while ((unsigned long long) $$CIV26 < $$CIVFINAL26);    /* ~74 */
          lab_73:
   145 |    if (!(seeds._M_start@0 != NULL)) goto lab_81;
    95 |    operator delete(void*)(seeds._M_start@0)
   110 |  lab_81:
  1280 |    __es.__c4@3 = 0u;
   145 |    if (!(local_seeds._M_start@0 != NULL)) goto lab_40;
    95 |    operator delete(void*)(local_seeds._M_start@0)
   110 |  lab_40:
  1280 |    rstr = timer.rnn21;
            return rstr;
  1281 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       328           179                  Loop was not SIMD vectorized because it contains 
                                          operation in (((unsigned long long *)((char 
                                          *)&pseudorand_number  + $$CIV6 * 8ll))->(unsigned 
                                          long).rns237.$$534 >> 30 ^ ((unsigned long long 
                                          *)((char *)&pseudorand_number  + $$CIV6 * 
                                          8ll))->(unsigned long).rns237.$$534) * 1812433253ull 
                                          + (unsigned long long) ((int) ($$CIV6 + 1ll)) & 
                                          4294967295ull which is not  suitable for SIMD 
                                          vectorization.
       328           179                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       328           179                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       328           191             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          operation in (((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$535[1ll] & 2147483647ull | ((char *)p  
                                          + $$CIV7 * 8ll)->(unsigned long).rns238.$$535[0ll] & 
                                          2147483648ull) >> 1 ^ ((0ull != (((char *)p  + $$CIV7 
                                          * 8ll)->(unsigned long).rns238.$$535[1ll] & 1ull) ? 
                                          2567483615ull : 0ull) ^ ((char *)p  + $$CIV7 * 
                                          8ll)->(unsigned long).rns238.$$535[-227ll]) which is 
                                          not  suitable for SIMD vectorization.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char *)p  + $$CIV7 * 
                                          8ll) + (8ll)*(1ll)) with  non-vectorizable strides.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       297          1180             5    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297          1180             5    Loop was not SIMD vectorized because it contains 
                                          control flow.
       297          1186             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       297          1186             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       328           313             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       328           313             4    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       328           191            10    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       328           193            11    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          operation in (((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$1152$$542[1ll] & 2147483647ull | 
                                          ((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$1152$$542[0ll] & 2147483648ull) >> 1 ^ 
                                          ((0ull != (((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$1152$$542[1ll] & 1ull) ? 2567483615ull 
                                          : 0ull) ^ ((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$1152$$542[-227ll]) which is not  
                                          suitable for SIMD vectorization.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char *)p  + $$CIV7 * 
                                          8ll) + (8ll)*(1ll)) with  non-vectorizable strides.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       328           313             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       328           313             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       328           191             8    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       328           193             9    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          operation in (((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$1152$$543[1ll] & 2147483647ull | 
                                          ((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$1152$$543[0ll] & 2147483648ull) >> 1 ^ 
                                          ((0ull != (((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$1152$$543[1ll] & 1ull) ? 2567483615ull 
                                          : 0ull) ^ ((char *)p  + $$CIV7 * 8ll)->(unsigned 
                                          long).rns238.$$1152$$543[-227ll]) which is not  
                                          suitable for SIMD vectorization.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char *)p  + $$CIV7 * 
                                          8ll) + (8ll)*(1ll)) with  non-vectorizable strides.
       328           136                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       306           533             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       306           533             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       304           141            12    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       304           141            12    Loop was not SIMD vectorized because it contains 
                                          control flow.

    29 |  char * MMSP::vector<double>::operator[](int)(vector<double> *this, int i)
          {
            MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |    if (i < *((int *)((char *)this + 8))) goto lab_4;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
            return;
          lab_4:
    31 |    rstr = ((char *)*((char * *)this) + (8ll)*((long long) i));
            return rstr;
    32 |  } /* function */ 


   565 |  void void MMSP::output<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, char const*)(char * GRID, char * filename)
   567 |  {
            MMSP::grid<2, MMSP::vector<double> >::output(char const*) const(GRID,filename)
   568 |    return;
          } /* function */ 


   132 |  char * MMSP::grid<1, MMSP::vector<double> >::grid(char const*, int)(grid<1,MMSP::vector<double> > *this, char * filename, int GHOSTS)
   135 |  {
            *((char * *)this) = NULL;
   138 |    MMSP::grid<1, MMSP::vector<double> >::input(char const*, int, int)(this,filename,GHOSTS,0)
   139 |    rstr = this;
            return rstr;
          } /* function */ 


   329 |  char * MMSP::grid<1, MMSP::vector<double> >::~grid()(grid<1,MMSP::vector<double> > *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   132 |  char * MMSP::grid<3, MMSP::vector<double> >::grid(char const*, int)(grid<3,MMSP::vector<double> > *this, char * filename, int GHOSTS)
   135 |  {
            *((char * *)this) = NULL;
   138 |    MMSP::grid<3, MMSP::vector<double> >::input(char const*, int, int)(this,filename,GHOSTS,0)
   139 |    rstr = this;
            return rstr;
          } /* function */ 


   329 |  char * MMSP::grid<3, MMSP::vector<double> >::~grid()(grid<3,MMSP::vector<double> > *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   102 |  void void MMSP::update<1, double>(MMSP::grid<1, MMSP::vector<double> >&, int)(grid<1,MMSP::vector<double> > *oldGrid, int steps)
   103 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   105 |    guard_iterations5 = 1;
   112 |    void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(oldGrid)
   114 |    MMSP::grid<1, MMSP::vector<double> >::grid(MMSP::grid<1, MMSP::vector<double> > const&)(&newGrid,oldGrid);
            __es.__c4@3 = 1u;
   637 |    *((long long *)((char *)&std::cout + 8 + ((long long *)(&std::cout->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8])) = 2ll;
   122 |    void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(oldGrid)
   126 |    step = 0;
            if (!(0 < steps)) goto lab_4;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 312 */
   128 |      MMSP::print_progress(int, int)(step,steps)
   130 |      MMSP::grid<1, MMSP::vector<double> >::grid(MMSP::grid<1, MMSP::vector<double> > const&)(&c_storage,oldGrid);
              __es.__c4@3 = 2u;
   132 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_9;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 306 */
   133 |        MMSP::vector<int> MMSP::position<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 3u;
   134 |        $$PARM.this1E0 = &__11223;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$695;
   134 |        $$RET13A = $$IRET104;
    17 |        &__11223->(vector<int>).size@8.rns397.$$695 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11223->(vector<int>).data@0.rns398.$$695 = $$RET13B;
    19 |        if (!(0 < &__11223->(vector<int>).size@8.rns397.$$695)) goto lab_222;
                i = 0;
                do {   /* id=9 guarded */ /* ~223 */ 
                  /* region = 302 */
    20 |          $$SFX1C = ((char *)&__11223->(vector<int>).data@0.rns398.$$695 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$695) goto lab_224;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_224:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$695 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11223->(vector<int>).size@8.rns397.$$695);    /* ~223 */
              lab_222:
    21 |        $$IRET10A = $$PARM.this1E0;
   134 |        __es.__c4@3 = 4u;
                $$RET8D = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11223);
                $$PARM.this253 = $$RET8D;
                $$PARM.i254 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i254 < *((int *)((char *)$$PARM.this253 + 8))) goto lab_267;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_267:
    31 |        $$IRET140 = ((char *)*((char * *)$$PARM.this253) + (8ll)*((long long) $$PARM.i254));
   134 |        center = $$IRET140;
                __es.__c4@3 = 3u;
                $$PARM.this163 = &__11223;
    47 |        if (!(&__11223->(vector<int>).data@0.rns401.$$698 != NULL)) goto lab_151;
    48 |        operator delete[](void*)(&__11223->(vector<int>).data@0.rns401.$$698)
    49 |        &__11223->(vector<int>).data@0.rns401.$$698 = NULL;
    50 |      lab_151:
    51 |        $$IRET96 = $$PARM.this163;
   135 |        $$SFX1 = *center;
                $$PARM.this1F0 = &__11224;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$699;
   135 |        $$RET13A = $$IRET104;
    17 |        &__11224->(vector<int>).size@8.rns397.$$699 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11224->(vector<int>).data@0.rns398.$$699 = $$RET13B;
    19 |        if (!(0 < &__11224->(vector<int>).size@8.rns397.$$699)) goto lab_234;
                i = 0;
                do {   /* id=11 guarded */ /* ~235 */ 
                  /* region = 303 */
    20 |          $$SFX1C = ((char *)&__11224->(vector<int>).data@0.rns398.$$699 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$699) goto lab_236;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_236:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$699 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11224->(vector<int>).size@8.rns397.$$699);    /* ~235 */
              lab_234:
    21 |        $$IRET112 = $$PARM.this1F0;
   135 |        __es.__c4@3 = 5u;
                $$RET8E = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11224);
                $$PARM.this247 = $$RET8E;
                $$PARM.i248 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i248 < *((int *)((char *)$$PARM.this247 + 8))) goto lab_259;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_259:
    31 |        $$IRET13A = ((char *)*((char * *)$$PARM.this247) + (8ll)*((long long) $$PARM.i248));
   135 |        $$RET8F = $$IRET13A;
                __11225 = double MMSP::f<double>(double, double)($$SFX1,*$$RET8F);
                __es.__c4@3 = 3u;
                $$PARM.this165 = &__11224;
    47 |        if (!(&__11224->(vector<int>).data@0.rns401.$$703 != NULL)) goto lab_155;
    48 |        operator delete[](void*)(&__11224->(vector<int>).data@0.rns401.$$703)
    49 |        &__11224->(vector<int>).data@0.rns401.$$703 = NULL;
    50 |      lab_155:
    51 |        $$IRET98 = $$PARM.this165;
   136 |        $$PARM.i79 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i79 < &x->(vector<int>).size@8.rns391.$$735) goto lab_105;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_105:
    31 |        $$IRET2D = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i79));
   136 |        __11742 = $$IRET2D;
                *__11742 = *__11742 + 1;
   137 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11226,&x);
                __es.__c4@3 = 6u;
                $$RET90 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11226);
                $$PARM.this245 = $$RET90;
                $$PARM.i246 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i246 < *((int *)((char *)$$PARM.this245 + 8))) goto lab_257;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_257:
    31 |        $$IRET139 = ((char *)*((char * *)$$PARM.this245) + (8ll)*((long long) $$PARM.i246));
   137 |        right = $$IRET139;
                __es.__c4@3 = 3u;
                $$PARM.this162 = &__11226;
    47 |        if (!(&__11226->(vector<int>).data@0.rns401.$$708 != NULL)) goto lab_149;
    48 |        operator delete[](void*)(&__11226->(vector<int>).data@0.rns401.$$708)
    49 |        &__11226->(vector<int>).data@0.rns401.$$708 = NULL;
    50 |      lab_149:
    51 |        $$IRET95 = $$PARM.this162;
   138 |        $$SFX2 = *right;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11227,&x);
                __es.__c4@3 = 7u;
                $$RET91 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11227);
                $$PARM.this23F = $$RET91;
                $$PARM.i240 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i240 < *((int *)((char *)$$PARM.this23F + 8))) goto lab_251;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_251:
    31 |        $$IRET136 = ((char *)*((char * *)$$PARM.this23F) + (8ll)*((long long) $$PARM.i240));
   138 |        $$RET92 = $$IRET136;
                __11228 = double MMSP::f<double>(double, double)($$SFX2,*$$RET92);
                __es.__c4@3 = 3u;
                $$PARM.this161 = &__11227;
    47 |        if (!(&__11227->(vector<int>).data@0.rns401.$$713 != NULL)) goto lab_147;
    48 |        operator delete[](void*)(&__11227->(vector<int>).data@0.rns401.$$713)
    49 |        &__11227->(vector<int>).data@0.rns401.$$713 = NULL;
    50 |      lab_147:
    51 |        $$IRET94 = $$PARM.this161;
   139 |        $$PARM.i7B = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i7B < &x->(vector<int>).size@8.rns391.$$735) goto lab_107;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_107:
    31 |        $$IRET2E = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i7B));
   139 |        __11744 = $$IRET2E;
                *__11744 = *__11744 - 2;
   140 |        $$PARM.this1D6 = &__11229;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$715;
   140 |        $$RET13A = $$IRET104;
    17 |        &__11229->(vector<int>).size@8.rns397.$$715 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11229->(vector<int>).data@0.rns398.$$715 = $$RET13B;
    19 |        if (!(0 < &__11229->(vector<int>).size@8.rns397.$$715)) goto lab_198;
                i = 0;
                do {   /* id=5 guarded */ /* ~199 */ 
                  /* region = 304 */
    20 |          $$SFX1C = ((char *)&__11229->(vector<int>).data@0.rns398.$$715 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$715) goto lab_200;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_200:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$715 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11229->(vector<int>).size@8.rns397.$$715);    /* ~199 */
              lab_198:
    21 |        $$IRET105 = $$PARM.this1D6;
   140 |        __es.__c4@3 = 8u;
                $$RET93 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11229);
                $$PARM.this241 = $$RET93;
                $$PARM.i242 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i242 < *((int *)((char *)$$PARM.this241 + 8))) goto lab_253;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_253:
    31 |        $$IRET137 = ((char *)*((char * *)$$PARM.this241) + (8ll)*((long long) $$PARM.i242));
   140 |        left = $$IRET137;
                __es.__c4@3 = 3u;
                $$PARM.this160 = &__11229;
    47 |        if (!(&__11229->(vector<int>).data@0.rns401.$$718 != NULL)) goto lab_145;
    48 |        operator delete[](void*)(&__11229->(vector<int>).data@0.rns401.$$718)
    49 |        &__11229->(vector<int>).data@0.rns401.$$718 = NULL;
    50 |      lab_145:
    51 |        $$IRET93 = $$PARM.this160;
   141 |        $$SFX3 = *left;
                $$PARM.this1DA = &__11230;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$719;
   141 |        $$RET13A = $$IRET104;
    17 |        &__11230->(vector<int>).size@8.rns397.$$719 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11230->(vector<int>).data@0.rns398.$$719 = $$RET13B;
    19 |        if (!(0 < &__11230->(vector<int>).size@8.rns397.$$719)) goto lab_204;
                i = 0;
                do {   /* id=6 guarded */ /* ~205 */ 
                  /* region = 305 */
    20 |          $$SFX1C = ((char *)&__11230->(vector<int>).data@0.rns398.$$719 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$719) goto lab_206;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_206:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$719 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11230->(vector<int>).size@8.rns397.$$719);    /* ~205 */
              lab_204:
    21 |        $$IRET107 = $$PARM.this1DA;
   141 |        __es.__c4@3 = 9u;
                $$RET94 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11230);
                $$PARM.this233 = $$RET94;
                $$PARM.i234 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i234 < *((int *)((char *)$$PARM.this233 + 8))) goto lab_239;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_239:
    31 |        $$IRET130 = ((char *)*((char * *)$$PARM.this233) + (8ll)*((long long) $$PARM.i234));
   141 |        $$RET95 = $$IRET130;
                __11231 = double MMSP::f<double>(double, double)($$SFX3,*$$RET95);
                __es.__c4@3 = 3u;
                $$PARM.this15F = &__11230;
    47 |        if (!(&__11230->(vector<int>).data@0.rns401.$$723 != NULL)) goto lab_143;
    48 |        operator delete[](void*)(&__11230->(vector<int>).data@0.rns401.$$723)
    49 |        &__11230->(vector<int>).data@0.rns401.$$723 = NULL;
    50 |      lab_143:
    51 |        $$IRET92 = $$PARM.this15F;
   142 |        $$PARM.i7D = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i7D < &x->(vector<int>).size@8.rns391.$$735) goto lab_109;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_109:
    31 |        $$IRET2F = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i7D));
   142 |        __11745 = $$IRET2F;
                *__11745 = *__11745 + 1;
   143 |        $$PARM.i75 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i75 < &x->(vector<int>).size@8.rns391.$$735) goto lab_101;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_101:
    31 |        $$IRET2B = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i75));
   143 |        __11747 = $$IRET2B;
                *__11747 = *__11747 + 1;
   144 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11232,&x);
                __es.__c4@3 = 10u;
                $$RET96 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11232);
                $$PARM.this249 = $$RET96;
                $$PARM.i24A = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i24A < *((int *)((char *)$$PARM.this249 + 8))) goto lab_261;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_261:
    31 |        $$IRET13B = ((char *)*((char * *)$$PARM.this249) + (8ll)*((long long) $$PARM.i24A));
   144 |        up = $$IRET13B;
                __es.__c4@3 = 3u;
                $$PARM.this158 = &__11232;
    47 |        if (!(&__11232->(vector<int>).data@0.rns401.$$729 != NULL)) goto lab_129;
    48 |        operator delete[](void*)(&__11232->(vector<int>).data@0.rns401.$$729)
    49 |        &__11232->(vector<int>).data@0.rns401.$$729 = NULL;
    50 |      lab_129:
    51 |        $$IRET8B = $$PARM.this158;
   145 |        $$SFX4 = *up;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11233,&x);
                __es.__c4@3 = 11u;
                $$RET97 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11233);
                $$PARM.this25D = $$RET97;
                $$PARM.i25E = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i25E < *((int *)((char *)$$PARM.this25D + 8))) goto lab_275;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_275:
    31 |        $$IRET145 = ((char *)*((char * *)$$PARM.this25D) + (8ll)*((long long) $$PARM.i25E));
   145 |        $$RET98 = $$IRET145;
                __11234 = double MMSP::f<double>(double, double)($$SFX4,*$$RET98);
                __es.__c4@3 = 3u;
                $$PARM.this15D = &__11233;
    47 |        if (!(&__11233->(vector<int>).data@0.rns401.$$734 != NULL)) goto lab_139;
    48 |        operator delete[](void*)(&__11233->(vector<int>).data@0.rns401.$$734)
    49 |        &__11233->(vector<int>).data@0.rns401.$$734 = NULL;
    50 |      lab_139:
    51 |        $$IRET90 = $$PARM.this15D;
   146 |        $$PARM.i69 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i69 < &x->(vector<int>).size@8.rns391.$$735) goto lab_91;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_91:
    31 |        $$IRET25 = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i69));
   146 |        __11749 = $$IRET25;
                *__11749 = *__11749 - 2;
   147 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11235,&x);
                __es.__c4@3 = 12u;
                $$RET99 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11235);
                $$PARM.this239 = $$RET99;
                $$PARM.i23A = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i23A < *((int *)((char *)$$PARM.this239 + 8))) goto lab_245;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_245:
    31 |        $$IRET133 = ((char *)*((char * *)$$PARM.this239) + (8ll)*((long long) $$PARM.i23A));
   147 |        down = $$IRET133;
                __es.__c4@3 = 3u;
                $$PARM.this15B = &__11235;
    47 |        if (!(&__11235->(vector<int>).data@0.rns401.$$739 != NULL)) goto lab_135;
    48 |        operator delete[](void*)(&__11235->(vector<int>).data@0.rns401.$$739)
    49 |        &__11235->(vector<int>).data@0.rns401.$$739 = NULL;
    50 |      lab_135:
    51 |        $$IRET8E = $$PARM.this15B;
   148 |        $$SFX5 = *down;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11236,&x);
                __es.__c4@3 = 13u;
                $$RET9A = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11236);
                $$PARM.this235 = $$RET9A;
                $$PARM.i236 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i236 < *((int *)((char *)$$PARM.this235 + 8))) goto lab_241;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_241:
    31 |        $$IRET131 = ((char *)*((char * *)$$PARM.this235) + (8ll)*((long long) $$PARM.i236));
   148 |        $$RET9B = $$IRET131;
                __11237 = double MMSP::f<double>(double, double)($$SFX5,*$$RET9B);
                __es.__c4@3 = 3u;
                $$PARM.this15A = &__11236;
    47 |        if (!(&__11236->(vector<int>).data@0.rns401.$$744 != NULL)) goto lab_133;
    48 |        operator delete[](void*)(&__11236->(vector<int>).data@0.rns401.$$744)
    49 |        &__11236->(vector<int>).data@0.rns401.$$744 = NULL;
    50 |      lab_133:
    51 |        $$IRET8D = $$PARM.this15A;
   149 |        $$PARM.i7F = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i7F < &x->(vector<int>).size@8.rns391.$$735) goto lab_111;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_111:
    31 |        $$IRET30 = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i7F));
   149 |        __11750 = $$IRET30;
                *__11750 = *__11750 + 1;
                $$RET9C = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this237 = $$RET9C;
                $$PARM.i238 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i238 < *((int *)((char *)$$PARM.this237 + 8))) goto lab_243;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_243:
    31 |        $$IRET132 = ((char *)*((char * *)$$PARM.this237) + (8ll)*((long long) $$PARM.i238));
   149 |        $$RET9D = $$IRET132;
   150 |        *$$RET9D = _fnmsub@53( 4.0000000000000000E+000,*center,((*left + *right) + *up) + *down) / (((double *)((char *)oldGrid + 64))[0ll] * ((double *)((char *)oldGrid + 64))[0ll]);
                $$RET9E = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this257 = $$RET9E;
                $$PARM.i258 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i258 < *((int *)((char *)$$PARM.this257 + 8))) goto lab_271;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_271:
    31 |        $$IRET142 = ((char *)*((char * *)$$PARM.this257) + (8ll)*((long long) $$PARM.i258));
   150 |        $$RET9F = $$IRET142;
   151 |        *$$RET9F = _fnmsub@53( 4.0000000000000000E+000,&__11225->(double),((&__11231->(double) + &__11228->(double)) + &__11234->(double)) + &__11237->(double)) / (((double *)((char *)oldGrid + 64))[0ll] * ((double *)((char *)oldGrid + 64))[0ll]);
   153 |        __es.__c4@3 = 2u;
                $$PARM.this159 = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$750 != NULL)) goto lab_131;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$750)
    49 |        &x->(vector<int>).data@0.rns401.$$750 = NULL;
    50 |      lab_131:
    51 |        $$IRET8C = $$PARM.this159;
   132 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~7 */
            lab_9:
   156 |      void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(&c_storage)
   157 |      void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(oldGrid)
   159 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_12;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 310 */
   160 |        MMSP::vector<int> MMSP::position<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 14u;
   161 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11239,&x);
                __es.__c4@3 = 15u;
                oldX = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11239);
                __es.__c4@3 = 14u;
                $$PARM.this155 = &__11239;
    47 |        if (!(&__11239->(vector<int>).data@0.rns401.$$660 != NULL)) goto lab_127;
    48 |        operator delete[](void*)(&__11239->(vector<int>).data@0.rns401.$$660)
    49 |        &__11239->(vector<int>).data@0.rns401.$$660 = NULL;
    50 |      lab_127:
    51 |        $$IRET88 = $$PARM.this155;
   162 |        $$PARM.this1DE = &__11240;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$661;
   162 |        $$RET13A = $$IRET104;
    17 |        &__11240->(vector<int>).size@8.rns397.$$661 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11240->(vector<int>).data@0.rns398.$$661 = $$RET13B;
    19 |        if (!(0 < &__11240->(vector<int>).size@8.rns397.$$661)) goto lab_216;
                i = 0;
                do {   /* id=8 guarded */ /* ~217 */ 
                  /* region = 307 */
    20 |          $$SFX1C = ((char *)&__11240->(vector<int>).data@0.rns398.$$661 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$661) goto lab_218;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_218:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$661 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11240->(vector<int>).size@8.rns397.$$661);    /* ~217 */
              lab_216:
    21 |        $$IRET109 = $$PARM.this1DE;
   162 |        __es.__c4@3 = 16u;
                csX = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11240);
                __es.__c4@3 = 14u;
                $$PARM.this164 = &__11240;
    47 |        if (!(&__11240->(vector<int>).data@0.rns401.$$663 != NULL)) goto lab_153;
    48 |        operator delete[](void*)(&__11240->(vector<int>).data@0.rns401.$$663)
    49 |        &__11240->(vector<int>).data@0.rns401.$$663 = NULL;
    50 |      lab_153:
    51 |        $$IRET97 = $$PARM.this164;
   163 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11241,&x);
                __es.__c4@3 = 17u;
                newX = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11241);
                __es.__c4@3 = 14u;
                $$PARM.this15C = &__11241;
    47 |        if (!(&__11241->(vector<int>).data@0.rns401.$$666 != NULL)) goto lab_137;
    48 |        operator delete[](void*)(&__11241->(vector<int>).data@0.rns401.$$666)
    49 |        &__11241->(vector<int>).data@0.rns401.$$666 = NULL;
    50 |      lab_137:
    51 |        $$IRET8F = $$PARM.this15C;
   166 |        $$PARM.i6B = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i6B < &x->(vector<int>).size@8.rns391.$$667) goto lab_93;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_93:
    31 |        $$IRET26 = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i6B));
   166 |        __11753 = $$IRET26;
                *__11753 = *__11753 + 1;
   167 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11242,&x);
                __es.__c4@3 = 18u;
                $$RETA0 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11242);
                $$PARM.this255 = $$RETA0;
                $$PARM.i256 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i256 < *((int *)((char *)$$PARM.this255 + 8))) goto lab_269;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_269:
    31 |        $$IRET141 = ((char *)*((char * *)$$PARM.this255) + (8ll)*((long long) $$PARM.i256));
   167 |        right = $$IRET141;
                __es.__c4@3 = 14u;
                $$PARM.this15E = &__11242;
    47 |        if (!(&__11242->(vector<int>).data@0.rns401.$$671 != NULL)) goto lab_141;
    48 |        operator delete[](void*)(&__11242->(vector<int>).data@0.rns401.$$671)
    49 |        &__11242->(vector<int>).data@0.rns401.$$671 = NULL;
    50 |      lab_141:
    51 |        $$IRET91 = $$PARM.this15E;
   168 |        $$PARM.i6F = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i6F < &x->(vector<int>).size@8.rns391.$$667) goto lab_95;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_95:
    31 |        $$IRET28 = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i6F));
   168 |        __11755 = $$IRET28;
                *__11755 = *__11755 - 2;
   169 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11243,&x);
                __es.__c4@3 = 19u;
                $$RETA1 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11243);
                $$PARM.this25B = $$RETA1;
                $$PARM.i25C = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i25C < *((int *)((char *)$$PARM.this25B + 8))) goto lab_273;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_273:
    31 |        $$IRET144 = ((char *)*((char * *)$$PARM.this25B) + (8ll)*((long long) $$PARM.i25C));
   169 |        left = $$IRET144;
                __es.__c4@3 = 14u;
                $$PARM.this16A = &__11243;
    47 |        if (!(&__11243->(vector<int>).data@0.rns401.$$676 != NULL)) goto lab_163;
    48 |        operator delete[](void*)(&__11243->(vector<int>).data@0.rns401.$$676)
    49 |        &__11243->(vector<int>).data@0.rns401.$$676 = NULL;
    50 |      lab_163:
    51 |        $$IRET9D = $$PARM.this16A;
   170 |        $$PARM.i71 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i71 < &x->(vector<int>).size@8.rns391.$$667) goto lab_97;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_97:
    31 |        $$IRET29 = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i71));
   170 |        __11756 = $$IRET29;
                *__11756 = *__11756 + 1;
   171 |        $$PARM.i73 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i73 < &x->(vector<int>).size@8.rns391.$$667) goto lab_99;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_99:
    31 |        $$IRET2A = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i73));
   171 |        __11758 = $$IRET2A;
                *__11758 = *__11758 + 1;
   172 |        $$PARM.this1DC = &__11244;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$679;
   172 |        $$RET13A = $$IRET104;
    17 |        &__11244->(vector<int>).size@8.rns397.$$679 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11244->(vector<int>).data@0.rns398.$$679 = $$RET13B;
    19 |        if (!(0 < &__11244->(vector<int>).size@8.rns397.$$679)) goto lab_210;
                i = 0;
                do {   /* id=7 guarded */ /* ~211 */ 
                  /* region = 308 */
    20 |          $$SFX1C = ((char *)&__11244->(vector<int>).data@0.rns398.$$679 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$679) goto lab_212;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_212:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$679 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11244->(vector<int>).size@8.rns397.$$679);    /* ~211 */
              lab_210:
    21 |        $$IRET108 = $$PARM.this1DC;
   172 |        __es.__c4@3 = 20u;
                $$RETA2 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11244);
                $$PARM.this23B = $$RETA2;
                $$PARM.i23C = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i23C < *((int *)((char *)$$PARM.this23B + 8))) goto lab_247;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_247:
    31 |        $$IRET134 = ((char *)*((char * *)$$PARM.this23B) + (8ll)*((long long) $$PARM.i23C));
   172 |        up = $$IRET134;
                __es.__c4@3 = 14u;
                $$PARM.this169 = &__11244;
    47 |        if (!(&__11244->(vector<int>).data@0.rns401.$$682 != NULL)) goto lab_161;
    48 |        operator delete[](void*)(&__11244->(vector<int>).data@0.rns401.$$682)
    49 |        &__11244->(vector<int>).data@0.rns401.$$682 = NULL;
    50 |      lab_161:
    51 |        $$IRET9C = $$PARM.this169;
   173 |        $$PARM.i81 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i81 < &x->(vector<int>).size@8.rns391.$$667) goto lab_113;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_113:
    31 |        $$IRET31 = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i81));
   173 |        __11760 = $$IRET31;
                *__11760 = *__11760 - 2;
   174 |        $$PARM.this1E4 = &__11245;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$684;
   174 |        $$RET13A = $$IRET104;
    17 |        &__11245->(vector<int>).size@8.rns397.$$684 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11245->(vector<int>).data@0.rns398.$$684 = $$RET13B;
    19 |        if (!(0 < &__11245->(vector<int>).size@8.rns397.$$684)) goto lab_228;
                i = 0;
                do {   /* id=10 guarded */ /* ~229 */ 
                  /* region = 309 */
    20 |          $$SFX1C = ((char *)&__11245->(vector<int>).data@0.rns398.$$684 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$684) goto lab_230;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_230:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$684 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11245->(vector<int>).size@8.rns397.$$684);    /* ~229 */
              lab_228:
    21 |        $$IRET10C = $$PARM.this1E4;
   174 |        __es.__c4@3 = 21u;
                $$RETA3 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11245);
                $$PARM.this251 = $$RETA3;
                $$PARM.i252 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i252 < *((int *)((char *)$$PARM.this251 + 8))) goto lab_265;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_265:
    31 |        $$IRET13F = ((char *)*((char * *)$$PARM.this251) + (8ll)*((long long) $$PARM.i252));
   174 |        down = $$IRET13F;
                __es.__c4@3 = 14u;
                $$PARM.this168 = &__11245;
    47 |        if (!(&__11245->(vector<int>).data@0.rns401.$$687 != NULL)) goto lab_159;
    48 |        operator delete[](void*)(&__11245->(vector<int>).data@0.rns401.$$687)
    49 |        &__11245->(vector<int>).data@0.rns401.$$687 = NULL;
    50 |      lab_159:
    51 |        $$IRET9B = $$PARM.this168;
   175 |        $$PARM.i77 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i77 < &x->(vector<int>).size@8.rns391.$$667) goto lab_103;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_103:
    31 |        $$IRET2C = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i77));
   175 |        __11761 = $$IRET2C;
                *__11761 = *__11761 + 1;
   177 |        $$SFX6 = ((*left + *right) + *up) + *down;
                $$PARM.this3E6 = csX;
                $$PARM.i3E7 = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3E7 < *((int *)((char *)$$PARM.this3E6 + 8))) goto lab_313;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_313:
    35 |        $$IRET200 = ((char *)*((char * *)$$PARM.this3E6) + (8ll)*((long long) $$PARM.i3E7));
   177 |        $$RETA4 = $$IRET200;
                Kg4C = ( 1.0000000000000000E-003 * _fnmsub@53( 4.0000000000000000E+000,*$$RETA4,$$SFX6)) / (((double *)((char *)oldGrid + 64))[0ll] * ((double *)((char *)oldGrid + 64))[0ll]);
                $$PARM.this3E4 = csX;
                $$PARM.i3E5 = 1;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3E5 < *((int *)((char *)$$PARM.this3E4 + 8))) goto lab_311;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_311:
    35 |        $$IRET1FF = ((char *)*((char * *)$$PARM.this3E4) + (8ll)*((long long) $$PARM.i3E5));
   177 |        $$RETA5 = $$IRET1FF;
   179 |        dCdt =  2.5000000000000001E-002 * (*$$RETA5 - Kg4C);
   180 |        $$PARM.this23D = newX;
                $$PARM.i23E = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i23E < *((int *)((char *)$$PARM.this23D + 8))) goto lab_249;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_249:
    31 |        $$IRET135 = ((char *)*((char * *)$$PARM.this23D) + (8ll)*((long long) $$PARM.i23E));
   180 |        $$SFX7 = $$IRET135;
                $$PARM.this3E8 = oldX;
                $$PARM.i3E9 = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3E9 < *((int *)((char *)$$PARM.this3E8 + 8))) goto lab_315;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_315:
    35 |        $$IRET201 = ((char *)*((char * *)$$PARM.this3E8) + (8ll)*((long long) $$PARM.i3E9));
   180 |        $$RETA6 = $$IRET201;
                *$$SFX7 = _fmadd@47( 5.0000000000000002E-005,dCdt,*$$RETA6);
   184 |        __es.__c4@3 = 2u;
                $$PARM.this166 = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$693 != NULL)) goto lab_157;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$693)
    49 |        &x->(vector<int>).data@0.rns401.$$693 = NULL;
    50 |      lab_157:
    51 |        $$IRET99 = $$PARM.this166;
   159 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~10 */
            lab_12:
   186 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_15;
              do {   /* id=2 guarded */ /* ~13 */ 
                /* region = 311 */
                $$RETA7 = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   187 |        $$PARM.this24D = $$RETA7;
                $$PARM.i24E = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i24E < *((int *)((char *)$$PARM.this24D + 8))) goto lab_263;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_263:
    31 |        $$IRET13D = ((char *)*((char * *)$$PARM.this24D) + (8ll)*((long long) $$PARM.i24E));
   187 |        $$SFX8 = $$IRET13D;
                $$RETA8 = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this261 = $$RETA8;
                $$PARM.i262 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i262 < *((int *)((char *)$$PARM.this261 + 8))) goto lab_279;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_279:
    31 |        $$IRET147 = ((char *)*((char * *)$$PARM.this261) + (8ll)*((long long) $$PARM.i262));
   187 |        $$RETA9 = $$IRET147;
                *$$SFX8 = *$$RETA9;
                $$RETAA = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   188 |        $$PARM.this25F = $$RETAA;
                $$PARM.i260 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i260 < *((int *)((char *)$$PARM.this25F + 8))) goto lab_277;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_277:
    31 |        $$IRET146 = ((char *)*((char * *)$$PARM.this25F) + (8ll)*((long long) $$PARM.i260));
   188 |        $$SFX9 = $$IRET146;
                $$RETAB = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this243 = $$RETAB;
                $$PARM.i244 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i244 < *((int *)((char *)$$PARM.this243 + 8))) goto lab_255;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_255:
    31 |        $$IRET138 = ((char *)*((char * *)$$PARM.this243) + (8ll)*((long long) $$PARM.i244));
   188 |        $$RETAC = $$IRET138;
                *$$SFX9 = *$$RETAC;
   189 |        if (!(i % 2 == step % 2)) goto lab_16;
    81 |        &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
   208 |        __es.__c4@3 = 25u;
   192 |        MMSP::vector<int> MMSP::position<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 26u;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11247,&x);
                __es.__c4@3 = 27u;
                $$RETAD = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11247);
                $$PARM.this2C1 = $$RETAD;
                $$PARM.i2C2 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C2 < *((int *)((char *)$$PARM.this2C1 + 8))) goto lab_291;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_291:
    31 |        $$IRET177 = ((char *)*((char * *)$$PARM.this2C1) + (8ll)*((long long) $$PARM.i2C2));
   734 |        __11610 = $$IRET177;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_18;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_21;
   105 |        *grains._M_finish@8 = *__11610;
              lab_21:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_23;
              lab_18:
   686 |        __11606._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11606,__11610)
              lab_23:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this195 = &__11247;
    47 |        if (!(&__11247->(vector<int>).data@0.rns401.$$578 != NULL)) goto lab_187;
    48 |        operator delete[](void*)(&__11247->(vector<int>).data@0.rns401.$$578)
    49 |        &__11247->(vector<int>).data@0.rns401.$$578 = NULL;
    50 |      lab_187:
    51 |        $$IRETC8 = $$PARM.this195;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11248,&x);
                __es.__c4@3 = 28u;
                $$RETAE = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11248);
                $$PARM.this2C7 = $$RETAE;
                $$PARM.i2C8 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C8 < *((int *)((char *)$$PARM.this2C7 + 8))) goto lab_295;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_295:
    31 |        $$IRET17A = ((char *)*((char * *)$$PARM.this2C7) + (8ll)*((long long) $$PARM.i2C8));
   734 |        __11624 = $$IRET17A;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_24;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_27;
   105 |        *phases._M_finish@8 = *__11624;
              lab_27:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_29;
              lab_24:
   686 |        __11620._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11620,__11624)
              lab_29:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this191 = &__11248;
    47 |        if (!(&__11248->(vector<int>).data@0.rns401.$$583 != NULL)) goto lab_185;
    48 |        operator delete[](void*)(&__11248->(vector<int>).data@0.rns401.$$583)
    49 |        &__11248->(vector<int>).data@0.rns401.$$583 = NULL;
    50 |      lab_185:
    51 |        $$IRETC4 = $$PARM.this191;
   195 |        $$PARM.iAF = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iAF < &x->(vector<int>).size@8.rns391.$$606) goto lab_125;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_125:
    31 |        $$IRET48 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.iAF));
   195 |        __11764 = $$IRET48;
                *__11764 = *__11764 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11249,&x);
                __es.__c4@3 = 29u;
                $$RETAF = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11249);
                $$PARM.this2CD = $$RETAF;
                $$PARM.i2CE = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2CE < *((int *)((char *)$$PARM.this2CD + 8))) goto lab_301;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_301:
    31 |        $$IRET17D = ((char *)*((char * *)$$PARM.this2CD) + (8ll)*((long long) $$PARM.i2CE));
   734 |        __11638 = $$IRET17D;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_30;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_33;
   105 |        *grains._M_finish@8 = *__11638;
              lab_33:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_35;
              lab_30:
   686 |        __11634._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11634,__11638)
              lab_35:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this187 = &__11249;
    47 |        if (!(&__11249->(vector<int>).data@0.rns401.$$589 != NULL)) goto lab_175;
    48 |        operator delete[](void*)(&__11249->(vector<int>).data@0.rns401.$$589)
    49 |        &__11249->(vector<int>).data@0.rns401.$$589 = NULL;
    50 |      lab_175:
    51 |        $$IRETBA = $$PARM.this187;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11250,&x);
                __es.__c4@3 = 30u;
                $$RETB0 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11250);
                $$PARM.this2D1 = $$RETB0;
                $$PARM.i2D2 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D2 < *((int *)((char *)$$PARM.this2D1 + 8))) goto lab_303;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_303:
    31 |        $$IRET17F = ((char *)*((char * *)$$PARM.this2D1) + (8ll)*((long long) $$PARM.i2D2));
   734 |        __11652 = $$IRET17F;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_36;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_39;
   105 |        *phases._M_finish@8 = *__11652;
              lab_39:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_41;
              lab_36:
   686 |        __11648._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11648,__11652)
              lab_41:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this188 = &__11250;
    47 |        if (!(&__11250->(vector<int>).data@0.rns401.$$594 != NULL)) goto lab_177;
    48 |        operator delete[](void*)(&__11250->(vector<int>).data@0.rns401.$$594)
    49 |        &__11250->(vector<int>).data@0.rns401.$$594 = NULL;
    50 |      lab_177:
    51 |        $$IRETBB = $$PARM.this188;
   198 |        $$PARM.iAB = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iAB < &x->(vector<int>).size@8.rns391.$$606) goto lab_123;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_123:
    31 |        $$IRET46 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.iAB));
   198 |        __11766 = $$IRET46;
                *__11766 = *__11766 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11251,&x);
                __es.__c4@3 = 31u;
                $$RETB1 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11251);
                $$PARM.this2C9 = $$RETB1;
                $$PARM.i2CA = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2CA < *((int *)((char *)$$PARM.this2C9 + 8))) goto lab_297;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_297:
    31 |        $$IRET17B = ((char *)*((char * *)$$PARM.this2C9) + (8ll)*((long long) $$PARM.i2CA));
   734 |        __11666 = $$IRET17B;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_42;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_45;
   105 |        *grains._M_finish@8 = *__11666;
              lab_45:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_47;
              lab_42:
   686 |        __11662._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11662,__11666)
              lab_47:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this189 = &__11251;
    47 |        if (!(&__11251->(vector<int>).data@0.rns401.$$600 != NULL)) goto lab_179;
    48 |        operator delete[](void*)(&__11251->(vector<int>).data@0.rns401.$$600)
    49 |        &__11251->(vector<int>).data@0.rns401.$$600 = NULL;
    50 |      lab_179:
    51 |        $$IRETBC = $$PARM.this189;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11252,&x);
                __es.__c4@3 = 32u;
                $$RETB2 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11252);
                $$PARM.this2D3 = $$RETB2;
                $$PARM.i2D4 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D4 < *((int *)((char *)$$PARM.this2D3 + 8))) goto lab_305;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_305:
    31 |        $$IRET180 = ((char *)*((char * *)$$PARM.this2D3) + (8ll)*((long long) $$PARM.i2D4));
   734 |        __11680 = $$IRET180;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_48;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_51;
   105 |        *phases._M_finish@8 = *__11680;
              lab_51:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_53;
              lab_48:
   686 |        __11676._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11676,__11680)
              lab_53:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this180 = &__11252;
    47 |        if (!(&__11252->(vector<int>).data@0.rns401.$$605 != NULL)) goto lab_173;
    48 |        operator delete[](void*)(&__11252->(vector<int>).data@0.rns401.$$605)
    49 |        &__11252->(vector<int>).data@0.rns401.$$605 = NULL;
    50 |      lab_173:
    51 |        $$IRETB3 = $$PARM.this180;
   201 |        $$PARM.i87 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i87 < &x->(vector<int>).size@8.rns391.$$606) goto lab_115;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_115:
    31 |        $$IRET34 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.i87));
   201 |        __11767 = $$IRET34;
                *__11767 = *__11767 + 1;
   202 |        $$PARM.iA9 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA9 < &x->(vector<int>).size@8.rns391.$$606) goto lab_121;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_121:
    31 |        $$IRET45 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.iA9));
   202 |        __11769 = $$IRET45;
                *__11769 = *__11769 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11253,&x);
                __es.__c4@3 = 33u;
                $$RETB3 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11253);
                $$PARM.this2C5 = $$RETB3;
                $$PARM.i2C6 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C6 < *((int *)((char *)$$PARM.this2C5 + 8))) goto lab_293;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_293:
    31 |        $$IRET179 = ((char *)*((char * *)$$PARM.this2C5) + (8ll)*((long long) $$PARM.i2C6));
   734 |        __11694 = $$IRET179;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_54;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_57;
   105 |        *grains._M_finish@8 = *__11694;
              lab_57:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_59;
              lab_54:
   686 |        __11690._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11690,__11694)
              lab_59:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this17A = &__11253;
    47 |        if (!(&__11253->(vector<int>).data@0.rns401.$$612 != NULL)) goto lab_171;
    48 |        operator delete[](void*)(&__11253->(vector<int>).data@0.rns401.$$612)
    49 |        &__11253->(vector<int>).data@0.rns401.$$612 = NULL;
    50 |      lab_171:
    51 |        $$IRETAD = $$PARM.this17A;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11254,&x);
                __es.__c4@3 = 34u;
                $$RETB4 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11254);
                $$PARM.this2B5 = $$RETB4;
                $$PARM.i2B6 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B6 < *((int *)((char *)$$PARM.this2B5 + 8))) goto lab_285;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_285:
    31 |        $$IRET171 = ((char *)*((char * *)$$PARM.this2B5) + (8ll)*((long long) $$PARM.i2B6));
   734 |        __11708 = $$IRET171;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_60;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_63;
   105 |        *phases._M_finish@8 = *__11708;
              lab_63:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_65;
              lab_60:
   686 |        __11704._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11704,__11708)
              lab_65:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this18A = &__11254;
    47 |        if (!(&__11254->(vector<int>).data@0.rns401.$$617 != NULL)) goto lab_181;
    48 |        operator delete[](void*)(&__11254->(vector<int>).data@0.rns401.$$617)
    49 |        &__11254->(vector<int>).data@0.rns401.$$617 = NULL;
    50 |      lab_181:
    51 |        $$IRETBD = $$PARM.this18A;
   205 |        $$PARM.iA1 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA1 < &x->(vector<int>).size@8.rns391.$$606) goto lab_119;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_119:
    31 |        $$IRET41 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.iA1));
   205 |        __11771 = $$IRET41;
                *__11771 = *__11771 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11255,&x);
                __es.__c4@3 = 35u;
                $$RETB5 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11255);
                $$PARM.this2B3 = $$RETB5;
                $$PARM.i2B4 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B4 < *((int *)((char *)$$PARM.this2B3 + 8))) goto lab_283;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_283:
    31 |        $$IRET170 = ((char *)*((char * *)$$PARM.this2B3) + (8ll)*((long long) $$PARM.i2B4));
   734 |        __11722 = $$IRET170;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_66;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_69;
   105 |        *grains._M_finish@8 = *__11722;
              lab_69:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_71;
              lab_66:
   686 |        __11718._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11718,__11722)
              lab_71:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this18C = &__11255;
    47 |        if (!(&__11255->(vector<int>).data@0.rns401.$$623 != NULL)) goto lab_183;
    48 |        operator delete[](void*)(&__11255->(vector<int>).data@0.rns401.$$623)
    49 |        &__11255->(vector<int>).data@0.rns401.$$623 = NULL;
    50 |      lab_183:
    51 |        $$IRETBF = $$PARM.this18C;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11256,&x);
                __es.__c4@3 = 36u;
                $$RETB6 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11256);
                $$PARM.this2B9 = $$RETB6;
                $$PARM.i2BA = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2BA < *((int *)((char *)$$PARM.this2B9 + 8))) goto lab_287;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_287:
    31 |        $$IRET173 = ((char *)*((char * *)$$PARM.this2B9) + (8ll)*((long long) $$PARM.i2BA));
   734 |        __11736 = $$IRET173;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_72;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_75;
   105 |        *phases._M_finish@8 = *__11736;
              lab_75:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_77;
              lab_72:
   686 |        __11732._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11732,__11736)
              lab_77:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this16C = &__11256;
    47 |        if (!(&__11256->(vector<int>).data@0.rns401.$$628 != NULL)) goto lab_167;
    48 |        operator delete[](void*)(&__11256->(vector<int>).data@0.rns401.$$628)
    49 |        &__11256->(vector<int>).data@0.rns401.$$628 = NULL;
    50 |      lab_167:
    51 |        $$IRET9F = $$PARM.this16C;
   208 |        $$PARM.i91 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i91 < &x->(vector<int>).size@8.rns391.$$606) goto lab_117;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_117:
    31 |        $$IRET39 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.i91));
   208 |        __11772 = $$IRET39;
                *__11772 = *__11772 + 1;
   209 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11257,&x);
                __es.__c4@3 = 37u;
                $$RETB7 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11257);
                $$PARM.this2BD = $$RETB7;
                $$PARM.i2BE = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2BE < *((int *)((char *)$$PARM.this2BD + 8))) goto lab_289;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_289:
    31 |        $$IRET175 = ((char *)*((char * *)$$PARM.this2BD) + (8ll)*((long long) $$PARM.i2BE));
   209 |        $$RETB8 = $$IRET175;
                std::vector<double, std::allocator<double> > MMSP::dE<double>(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)(&deltas,*$$RETB8,&phases,&grains)
                __es.__c4@3 = 26u;
                $$PARM.this16B = &__11257;
    47 |        if (!(&__11257->(vector<int>).data@0.rns401.$$634 != NULL)) goto lab_165;
    48 |        operator delete[](void*)(&__11257->(vector<int>).data@0.rns401.$$634)
    49 |        &__11257->(vector<int>).data@0.rns401.$$634 = NULL;
    50 |      lab_165:
    51 |        $$IRET9E = $$PARM.this16B;
   209 |        __es.__c4@3 = 38u;
                $$RETB9 = rand();
   611 |        if (!(*((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull))) <  0.0000000000000000E+000)) goto lab_78;
   212 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11259,&x);
                __es.__c4@3 = 39u;
                $$RETBA = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11259);
                $$PARM.this2CB = $$RETBA;
                $$PARM.i2CC = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2CC < *((int *)((char *)$$PARM.this2CB + 8))) goto lab_299;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_299:
    31 |        $$IRET17C = ((char *)*((char * *)$$PARM.this2CB) + (8ll)*((long long) $$PARM.i2CC));
   212 |        $$BDC4 = $$IRET17C;
   611 |        *$$BDC4 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this19E = &__11259;
    47 |        if (!(&__11259->(vector<int>).data@0.rns401.$$652 != NULL)) goto lab_191;
    48 |        operator delete[](void*)(&__11259->(vector<int>).data@0.rns401.$$652)
    49 |        &__11259->(vector<int>).data@0.rns401.$$652 = NULL;
    50 |      lab_191:
    51 |        $$IRETD1 = $$PARM.this19E;
   213 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11260,&x);
                __es.__c4@3 = 40u;
                $$RETBB = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11260);
                $$PARM.this2B1 = $$RETBB;
                $$PARM.i2B2 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B2 < *((int *)((char *)$$PARM.this2B1 + 8))) goto lab_281;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_281:
    31 |        $$IRET16F = ((char *)*((char * *)$$PARM.this2B1) + (8ll)*((long long) $$PARM.i2B2));
   213 |        $$BDC5 = $$IRET16F;
   611 |        *$$BDC5 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this19D = &__11260;
    47 |        if (!(&__11260->(vector<int>).data@0.rns401.$$656 != NULL)) goto lab_189;
    48 |        operator delete[](void*)(&__11260->(vector<int>).data@0.rns401.$$656)
    49 |        &__11260->(vector<int>).data@0.rns401.$$656 = NULL;
    50 |      lab_189:
    51 |        $$IRETD0 = $$PARM.this19D;
   214 |        goto lab_80;
              lab_78:
                $$RETBC = (double) rand();
   611 |        if (!($$RETBC /  2.1474836470000000E+009 < __exp@1(- *((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)))))) goto lab_81;
   216 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11261,&x);
                __es.__c4@3 = 41u;
                $$RETBD = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11261);
                $$PARM.this2FF = $$RETBD;
                $$PARM.i300 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i300 < *((int *)((char *)$$PARM.this2FF + 8))) goto lab_307;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_307:
    31 |        $$IRET196 = ((char *)*((char * *)$$PARM.this2FF) + (8ll)*((long long) $$PARM.i300));
   216 |        $$BDC7 = $$IRET196;
   611 |        *$$BDC7 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1C0 = &__11261;
    47 |        if (!(&__11261->(vector<int>).data@0.rns401.$$644 != NULL)) goto lab_193;
    48 |        operator delete[](void*)(&__11261->(vector<int>).data@0.rns401.$$644)
    49 |        &__11261->(vector<int>).data@0.rns401.$$644 = NULL;
    50 |      lab_193:
    51 |        $$IRETF3 = $$PARM.this1C0;
   217 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11262,&x);
                __es.__c4@3 = 42u;
                $$RETBE = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11262);
                $$PARM.this301 = $$RETBE;
                $$PARM.i302 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i302 < *((int *)((char *)$$PARM.this301 + 8))) goto lab_309;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_309:
    31 |        $$IRET197 = ((char *)*((char * *)$$PARM.this301) + (8ll)*((long long) $$PARM.i302));
   217 |        $$BDC8 = $$IRET197;
   611 |        *$$BDC8 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1C1 = &__11262;
    47 |        if (!(&__11262->(vector<int>).data@0.rns401.$$648 != NULL)) goto lab_195;
    48 |        operator delete[](void*)(&__11262->(vector<int>).data@0.rns401.$$648)
    49 |        &__11262->(vector<int>).data@0.rns401.$$648 = NULL;
    50 |      lab_195:
    51 |        $$IRETF4 = $$PARM.this1C1;
   218 |      lab_81:
              lab_80:
   219 |        __es.__c4@3 = 26u;
                $$PARM.this3F8 = &deltas;
   145 |        if (!(deltas._M_start@0 != NULL)) goto lab_329;
    95 |        operator delete(void*)(deltas._M_start@0)
   110 |      lab_329:
   132 |        $$PARM.this226 = $$PARM.this3F8;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3F8;
   314 |        $$IRET20A = $$PARM.this3F8;
   219 |        __es.__c4@3 = 25u;
                $$PARM.this16D = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$638 != NULL)) goto lab_169;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$638)
    49 |        &x->(vector<int>).data@0.rns401.$$638 = NULL;
    50 |      lab_169:
    51 |        $$IRETA0 = $$PARM.this16D;
   219 |        __es.__c4@3 = 23u;
                $$PARM.this3F7 = &phases;
   145 |        if (!(phases._M_start@0 != NULL)) goto lab_323;
    95 |        operator delete(void*)(phases._M_start@0)
   110 |      lab_323:
   132 |        $$PARM.this226 = $$PARM.this3F7;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3F7;
   314 |        $$IRET209 = $$PARM.this3F7;
   219 |        __es.__c4@3 = 2u;
                $$PARM.this3F6 = &grains;
   145 |        if (!(grains._M_start@0 != NULL)) goto lab_317;
    95 |        operator delete(void*)(grains._M_start@0)
   110 |      lab_317:
   132 |        $$PARM.this226 = $$PARM.this3F6;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3F6;
   314 |        $$IRET208 = $$PARM.this3F6;
   219 |      lab_16:
   186 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~13 */
            lab_15:
   223 |      void MMSP::swap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&, MMSP::grid<1, MMSP::vector<double> >&)(oldGrid,&newGrid)
   224 |      void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(oldGrid)
   225 |      __es.__c4@3 = 1u;
              MMSP::grid<1, MMSP::vector<double> >::~grid()(&c_storage);
   126 |      step = step + 1;
            } while (step < steps);    /* ~2 */
          lab_4:
   227 |    iterations = iterations + 1;
   228 |    __es.__c4@3 = 0u;
            MMSP::grid<1, MMSP::vector<double> >::~grid()(&newGrid);
            return;
          } /* function */ 


   565 |  void void MMSP::output<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, char const*)(char * GRID, char * filename)
   567 |  {
            MMSP::grid<1, MMSP::vector<double> >::output(char const*) const(GRID,filename)
   568 |    return;
          } /* function */ 


   102 |  void void MMSP::update<2, double>(MMSP::grid<2, MMSP::vector<double> >&, int)(grid<2,MMSP::vector<double> > *oldGrid, int steps)
   103 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   105 |    guard_iterations5 = 1;
   112 |    void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(oldGrid)
   114 |    MMSP::grid<2, MMSP::vector<double> >::grid(MMSP::grid<2, MMSP::vector<double> > const&)(&newGrid,oldGrid);
            __es.__c4@3 = 1u;
   637 |    *((long long *)((char *)&std::cout + 8 + ((long long *)(&std::cout->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8])) = 2ll;
   122 |    void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(oldGrid)
   126 |    step = 0;
            if (!(0 < steps)) goto lab_4;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 312 */
   128 |      MMSP::print_progress(int, int)(step,steps)
   130 |      MMSP::grid<2, MMSP::vector<double> >::grid(MMSP::grid<2, MMSP::vector<double> > const&)(&c_storage,oldGrid);
              __es.__c4@3 = 2u;
   132 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_9;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 307 */
   133 |        MMSP::vector<int> MMSP::position<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 3u;
   134 |        $$PARM.this1FA = &__11775;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$893;
   134 |        $$RET13A = $$IRET104;
    17 |        &__11775->(vector<int>).size@8.rns397.$$893 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11775->(vector<int>).data@0.rns398.$$893 = $$RET13B;
    19 |        if (!(0 < &__11775->(vector<int>).size@8.rns397.$$893)) goto lab_222;
                i = 0;
                do {   /* id=9 guarded */ /* ~223 */ 
                  /* region = 302 */
    20 |          $$SFX1C = ((char *)&__11775->(vector<int>).data@0.rns398.$$893 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$893) goto lab_224;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_224:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$893 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11775->(vector<int>).size@8.rns397.$$893);    /* ~223 */
              lab_222:
    21 |        $$IRET117 = $$PARM.this1FA;
   134 |        __es.__c4@3 = 4u;
                $$RETBF = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11775);
                $$PARM.this279 = $$RETBF;
                $$PARM.i27A = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i27A < *((int *)((char *)$$PARM.this279 + 8))) goto lab_257;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_257:
    31 |        $$IRET153 = ((char *)*((char * *)$$PARM.this279) + (8ll)*((long long) $$PARM.i27A));
   134 |        center = $$IRET153;
                __es.__c4@3 = 3u;
                $$PARM.this192 = &__11775;
    47 |        if (!(&__11775->(vector<int>).data@0.rns401.$$896 != NULL)) goto lab_145;
    48 |        operator delete[](void*)(&__11775->(vector<int>).data@0.rns401.$$896)
    49 |        &__11775->(vector<int>).data@0.rns401.$$896 = NULL;
    50 |      lab_145:
    51 |        $$IRETC5 = $$PARM.this192;
   135 |        $$SFXA = *center;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11776,&x);
                __es.__c4@3 = 5u;
                $$RETC0 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11776);
                $$PARM.this27D = $$RETC0;
                $$PARM.i27E = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i27E < *((int *)((char *)$$PARM.this27D + 8))) goto lab_261;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_261:
    31 |        $$IRET155 = ((char *)*((char * *)$$PARM.this27D) + (8ll)*((long long) $$PARM.i27E));
   135 |        $$RETC1 = $$IRET155;
                __11777 = double MMSP::f<double>(double, double)($$SFXA,*$$RETC1);
                __es.__c4@3 = 3u;
                $$PARM.this193 = &__11776;
    47 |        if (!(&__11776->(vector<int>).data@0.rns401.$$901 != NULL)) goto lab_147;
    48 |        operator delete[](void*)(&__11776->(vector<int>).data@0.rns401.$$901)
    49 |        &__11776->(vector<int>).data@0.rns401.$$901 = NULL;
    50 |      lab_147:
    51 |        $$IRETC6 = $$PARM.this193;
   136 |        $$PARM.iB1 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB1 < &x->(vector<int>).size@8.rns391.$$923) goto lab_113;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_113:
    31 |        $$IRET49 = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.iB1));
   136 |        __12294 = $$IRET49;
                *__12294 = *__12294 + 1;
   137 |        $$PARM.this1EA = &__11778;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$903;
   137 |        $$RET13A = $$IRET104;
    17 |        &__11778->(vector<int>).size@8.rns397.$$903 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11778->(vector<int>).data@0.rns398.$$903 = $$RET13B;
    19 |        if (!(0 < &__11778->(vector<int>).size@8.rns397.$$903)) goto lab_204;
                i = 0;
                do {   /* id=6 guarded */ /* ~205 */ 
                  /* region = 303 */
    20 |          $$SFX1C = ((char *)&__11778->(vector<int>).data@0.rns398.$$903 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$903) goto lab_206;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_206:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$903 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11778->(vector<int>).size@8.rns397.$$903);    /* ~205 */
              lab_204:
    21 |        $$IRET10F = $$PARM.this1EA;
   137 |        __es.__c4@3 = 6u;
                $$RETC2 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11778);
                $$PARM.this28D = $$RETC2;
                $$PARM.i28E = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i28E < *((int *)((char *)$$PARM.this28D + 8))) goto lab_273;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_273:
    31 |        $$IRET15D = ((char *)*((char * *)$$PARM.this28D) + (8ll)*((long long) $$PARM.i28E));
   137 |        right = $$IRET15D;
                __es.__c4@3 = 3u;
                $$PARM.this194 = &__11778;
    47 |        if (!(&__11778->(vector<int>).data@0.rns401.$$906 != NULL)) goto lab_149;
    48 |        operator delete[](void*)(&__11778->(vector<int>).data@0.rns401.$$906)
    49 |        &__11778->(vector<int>).data@0.rns401.$$906 = NULL;
    50 |      lab_149:
    51 |        $$IRETC7 = $$PARM.this194;
   138 |        $$SFXB = *right;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11779,&x);
                __es.__c4@3 = 7u;
                $$RETC3 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11779);
                $$PARM.this285 = $$RETC3;
                $$PARM.i286 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i286 < *((int *)((char *)$$PARM.this285 + 8))) goto lab_267;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_267:
    31 |        $$IRET159 = ((char *)*((char * *)$$PARM.this285) + (8ll)*((long long) $$PARM.i286));
   138 |        $$RETC4 = $$IRET159;
                __11780 = double MMSP::f<double>(double, double)($$SFXB,*$$RETC4);
                __es.__c4@3 = 3u;
                $$PARM.this190 = &__11779;
    47 |        if (!(&__11779->(vector<int>).data@0.rns401.$$911 != NULL)) goto lab_143;
    48 |        operator delete[](void*)(&__11779->(vector<int>).data@0.rns401.$$911)
    49 |        &__11779->(vector<int>).data@0.rns401.$$911 = NULL;
    50 |      lab_143:
    51 |        $$IRETC3 = $$PARM.this190;
   139 |        $$PARM.i8D = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i8D < &x->(vector<int>).size@8.rns391.$$923) goto lab_97;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_97:
    31 |        $$IRET37 = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.i8D));
   139 |        __12296 = $$IRET37;
                *__12296 = *__12296 - 2;
   140 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11781,&x);
                __es.__c4@3 = 8u;
                $$RETC5 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11781);
                $$PARM.this283 = $$RETC5;
                $$PARM.i284 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i284 < *((int *)((char *)$$PARM.this283 + 8))) goto lab_265;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_265:
    31 |        $$IRET158 = ((char *)*((char * *)$$PARM.this283) + (8ll)*((long long) $$PARM.i284));
   140 |        left = $$IRET158;
                __es.__c4@3 = 3u;
                $$PARM.this196 = &__11781;
    47 |        if (!(&__11781->(vector<int>).data@0.rns401.$$916 != NULL)) goto lab_151;
    48 |        operator delete[](void*)(&__11781->(vector<int>).data@0.rns401.$$916)
    49 |        &__11781->(vector<int>).data@0.rns401.$$916 = NULL;
    50 |      lab_151:
    51 |        $$IRETC9 = $$PARM.this196;
   141 |        $$SFXC = *left;
                $$PARM.this1F6 = &__11782;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$917;
   141 |        $$RET13A = $$IRET104;
    17 |        &__11782->(vector<int>).size@8.rns397.$$917 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11782->(vector<int>).data@0.rns398.$$917 = $$RET13B;
    19 |        if (!(0 < &__11782->(vector<int>).size@8.rns397.$$917)) goto lab_210;
                i = 0;
                do {   /* id=7 guarded */ /* ~211 */ 
                  /* region = 304 */
    20 |          $$SFX1C = ((char *)&__11782->(vector<int>).data@0.rns398.$$917 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$917) goto lab_212;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_212:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$917 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11782->(vector<int>).size@8.rns397.$$917);    /* ~211 */
              lab_210:
    21 |        $$IRET115 = $$PARM.this1F6;
   141 |        __es.__c4@3 = 9u;
                $$RETC6 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11782);
                $$PARM.this27B = $$RETC6;
                $$PARM.i27C = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i27C < *((int *)((char *)$$PARM.this27B + 8))) goto lab_259;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_259:
    31 |        $$IRET154 = ((char *)*((char * *)$$PARM.this27B) + (8ll)*((long long) $$PARM.i27C));
   141 |        $$RETC7 = $$IRET154;
                __11783 = double MMSP::f<double>(double, double)($$SFXC,*$$RETC7);
                __es.__c4@3 = 3u;
                $$PARM.this197 = &__11782;
    47 |        if (!(&__11782->(vector<int>).data@0.rns401.$$921 != NULL)) goto lab_153;
    48 |        operator delete[](void*)(&__11782->(vector<int>).data@0.rns401.$$921)
    49 |        &__11782->(vector<int>).data@0.rns401.$$921 = NULL;
    50 |      lab_153:
    51 |        $$IRETCA = $$PARM.this197;
   142 |        $$PARM.i99 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i99 < &x->(vector<int>).size@8.rns391.$$923) goto lab_107;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_107:
    31 |        $$IRET3D = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.i99));
   142 |        __12297 = $$IRET3D;
                *__12297 = *__12297 + 1;
   143 |        $$PARM.i83 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i83 < &x->(vector<int>).size@8.rns391.$$923) goto lab_91;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_91:
    31 |        $$IRET32 = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.i83));
   143 |        __12299 = $$IRET32;
                *__12299 = *__12299 + 1;
   144 |        $$PARM.this1E8 = &__11784;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$924;
   144 |        $$RET13A = $$IRET104;
    17 |        &__11784->(vector<int>).size@8.rns397.$$924 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11784->(vector<int>).data@0.rns398.$$924 = $$RET13B;
    19 |        if (!(0 < &__11784->(vector<int>).size@8.rns397.$$924)) goto lab_198;
                i = 0;
                do {   /* id=5 guarded */ /* ~199 */ 
                  /* region = 305 */
    20 |          $$SFX1C = ((char *)&__11784->(vector<int>).data@0.rns398.$$924 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$924) goto lab_200;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_200:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$924 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11784->(vector<int>).size@8.rns397.$$924);    /* ~199 */
              lab_198:
    21 |        $$IRET10E = $$PARM.this1E8;
   144 |        __es.__c4@3 = 10u;
                $$RETC8 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11784);
                $$PARM.this265 = $$RETC8;
                $$PARM.i266 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i266 < *((int *)((char *)$$PARM.this265 + 8))) goto lab_241;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_241:
    31 |        $$IRET149 = ((char *)*((char * *)$$PARM.this265) + (8ll)*((long long) $$PARM.i266));
   144 |        up = $$IRET149;
                __es.__c4@3 = 3u;
                $$PARM.this198 = &__11784;
    47 |        if (!(&__11784->(vector<int>).data@0.rns401.$$927 != NULL)) goto lab_155;
    48 |        operator delete[](void*)(&__11784->(vector<int>).data@0.rns401.$$927)
    49 |        &__11784->(vector<int>).data@0.rns401.$$927 = NULL;
    50 |      lab_155:
    51 |        $$IRETCB = $$PARM.this198;
   145 |        $$SFXD = *up;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11785,&x);
                __es.__c4@3 = 11u;
                $$RETC9 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11785);
                $$PARM.this26B = $$RETC9;
                $$PARM.i26C = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i26C < *((int *)((char *)$$PARM.this26B + 8))) goto lab_247;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_247:
    31 |        $$IRET14C = ((char *)*((char * *)$$PARM.this26B) + (8ll)*((long long) $$PARM.i26C));
   145 |        $$RETCA = $$IRET14C;
                __11786 = double MMSP::f<double>(double, double)($$SFXD,*$$RETCA);
                __es.__c4@3 = 3u;
                $$PARM.this199 = &__11785;
    47 |        if (!(&__11785->(vector<int>).data@0.rns401.$$932 != NULL)) goto lab_157;
    48 |        operator delete[](void*)(&__11785->(vector<int>).data@0.rns401.$$932)
    49 |        &__11785->(vector<int>).data@0.rns401.$$932 = NULL;
    50 |      lab_157:
    51 |        $$IRETCC = $$PARM.this199;
   146 |        $$PARM.i93 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i93 < &x->(vector<int>).size@8.rns391.$$923) goto lab_101;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_101:
    31 |        $$IRET3A = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.i93));
   146 |        __12301 = $$IRET3A;
                *__12301 = *__12301 - 2;
   147 |        $$PARM.this1F8 = &__11787;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$934;
   147 |        $$RET13A = $$IRET104;
    17 |        &__11787->(vector<int>).size@8.rns397.$$934 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11787->(vector<int>).data@0.rns398.$$934 = $$RET13B;
    19 |        if (!(0 < &__11787->(vector<int>).size@8.rns397.$$934)) goto lab_216;
                i = 0;
                do {   /* id=8 guarded */ /* ~217 */ 
                  /* region = 306 */
    20 |          $$SFX1C = ((char *)&__11787->(vector<int>).data@0.rns398.$$934 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$934) goto lab_218;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_218:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$934 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11787->(vector<int>).size@8.rns397.$$934);    /* ~217 */
              lab_216:
    21 |        $$IRET116 = $$PARM.this1F8;
   147 |        __es.__c4@3 = 12u;
                $$RETCB = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11787);
                $$PARM.this267 = $$RETCB;
                $$PARM.i268 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i268 < *((int *)((char *)$$PARM.this267 + 8))) goto lab_243;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_243:
    31 |        $$IRET14A = ((char *)*((char * *)$$PARM.this267) + (8ll)*((long long) $$PARM.i268));
   147 |        down = $$IRET14A;
                __es.__c4@3 = 3u;
                $$PARM.this19A = &__11787;
    47 |        if (!(&__11787->(vector<int>).data@0.rns401.$$937 != NULL)) goto lab_159;
    48 |        operator delete[](void*)(&__11787->(vector<int>).data@0.rns401.$$937)
    49 |        &__11787->(vector<int>).data@0.rns401.$$937 = NULL;
    50 |      lab_159:
    51 |        $$IRETCD = $$PARM.this19A;
   148 |        $$SFXE = *down;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11788,&x);
                __es.__c4@3 = 13u;
                $$RETCC = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11788);
                $$PARM.this26F = $$RETCC;
                $$PARM.i270 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i270 < *((int *)((char *)$$PARM.this26F + 8))) goto lab_249;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_249:
    31 |        $$IRET14E = ((char *)*((char * *)$$PARM.this26F) + (8ll)*((long long) $$PARM.i270));
   148 |        $$RETCD = $$IRET14E;
                __11789 = double MMSP::f<double>(double, double)($$SFXE,*$$RETCD);
                __es.__c4@3 = 3u;
                $$PARM.this19B = &__11788;
    47 |        if (!(&__11788->(vector<int>).data@0.rns401.$$942 != NULL)) goto lab_161;
    48 |        operator delete[](void*)(&__11788->(vector<int>).data@0.rns401.$$942)
    49 |        &__11788->(vector<int>).data@0.rns401.$$942 = NULL;
    50 |      lab_161:
    51 |        $$IRETCE = $$PARM.this19B;
   149 |        $$PARM.iAD = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iAD < &x->(vector<int>).size@8.rns391.$$923) goto lab_111;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_111:
    31 |        $$IRET47 = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.iAD));
   149 |        __12302 = $$IRET47;
                *__12302 = *__12302 + 1;
                $$RETCE = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this28F = $$RETCE;
                $$PARM.i290 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i290 < *((int *)((char *)$$PARM.this28F + 8))) goto lab_275;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_275:
    31 |        $$IRET15E = ((char *)*((char * *)$$PARM.this28F) + (8ll)*((long long) $$PARM.i290));
   149 |        $$RETCF = $$IRET15E;
   150 |        *$$RETCF = _fnmsub@53( 4.0000000000000000E+000,*center,((*left + *right) + *up) + *down) / (((double *)((char *)oldGrid + 104))[0ll] * ((double *)((char *)oldGrid + 104))[0ll]);
                $$RETD0 = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this291 = $$RETD0;
                $$PARM.i292 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i292 < *((int *)((char *)$$PARM.this291 + 8))) goto lab_277;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_277:
    31 |        $$IRET15F = ((char *)*((char * *)$$PARM.this291) + (8ll)*((long long) $$PARM.i292));
   150 |        $$RETD1 = $$IRET15F;
   151 |        *$$RETD1 = _fnmsub@53( 4.0000000000000000E+000,&__11777->(double),((&__11783->(double) + &__11780->(double)) + &__11786->(double)) + &__11789->(double)) / (((double *)((char *)oldGrid + 104))[0ll] * ((double *)((char *)oldGrid + 104))[0ll]);
   153 |        __es.__c4@3 = 2u;
                $$PARM.this19C = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$948 != NULL)) goto lab_163;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$948)
    49 |        &x->(vector<int>).data@0.rns401.$$948 = NULL;
    50 |      lab_163:
    51 |        $$IRETCF = $$PARM.this19C;
   132 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~7 */
            lab_9:
   156 |      void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(&c_storage)
   157 |      void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(oldGrid)
   159 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_12;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 310 */
   160 |        MMSP::vector<int> MMSP::position<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 14u;
   161 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11791,&x);
                __es.__c4@3 = 15u;
                oldX = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11791);
                __es.__c4@3 = 14u;
                $$PARM.this17B = &__11791;
    47 |        if (!(&__11791->(vector<int>).data@0.rns401.$$858 != NULL)) goto lab_131;
    48 |        operator delete[](void*)(&__11791->(vector<int>).data@0.rns401.$$858)
    49 |        &__11791->(vector<int>).data@0.rns401.$$858 = NULL;
    50 |      lab_131:
    51 |        $$IRETAE = $$PARM.this17B;
   162 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11792,&x);
                __es.__c4@3 = 16u;
                csX = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11792);
                __es.__c4@3 = 14u;
                $$PARM.this18B = &__11792;
    47 |        if (!(&__11792->(vector<int>).data@0.rns401.$$861 != NULL)) goto lab_135;
    48 |        operator delete[](void*)(&__11792->(vector<int>).data@0.rns401.$$861)
    49 |        &__11792->(vector<int>).data@0.rns401.$$861 = NULL;
    50 |      lab_135:
    51 |        $$IRETBE = $$PARM.this18B;
   163 |        $$PARM.this1FE = &__11793;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$862;
   163 |        $$RET13A = $$IRET104;
    17 |        &__11793->(vector<int>).size@8.rns397.$$862 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11793->(vector<int>).data@0.rns398.$$862 = $$RET13B;
    19 |        if (!(0 < &__11793->(vector<int>).size@8.rns397.$$862)) goto lab_228;
                i = 0;
                do {   /* id=10 guarded */ /* ~229 */ 
                  /* region = 308 */
    20 |          $$SFX1C = ((char *)&__11793->(vector<int>).data@0.rns398.$$862 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$862) goto lab_230;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_230:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$862 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11793->(vector<int>).size@8.rns397.$$862);    /* ~229 */
              lab_228:
    21 |        $$IRET119 = $$PARM.this1FE;
   163 |        __es.__c4@3 = 17u;
                newX = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11793);
                __es.__c4@3 = 14u;
                $$PARM.this181 = &__11793;
    47 |        if (!(&__11793->(vector<int>).data@0.rns401.$$864 != NULL)) goto lab_133;
    48 |        operator delete[](void*)(&__11793->(vector<int>).data@0.rns401.$$864)
    49 |        &__11793->(vector<int>).data@0.rns401.$$864 = NULL;
    50 |      lab_133:
    51 |        $$IRETB4 = $$PARM.this181;
   166 |        $$PARM.i95 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i95 < &x->(vector<int>).size@8.rns391.$$886) goto lab_103;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_103:
    31 |        $$IRET3B = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i95));
   166 |        __12305 = $$IRET3B;
                *__12305 = *__12305 + 1;
   167 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11794,&x);
                __es.__c4@3 = 18u;
                $$RETD2 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11794);
                $$PARM.this293 = $$RETD2;
                $$PARM.i294 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i294 < *((int *)((char *)$$PARM.this293 + 8))) goto lab_279;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_279:
    31 |        $$IRET160 = ((char *)*((char * *)$$PARM.this293) + (8ll)*((long long) $$PARM.i294));
   167 |        right = $$IRET160;
                __es.__c4@3 = 14u;
                $$PARM.this16F = &__11794;
    47 |        if (!(&__11794->(vector<int>).data@0.rns401.$$869 != NULL)) goto lab_129;
    48 |        operator delete[](void*)(&__11794->(vector<int>).data@0.rns401.$$869)
    49 |        &__11794->(vector<int>).data@0.rns401.$$869 = NULL;
    50 |      lab_129:
    51 |        $$IRETA2 = $$PARM.this16F;
   168 |        $$PARM.i97 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i97 < &x->(vector<int>).size@8.rns391.$$886) goto lab_105;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_105:
    31 |        $$IRET3C = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i97));
   168 |        __12307 = $$IRET3C;
                *__12307 = *__12307 - 2;
   169 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11795,&x);
                __es.__c4@3 = 19u;
                $$RETD3 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11795);
                $$PARM.this27F = $$RETD3;
                $$PARM.i280 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i280 < *((int *)((char *)$$PARM.this27F + 8))) goto lab_263;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_263:
    31 |        $$IRET156 = ((char *)*((char * *)$$PARM.this27F) + (8ll)*((long long) $$PARM.i280));
   169 |        left = $$IRET156;
                __es.__c4@3 = 14u;
                $$PARM.this18E = &__11795;
    47 |        if (!(&__11795->(vector<int>).data@0.rns401.$$874 != NULL)) goto lab_139;
    48 |        operator delete[](void*)(&__11795->(vector<int>).data@0.rns401.$$874)
    49 |        &__11795->(vector<int>).data@0.rns401.$$874 = NULL;
    50 |      lab_139:
    51 |        $$IRETC1 = $$PARM.this18E;
   170 |        $$PARM.i8F = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i8F < &x->(vector<int>).size@8.rns391.$$886) goto lab_99;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_99:
    31 |        $$IRET38 = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i8F));
   170 |        __12308 = $$IRET38;
                *__12308 = *__12308 + 1;
   171 |        $$PARM.i9B = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i9B < &x->(vector<int>).size@8.rns391.$$886) goto lab_109;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_109:
    31 |        $$IRET3E = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i9B));
   171 |        __12310 = $$IRET3E;
                *__12310 = *__12310 + 1;
   172 |        $$PARM.this200 = &__11796;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$877;
   172 |        $$RET13A = $$IRET104;
    17 |        &__11796->(vector<int>).size@8.rns397.$$877 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11796->(vector<int>).data@0.rns398.$$877 = $$RET13B;
    19 |        if (!(0 < &__11796->(vector<int>).size@8.rns397.$$877)) goto lab_234;
                i = 0;
                do {   /* id=11 guarded */ /* ~235 */ 
                  /* region = 309 */
    20 |          $$SFX1C = ((char *)&__11796->(vector<int>).data@0.rns398.$$877 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$877) goto lab_236;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_236:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$877 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11796->(vector<int>).size@8.rns397.$$877);    /* ~235 */
              lab_234:
    21 |        $$IRET11A = $$PARM.this200;
   172 |        __es.__c4@3 = 20u;
                $$RETD4 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11796);
                $$PARM.this275 = $$RETD4;
                $$PARM.i276 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i276 < *((int *)((char *)$$PARM.this275 + 8))) goto lab_253;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_253:
    31 |        $$IRET151 = ((char *)*((char * *)$$PARM.this275) + (8ll)*((long long) $$PARM.i276));
   172 |        up = $$IRET151;
                __es.__c4@3 = 14u;
                $$PARM.this16E = &__11796;
    47 |        if (!(&__11796->(vector<int>).data@0.rns401.$$880 != NULL)) goto lab_127;
    48 |        operator delete[](void*)(&__11796->(vector<int>).data@0.rns401.$$880)
    49 |        &__11796->(vector<int>).data@0.rns401.$$880 = NULL;
    50 |      lab_127:
    51 |        $$IRETA1 = $$PARM.this16E;
   173 |        $$PARM.i8B = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i8B < &x->(vector<int>).size@8.rns391.$$886) goto lab_95;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_95:
    31 |        $$IRET36 = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i8B));
   173 |        __12312 = $$IRET36;
                *__12312 = *__12312 - 2;
   174 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11797,&x);
                __es.__c4@3 = 21u;
                $$RETD5 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11797);
                $$PARM.this263 = $$RETD5;
                $$PARM.i264 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i264 < *((int *)((char *)$$PARM.this263 + 8))) goto lab_239;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_239:
    31 |        $$IRET148 = ((char *)*((char * *)$$PARM.this263) + (8ll)*((long long) $$PARM.i264));
   174 |        down = $$IRET148;
                __es.__c4@3 = 14u;
                $$PARM.this18F = &__11797;
    47 |        if (!(&__11797->(vector<int>).data@0.rns401.$$885 != NULL)) goto lab_141;
    48 |        operator delete[](void*)(&__11797->(vector<int>).data@0.rns401.$$885)
    49 |        &__11797->(vector<int>).data@0.rns401.$$885 = NULL;
    50 |      lab_141:
    51 |        $$IRETC2 = $$PARM.this18F;
   175 |        $$PARM.i89 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i89 < &x->(vector<int>).size@8.rns391.$$886) goto lab_93;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_93:
    31 |        $$IRET35 = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i89));
   175 |        __12313 = $$IRET35;
                *__12313 = *__12313 + 1;
   177 |        $$SFXF = ((*left + *right) + *up) + *down;
                $$PARM.this3F4 = csX;
                $$PARM.i3F5 = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3F5 < *((int *)((char *)$$PARM.this3F4 + 8))) goto lab_315;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_315:
    35 |        $$IRET207 = ((char *)*((char * *)$$PARM.this3F4) + (8ll)*((long long) $$PARM.i3F5));
   177 |        $$RETD6 = $$IRET207;
                Kg4C = ( 1.0000000000000000E-003 * _fnmsub@53( 4.0000000000000000E+000,*$$RETD6,$$SFXF)) / (((double *)((char *)oldGrid + 104))[0ll] * ((double *)((char *)oldGrid + 104))[0ll]);
                $$PARM.this3EA = csX;
                $$PARM.i3EB = 1;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3EB < *((int *)((char *)$$PARM.this3EA + 8))) goto lab_311;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_311:
    35 |        $$IRET202 = ((char *)*((char * *)$$PARM.this3EA) + (8ll)*((long long) $$PARM.i3EB));
   177 |        $$RETD7 = $$IRET202;
   179 |        dCdt =  2.5000000000000001E-002 * (*$$RETD7 - Kg4C);
   180 |        $$PARM.this287 = newX;
                $$PARM.i288 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i288 < *((int *)((char *)$$PARM.this287 + 8))) goto lab_269;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_269:
    31 |        $$IRET15A = ((char *)*((char * *)$$PARM.this287) + (8ll)*((long long) $$PARM.i288));
   180 |        $$SFX10 = $$IRET15A;
                $$PARM.this3EC = oldX;
                $$PARM.i3ED = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3ED < *((int *)((char *)$$PARM.this3EC + 8))) goto lab_313;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_313:
    35 |        $$IRET203 = ((char *)*((char * *)$$PARM.this3EC) + (8ll)*((long long) $$PARM.i3ED));
   180 |        $$RETD8 = $$IRET203;
                *$$SFX10 = _fmadd@47( 5.0000000000000002E-005,dCdt,*$$RETD8);
   184 |        __es.__c4@3 = 2u;
                $$PARM.this18D = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$891 != NULL)) goto lab_137;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$891)
    49 |        &x->(vector<int>).data@0.rns401.$$891 = NULL;
    50 |      lab_137:
    51 |        $$IRETC0 = $$PARM.this18D;
   159 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~10 */
            lab_12:
   186 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_15;
              do {   /* id=2 guarded */ /* ~13 */ 
                /* region = 311 */
                $$RETD9 = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   187 |        $$PARM.this277 = $$RETD9;
                $$PARM.i278 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i278 < *((int *)((char *)$$PARM.this277 + 8))) goto lab_255;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_255:
    31 |        $$IRET152 = ((char *)*((char * *)$$PARM.this277) + (8ll)*((long long) $$PARM.i278));
   187 |        $$SFX11 = $$IRET152;
                $$RETDA = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this269 = $$RETDA;
                $$PARM.i26A = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i26A < *((int *)((char *)$$PARM.this269 + 8))) goto lab_245;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_245:
    31 |        $$IRET14B = ((char *)*((char * *)$$PARM.this269) + (8ll)*((long long) $$PARM.i26A));
   187 |        $$RETDB = $$IRET14B;
                *$$SFX11 = *$$RETDB;
                $$RETDC = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   188 |        $$PARM.this28B = $$RETDC;
                $$PARM.i28C = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i28C < *((int *)((char *)$$PARM.this28B + 8))) goto lab_271;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_271:
    31 |        $$IRET15C = ((char *)*((char * *)$$PARM.this28B) + (8ll)*((long long) $$PARM.i28C));
   188 |        $$SFX12 = $$IRET15C;
                $$RETDD = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this273 = $$RETDD;
                $$PARM.i274 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i274 < *((int *)((char *)$$PARM.this273 + 8))) goto lab_251;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_251:
    31 |        $$IRET150 = ((char *)*((char * *)$$PARM.this273) + (8ll)*((long long) $$PARM.i274));
   188 |        $$RETDE = $$IRET150;
                *$$SFX12 = *$$RETDE;
   189 |        if (!(i % 2 == step % 2)) goto lab_16;
    81 |        &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
   208 |        __es.__c4@3 = 25u;
   192 |        MMSP::vector<int> MMSP::position<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 26u;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11799,&x);
                __es.__c4@3 = 27u;
                $$RETDF = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11799);
                $$PARM.this2F7 = $$RETDF;
                $$PARM.i2F8 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F8 < *((int *)((char *)$$PARM.this2F7 + 8))) goto lab_303;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_303:
    31 |        $$IRET192 = ((char *)*((char * *)$$PARM.this2F7) + (8ll)*((long long) $$PARM.i2F8));
   734 |        __12162 = $$IRET192;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_18;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_21;
   105 |        *grains._M_finish@8 = *__12162;
              lab_21:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_23;
              lab_18:
   686 |        __12158._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12158,__12162)
              lab_23:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1AC = &__11799;
    47 |        if (!(&__11799->(vector<int>).data@0.rns401.$$776 != NULL)) goto lab_175;
    48 |        operator delete[](void*)(&__11799->(vector<int>).data@0.rns401.$$776)
    49 |        &__11799->(vector<int>).data@0.rns401.$$776 = NULL;
    50 |      lab_175:
    51 |        $$IRETDF = $$PARM.this1AC;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11800,&x);
                __es.__c4@3 = 28u;
                $$RETE0 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11800);
                $$PARM.this2FB = $$RETE0;
                $$PARM.i2FC = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2FC < *((int *)((char *)$$PARM.this2FB + 8))) goto lab_305;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_305:
    31 |        $$IRET194 = ((char *)*((char * *)$$PARM.this2FB) + (8ll)*((long long) $$PARM.i2FC));
   734 |        __12176 = $$IRET194;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_24;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_27;
   105 |        *phases._M_finish@8 = *__12176;
              lab_27:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_29;
              lab_24:
   686 |        __12172._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12172,__12176)
              lab_29:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1AA = &__11800;
    47 |        if (!(&__11800->(vector<int>).data@0.rns401.$$781 != NULL)) goto lab_173;
    48 |        operator delete[](void*)(&__11800->(vector<int>).data@0.rns401.$$781)
    49 |        &__11800->(vector<int>).data@0.rns401.$$781 = NULL;
    50 |      lab_173:
    51 |        $$IRETDD = $$PARM.this1AA;
   195 |        $$PARM.iBF = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iBF < &x->(vector<int>).size@8.rns391.$$827) goto lab_125;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_125:
    31 |        $$IRET50 = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iBF));
   195 |        __12316 = $$IRET50;
                *__12316 = *__12316 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11801,&x);
                __es.__c4@3 = 29u;
                $$RETE1 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11801);
                $$PARM.this2F5 = $$RETE1;
                $$PARM.i2F6 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F6 < *((int *)((char *)$$PARM.this2F5 + 8))) goto lab_301;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_301:
    31 |        $$IRET191 = ((char *)*((char * *)$$PARM.this2F5) + (8ll)*((long long) $$PARM.i2F6));
   734 |        __12190 = $$IRET191;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_30;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_33;
   105 |        *grains._M_finish@8 = *__12190;
              lab_33:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_35;
              lab_30:
   686 |        __12186._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12186,__12190)
              lab_35:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A6 = &__11801;
    47 |        if (!(&__11801->(vector<int>).data@0.rns401.$$787 != NULL)) goto lab_171;
    48 |        operator delete[](void*)(&__11801->(vector<int>).data@0.rns401.$$787)
    49 |        &__11801->(vector<int>).data@0.rns401.$$787 = NULL;
    50 |      lab_171:
    51 |        $$IRETD9 = $$PARM.this1A6;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11802,&x);
                __es.__c4@3 = 30u;
                $$RETE2 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11802);
                $$PARM.this2EF = $$RETE2;
                $$PARM.i2F0 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F0 < *((int *)((char *)$$PARM.this2EF + 8))) goto lab_295;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_295:
    31 |        $$IRET18E = ((char *)*((char * *)$$PARM.this2EF) + (8ll)*((long long) $$PARM.i2F0));
   734 |        __12204 = $$IRET18E;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_36;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_39;
   105 |        *phases._M_finish@8 = *__12204;
              lab_39:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_41;
              lab_36:
   686 |        __12200._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12200,__12204)
              lab_41:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1BA = &__11802;
    47 |        if (!(&__11802->(vector<int>).data@0.rns401.$$792 != NULL)) goto lab_191;
    48 |        operator delete[](void*)(&__11802->(vector<int>).data@0.rns401.$$792)
    49 |        &__11802->(vector<int>).data@0.rns401.$$792 = NULL;
    50 |      lab_191:
    51 |        $$IRETED = $$PARM.this1BA;
   198 |        $$PARM.iB5 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB5 < &x->(vector<int>).size@8.rns391.$$827) goto lab_117;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_117:
    31 |        $$IRET4B = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iB5));
   198 |        __12318 = $$IRET4B;
                *__12318 = *__12318 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11803,&x);
                __es.__c4@3 = 31u;
                $$RETE3 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11803);
                $$PARM.this2D9 = $$RETE3;
                $$PARM.i2DA = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2DA < *((int *)((char *)$$PARM.this2D9 + 8))) goto lab_283;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_283:
    31 |        $$IRET183 = ((char *)*((char * *)$$PARM.this2D9) + (8ll)*((long long) $$PARM.i2DA));
   734 |        __12218 = $$IRET183;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_42;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_45;
   105 |        *grains._M_finish@8 = *__12218;
              lab_45:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_47;
              lab_42:
   686 |        __12214._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12214,__12218)
              lab_47:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A1 = &__11803;
    47 |        if (!(&__11803->(vector<int>).data@0.rns401.$$798 != NULL)) goto lab_165;
    48 |        operator delete[](void*)(&__11803->(vector<int>).data@0.rns401.$$798)
    49 |        &__11803->(vector<int>).data@0.rns401.$$798 = NULL;
    50 |      lab_165:
    51 |        $$IRETD4 = $$PARM.this1A1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11804,&x);
                __es.__c4@3 = 32u;
                $$RETE4 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11804);
                $$PARM.this2E3 = $$RETE4;
                $$PARM.i2E4 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E4 < *((int *)((char *)$$PARM.this2E3 + 8))) goto lab_291;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_291:
    31 |        $$IRET188 = ((char *)*((char * *)$$PARM.this2E3) + (8ll)*((long long) $$PARM.i2E4));
   734 |        __12232 = $$IRET188;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_48;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_51;
   105 |        *phases._M_finish@8 = *__12232;
              lab_51:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_53;
              lab_48:
   686 |        __12228._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12228,__12232)
              lab_53:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B0 = &__11804;
    47 |        if (!(&__11804->(vector<int>).data@0.rns401.$$803 != NULL)) goto lab_179;
    48 |        operator delete[](void*)(&__11804->(vector<int>).data@0.rns401.$$803)
    49 |        &__11804->(vector<int>).data@0.rns401.$$803 = NULL;
    50 |      lab_179:
    51 |        $$IRETE3 = $$PARM.this1B0;
   201 |        $$PARM.iB7 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB7 < &x->(vector<int>).size@8.rns391.$$827) goto lab_119;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_119:
    31 |        $$IRET4C = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iB7));
   201 |        __12319 = $$IRET4C;
                *__12319 = *__12319 + 1;
   202 |        $$PARM.iBB = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iBB < &x->(vector<int>).size@8.rns391.$$827) goto lab_121;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_121:
    31 |        $$IRET4E = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iBB));
   202 |        __12321 = $$IRET4E;
                *__12321 = *__12321 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11805,&x);
                __es.__c4@3 = 33u;
                $$RETE5 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11805);
                $$PARM.this2D7 = $$RETE5;
                $$PARM.i2D8 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D8 < *((int *)((char *)$$PARM.this2D7 + 8))) goto lab_281;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_281:
    31 |        $$IRET182 = ((char *)*((char * *)$$PARM.this2D7) + (8ll)*((long long) $$PARM.i2D8));
   734 |        __12246 = $$IRET182;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_54;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_57;
   105 |        *grains._M_finish@8 = *__12246;
              lab_57:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_59;
              lab_54:
   686 |        __12242._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12242,__12246)
              lab_59:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B8 = &__11805;
    47 |        if (!(&__11805->(vector<int>).data@0.rns401.$$810 != NULL)) goto lab_187;
    48 |        operator delete[](void*)(&__11805->(vector<int>).data@0.rns401.$$810)
    49 |        &__11805->(vector<int>).data@0.rns401.$$810 = NULL;
    50 |      lab_187:
    51 |        $$IRETEB = $$PARM.this1B8;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11806,&x);
                __es.__c4@3 = 34u;
                $$RETE6 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11806);
                $$PARM.this2DB = $$RETE6;
                $$PARM.i2DC = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2DC < *((int *)((char *)$$PARM.this2DB + 8))) goto lab_285;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_285:
    31 |        $$IRET184 = ((char *)*((char * *)$$PARM.this2DB) + (8ll)*((long long) $$PARM.i2DC));
   734 |        __12260 = $$IRET184;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_60;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_63;
   105 |        *phases._M_finish@8 = *__12260;
              lab_63:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_65;
              lab_60:
   686 |        __12256._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12256,__12260)
              lab_65:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B6 = &__11806;
    47 |        if (!(&__11806->(vector<int>).data@0.rns401.$$815 != NULL)) goto lab_185;
    48 |        operator delete[](void*)(&__11806->(vector<int>).data@0.rns401.$$815)
    49 |        &__11806->(vector<int>).data@0.rns401.$$815 = NULL;
    50 |      lab_185:
    51 |        $$IRETE9 = $$PARM.this1B6;
   205 |        $$PARM.iBD = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iBD < &x->(vector<int>).size@8.rns391.$$827) goto lab_123;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_123:
    31 |        $$IRET4F = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iBD));
   205 |        __12323 = $$IRET4F;
                *__12323 = *__12323 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11807,&x);
                __es.__c4@3 = 35u;
                $$RETE7 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11807);
                $$PARM.this2DF = $$RETE7;
                $$PARM.i2E0 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E0 < *((int *)((char *)$$PARM.this2DF + 8))) goto lab_289;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_289:
    31 |        $$IRET186 = ((char *)*((char * *)$$PARM.this2DF) + (8ll)*((long long) $$PARM.i2E0));
   734 |        __12274 = $$IRET186;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_66;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_69;
   105 |        *grains._M_finish@8 = *__12274;
              lab_69:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_71;
              lab_66:
   686 |        __12270._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12270,__12274)
              lab_71:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1AD = &__11807;
    47 |        if (!(&__11807->(vector<int>).data@0.rns401.$$821 != NULL)) goto lab_177;
    48 |        operator delete[](void*)(&__11807->(vector<int>).data@0.rns401.$$821)
    49 |        &__11807->(vector<int>).data@0.rns401.$$821 = NULL;
    50 |      lab_177:
    51 |        $$IRETE0 = $$PARM.this1AD;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11808,&x);
                __es.__c4@3 = 36u;
                $$RETE8 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11808);
                $$PARM.this2ED = $$RETE8;
                $$PARM.i2EE = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2EE < *((int *)((char *)$$PARM.this2ED + 8))) goto lab_293;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_293:
    31 |        $$IRET18D = ((char *)*((char * *)$$PARM.this2ED) + (8ll)*((long long) $$PARM.i2EE));
   734 |        __12288 = $$IRET18D;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_72;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_75;
   105 |        *phases._M_finish@8 = *__12288;
              lab_75:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_77;
              lab_72:
   686 |        __12284._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12284,__12288)
              lab_77:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A2 = &__11808;
    47 |        if (!(&__11808->(vector<int>).data@0.rns401.$$826 != NULL)) goto lab_167;
    48 |        operator delete[](void*)(&__11808->(vector<int>).data@0.rns401.$$826)
    49 |        &__11808->(vector<int>).data@0.rns401.$$826 = NULL;
    50 |      lab_167:
    51 |        $$IRETD5 = $$PARM.this1A2;
   208 |        $$PARM.iB3 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB3 < &x->(vector<int>).size@8.rns391.$$827) goto lab_115;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_115:
    31 |        $$IRET4A = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iB3));
   208 |        __12324 = $$IRET4A;
                *__12324 = *__12324 + 1;
   209 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11809,&x);
                __es.__c4@3 = 37u;
                $$RETE9 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11809);
                $$PARM.this2DD = $$RETE9;
                $$PARM.i2DE = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2DE < *((int *)((char *)$$PARM.this2DD + 8))) goto lab_287;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_287:
    31 |        $$IRET185 = ((char *)*((char * *)$$PARM.this2DD) + (8ll)*((long long) $$PARM.i2DE));
   209 |        $$RETEA = $$IRET185;
                std::vector<double, std::allocator<double> > MMSP::dE<double>(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)(&deltas,*$$RETEA,&phases,&grains)
                __es.__c4@3 = 26u;
                $$PARM.this1B2 = &__11809;
    47 |        if (!(&__11809->(vector<int>).data@0.rns401.$$832 != NULL)) goto lab_183;
    48 |        operator delete[](void*)(&__11809->(vector<int>).data@0.rns401.$$832)
    49 |        &__11809->(vector<int>).data@0.rns401.$$832 = NULL;
    50 |      lab_183:
    51 |        $$IRETE5 = $$PARM.this1B2;
   209 |        __es.__c4@3 = 38u;
                $$RETEB = rand();
   611 |        if (!(*((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull))) <  0.0000000000000000E+000)) goto lab_78;
   212 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11811,&x);
                __es.__c4@3 = 39u;
                $$RETEC = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11811);
                $$PARM.this2F3 = $$RETEC;
                $$PARM.i2F4 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F4 < *((int *)((char *)$$PARM.this2F3 + 8))) goto lab_299;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_299:
    31 |        $$IRET190 = ((char *)*((char * *)$$PARM.this2F3) + (8ll)*((long long) $$PARM.i2F4));
   212 |        $$BDD3 = $$IRET190;
   611 |        *$$BDD3 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1B9 = &__11811;
    47 |        if (!(&__11811->(vector<int>).data@0.rns401.$$850 != NULL)) goto lab_189;
    48 |        operator delete[](void*)(&__11811->(vector<int>).data@0.rns401.$$850)
    49 |        &__11811->(vector<int>).data@0.rns401.$$850 = NULL;
    50 |      lab_189:
    51 |        $$IRETEC = $$PARM.this1B9;
   213 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11812,&x);
                __es.__c4@3 = 40u;
                $$RETED = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11812);
                $$PARM.this2F1 = $$RETED;
                $$PARM.i2F2 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F2 < *((int *)((char *)$$PARM.this2F1 + 8))) goto lab_297;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_297:
    31 |        $$IRET18F = ((char *)*((char * *)$$PARM.this2F1) + (8ll)*((long long) $$PARM.i2F2));
   213 |        $$BDD4 = $$IRET18F;
   611 |        *$$BDD4 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1A5 = &__11812;
    47 |        if (!(&__11812->(vector<int>).data@0.rns401.$$854 != NULL)) goto lab_169;
    48 |        operator delete[](void*)(&__11812->(vector<int>).data@0.rns401.$$854)
    49 |        &__11812->(vector<int>).data@0.rns401.$$854 = NULL;
    50 |      lab_169:
    51 |        $$IRETD8 = $$PARM.this1A5;
   214 |        goto lab_80;
              lab_78:
                $$RETEE = (double) rand();
   611 |        if (!($$RETEE /  2.1474836470000000E+009 < __exp@1(- *((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)))))) goto lab_81;
   216 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11813,&x);
                __es.__c4@3 = 41u;
                $$RETEF = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11813);
                $$PARM.this305 = $$RETEF;
                $$PARM.i306 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i306 < *((int *)((char *)$$PARM.this305 + 8))) goto lab_309;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_309:
    31 |        $$IRET199 = ((char *)*((char * *)$$PARM.this305) + (8ll)*((long long) $$PARM.i306));
   216 |        $$BDD6 = $$IRET199;
   611 |        *$$BDD6 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1C3 = &__11813;
    47 |        if (!(&__11813->(vector<int>).data@0.rns401.$$842 != NULL)) goto lab_195;
    48 |        operator delete[](void*)(&__11813->(vector<int>).data@0.rns401.$$842)
    49 |        &__11813->(vector<int>).data@0.rns401.$$842 = NULL;
    50 |      lab_195:
    51 |        $$IRETF6 = $$PARM.this1C3;
   217 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11814,&x);
                __es.__c4@3 = 42u;
                $$RETF0 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11814);
                $$PARM.this303 = $$RETF0;
                $$PARM.i304 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i304 < *((int *)((char *)$$PARM.this303 + 8))) goto lab_307;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_307:
    31 |        $$IRET198 = ((char *)*((char * *)$$PARM.this303) + (8ll)*((long long) $$PARM.i304));
   217 |        $$BDD7 = $$IRET198;
   611 |        *$$BDD7 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1C2 = &__11814;
    47 |        if (!(&__11814->(vector<int>).data@0.rns401.$$846 != NULL)) goto lab_193;
    48 |        operator delete[](void*)(&__11814->(vector<int>).data@0.rns401.$$846)
    49 |        &__11814->(vector<int>).data@0.rns401.$$846 = NULL;
    50 |      lab_193:
    51 |        $$IRETF5 = $$PARM.this1C2;
   218 |      lab_81:
              lab_80:
   219 |        __es.__c4@3 = 26u;
                $$PARM.this3FC = &deltas;
   145 |        if (!(deltas._M_start@0 != NULL)) goto lab_323;
    95 |        operator delete(void*)(deltas._M_start@0)
   110 |      lab_323:
   132 |        $$PARM.this226 = $$PARM.this3FC;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FC;
   314 |        $$IRET20E = $$PARM.this3FC;
   219 |        __es.__c4@3 = 25u;
                $$PARM.this1B1 = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$836 != NULL)) goto lab_181;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$836)
    49 |        &x->(vector<int>).data@0.rns401.$$836 = NULL;
    50 |      lab_181:
    51 |        $$IRETE4 = $$PARM.this1B1;
   219 |        __es.__c4@3 = 23u;
                $$PARM.this3FD = &phases;
   145 |        if (!(phases._M_start@0 != NULL)) goto lab_329;
    95 |        operator delete(void*)(phases._M_start@0)
   110 |      lab_329:
   132 |        $$PARM.this226 = $$PARM.this3FD;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FD;
   314 |        $$IRET20F = $$PARM.this3FD;
   219 |        __es.__c4@3 = 2u;
                $$PARM.this3F9 = &grains;
   145 |        if (!(grains._M_start@0 != NULL)) goto lab_317;
    95 |        operator delete(void*)(grains._M_start@0)
   110 |      lab_317:
   132 |        $$PARM.this226 = $$PARM.this3F9;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3F9;
   314 |        $$IRET20B = $$PARM.this3F9;
   219 |      lab_16:
   186 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~13 */
            lab_15:
   223 |      void MMSP::swap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&, MMSP::grid<2, MMSP::vector<double> >&)(oldGrid,&newGrid)
   224 |      void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(oldGrid)
   225 |      __es.__c4@3 = 1u;
              MMSP::grid<2, MMSP::vector<double> >::~grid()(&c_storage);
   126 |      step = step + 1;
            } while (step < steps);    /* ~2 */
          lab_4:
   227 |    iterations = iterations + 1;
   228 |    __es.__c4@3 = 0u;
            MMSP::grid<2, MMSP::vector<double> >::~grid()(&newGrid);
            return;
          } /* function */ 


   102 |  void void MMSP::update<3, double>(MMSP::grid<3, MMSP::vector<double> >&, int)(grid<3,MMSP::vector<double> > *oldGrid, int steps)
   103 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   105 |    guard_iterations5 = 1;
   112 |    void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(oldGrid)
   114 |    MMSP::grid<3, MMSP::vector<double> >::grid(MMSP::grid<3, MMSP::vector<double> > const&)(&newGrid,oldGrid);
            __es.__c4@3 = 1u;
   637 |    *((long long *)((char *)&std::cout + 8 + ((long long *)(&std::cout->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8])) = 2ll;
   122 |    void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(oldGrid)
   126 |    step = 0;
            if (!(0 < steps)) goto lab_4;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 312 */
   128 |      MMSP::print_progress(int, int)(step,steps)
   130 |      MMSP::grid<3, MMSP::vector<double> >::grid(MMSP::grid<3, MMSP::vector<double> > const&)(&c_storage,oldGrid);
              __es.__c4@3 = 2u;
   132 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_9;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 304 */
   133 |        MMSP::vector<int> MMSP::position<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 3u;
   134 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12327,&x);
                __es.__c4@3 = 4u;
                $$RETF1 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12327);
                $$PARM.this2AF = $$RETF1;
                $$PARM.i2B0 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B0 < *((int *)((char *)$$PARM.this2AF + 8))) goto lab_279;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_279:
    31 |        $$IRET16E = ((char *)*((char * *)$$PARM.this2AF) + (8ll)*((long long) $$PARM.i2B0));
   134 |        center = $$IRET16E;
                __es.__c4@3 = 3u;
                $$PARM.this178 = &__12327;
    47 |        if (!(&__12327->(vector<int>).data@0.rns401.$$1093 != NULL)) goto lab_143;
    48 |        operator delete[](void*)(&__12327->(vector<int>).data@0.rns401.$$1093)
    49 |        &__12327->(vector<int>).data@0.rns401.$$1093 = NULL;
    50 |      lab_143:
    51 |        $$IRETAB = $$PARM.this178;
   135 |        $$SFX13 = *center;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12328,&x);
                __es.__c4@3 = 5u;
                $$RETF2 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12328);
                $$PARM.this2A9 = $$RETF2;
                $$PARM.i2AA = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2AA < *((int *)((char *)$$PARM.this2A9 + 8))) goto lab_273;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_273:
    31 |        $$IRET16B = ((char *)*((char * *)$$PARM.this2A9) + (8ll)*((long long) $$PARM.i2AA));
   135 |        $$RETF3 = $$IRET16B;
                __12329 = double MMSP::f<double>(double, double)($$SFX13,*$$RETF3);
                __es.__c4@3 = 3u;
                $$PARM.this176 = &__12328;
    47 |        if (!(&__12328->(vector<int>).data@0.rns401.$$1098 != NULL)) goto lab_139;
    48 |        operator delete[](void*)(&__12328->(vector<int>).data@0.rns401.$$1098)
    49 |        &__12328->(vector<int>).data@0.rns401.$$1098 = NULL;
    50 |      lab_139:
    51 |        $$IRETA9 = $$PARM.this176;
   136 |        $$PARM.i67 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i67 < &x->(vector<int>).size@8.rns391.$$1120) goto lab_113;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_113:
    31 |        $$IRET24 = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i67));
   136 |        __12846 = $$IRET24;
                *__12846 = *__12846 + 1;
   137 |        $$PARM.this1EE = &__12330;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1100;
   137 |        $$RET13A = $$IRET104;
    17 |        &__12330->(vector<int>).size@8.rns397.$$1100 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12330->(vector<int>).data@0.rns398.$$1100 = $$RET13B;
    19 |        if (!(0 < &__12330->(vector<int>).size@8.rns397.$$1100)) goto lab_222;
                i = 0;
                do {   /* id=9 guarded */ /* ~223 */ 
                  /* region = 302 */
    20 |          $$SFX1C = ((char *)&__12330->(vector<int>).data@0.rns398.$$1100 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1100) goto lab_224;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_224:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1100 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12330->(vector<int>).size@8.rns397.$$1100);    /* ~223 */
              lab_222:
    21 |        $$IRET111 = $$PARM.this1EE;
   137 |        __es.__c4@3 = 6u;
                $$RETF4 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12330);
                $$PARM.this29F = $$RETF4;
                $$PARM.i2A0 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A0 < *((int *)((char *)$$PARM.this29F + 8))) goto lab_263;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_263:
    31 |        $$IRET166 = ((char *)*((char * *)$$PARM.this29F) + (8ll)*((long long) $$PARM.i2A0));
   137 |        right = $$IRET166;
                __es.__c4@3 = 3u;
                $$PARM.this172 = &__12330;
    47 |        if (!(&__12330->(vector<int>).data@0.rns401.$$1103 != NULL)) goto lab_131;
    48 |        operator delete[](void*)(&__12330->(vector<int>).data@0.rns401.$$1103)
    49 |        &__12330->(vector<int>).data@0.rns401.$$1103 = NULL;
    50 |      lab_131:
    51 |        $$IRETA5 = $$PARM.this172;
   138 |        $$SFX14 = *right;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12331,&x);
                __es.__c4@3 = 7u;
                $$RETF5 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12331);
                $$PARM.this297 = $$RETF5;
                $$PARM.i298 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i298 < *((int *)((char *)$$PARM.this297 + 8))) goto lab_255;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_255:
    31 |        $$IRET162 = ((char *)*((char * *)$$PARM.this297) + (8ll)*((long long) $$PARM.i298));
   138 |        $$RETF6 = $$IRET162;
                __12332 = double MMSP::f<double>(double, double)($$SFX14,*$$RETF6);
                __es.__c4@3 = 3u;
                $$PARM.this175 = &__12331;
    47 |        if (!(&__12331->(vector<int>).data@0.rns401.$$1108 != NULL)) goto lab_137;
    48 |        operator delete[](void*)(&__12331->(vector<int>).data@0.rns401.$$1108)
    49 |        &__12331->(vector<int>).data@0.rns401.$$1108 = NULL;
    50 |      lab_137:
    51 |        $$IRETA8 = $$PARM.this175;
   139 |        $$PARM.i5F = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i5F < &x->(vector<int>).size@8.rns391.$$1120) goto lab_105;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_105:
    31 |        $$IRET20 = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i5F));
   139 |        __12848 = $$IRET20;
                *__12848 = *__12848 - 2;
   140 |        $$PARM.this1E2 = &__12333;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1110;
   140 |        $$RET13A = $$IRET104;
    17 |        &__12333->(vector<int>).size@8.rns397.$$1110 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12333->(vector<int>).data@0.rns398.$$1110 = $$RET13B;
    19 |        if (!(0 < &__12333->(vector<int>).size@8.rns397.$$1110)) goto lab_204;
                i = 0;
                do {   /* id=6 guarded */ /* ~205 */ 
                  /* region = 303 */
    20 |          $$SFX1C = ((char *)&__12333->(vector<int>).data@0.rns398.$$1110 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1110) goto lab_206;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_206:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1110 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12333->(vector<int>).size@8.rns397.$$1110);    /* ~205 */
              lab_204:
    21 |        $$IRET10B = $$PARM.this1E2;
   140 |        __es.__c4@3 = 8u;
                $$RETF7 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12333);
                $$PARM.this289 = $$RETF7;
                $$PARM.i28A = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i28A < *((int *)((char *)$$PARM.this289 + 8))) goto lab_251;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_251:
    31 |        $$IRET15B = ((char *)*((char * *)$$PARM.this289) + (8ll)*((long long) $$PARM.i28A));
   140 |        left = $$IRET15B;
                __es.__c4@3 = 3u;
                $$PARM.this171 = &__12333;
    47 |        if (!(&__12333->(vector<int>).data@0.rns401.$$1113 != NULL)) goto lab_129;
    48 |        operator delete[](void*)(&__12333->(vector<int>).data@0.rns401.$$1113)
    49 |        &__12333->(vector<int>).data@0.rns401.$$1113 = NULL;
    50 |      lab_129:
    51 |        $$IRETA4 = $$PARM.this171;
   141 |        $$SFX15 = *left;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12334,&x);
                __es.__c4@3 = 9u;
                $$RETF8 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12334);
                $$PARM.this281 = $$RETF8;
                $$PARM.i282 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i282 < *((int *)((char *)$$PARM.this281 + 8))) goto lab_249;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_249:
    31 |        $$IRET157 = ((char *)*((char * *)$$PARM.this281) + (8ll)*((long long) $$PARM.i282));
   141 |        $$RETF9 = $$IRET157;
                __12335 = double MMSP::f<double>(double, double)($$SFX15,*$$RETF9);
                __es.__c4@3 = 3u;
                $$PARM.this173 = &__12334;
    47 |        if (!(&__12334->(vector<int>).data@0.rns401.$$1118 != NULL)) goto lab_133;
    48 |        operator delete[](void*)(&__12334->(vector<int>).data@0.rns401.$$1118)
    49 |        &__12334->(vector<int>).data@0.rns401.$$1118 = NULL;
    50 |      lab_133:
    51 |        $$IRETA6 = $$PARM.this173;
   142 |        $$PARM.i5D = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i5D < &x->(vector<int>).size@8.rns391.$$1120) goto lab_103;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_103:
    31 |        $$IRET1F = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i5D));
   142 |        __12849 = $$IRET1F;
                *__12849 = *__12849 + 1;
   143 |        $$PARM.i5B = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i5B < &x->(vector<int>).size@8.rns391.$$1120) goto lab_101;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_101:
    31 |        $$IRET1E = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i5B));
   143 |        __12851 = $$IRET1E;
                *__12851 = *__12851 + 1;
   144 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12336,&x);
                __es.__c4@3 = 10u;
                $$RETFA = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12336);
                $$PARM.this295 = $$RETFA;
                $$PARM.i296 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i296 < *((int *)((char *)$$PARM.this295 + 8))) goto lab_253;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_253:
    31 |        $$IRET161 = ((char *)*((char * *)$$PARM.this295) + (8ll)*((long long) $$PARM.i296));
   144 |        up = $$IRET161;
                __es.__c4@3 = 3u;
                $$PARM.this174 = &__12336;
    47 |        if (!(&__12336->(vector<int>).data@0.rns401.$$1124 != NULL)) goto lab_135;
    48 |        operator delete[](void*)(&__12336->(vector<int>).data@0.rns401.$$1124)
    49 |        &__12336->(vector<int>).data@0.rns401.$$1124 = NULL;
    50 |      lab_135:
    51 |        $$IRETA7 = $$PARM.this174;
   145 |        $$SFX16 = *up;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12337,&x);
                __es.__c4@3 = 11u;
                $$RETFB = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12337);
                $$PARM.this26D = $$RETFB;
                $$PARM.i26E = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i26E < *((int *)((char *)$$PARM.this26D + 8))) goto lab_245;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_245:
    31 |        $$IRET14D = ((char *)*((char * *)$$PARM.this26D) + (8ll)*((long long) $$PARM.i26E));
   145 |        $$RETFC = $$IRET14D;
                __12338 = double MMSP::f<double>(double, double)($$SFX16,*$$RETFC);
                __es.__c4@3 = 3u;
                $$PARM.this177 = &__12337;
    47 |        if (!(&__12337->(vector<int>).data@0.rns401.$$1129 != NULL)) goto lab_141;
    48 |        operator delete[](void*)(&__12337->(vector<int>).data@0.rns401.$$1129)
    49 |        &__12337->(vector<int>).data@0.rns401.$$1129 = NULL;
    50 |      lab_141:
    51 |        $$IRETAA = $$PARM.this177;
   146 |        $$PARM.i65 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i65 < &x->(vector<int>).size@8.rns391.$$1120) goto lab_111;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_111:
    31 |        $$IRET23 = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i65));
   146 |        __12853 = $$IRET23;
                *__12853 = *__12853 - 2;
   147 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12339,&x);
                __es.__c4@3 = 12u;
                $$RETFD = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12339);
                $$PARM.this271 = $$RETFD;
                $$PARM.i272 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i272 < *((int *)((char *)$$PARM.this271 + 8))) goto lab_247;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_247:
    31 |        $$IRET14F = ((char *)*((char * *)$$PARM.this271) + (8ll)*((long long) $$PARM.i272));
   147 |        down = $$IRET14F;
                __es.__c4@3 = 3u;
                $$PARM.this179 = &__12339;
    47 |        if (!(&__12339->(vector<int>).data@0.rns401.$$1134 != NULL)) goto lab_145;
    48 |        operator delete[](void*)(&__12339->(vector<int>).data@0.rns401.$$1134)
    49 |        &__12339->(vector<int>).data@0.rns401.$$1134 = NULL;
    50 |      lab_145:
    51 |        $$IRETAC = $$PARM.this179;
   148 |        $$SFX17 = *down;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12340,&x);
                __es.__c4@3 = 13u;
                $$RETFE = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12340);
                $$PARM.this259 = $$RETFE;
                $$PARM.i25A = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i25A < *((int *)((char *)$$PARM.this259 + 8))) goto lab_243;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_243:
    31 |        $$IRET143 = ((char *)*((char * *)$$PARM.this259) + (8ll)*((long long) $$PARM.i25A));
   148 |        $$RETFF = $$IRET143;
                __12341 = double MMSP::f<double>(double, double)($$SFX17,*$$RETFF);
                __es.__c4@3 = 3u;
                $$PARM.this17D = &__12340;
    47 |        if (!(&__12340->(vector<int>).data@0.rns401.$$1139 != NULL)) goto lab_149;
    48 |        operator delete[](void*)(&__12340->(vector<int>).data@0.rns401.$$1139)
    49 |        &__12340->(vector<int>).data@0.rns401.$$1139 = NULL;
    50 |      lab_149:
    51 |        $$IRETB0 = $$PARM.this17D;
   149 |        $$PARM.i63 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i63 < &x->(vector<int>).size@8.rns391.$$1120) goto lab_109;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_109:
    31 |        $$IRET22 = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i63));
   149 |        __12854 = $$IRET22;
                *__12854 = *__12854 + 1;
                $$RET100 = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this24F = $$RET100;
                $$PARM.i250 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i250 < *((int *)((char *)$$PARM.this24F + 8))) goto lab_241;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_241:
    31 |        $$IRET13E = ((char *)*((char * *)$$PARM.this24F) + (8ll)*((long long) $$PARM.i250));
   149 |        $$RET101 = $$IRET13E;
   150 |        *$$RET101 = _fnmsub@53( 4.0000000000000000E+000,*center,((*left + *right) + *up) + *down) / (((double *)((char *)oldGrid + 144))[0ll] * ((double *)((char *)oldGrid + 144))[0ll]);
                $$RET102 = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this24B = $$RET102;
                $$PARM.i24C = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i24C < *((int *)((char *)$$PARM.this24B + 8))) goto lab_239;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_239:
    31 |        $$IRET13C = ((char *)*((char * *)$$PARM.this24B) + (8ll)*((long long) $$PARM.i24C));
   150 |        $$RET103 = $$IRET13C;
   151 |        *$$RET103 = _fnmsub@53( 4.0000000000000000E+000,&__12329->(double),((&__12335->(double) + &__12332->(double)) + &__12338->(double)) + &__12341->(double)) / (((double *)((char *)oldGrid + 144))[0ll] * ((double *)((char *)oldGrid + 144))[0ll]);
   153 |        __es.__c4@3 = 2u;
                $$PARM.this17F = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$1145 != NULL)) goto lab_153;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$1145)
    49 |        &x->(vector<int>).data@0.rns401.$$1145 = NULL;
    50 |      lab_153:
    51 |        $$IRETB2 = $$PARM.this17F;
   132 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~7 */
            lab_9:
   156 |      void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(&c_storage)
   157 |      void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(oldGrid)
   159 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_12;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 310 */
   160 |        MMSP::vector<int> MMSP::position<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 14u;
   161 |        $$PARM.this1D8 = &__12343;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1053;
   161 |        $$RET13A = $$IRET104;
    17 |        &__12343->(vector<int>).size@8.rns397.$$1053 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12343->(vector<int>).data@0.rns398.$$1053 = $$RET13B;
    19 |        if (!(0 < &__12343->(vector<int>).size@8.rns397.$$1053)) goto lab_198;
                i = 0;
                do {   /* id=5 guarded */ /* ~199 */ 
                  /* region = 305 */
    20 |          $$SFX1C = ((char *)&__12343->(vector<int>).data@0.rns398.$$1053 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1053) goto lab_200;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_200:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1053 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12343->(vector<int>).size@8.rns397.$$1053);    /* ~199 */
              lab_198:
    21 |        $$IRET106 = $$PARM.this1D8;
   161 |        __es.__c4@3 = 15u;
                oldX = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12343);
                __es.__c4@3 = 14u;
                $$PARM.this186 = &__12343;
    47 |        if (!(&__12343->(vector<int>).data@0.rns401.$$1055 != NULL)) goto lab_163;
    48 |        operator delete[](void*)(&__12343->(vector<int>).data@0.rns401.$$1055)
    49 |        &__12343->(vector<int>).data@0.rns401.$$1055 = NULL;
    50 |      lab_163:
    51 |        $$IRETB9 = $$PARM.this186;
   162 |        $$PARM.this1E6 = &__12344;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1056;
   162 |        $$RET13A = $$IRET104;
    17 |        &__12344->(vector<int>).size@8.rns397.$$1056 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12344->(vector<int>).data@0.rns398.$$1056 = $$RET13B;
    19 |        if (!(0 < &__12344->(vector<int>).size@8.rns397.$$1056)) goto lab_210;
                i = 0;
                do {   /* id=7 guarded */ /* ~211 */ 
                  /* region = 306 */
    20 |          $$SFX1C = ((char *)&__12344->(vector<int>).data@0.rns398.$$1056 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1056) goto lab_212;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_212:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1056 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12344->(vector<int>).size@8.rns397.$$1056);    /* ~211 */
              lab_210:
    21 |        $$IRET10D = $$PARM.this1E6;
   162 |        __es.__c4@3 = 16u;
                csX = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12344);
                __es.__c4@3 = 14u;
                $$PARM.this170 = &__12344;
    47 |        if (!(&__12344->(vector<int>).data@0.rns401.$$1058 != NULL)) goto lab_127;
    48 |        operator delete[](void*)(&__12344->(vector<int>).data@0.rns401.$$1058)
    49 |        &__12344->(vector<int>).data@0.rns401.$$1058 = NULL;
    50 |      lab_127:
    51 |        $$IRETA3 = $$PARM.this170;
   163 |        $$PARM.this1EC = &__12345;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1059;
   163 |        $$RET13A = $$IRET104;
    17 |        &__12345->(vector<int>).size@8.rns397.$$1059 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12345->(vector<int>).data@0.rns398.$$1059 = $$RET13B;
    19 |        if (!(0 < &__12345->(vector<int>).size@8.rns397.$$1059)) goto lab_216;
                i = 0;
                do {   /* id=8 guarded */ /* ~217 */ 
                  /* region = 307 */
    20 |          $$SFX1C = ((char *)&__12345->(vector<int>).data@0.rns398.$$1059 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1059) goto lab_218;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_218:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1059 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12345->(vector<int>).size@8.rns397.$$1059);    /* ~217 */
              lab_216:
    21 |        $$IRET110 = $$PARM.this1EC;
   163 |        __es.__c4@3 = 17u;
                newX = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12345);
                __es.__c4@3 = 14u;
                $$PARM.this185 = &__12345;
    47 |        if (!(&__12345->(vector<int>).data@0.rns401.$$1061 != NULL)) goto lab_161;
    48 |        operator delete[](void*)(&__12345->(vector<int>).data@0.rns401.$$1061)
    49 |        &__12345->(vector<int>).data@0.rns401.$$1061 = NULL;
    50 |      lab_161:
    51 |        $$IRETB8 = $$PARM.this185;
   166 |        $$PARM.i61 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i61 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_107;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_107:
    31 |        $$IRET21 = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i61));
   166 |        __12857 = $$IRET21;
                *__12857 = *__12857 + 1;
   167 |        $$PARM.this1F2 = &__12346;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1063;
   167 |        $$RET13A = $$IRET104;
    17 |        &__12346->(vector<int>).size@8.rns397.$$1063 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12346->(vector<int>).data@0.rns398.$$1063 = $$RET13B;
    19 |        if (!(0 < &__12346->(vector<int>).size@8.rns397.$$1063)) goto lab_228;
                i = 0;
                do {   /* id=10 guarded */ /* ~229 */ 
                  /* region = 308 */
    20 |          $$SFX1C = ((char *)&__12346->(vector<int>).data@0.rns398.$$1063 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1063) goto lab_230;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_230:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1063 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12346->(vector<int>).size@8.rns397.$$1063);    /* ~229 */
              lab_228:
    21 |        $$IRET113 = $$PARM.this1F2;
   167 |        __es.__c4@3 = 18u;
                $$RET104 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12346);
                $$PARM.this29B = $$RET104;
                $$PARM.i29C = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i29C < *((int *)((char *)$$PARM.this29B + 8))) goto lab_259;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_259:
    31 |        $$IRET164 = ((char *)*((char * *)$$PARM.this29B) + (8ll)*((long long) $$PARM.i29C));
   167 |        right = $$IRET164;
                __es.__c4@3 = 14u;
                $$PARM.this184 = &__12346;
    47 |        if (!(&__12346->(vector<int>).data@0.rns401.$$1066 != NULL)) goto lab_159;
    48 |        operator delete[](void*)(&__12346->(vector<int>).data@0.rns401.$$1066)
    49 |        &__12346->(vector<int>).data@0.rns401.$$1066 = NULL;
    50 |      lab_159:
    51 |        $$IRETB7 = $$PARM.this184;
   168 |        $$PARM.i51 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i51 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_91;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_91:
    31 |        $$IRET19 = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i51));
   168 |        __12859 = $$IRET19;
                *__12859 = *__12859 - 2;
   169 |        $$PARM.this1F4 = &__12347;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1068;
   169 |        $$RET13A = $$IRET104;
    17 |        &__12347->(vector<int>).size@8.rns397.$$1068 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12347->(vector<int>).data@0.rns398.$$1068 = $$RET13B;
    19 |        if (!(0 < &__12347->(vector<int>).size@8.rns397.$$1068)) goto lab_234;
                i = 0;
                do {   /* id=11 guarded */ /* ~235 */ 
                  /* region = 309 */
    20 |          $$SFX1C = ((char *)&__12347->(vector<int>).data@0.rns398.$$1068 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1068) goto lab_236;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_236:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1068 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12347->(vector<int>).size@8.rns397.$$1068);    /* ~235 */
              lab_234:
    21 |        $$IRET114 = $$PARM.this1F4;
   169 |        __es.__c4@3 = 19u;
                $$RET105 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12347);
                $$PARM.this2AD = $$RET105;
                $$PARM.i2AE = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2AE < *((int *)((char *)$$PARM.this2AD + 8))) goto lab_277;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_277:
    31 |        $$IRET16D = ((char *)*((char * *)$$PARM.this2AD) + (8ll)*((long long) $$PARM.i2AE));
   169 |        left = $$IRET16D;
                __es.__c4@3 = 14u;
                $$PARM.this183 = &__12347;
    47 |        if (!(&__12347->(vector<int>).data@0.rns401.$$1071 != NULL)) goto lab_157;
    48 |        operator delete[](void*)(&__12347->(vector<int>).data@0.rns401.$$1071)
    49 |        &__12347->(vector<int>).data@0.rns401.$$1071 = NULL;
    50 |      lab_157:
    51 |        $$IRETB6 = $$PARM.this183;
   170 |        $$PARM.i53 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i53 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_93;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_93:
    31 |        $$IRET1A = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i53));
   170 |        __12860 = $$IRET1A;
                *__12860 = *__12860 + 1;
   171 |        $$PARM.i55 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i55 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_95;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_95:
    31 |        $$IRET1B = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i55));
   171 |        __12862 = $$IRET1B;
                *__12862 = *__12862 + 1;
   172 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12348,&x);
                __es.__c4@3 = 20u;
                $$RET106 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12348);
                $$PARM.this2A3 = $$RET106;
                $$PARM.i2A4 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A4 < *((int *)((char *)$$PARM.this2A3 + 8))) goto lab_267;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_267:
    31 |        $$IRET168 = ((char *)*((char * *)$$PARM.this2A3) + (8ll)*((long long) $$PARM.i2A4));
   172 |        up = $$IRET168;
                __es.__c4@3 = 14u;
                $$PARM.this182 = &__12348;
    47 |        if (!(&__12348->(vector<int>).data@0.rns401.$$1077 != NULL)) goto lab_155;
    48 |        operator delete[](void*)(&__12348->(vector<int>).data@0.rns401.$$1077)
    49 |        &__12348->(vector<int>).data@0.rns401.$$1077 = NULL;
    50 |      lab_155:
    51 |        $$IRETB5 = $$PARM.this182;
   173 |        $$PARM.i57 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i57 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_97;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_97:
    31 |        $$IRET1C = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i57));
   173 |        __12864 = $$IRET1C;
                *__12864 = *__12864 - 2;
   174 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12349,&x);
                __es.__c4@3 = 21u;
                $$RET107 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12349);
                $$PARM.this2AB = $$RET107;
                $$PARM.i2AC = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2AC < *((int *)((char *)$$PARM.this2AB + 8))) goto lab_275;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_275:
    31 |        $$IRET16C = ((char *)*((char * *)$$PARM.this2AB) + (8ll)*((long long) $$PARM.i2AC));
   174 |        down = $$IRET16C;
                __es.__c4@3 = 14u;
                $$PARM.this17E = &__12349;
    47 |        if (!(&__12349->(vector<int>).data@0.rns401.$$1082 != NULL)) goto lab_151;
    48 |        operator delete[](void*)(&__12349->(vector<int>).data@0.rns401.$$1082)
    49 |        &__12349->(vector<int>).data@0.rns401.$$1082 = NULL;
    50 |      lab_151:
    51 |        $$IRETB1 = $$PARM.this17E;
   175 |        $$PARM.i59 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i59 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_99;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_99:
    31 |        $$IRET1D = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i59));
   175 |        __12865 = $$IRET1D;
                *__12865 = *__12865 + 1;
   177 |        $$SFX18 = ((*left + *right) + *up) + *down;
                $$PARM.this3EE = csX;
                $$PARM.i3EF = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3EF < *((int *)((char *)$$PARM.this3EE + 8))) goto lab_311;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_311:
    35 |        $$IRET204 = ((char *)*((char * *)$$PARM.this3EE) + (8ll)*((long long) $$PARM.i3EF));
   177 |        $$RET108 = $$IRET204;
                Kg4C = ( 1.0000000000000000E-003 * _fnmsub@53( 4.0000000000000000E+000,*$$RET108,$$SFX18)) / (((double *)((char *)oldGrid + 144))[0ll] * ((double *)((char *)oldGrid + 144))[0ll]);
                $$PARM.this3F0 = csX;
                $$PARM.i3F1 = 1;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3F1 < *((int *)((char *)$$PARM.this3F0 + 8))) goto lab_313;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_313:
    35 |        $$IRET205 = ((char *)*((char * *)$$PARM.this3F0) + (8ll)*((long long) $$PARM.i3F1));
   177 |        $$RET109 = $$IRET205;
   179 |        dCdt =  2.5000000000000001E-002 * (*$$RET109 - Kg4C);
   180 |        $$PARM.this29D = newX;
                $$PARM.i29E = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i29E < *((int *)((char *)$$PARM.this29D + 8))) goto lab_261;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_261:
    31 |        $$IRET165 = ((char *)*((char * *)$$PARM.this29D) + (8ll)*((long long) $$PARM.i29E));
   180 |        $$SFX19 = $$IRET165;
                $$PARM.this3F2 = oldX;
                $$PARM.i3F3 = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3F3 < *((int *)((char *)$$PARM.this3F2 + 8))) goto lab_315;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_315:
    35 |        $$IRET206 = ((char *)*((char * *)$$PARM.this3F2) + (8ll)*((long long) $$PARM.i3F3));
   180 |        $$RET10A = $$IRET206;
                *$$SFX19 = _fmadd@47( 5.0000000000000002E-005,dCdt,*$$RET10A);
   184 |        __es.__c4@3 = 2u;
                $$PARM.this17C = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$1088 != NULL)) goto lab_147;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$1088)
    49 |        &x->(vector<int>).data@0.rns401.$$1088 = NULL;
    50 |      lab_147:
    51 |        $$IRETAF = $$PARM.this17C;
   159 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~10 */
            lab_12:
   186 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_15;
              do {   /* id=2 guarded */ /* ~13 */ 
                /* region = 311 */
                $$RET10B = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   187 |        $$PARM.this2A1 = $$RET10B;
                $$PARM.i2A2 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A2 < *((int *)((char *)$$PARM.this2A1 + 8))) goto lab_265;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_265:
    31 |        $$IRET167 = ((char *)*((char * *)$$PARM.this2A1) + (8ll)*((long long) $$PARM.i2A2));
   187 |        $$SFX1A = $$IRET167;
                $$RET10C = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this299 = $$RET10C;
                $$PARM.i29A = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i29A < *((int *)((char *)$$PARM.this299 + 8))) goto lab_257;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_257:
    31 |        $$IRET163 = ((char *)*((char * *)$$PARM.this299) + (8ll)*((long long) $$PARM.i29A));
   187 |        $$RET10D = $$IRET163;
                *$$SFX1A = *$$RET10D;
                $$RET10E = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   188 |        $$PARM.this2A5 = $$RET10E;
                $$PARM.i2A6 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A6 < *((int *)((char *)$$PARM.this2A5 + 8))) goto lab_269;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_269:
    31 |        $$IRET169 = ((char *)*((char * *)$$PARM.this2A5) + (8ll)*((long long) $$PARM.i2A6));
   188 |        $$SFX1B = $$IRET169;
                $$RET10F = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this2A7 = $$RET10F;
                $$PARM.i2A8 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A8 < *((int *)((char *)$$PARM.this2A7 + 8))) goto lab_271;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_271:
    31 |        $$IRET16A = ((char *)*((char * *)$$PARM.this2A7) + (8ll)*((long long) $$PARM.i2A8));
   188 |        $$RET110 = $$IRET16A;
                *$$SFX1B = *$$RET110;
   189 |        if (!(i % 2 == step % 2)) goto lab_16;
    81 |        &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
   208 |        __es.__c4@3 = 25u;
   192 |        MMSP::vector<int> MMSP::position<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 26u;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12351,&x);
                __es.__c4@3 = 27u;
                $$RET111 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12351);
                $$PARM.this2E1 = $$RET111;
                $$PARM.i2E2 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E2 < *((int *)((char *)$$PARM.this2E1 + 8))) goto lab_293;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_293:
    31 |        $$IRET187 = ((char *)*((char * *)$$PARM.this2E1) + (8ll)*((long long) $$PARM.i2E2));
   734 |        __12714 = $$IRET187;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_18;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_21;
   105 |        *grains._M_finish@8 = *__12714;
              lab_21:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_23;
              lab_18:
   686 |        __12710._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12710,__12714)
              lab_23:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B3 = &__12351;
    47 |        if (!(&__12351->(vector<int>).data@0.rns401.$$973 != NULL)) goto lab_183;
    48 |        operator delete[](void*)(&__12351->(vector<int>).data@0.rns401.$$973)
    49 |        &__12351->(vector<int>).data@0.rns401.$$973 = NULL;
    50 |      lab_183:
    51 |        $$IRETE6 = $$PARM.this1B3;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12352,&x);
                __es.__c4@3 = 28u;
                $$RET112 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12352);
                $$PARM.this2C3 = $$RET112;
                $$PARM.i2C4 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C4 < *((int *)((char *)$$PARM.this2C3 + 8))) goto lab_287;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_287:
    31 |        $$IRET178 = ((char *)*((char * *)$$PARM.this2C3) + (8ll)*((long long) $$PARM.i2C4));
   734 |        __12728 = $$IRET178;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_24;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_27;
   105 |        *phases._M_finish@8 = *__12728;
              lab_27:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_29;
              lab_24:
   686 |        __12724._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12724,__12728)
              lab_29:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A7 = &__12352;
    47 |        if (!(&__12352->(vector<int>).data@0.rns401.$$978 != NULL)) goto lab_171;
    48 |        operator delete[](void*)(&__12352->(vector<int>).data@0.rns401.$$978)
    49 |        &__12352->(vector<int>).data@0.rns401.$$978 = NULL;
    50 |      lab_171:
    51 |        $$IRETDA = $$PARM.this1A7;
   195 |        $$PARM.iA7 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA7 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_123;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_123:
    31 |        $$IRET44 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.iA7));
   195 |        __12868 = $$IRET44;
                *__12868 = *__12868 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12353,&x);
                __es.__c4@3 = 29u;
                $$RET113 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12353);
                $$PARM.this2EB = $$RET113;
                $$PARM.i2EC = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2EC < *((int *)((char *)$$PARM.this2EB + 8))) goto lab_301;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_301:
    31 |        $$IRET18C = ((char *)*((char * *)$$PARM.this2EB) + (8ll)*((long long) $$PARM.i2EC));
   734 |        __12742 = $$IRET18C;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_30;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_33;
   105 |        *grains._M_finish@8 = *__12742;
              lab_33:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_35;
              lab_30:
   686 |        __12738._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12738,__12742)
              lab_35:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A4 = &__12353;
    47 |        if (!(&__12353->(vector<int>).data@0.rns401.$$984 != NULL)) goto lab_169;
    48 |        operator delete[](void*)(&__12353->(vector<int>).data@0.rns401.$$984)
    49 |        &__12353->(vector<int>).data@0.rns401.$$984 = NULL;
    50 |      lab_169:
    51 |        $$IRETD7 = $$PARM.this1A4;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12354,&x);
                __es.__c4@3 = 30u;
                $$RET114 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12354);
                $$PARM.this2E7 = $$RET114;
                $$PARM.i2E8 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E8 < *((int *)((char *)$$PARM.this2E7 + 8))) goto lab_297;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_297:
    31 |        $$IRET18A = ((char *)*((char * *)$$PARM.this2E7) + (8ll)*((long long) $$PARM.i2E8));
   734 |        __12756 = $$IRET18A;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_36;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_39;
   105 |        *phases._M_finish@8 = *__12756;
              lab_39:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_41;
              lab_36:
   686 |        __12752._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12752,__12756)
              lab_41:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A3 = &__12354;
    47 |        if (!(&__12354->(vector<int>).data@0.rns401.$$989 != NULL)) goto lab_167;
    48 |        operator delete[](void*)(&__12354->(vector<int>).data@0.rns401.$$989)
    49 |        &__12354->(vector<int>).data@0.rns401.$$989 = NULL;
    50 |      lab_167:
    51 |        $$IRETD6 = $$PARM.this1A3;
   198 |        $$PARM.i9F = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i9F < &x->(vector<int>).size@8.rns391.$$1002) goto lab_117;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_117:
    31 |        $$IRET40 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.i9F));
   198 |        __12870 = $$IRET40;
                *__12870 = *__12870 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12355,&x);
                __es.__c4@3 = 31u;
                $$RET115 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12355);
                $$PARM.this2E9 = $$RET115;
                $$PARM.i2EA = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2EA < *((int *)((char *)$$PARM.this2E9 + 8))) goto lab_299;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_299:
    31 |        $$IRET18B = ((char *)*((char * *)$$PARM.this2E9) + (8ll)*((long long) $$PARM.i2EA));
   734 |        __12770 = $$IRET18B;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_42;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_45;
   105 |        *grains._M_finish@8 = *__12770;
              lab_45:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_47;
              lab_42:
   686 |        __12766._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12766,__12770)
              lab_47:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A0 = &__12355;
    47 |        if (!(&__12355->(vector<int>).data@0.rns401.$$995 != NULL)) goto lab_165;
    48 |        operator delete[](void*)(&__12355->(vector<int>).data@0.rns401.$$995)
    49 |        &__12355->(vector<int>).data@0.rns401.$$995 = NULL;
    50 |      lab_165:
    51 |        $$IRETD3 = $$PARM.this1A0;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12356,&x);
                __es.__c4@3 = 32u;
                $$RET116 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12356);
                $$PARM.this2E5 = $$RET116;
                $$PARM.i2E6 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E6 < *((int *)((char *)$$PARM.this2E5 + 8))) goto lab_295;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_295:
    31 |        $$IRET189 = ((char *)*((char * *)$$PARM.this2E5) + (8ll)*((long long) $$PARM.i2E6));
   734 |        __12784 = $$IRET189;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_48;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_51;
   105 |        *phases._M_finish@8 = *__12784;
              lab_51:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_53;
              lab_48:
   686 |        __12780._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12780,__12784)
              lab_53:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1AE = &__12356;
    47 |        if (!(&__12356->(vector<int>).data@0.rns401.$$1000 != NULL)) goto lab_179;
    48 |        operator delete[](void*)(&__12356->(vector<int>).data@0.rns401.$$1000)
    49 |        &__12356->(vector<int>).data@0.rns401.$$1000 = NULL;
    50 |      lab_179:
    51 |        $$IRETE1 = $$PARM.this1AE;
   201 |        $$PARM.iA3 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA3 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_119;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_119:
    31 |        $$IRET42 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.iA3));
   201 |        __12871 = $$IRET42;
                *__12871 = *__12871 + 1;
   202 |        $$PARM.i85 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i85 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_115;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_115:
    31 |        $$IRET33 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.i85));
   202 |        __12873 = $$IRET33;
                *__12873 = *__12873 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12357,&x);
                __es.__c4@3 = 33u;
                $$RET117 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12357);
                $$PARM.this2D5 = $$RET117;
                $$PARM.i2D6 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D6 < *((int *)((char *)$$PARM.this2D5 + 8))) goto lab_291;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_291:
    31 |        $$IRET181 = ((char *)*((char * *)$$PARM.this2D5) + (8ll)*((long long) $$PARM.i2D6));
   734 |        __12798 = $$IRET181;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_54;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_57;
   105 |        *grains._M_finish@8 = *__12798;
              lab_57:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_59;
              lab_54:
   686 |        __12794._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12794,__12798)
              lab_59:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B4 = &__12357;
    47 |        if (!(&__12357->(vector<int>).data@0.rns401.$$1007 != NULL)) goto lab_185;
    48 |        operator delete[](void*)(&__12357->(vector<int>).data@0.rns401.$$1007)
    49 |        &__12357->(vector<int>).data@0.rns401.$$1007 = NULL;
    50 |      lab_185:
    51 |        $$IRETE7 = $$PARM.this1B4;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12358,&x);
                __es.__c4@3 = 34u;
                $$RET118 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12358);
                $$PARM.this2BF = $$RET118;
                $$PARM.i2C0 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C0 < *((int *)((char *)$$PARM.this2BF + 8))) goto lab_285;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_285:
    31 |        $$IRET176 = ((char *)*((char * *)$$PARM.this2BF) + (8ll)*((long long) $$PARM.i2C0));
   734 |        __12812 = $$IRET176;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_60;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_63;
   105 |        *phases._M_finish@8 = *__12812;
              lab_63:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_65;
              lab_60:
   686 |        __12808._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12808,__12812)
              lab_65:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A9 = &__12358;
    47 |        if (!(&__12358->(vector<int>).data@0.rns401.$$1012 != NULL)) goto lab_175;
    48 |        operator delete[](void*)(&__12358->(vector<int>).data@0.rns401.$$1012)
    49 |        &__12358->(vector<int>).data@0.rns401.$$1012 = NULL;
    50 |      lab_175:
    51 |        $$IRETDC = $$PARM.this1A9;
   205 |        $$PARM.iB9 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB9 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_125;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_125:
    31 |        $$IRET4D = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.iB9));
   205 |        __12875 = $$IRET4D;
                *__12875 = *__12875 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12359,&x);
                __es.__c4@3 = 35u;
                $$RET119 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12359);
                $$PARM.this2BB = $$RET119;
                $$PARM.i2BC = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2BC < *((int *)((char *)$$PARM.this2BB + 8))) goto lab_283;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_283:
    31 |        $$IRET174 = ((char *)*((char * *)$$PARM.this2BB) + (8ll)*((long long) $$PARM.i2BC));
   734 |        __12826 = $$IRET174;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_66;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_69;
   105 |        *grains._M_finish@8 = *__12826;
              lab_69:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_71;
              lab_66:
   686 |        __12822._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12822,__12826)
              lab_71:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A8 = &__12359;
    47 |        if (!(&__12359->(vector<int>).data@0.rns401.$$1018 != NULL)) goto lab_173;
    48 |        operator delete[](void*)(&__12359->(vector<int>).data@0.rns401.$$1018)
    49 |        &__12359->(vector<int>).data@0.rns401.$$1018 = NULL;
    50 |      lab_173:
    51 |        $$IRETDB = $$PARM.this1A8;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12360,&x);
                __es.__c4@3 = 36u;
                $$RET11A = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12360);
                $$PARM.this2B7 = $$RET11A;
                $$PARM.i2B8 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B8 < *((int *)((char *)$$PARM.this2B7 + 8))) goto lab_281;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_281:
    31 |        $$IRET172 = ((char *)*((char * *)$$PARM.this2B7) + (8ll)*((long long) $$PARM.i2B8));
   734 |        __12840 = $$IRET172;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_72;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_75;
   105 |        *phases._M_finish@8 = *__12840;
              lab_75:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_77;
              lab_72:
   686 |        __12836._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12836,__12840)
              lab_77:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B7 = &__12360;
    47 |        if (!(&__12360->(vector<int>).data@0.rns401.$$1023 != NULL)) goto lab_189;
    48 |        operator delete[](void*)(&__12360->(vector<int>).data@0.rns401.$$1023)
    49 |        &__12360->(vector<int>).data@0.rns401.$$1023 = NULL;
    50 |      lab_189:
    51 |        $$IRETEA = $$PARM.this1B7;
   208 |        $$PARM.iA5 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA5 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_121;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_121:
    31 |        $$IRET43 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.iA5));
   208 |        __12876 = $$IRET43;
                *__12876 = *__12876 + 1;
   209 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12361,&x);
                __es.__c4@3 = 37u;
                $$RET11B = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12361);
                $$PARM.this2CF = $$RET11B;
                $$PARM.i2D0 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D0 < *((int *)((char *)$$PARM.this2CF + 8))) goto lab_289;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_289:
    31 |        $$IRET17E = ((char *)*((char * *)$$PARM.this2CF) + (8ll)*((long long) $$PARM.i2D0));
   209 |        $$RET11C = $$IRET17E;
                std::vector<double, std::allocator<double> > MMSP::dE<double>(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)(&deltas,*$$RET11C,&phases,&grains)
                __es.__c4@3 = 26u;
                $$PARM.this1B5 = &__12361;
    47 |        if (!(&__12361->(vector<int>).data@0.rns401.$$1029 != NULL)) goto lab_187;
    48 |        operator delete[](void*)(&__12361->(vector<int>).data@0.rns401.$$1029)
    49 |        &__12361->(vector<int>).data@0.rns401.$$1029 = NULL;
    50 |      lab_187:
    51 |        $$IRETE8 = $$PARM.this1B5;
   209 |        __es.__c4@3 = 38u;
                $$RET11D = rand();
   611 |        if (!(*((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull))) <  0.0000000000000000E+000)) goto lab_78;
   212 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12363,&x);
                __es.__c4@3 = 39u;
                $$RET11E = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12363);
                $$PARM.this2F9 = $$RET11E;
                $$PARM.i2FA = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2FA < *((int *)((char *)$$PARM.this2F9 + 8))) goto lab_303;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_303:
    31 |        $$IRET193 = ((char *)*((char * *)$$PARM.this2F9) + (8ll)*((long long) $$PARM.i2FA));
   212 |        $$BDE2 = $$IRET193;
   611 |        *$$BDE2 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1BB = &__12363;
    47 |        if (!(&__12363->(vector<int>).data@0.rns401.$$1047 != NULL)) goto lab_191;
    48 |        operator delete[](void*)(&__12363->(vector<int>).data@0.rns401.$$1047)
    49 |        &__12363->(vector<int>).data@0.rns401.$$1047 = NULL;
    50 |      lab_191:
    51 |        $$IRETEE = $$PARM.this1BB;
   213 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12364,&x);
                __es.__c4@3 = 40u;
                $$RET11F = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12364);
                $$PARM.this2FD = $$RET11F;
                $$PARM.i2FE = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2FE < *((int *)((char *)$$PARM.this2FD + 8))) goto lab_305;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_305:
    31 |        $$IRET195 = ((char *)*((char * *)$$PARM.this2FD) + (8ll)*((long long) $$PARM.i2FE));
   213 |        $$BDE3 = $$IRET195;
   611 |        *$$BDE3 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1AB = &__12364;
    47 |        if (!(&__12364->(vector<int>).data@0.rns401.$$1051 != NULL)) goto lab_177;
    48 |        operator delete[](void*)(&__12364->(vector<int>).data@0.rns401.$$1051)
    49 |        &__12364->(vector<int>).data@0.rns401.$$1051 = NULL;
    50 |      lab_177:
    51 |        $$IRETDE = $$PARM.this1AB;
   214 |        goto lab_80;
              lab_78:
                $$RET120 = (double) rand();
   611 |        if (!($$RET120 /  2.1474836470000000E+009 < __exp@1(- *((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)))))) goto lab_81;
   216 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12365,&x);
                __es.__c4@3 = 41u;
                $$RET121 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12365);
                $$PARM.this309 = $$RET121;
                $$PARM.i30A = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i30A < *((int *)((char *)$$PARM.this309 + 8))) goto lab_309;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_309:
    31 |        $$IRET19B = ((char *)*((char * *)$$PARM.this309) + (8ll)*((long long) $$PARM.i30A));
   216 |        $$BDE5 = $$IRET19B;
   611 |        *$$BDE5 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1BE = &__12365;
    47 |        if (!(&__12365->(vector<int>).data@0.rns401.$$1039 != NULL)) goto lab_193;
    48 |        operator delete[](void*)(&__12365->(vector<int>).data@0.rns401.$$1039)
    49 |        &__12365->(vector<int>).data@0.rns401.$$1039 = NULL;
    50 |      lab_193:
    51 |        $$IRETF1 = $$PARM.this1BE;
   217 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12366,&x);
                __es.__c4@3 = 42u;
                $$RET122 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12366);
                $$PARM.this307 = $$RET122;
                $$PARM.i308 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i308 < *((int *)((char *)$$PARM.this307 + 8))) goto lab_307;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_307:
    31 |        $$IRET19A = ((char *)*((char * *)$$PARM.this307) + (8ll)*((long long) $$PARM.i308));
   217 |        $$BDE6 = $$IRET19A;
   611 |        *$$BDE6 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1BF = &__12366;
    47 |        if (!(&__12366->(vector<int>).data@0.rns401.$$1043 != NULL)) goto lab_195;
    48 |        operator delete[](void*)(&__12366->(vector<int>).data@0.rns401.$$1043)
    49 |        &__12366->(vector<int>).data@0.rns401.$$1043 = NULL;
    50 |      lab_195:
    51 |        $$IRETF2 = $$PARM.this1BF;
   218 |      lab_81:
              lab_80:
   219 |        __es.__c4@3 = 26u;
                $$PARM.this3FB = &deltas;
   145 |        if (!(deltas._M_start@0 != NULL)) goto lab_323;
    95 |        operator delete(void*)(deltas._M_start@0)
   110 |      lab_323:
   132 |        $$PARM.this226 = $$PARM.this3FB;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FB;
   314 |        $$IRET20D = $$PARM.this3FB;
   219 |        __es.__c4@3 = 25u;
                $$PARM.this1AF = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$1033 != NULL)) goto lab_181;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$1033)
    49 |        &x->(vector<int>).data@0.rns401.$$1033 = NULL;
    50 |      lab_181:
    51 |        $$IRETE2 = $$PARM.this1AF;
   219 |        __es.__c4@3 = 23u;
                $$PARM.this3FA = &phases;
   145 |        if (!(phases._M_start@0 != NULL)) goto lab_317;
    95 |        operator delete(void*)(phases._M_start@0)
   110 |      lab_317:
   132 |        $$PARM.this226 = $$PARM.this3FA;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FA;
   314 |        $$IRET20C = $$PARM.this3FA;
   219 |        __es.__c4@3 = 2u;
                $$PARM.this3FE = &grains;
   145 |        if (!(grains._M_start@0 != NULL)) goto lab_329;
    95 |        operator delete(void*)(grains._M_start@0)
   110 |      lab_329:
   132 |        $$PARM.this226 = $$PARM.this3FE;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FE;
   314 |        $$IRET210 = $$PARM.this3FE;
   219 |      lab_16:
   186 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~13 */
            lab_15:
   223 |      void MMSP::swap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&, MMSP::grid<3, MMSP::vector<double> >&)(oldGrid,&newGrid)
   224 |      void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(oldGrid)
   225 |      __es.__c4@3 = 1u;
              MMSP::grid<3, MMSP::vector<double> >::~grid()(&c_storage);
   126 |      step = step + 1;
            } while (step < steps);    /* ~2 */
          lab_4:
   227 |    iterations = iterations + 1;
   228 |    __es.__c4@3 = 0u;
            MMSP::grid<3, MMSP::vector<double> >::~grid()(&newGrid);
            return;
          } /* function */ 


   565 |  void void MMSP::output<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, char const*)(char * GRID, char * filename)
   567 |  {
            MMSP::grid<3, MMSP::vector<double> >::output(char const*) const(GRID,filename)
   568 |    return;
          } /* function */ 


   228 |  char * std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&)(_Alloc_hider *this, char * __beg, char * __end, char * __a)
  1557 |  {
            __memset(&__12878,0,1ull);
  1543 |    __memset(&__12879,0,1ull);
            __12885 = char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)(__beg,__end,__a,__12879);
   260 |    *((char * *)this) = __12885;
   231 |    rstr = this;
            return rstr;
          } /* function */ 


   131 |  char * std::_Vector_base<int, std::allocator<int> >::~_Vector_base()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this35E = this;
   109 |    $$PARM.this35C = $$PARM.this35E;
    73 |    $$IRET1BF = $$PARM.this35C;
   109 |    $$IRET1C0 = $$PARM.this35E;
   132 |    $$IRET1C1 = $$PARM.this35E;
   133 |    rstr = this;
            return rstr;
          } /* function */ 


   167 |  void MTRand::initialize(unsigned long)(long long *this, unsigned long long seed)
   176 |  {
            *this = seed & 4294967295ull;
   177 |    if (!1) goto lab_3;
   175 |    $$CIV6 = 0ll;
   177 |    do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
   179 |      *((unsigned long long *)((char *)this + $$CIV6 * 8ll + 8ll)) = (this[$$CIV6] >> 30 ^ this[$$CIV6]) * 1812433253ull + (unsigned long long) ((int) ($$CIV6 + 1ll)) & 4294967295ull;
   177 |      $$CIV6 = ($$CIV6 + 1);
            } while ((unsigned long long) $$CIV6 < 623ull);    /* ~1 */
          lab_3:
   182 |    return;
          } /* function */ 


   184 |  void MTRand::reload()(MTRand *this)
   188 |  {
            MTRand::reload()::guard_MmN2 = 1;
   189 |    p = this;
   191 |    if (!1) goto lab_4;
            i.rnn35 = 226;
            do {   /* id=2 guarded */ /* ~2 */ 
              /* region = 16 */
   136 |      *p = (p[1ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[397ll] ^ (0ull != (p[1ll] & 1ull) ? 2567483615ull : 0ull));
   191 |      p = ((char *)p  + 8ll);
              __12904 = (char) (i.rnn35 != 0);
              i.rnn35 = i.rnn35 + -1;
            } while (__12904 != 0u);    /* ~2 */
          lab_4:
   193 |    if (!1) goto lab_10;
            $$CIV7 = 0ll;
            $$CIVSTART6 = p;
            do {   /* id=1 guarded */ /* ~8 */ 
              /* region = 15 */
              /* bump-normalized */
   136 |      $$CIVSTART6[$$CIV7] = (((unsigned long long *)(((char *)$$CIVSTART6  + $$CIV7 * 8ll)))[1ll] & 2147483647ull | ((unsigned long long *)(((char *)$$CIVSTART6  + $$CIV7 * 8ll)))[0ll] & 2147483648ull) >> 1 ^ (((unsigned long long *)(((char *)$$CIVSTART6  + $$CIV7 * 8ll)))[-227ll] ^ (0ull != (((unsigned long long *)(((char *)$$CIVSTART6  + $$CIV7 * 8ll)))[1ll] & 1ull) ? 2567483615ull : 0ull));
   193 |      $$CIV7 = ($$CIV7 + 1);
            } while ((unsigned long long) $$CIV7 < 396ull);    /* ~8 */
            p = ((char *)$$CIVSTART6  + 3168ll);
          lab_10:
   129 |    if (!(0ull != (((unsigned long long *)this)[0ll] & 1ull))) goto lab_15;
            __12953 = 2567483615ull;
   136 |    *p = (((unsigned long long *)this)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[-227ll] ^ __12953);
   197 |    *((int *)((char *)this + 5000)) = 624;
            *((char * *)((char *)this + 4992)) = this;
            goto lab_25;
   129 |  lab_15:
            __12953 = 0ull;
   136 |    *p = (((unsigned long long *)this)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[-227ll] ^ __12953);
   197 |    *((int *)((char *)this + 5000)) = 624;
            *((char * *)((char *)this + 4992)) = this;
          lab_25:
   198 |    return;
          } /* function */ 


   284 |  unsigned long long MTRand::randInt()(MTRand *this)
   289 |  {
            if (!(*((int *)((char *)this + 5000)) == 0)) goto lab_1;
   188 |    MTRand::reload()::guard_MmN2 = 1;
   189 |    p = this;
   191 |    if (!1) goto lab_3;
            i.rnn35 = 226;
            do {   /* id=1 guarded */ /* ~4 */ 
              /* region = 17 */
   136 |      *p = (p[1ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[397ll] ^ (0ull != (p[1ll] & 1ull) ? 2567483615ull : 0ull));
   191 |      p = ((char *)p  + 8ll);
              __12904 = (char) (i.rnn35 != 0);
              i.rnn35 = i.rnn35 + -1;
            } while (__12904 != 0u);    /* ~4 */
          lab_3:
   193 |    if (!1) goto lab_5;
            $$CIV7 = 0ll;
            $$CIVSTART6 = p;
            do {   /* id=2 guarded */ /* ~6 */ 
              /* region = 16 */
              /* bump-normalized */
   136 |      $$CIVSTART6[$$CIV7] = (((unsigned long long *)(((char *)$$CIVSTART6  + $$CIV7 * 8ll)))[1ll] & 2147483647ull | ((unsigned long long *)(((char *)$$CIVSTART6  + $$CIV7 * 8ll)))[0ll] & 2147483648ull) >> 1 ^ (((unsigned long long *)(((char *)$$CIVSTART6  + $$CIV7 * 8ll)))[-227ll] ^ (0ull != (((unsigned long long *)(((char *)$$CIVSTART6  + $$CIV7 * 8ll)))[1ll] & 1ull) ? 2567483615ull : 0ull));
   193 |      $$CIV7 = ($$CIV7 + 1);
            } while ((unsigned long long) $$CIV7 < 396ull);    /* ~6 */
            p = ((char *)$$CIVSTART6  + 3168ll);
          lab_5:
   129 |    if (!(0ull != (((unsigned long long *)this)[0ll] & 1ull))) goto lab_7;
            __12953 = 2567483615ull;
   136 |    *p = (((unsigned long long *)this)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[-227ll] ^ __12953);
   197 |    *((int *)((char *)this + 5000)) = 624;
            *((char * *)((char *)this + 4992)) = this;
            goto lab_8;
   129 |  lab_7:
            __12953 = 0ull;
   136 |    *p = (((unsigned long long *)this)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[-227ll] ^ __12953);
   197 |    *((int *)((char *)this + 5000)) = 624;
            *((char * *)((char *)this + 4992)) = this;
          lab_8:
   289 |  lab_1:
   290 |    *((int *)((char *)this + 5000)) = *((int *)((char *)this + 5000)) - 1;
   293 |    s1 = *((char * *)((char *)this + 4992))->(unsigned long).rns244.;
            *((char * *)((char *)this + 4992)) = ((char *)*((char * *)((char *)this + 4992))  + 8ll);
   296 |    s1.rnn38 = (s1 ^ (s1 >> 11 ^ s1) << 7 & 2636928640ull) ^ (((s1 >> 11 ^ s1) << 7 & 2636928640ull ^ (s1 >> 11 ^ s1)) << 15 & 4022730752ull ^ s1 >> 11);
   297 |    rstr = s1.rnn38 >> 18 ^ s1.rnn38;
            return rstr;
   298 |  } /* function */ 


   312 |  char * std::vector<Point<int>, std::allocator<Point<int> > >::~vector()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this2 = this;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


  1134 |  unsigned long long std::vector<Point<int>, std::allocator<Point<int> > >::_M_check_len(unsigned long, char const*) const(_Vector_base<Point<int>,std::allocator<Point<int> > > *this, unsigned long long __n, char * __s)
   538 |  {
            if (!((unsigned long long) (1537228672809129301ll - (*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) < __n)) goto lab_1;
  1137 |    std::__throw_length_error(char const*)(__s)
            return;
          lab_1:
  1139 |    __12982 = (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll);
   215 |    __12993 = ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) < __n ? &__n : &__12982);
  1140 |    if (*__12993 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) < (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll)) goto lab_6;
   538 |    if (!(*__12993 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) > 1537228672809129301ull)) goto lab_7;
          lab_6:
            __13007 = 1537228672809129301ull;
            goto lab_8;
          lab_7:
            __13007 = *__12993 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll);
          lab_8:
            rstr = __13007;
            return rstr;
  1141 |  } /* function */ 


  1134 |  unsigned long long std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const(_Vector_base<int,std::allocator<int> > *this, unsigned long long __n, char * __s)
   538 |  {
            if (!((unsigned long long) (4611686018427387903ll - (*((char * *)((char *)this + 8)) - *((char * *)this)) / 4ll) < __n)) goto lab_1;
  1137 |    std::__throw_length_error(char const*)(__s)
            return;
          lab_1:
  1139 |    __13009 = (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 4ll);
   215 |    __13020 = ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 4ll) < __n ? &__n : &__13009);
  1140 |    if (*__13020 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 4ll) < (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 4ll)) goto lab_6;
   538 |    if (!(*__13020 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 4ll) > 4611686018427387903ull)) goto lab_7;
          lab_6:
            __13034 = 4611686018427387903ull;
            goto lab_8;
          lab_7:
            __13034 = *__13020 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 4ll);
          lab_8:
            rstr = __13034;
            return rstr;
  1141 |  } /* function */ 


   142 |  void MMSP::grid<2, unsigned long>::setup(bool)(grid<2,unsigned long> *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIV8 = 0ll;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 33 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 40))[$$CIV8] = ((int *)((char *)this + 24))[$$CIV8];
   147 |      ((int *)((char *)this + 48))[$$CIV8] = ((int *)((char *)this + 32))[$$CIV8];
   149 |      ((int *)((char *)this + 88))[$$CIV8] = 2;
   150 |      ((int *)((char *)this + 96))[$$CIV8] = 2;
   152 |      ((double *)((char *)this + 104))[$$CIV8] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 120))[$$CIV8] = 0;
   155 |      ((int *)((char *)this + 128))[$$CIV8] = 1;
   156 |      ((int *)((char *)this + 136))[$$CIV8] = 1;
   158 |      ((int *)((char *)this + 144))[$$CIV8] = 0;
   159 |      ((int *)((char *)this + 152))[$$CIV8] = 0;
   145 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < 2ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIV9 = 0ll;
            do {   /* id=4 guarded */ /* ~4 */ 
              /* region = 32 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 64))[$$CIV9] = ((int *)((char *)this + 40))[$$CIV9] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 72))[$$CIV9] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 48))[$$CIV9];
   301 |      $$CIV9 = $$CIV9 + 1ll;
            } while ((unsigned long long) $$CIV9 < 2ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_29;
            $$DCIV0 = 0ll;
            do {   /* id=6 guarded */ /* ~30 */ 
              /* region = 31 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 56))[$$DCIV0] = 1;
   306 |      ((int *)((char *)this + 80))[$$DCIV0] = 1;
   305 |      $$DCIV0 = $$DCIV0 + 1ll;
            } while ((unsigned long long) $$DCIV0 < 2ull);    /* ~30 */
          lab_29:
            if (!1) goto lab_31;
            $$DCIV1 = 0ll;
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 30 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIV1 + 1 < 2)) goto lab_33;
              $$DCIV2 = 0ll;
              $$SCREP0 = ((int *)((char *)this + 56))[$$DCIV1];
              $$SCREP1 = ((int *)((char *)this + 80))[$$DCIV1];
              do {   /* id=8 guarded */ /* ~34 */ 
                /* region = 28 */
                /* bump-normalized */
   310 |        $$SCREP0 = $$SCREP0 * (((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIV2 + $$DCIV1)))] - ((int *)((char *)this + 40))[(long long) ((int) (1ll + ($$DCIV2 + $$DCIV1)))]);
   309 |        $$SCREP1 = $$SCREP1 * (((int *)((char *)this + 72))[(long long) ((int) (1ll + ($$DCIV2 + $$DCIV1)))] - ((int *)((char *)this + 64))[(long long) ((int) (1ll + ($$DCIV2 + $$DCIV1)))]);
   308 |        $$DCIV2 = $$DCIV2 + 1ll;
              } while ((unsigned long long) $$DCIV2 < (unsigned long long) (1ll - $$DCIV1));    /* ~34 */
              ((int *)((char *)this + 80))[$$DCIV1] = $$SCREP1;
              ((int *)((char *)this + 56))[$$DCIV1] = $$SCREP0;
            lab_33:
   305 |      $$DCIV1 = $$DCIV1 + 1ll;
            } while ((unsigned long long) $$DCIV1 < 2ull);    /* ~32 */
          lab_31:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 40))[0ll]) * ((int *)((char *)this + 56))[0ll];
            $$RET123 = operator new[](unsigned long)((unsigned long long) ((((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]) * 8ull);
   319 |    *((char * *)this) = $$RET123;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_15;
            i = 0;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 29 */
              i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~13 */
          lab_15:
   326 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           145             5    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           145             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           146                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           147                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           149                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           150                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           152                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       275           154                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           155                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           156                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           158                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           159                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           301             4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           301             4    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          operation in this->(grid<2,unsigned 
                                          long>).x0[]@28.rns259.[$$CIV9] - 
                                          this->(grid<2,unsigned long>).ghosts@14.rns272. which 
                                          is not  suitable for SIMD vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          operation in this->(grid<2,unsigned 
                                          long>).ghosts@14.rns272. + this->(grid<2,unsigned 
                                          long>).x1[]@30.rns261.[$$CIV9] which is not  suitable 
                                          for SIMD vectorization.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             6    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           307                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           306                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       275           308             8    Loop was not SIMD vectorized because it contains 
                                          non-vectorizable reductions.
       275           308             8    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP0 * (this->(grid<2,unsigned 
                                          long>).x1[]@30.rns261.[(long long) ((int) (1ll + 
                                          ($$DCIV2 + $$DCIV1)))] - this->(grid<2,unsigned 
                                          long>).x0[]@28.rns259.[(long long) ((int) (1ll + 
                                          ($$DCIV2 + $$DCIV1)))]) which is not  suitable for 
                                          SIMD vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP1 * (this->(grid<2,unsigned 
                                          long>).s1[]@48.rns273.[(long long) ((int) (1ll + 
                                          ($$DCIV2 + $$DCIV1)))] - this->(grid<2,unsigned 
                                          long>).s0[]@40.rns271.[(long long) ((int) (1ll + 
                                          ($$DCIV2 + $$DCIV1)))]) which is not  suitable for 
                                          SIMD vectorization.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           320             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275           320             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

    72 |  char * MMSP::grid<2, MMSP::vector<double> >::grid(MMSP::grid<2, MMSP::vector<double> > const&)(grid<2,MMSP::vector<double> > *this, grid<2,MMSP::vector<double> > *GRID)
          {
            $$RET124 = int MMSP::fields<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(GRID);
    75 |    *((int *)((char *)this + 16)) = $$RET124;
    78 |    if (!1) goto lab_3;
            $$CIVC = 0ll;
            do {   /* id=2 guarded */ /* ~1 */ 
              /* region = 13 */
              /* bump-normalized */
    79 |      ((int *)((char *)this + 24))[$$CIVC] = ((int *)((char *)GRID + 24))[$$CIVC];
    80 |      ((int *)((char *)this + 32))[$$CIVC] = ((int *)((char *)GRID + 32))[$$CIVC];
    78 |      $$CIVC = $$CIVC + 1ll;
            } while ((unsigned long long) $$CIVC < 2ull);    /* ~1 */
          lab_3:
    84 |    *((int *)((char *)this + 20)) = 0;
    91 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)(this,0u)
    94 |    if (!1) goto lab_6;
            $$CIVD = 0ll;
            do {   /* id=1 guarded */ /* ~4 */ 
              /* region = 12 */
              /* bump-normalized */
    95 |      ((int *)((char *)this + 88))[$$CIVD] = ((int *)((char *)GRID + 88))[$$CIVD];
    96 |      ((int *)((char *)this + 96))[$$CIVD] = ((int *)((char *)GRID + 96))[$$CIVD];
    97 |      ((double *)((char *)this + 104))[$$CIVD] = ((double *)((char *)GRID + 104))[$$CIVD];
    94 |      $$CIVD = $$CIVD + 1ll;
            } while ((unsigned long long) $$CIVD < 2ull);    /* ~4 */
          lab_6:
    99 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            78             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            78             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            79                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            80                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            94             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            94             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            95                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            96                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            97                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.

   142 |  void MMSP::grid<2, MMSP::vector<double> >::setup(bool)(grid<2,MMSP::vector<double> > *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIVE = 0ll;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 33 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 40))[$$CIVE] = ((int *)((char *)this + 24))[$$CIVE];
   147 |      ((int *)((char *)this + 48))[$$CIVE] = ((int *)((char *)this + 32))[$$CIVE];
   149 |      ((int *)((char *)this + 88))[$$CIVE] = 2;
   150 |      ((int *)((char *)this + 96))[$$CIVE] = 2;
   152 |      ((double *)((char *)this + 104))[$$CIVE] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 120))[$$CIVE] = 0;
   155 |      ((int *)((char *)this + 128))[$$CIVE] = 1;
   156 |      ((int *)((char *)this + 136))[$$CIVE] = 1;
   158 |      ((int *)((char *)this + 144))[$$CIVE] = 0;
   159 |      ((int *)((char *)this + 152))[$$CIVE] = 0;
   145 |      $$CIVE = $$CIVE + 1ll;
            } while ((unsigned long long) $$CIVE < 2ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIVF = 0ll;
            do {   /* id=4 guarded */ /* ~4 */ 
              /* region = 32 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 64))[$$CIVF] = ((int *)((char *)this + 40))[$$CIVF] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 72))[$$CIVF] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 48))[$$CIVF];
   301 |      $$CIVF = $$CIVF + 1ll;
            } while ((unsigned long long) $$CIVF < 2ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_29;
            $$DCIV3 = 0ll;
            do {   /* id=6 guarded */ /* ~30 */ 
              /* region = 31 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 56))[$$DCIV3] = 1;
   306 |      ((int *)((char *)this + 80))[$$DCIV3] = 1;
   305 |      $$DCIV3 = $$DCIV3 + 1ll;
            } while ((unsigned long long) $$DCIV3 < 2ull);    /* ~30 */
          lab_29:
            if (!1) goto lab_31;
            $$DCIV4 = 0ll;
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 30 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIV4 + 1 < 2)) goto lab_33;
              $$DCIV5 = 0ll;
              $$SCREP2 = ((int *)((char *)this + 56))[$$DCIV4];
              $$SCREP3 = ((int *)((char *)this + 80))[$$DCIV4];
              do {   /* id=8 guarded */ /* ~34 */ 
                /* region = 28 */
                /* bump-normalized */
   310 |        $$SCREP2 = $$SCREP2 * (((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIV5 + $$DCIV4)))] - ((int *)((char *)this + 40))[(long long) ((int) (1ll + ($$DCIV5 + $$DCIV4)))]);
   309 |        $$SCREP3 = $$SCREP3 * (((int *)((char *)this + 72))[(long long) ((int) (1ll + ($$DCIV5 + $$DCIV4)))] - ((int *)((char *)this + 64))[(long long) ((int) (1ll + ($$DCIV5 + $$DCIV4)))]);
   308 |        $$DCIV5 = $$DCIV5 + 1ll;
              } while ((unsigned long long) $$DCIV5 < (unsigned long long) (1ll - $$DCIV4));    /* ~34 */
              ((int *)((char *)this + 80))[$$DCIV4] = $$SCREP3;
              ((int *)((char *)this + 56))[$$DCIV4] = $$SCREP2;
            lab_33:
   305 |      $$DCIV4 = $$DCIV4 + 1ll;
            } while ((unsigned long long) $$DCIV4 < 2ull);    /* ~32 */
          lab_31:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 40))[0ll]) * ((int *)((char *)this + 56))[0ll];
            $$RET12A = __cxa_vec_new3((unsigned long long) ((((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]),16ll,8ll,&MMSP::vector<double>::__dftct(),&MMSP::vector<double>::~vector(),&operator new[](unsigned long),&operator delete[](void*));
   319 |    *((char * *)this) = $$RET12A;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_15;
            i = 0;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 29 */
   101 |      MMSP::vector<double>::resize(int)(((char *)*((char * *)this) + (16ll)*((long long) i)),*((int *)((char *)this + 16)))
   320 |      i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~13 */
          lab_15:
   326 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           145             5    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           145             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           146                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           147                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           149                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           150                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           152                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       275           154                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           155                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           156                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           158                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           159                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           301             4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           301             4    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          operation in this->(grid<2,MMSP::vector<double> 
                                          >).x0[]@28.rns291.[$$CIVF] - 
                                          this->(grid<2,MMSP::vector<double> 
                                          >).ghosts@14.rns304. which is not  suitable for SIMD 
                                          vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          operation in this->(grid<2,MMSP::vector<double> 
                                          >).ghosts@14.rns304. + 
                                          this->(grid<2,MMSP::vector<double> 
                                          >).x1[]@30.rns293.[$$CIVF] which is not  suitable for 
                                          SIMD vectorization.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             6    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           307                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           306                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       275           308             8    Loop was not SIMD vectorized because it contains 
                                          non-vectorizable reductions.
       275           308             8    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP2 * 
                                          (this->(grid<2,MMSP::vector<double> 
                                          >).x1[]@30.rns293.[(long long) ((int) (1ll + ($$DCIV5 
                                          + $$DCIV4)))] - this->(grid<2,MMSP::vector<double> 
                                          >).x0[]@28.rns291.[(long long) ((int) (1ll + ($$DCIV5 
                                          + $$DCIV4)))]) which is not  suitable for SIMD 
                                          vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP3 * 
                                          (this->(grid<2,MMSP::vector<double> 
                                          >).s1[]@48.rns305.[(long long) ((int) (1ll + ($$DCIV5 
                                          + $$DCIV4)))] - this->(grid<2,MMSP::vector<double> 
                                          >).s0[]@40.rns303.[(long long) ((int) (1ll + ($$DCIV5 
                                          + $$DCIV4)))]) which is not  suitable for SIMD 
                                          vectorization.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           320             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275           320             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   374 |  char * MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(grid<2,MMSP::vector<double> > *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV12 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.i35 = (int) $$CIV12;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.i35 < *((int *)((char *)x + 8))) goto lab_17;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$IRETB = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.i35));
   377 |      $$RET12B = $$IRETB;
   378 |      $$PARM.xF = $$RET12B;
              $$PARM.x010 = ((int *)((char *)this + 40))[$$CIV12];
              $$PARM.x111 = ((int *)((char *)this + 48))[$$CIV12];
              $$PARM.b012 = ((int *)((char *)this + 88))[$$CIV12];
              $$PARM.b113 = ((int *)((char *)this + 96))[$$CIV12];
    44 |      if (!(*$$PARM.xF < $$PARM.x010)) goto lab_4;
    45 |      if ($$PARM.b012 == 1) goto lab_5;
              if (!($$PARM.b012 == 4)) goto lab_6;
            lab_5:
              *$$PARM.xF = $$PARM.x010;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b012 == 2)) goto lab_8;
              *$$PARM.xF = *$$PARM.xF + ($$PARM.x111 - $$PARM.x010);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b012 == 0)) goto lab_16;
              *$$PARM.xF = $$PARM.x010 * 2 - *$$PARM.xF;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.xF >= $$PARM.x111)) goto lab_16;
    51 |      if ($$PARM.b113 == 1) goto lab_10;
              if (!($$PARM.b113 == 4)) goto lab_11;
            lab_10:
              *$$PARM.xF = $$PARM.x111 - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b113 == 2)) goto lab_13;
              *$$PARM.xF = *$$PARM.xF + ($$PARM.x010 - $$PARM.x111);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b113 == 0)) goto lab_16;
              *$$PARM.xF = ($$PARM.x111 * 2 - *$$PARM.xF) - 2;
    57 |    lab_16:
   378 |      $$PARM.i39 = (int) $$CIV12;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.i39 < *((int *)((char *)x + 8))) goto lab_19;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$IRETD = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.i39));
   378 |      $$RET12C = $$IRETD;
   379 |      p = ((char *)p  + (long long) ((*$$RET12C - ((int *)((char *)this + 64))[$$CIV12]) * ((int *)((char *)this + 80))[$$CIV12]) * 16ll);
   377 |      $$CIV12 = ($$CIV12 + 1);
            } while ((unsigned long long) $$CIV12 < 2ull);    /* ~1 */
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


  1173 |  void MMSP::grid<2, MMSP::vector<double> >::input(char const*, int, int)(grid<2,MMSP::vector<double> > *this, char * filename, int GHOSTS, int SINGLE)
  1174 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1176 |    std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)(&input,filename,8);
            __es.__c4@3 = 1u;
   116 |    $$VOL3 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns346..mga.input;
   192 |    __13134 = (char) (0 != (*((int *)((char *)&input + 32 + $$VOL3[-24ll / 8])) & 5));
   116 |    if (!(__13134 != 0u)) goto lab_1;
   548 |    $$RET12D = (long long) __builtin_strlen("File input error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: could not open ",$$RET12D);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET12E = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET12E);
          lab_20:
   548 |    $$RET12F = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET12F);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns328.(&std::cerr);
  1180 |    exit(-1)
            return;
  1181 |  lab_1:
   260 |    type._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 2u;
  1185 |    std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)(&input,&type,10u);
  2280 |    std::string MMSP::name<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(&__13094,this)
            __es.__c4@3 = 3u;
  2241 |    if (!(*(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8) == *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns350..mga.__13094) + -1ll * 24ll / 8))) goto lab_32;
   259 |    __13204.rnn51 = 0 == __builtin_memcmp(type._M_p@0,(_Alloc_hider)._M_p@0.rns350..mga.__13094,*(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
  2303 |    if (!(__13204.rnn51 == 0)) goto lab_33;
          lab_32:
            __13436 = 0u;
            goto lab_34;
          lab_33:
            __13436 = 1u;
          lab_34:
  2280 |    __13123 = (char) (0u == __13436);
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__13094);
            if (!(__13123 != 0u)) goto lab_30;
   548 |    $$RET130 = (long long) __builtin_strlen("File read error: wrong data type (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong data type (",$$RET130);
  2503 |    __13252 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,type._M_p@0,(long long) *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET131 = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13252,").",$$RET131);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns334.(__13252);
  1188 |    exit(-2)
            return;
  1189 |  lab_30:
  1193 |    std::istream::operator>>(int&)(&input,&dimen);
  1194 |    if (!(dimen != 2)) goto lab_54;
   548 |    $$RET132 = (long long) __builtin_strlen("File read error: wrong dimension (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong dimension (",$$RET132);
   513 |    __13352 = std::ostream::operator<<(int)(&std::cerr,dimen);
   548 |    $$RET133 = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13352,").",$$RET133);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns336.(__13352);
  1196 |    exit(-3)
            return;
  1197 |  lab_54:
  1200 |    std::istream::operator>>(int&)(&input,(this + 16));
  1203 |    if (!1) goto lab_76;
            $$CIV13 = 0ll;
            do {   /* id=2 guarded */ /* ~74 */ 
              /* region = 31 */
              /* bump-normalized */
              $$RET134 = std::istream::operator>>(int&)(&input,((char *)this  + 24ll + (4ll)*($$CIV13)));
  1204 |      std::istream::operator>>(int&)($$RET134,((char *)this  + 32ll + (4ll)*($$CIV13)));
  1203 |      $$CIV13 = $$CIV13 + 1ll;
            } while ((unsigned long long) $$CIV13 < 2ull);    /* ~74 */
          lab_76:
  1209 |    *((int *)((char *)this + 20)) = 0;
  1213 |    if (!(*((char * *)this) != NULL)) goto lab_77;
  1214 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
  1215 |    *((char * *)this) = NULL;
  1216 |  lab_77:
  1217 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)(this,(char) (SINGLE != 0))
  1220 |    if (!1) goto lab_84;
            $$CIV14 = 0ll;
            do {   /* id=1 guarded */ /* ~82 */ 
              /* region = 30 */
              /* bump-normalized */
   207 |      std::istream& std::istream::_M_extract<double>(double&)(&input,((char *)this  + 104ll + (8ll)*($$CIV14)));
  1220 |      $$CIV14 = $$CIV14 + 1ll;
            } while ((unsigned long long) $$CIV14 < 2ull);    /* ~82 */
          lab_84:
  1224 |    std::istream::ignore(long, int)(&input,10ll,10);
  1227 |    MMSP::grid<2, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(this,&input,GHOSTS)
  1230 |    $$RET135 = std::basic_filebuf<char, std::char_traits<char> >::close()(&input._M_filebuf@10);
   565 |    if ($$RET135 != NULL) goto lab_87;
   566 |    $$VOL4 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns346..mga.input;
            $$VOL5 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns346..mga.input;
   419 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&input  + $$VOL4[-24ll / 8]),*((int *)((char *)&input + 32 + $$VOL5[-24ll / 8])) | 4)
   527 |  lab_87:
  1232 |    __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 0u;
            std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()(&input);
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1203             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1203             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275          1203                  Loop was not SIMD vectorized because it contains 
                                          operation in &input which is not  suitable for SIMD 
                                          vectorization.
       275          1203                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1220             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1220             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.

  1344 |  void MMSP::grid<2, MMSP::vector<double> >::output(char const*) const(grid<2,MMSP::vector<double> > *this, char * filename)
  1345 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1347 |    np = 1u;
  1349 |    std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(char const*, std::_Ios_Openmode)(&output,filename,48);
            __es.__c4@3 = 1u;
   116 |    $$VOL6 = (basic_ofstream<char,std::char_traits<char> >)[]@0.rns377..mga.output;
   192 |    __13568 = (char) (0 != (*((int *)((char *)&output + 32 + $$VOL6[-24ll / 8])) & 5));
   116 |    if (!(__13568 != 0u)) goto lab_1;
   548 |    $$RET136 = (long long) __builtin_strlen("File output error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File output error: could not open ",$$RET136);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET137 = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET137);
          lab_20:
   548 |    $$RET138 = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET138);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns363.(&std::cerr);
    35 |    exit(-1)
            return;
  1354 |  lab_1:
  1356 |    std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
            __es.__c4@3 = 2u;
  1359 |    std::string MMSP::name<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(&type,this)
            __es.__c4@3 = 3u;
  2503 |    __13604 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),(_Alloc_hider)._M_p@0.rns381..mga.type,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns381..mga.type) + -1ll * 24ll / 8));
  2504 |    __13606 = 10u;
   458 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13604,&__13606,1ll);
            __13608 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),2);
            __13609 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13608,&__13609,1ll);
            __13611 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),*((int *)((char *)this + 16)));
            __13612 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13611,&__13612,1ll);
  1369 |    if (!1) goto lab_32;
            $$CIV15 = 0ll;
            do {   /* id=2 guarded */ /* ~30 */ 
              /* region = 19 */
              /* bump-normalized */
   506 |      __13722 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),((int *)((char *)this + 24))[$$CIV15]);
   548 |      $$RET139 = (long long) __builtin_strlen(" ");
   510 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13722," ",$$RET139);
   513 |      __13622 = std::ostream::operator<<(int)(__13722,((int *)((char *)this + 32))[$$CIV15]);
              __13623 = 10u;
   458 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13622,&__13623,1ll);
  1369 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < 2ull);    /* ~30 */
          lab_32:
  1373 |    if (!1) goto lab_44;
            $$CIV16 = 0ll;
            do {   /* id=1 guarded */ /* ~42 */ 
              /* region = 18 */
              /* bump-normalized */
   458 |      __13626 = std::ostream& std::ostream::_M_insert<double>(double)(((char *)&outstr  + 16ll),((double *)((char *)this + 104))[$$CIV16]);
              __13627 = 10u;
              std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13626,&__13627,1ll);
  1373 |      $$CIV16 = $$CIV16 + 1ll;
            } while ((unsigned long long) $$CIV16 < 2ull);    /* ~42 */
          lab_44:
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__13555,&outstr._M_stringbuf@18)
            __es.__c4@3 = 4u;
   278 |    $$BD105 = (_Alloc_hider)._M_p@0.rns387..mga.__13555;
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__13556,&outstr._M_stringbuf@18)
            __es.__c4@3 = 5u;
   629 |    std::ostream::write(char const*, long)(&output,$$BD105,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns388..mga.__13556) + -1ll * 24ll / 8));
            __es.__c4@3 = 4u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__13556);
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__13555);
  1379 |    std::ostream::write(char const*, long)(&output,&np,4ll);
  1383 |    size_of_buffer = MMSP::grid<2, MMSP::vector<double> >::write_buffer(char*&) const(this,&buffer);
  1385 |    std::ostream::write(char const*, long)(&output,buffer,(long long) size_of_buffer);
  1386 |    operator delete[](void*)(buffer)
  1387 |    buffer = NULL;
  1799 |    __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 1u;
            std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
            __es.__c4@3 = 0u;
            std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()(&output);
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1369             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1369             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       220           506                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)&outstr  + 16ll) which is not  
                                          suitable for SIMD vectorization.
       220           506                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           548                  Loop was not SIMD vectorized because it contains 
                                          operation in (long long) __builtin_strlen(" ") which 
                                          is not  suitable for SIMD vectorization.
       220           548                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          operation in __13722 which is not  suitable for SIMD 
                                          vectorization.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           513                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1373             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1373             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)&outstr  + 16ll) which is not  
                                          suitable for SIMD vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           458                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       220           458                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

    29 |  char * MMSP::vector<int>::operator[](int)(vector<int> *this, int i)
          {
            MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (i < *((int *)((char *)this + 8))) goto lab_4;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_4:
    31 |    rstr = ((char *)*((char * *)this) + (4ll)*((long long) i));
            return rstr;
    32 |  } /* function */ 


    15 |  char * MMSP::vector<int>::vector(MMSP::vector<int> const&)(vector<int> *this, vector<int> *v)
          {
            $$RET13A = *((int *)((char *)v + 8));
    17 |    *((int *)((char *)this + 8)) = *((int *)((char *)v + 8));
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    *((char * *)this) = $$RET13B;
    19 |    if (!(0 < *((int *)((char *)this + 8)))) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
    33 |      MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |      if (i < *((int *)((char *)v + 8))) goto lab_4;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_4:
    20 |      $$RET13B[(long long) i] = ((int *)(*((char * *)v)))[(long long) i];
    19 |      i = i + 1;
            } while (i < *((int *)((char *)this + 8)));    /* ~1 */
          lab_3:
    21 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       264            19             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       264            19             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

    45 |  char * MMSP::vector<int>::~vector()(vector<int> *this)
    47 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    48 |    operator delete[](void*)(*((char * *)this))
    49 |    *((char * *)this) = NULL;
    50 |  lab_1:
    51 |    rstr = this;
            return rstr;
          } /* function */ 


    33 |  char * MMSP::vector<double>::operator[](int) const(vector<double> *this, int i)
          {
            MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |    if (i < *((int *)((char *)this + 8))) goto lab_4;
            __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
            return;
          lab_4:
    35 |    rstr = ((char *)*((char * *)this) + (8ll)*((long long) i));
            return rstr;
    36 |  } /* function */ 


    45 |  char * MMSP::vector<double>::~vector()(vector<double> *this)
    47 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    48 |    operator delete[](void*)(*((char * *)this))
    49 |    *((char * *)this) = NULL;
    50 |  lab_1:
    51 |    rstr = this;
            return rstr;
          } /* function */ 


    72 |  char * MMSP::grid<1, MMSP::vector<double> >::grid(MMSP::grid<1, MMSP::vector<double> > const&)(grid<1,MMSP::vector<double> > *this, grid<1,MMSP::vector<double> > *GRID)
    75 |  {
            *((int *)((char *)this + 16)) = *((int *)((char *)GRID + 16));
    78 |    if (!1) goto lab_3;
            $$CIV17 = 0ll;
            do {   /* id=2 guarded */ /* ~1 */ 
              /* region = 13 */
              /* bump-normalized */
    79 |      ((int *)((char *)this + 24))[$$CIV17] = ((int *)((char *)GRID + 24))[$$CIV17];
    80 |      ((int *)((char *)this + 28))[$$CIV17] = ((int *)((char *)GRID + 28))[$$CIV17];
    78 |      $$CIV17 = $$CIV17 + 1ll;
            } while ((unsigned long long) $$CIV17 < 1ull);    /* ~1 */
          lab_3:
    84 |    *((int *)((char *)this + 20)) = 0;
    91 |    MMSP::grid<1, MMSP::vector<double> >::setup(bool)(this,0u)
    94 |    if (!1) goto lab_6;
            $$CIV18 = 0ll;
            do {   /* id=1 guarded */ /* ~4 */ 
              /* region = 12 */
              /* bump-normalized */
    95 |      ((int *)((char *)this + 56))[$$CIV18] = ((int *)((char *)GRID + 56))[$$CIV18];
    96 |      ((int *)((char *)this + 60))[$$CIV18] = ((int *)((char *)GRID + 60))[$$CIV18];
    97 |      ((double *)((char *)this + 64))[$$CIV18] = ((double *)((char *)GRID + 64))[$$CIV18];
    94 |      $$CIV18 = $$CIV18 + 1ll;
            } while ((unsigned long long) $$CIV18 < 1ull);    /* ~4 */
          lab_6:
    99 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            78             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            78             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            79                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            80                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            94             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            94             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            95                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            96                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            97                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.

   374 |  char * MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(grid<1,MMSP::vector<double> > *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV19 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.i31 = (int) $$CIV19;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.i31 < *((int *)((char *)x + 8))) goto lab_17;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$IRET9 = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.i31));
   377 |      $$RET143 = $$IRET9;
   378 |      $$PARM.x14 = $$RET143;
              $$PARM.x015 = ((int *)((char *)this + 32))[$$CIV19];
              $$PARM.x116 = ((int *)((char *)this + 36))[$$CIV19];
              $$PARM.b017 = ((int *)((char *)this + 56))[$$CIV19];
              $$PARM.b118 = ((int *)((char *)this + 60))[$$CIV19];
    44 |      if (!(*$$PARM.x14 < $$PARM.x015)) goto lab_4;
    45 |      if ($$PARM.b017 == 1) goto lab_5;
              if (!($$PARM.b017 == 4)) goto lab_6;
            lab_5:
              *$$PARM.x14 = $$PARM.x015;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b017 == 2)) goto lab_8;
              *$$PARM.x14 = *$$PARM.x14 + ($$PARM.x116 - $$PARM.x015);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b017 == 0)) goto lab_16;
              *$$PARM.x14 = $$PARM.x015 * 2 - *$$PARM.x14;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.x14 >= $$PARM.x116)) goto lab_16;
    51 |      if ($$PARM.b118 == 1) goto lab_10;
              if (!($$PARM.b118 == 4)) goto lab_11;
            lab_10:
              *$$PARM.x14 = $$PARM.x116 - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b118 == 2)) goto lab_13;
              *$$PARM.x14 = *$$PARM.x14 + ($$PARM.x015 - $$PARM.x116);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b118 == 0)) goto lab_16;
              *$$PARM.x14 = ($$PARM.x116 * 2 - *$$PARM.x14) - 2;
    57 |    lab_16:
   378 |      $$PARM.i37 = (int) $$CIV19;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.i37 < *((int *)((char *)x + 8))) goto lab_19;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$IRETC = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.i37));
   378 |      $$RET144 = $$IRETC;
   379 |      p = ((char *)p  + (long long) ((*$$RET144 - ((int *)((char *)this + 44))[$$CIV19]) * ((int *)((char *)this + 52))[$$CIV19]) * 16ll);
   377 |      $$CIV19 = ($$CIV19 + 1);
            } while ((unsigned long long) $$CIV19 < 1ull);    /* ~1 */
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


   384 |  char * MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(grid<1,MMSP::vector<double> > *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (16ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


  1173 |  void MMSP::grid<1, MMSP::vector<double> >::input(char const*, int, int)(grid<1,MMSP::vector<double> > *this, char * filename, int GHOSTS, int SINGLE)
  1174 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1176 |    std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)(&input,filename,8);
            __es.__c4@3 = 1u;
   116 |    $$VOL7 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns454..mga.input;
   192 |    __13864 = (char) (0 != (*((int *)((char *)&input + 32 + $$VOL7[-24ll / 8])) & 5));
   116 |    if (!(__13864 != 0u)) goto lab_1;
   548 |    $$RET145 = (long long) __builtin_strlen("File input error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: could not open ",$$RET145);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET146 = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET146);
          lab_20:
   548 |    $$RET147 = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET147);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns436.(&std::cerr);
  1180 |    exit(-1)
            return;
  1181 |  lab_1:
   260 |    type._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 2u;
  1185 |    std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)(&input,&type,10u);
  2280 |    std::string MMSP::name<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&)(&__13824,this)
            __es.__c4@3 = 3u;
  2241 |    if (!(*(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8) == *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns458..mga.__13824) + -1ll * 24ll / 8))) goto lab_32;
   259 |    __13934.rnn60 = 0 == __builtin_memcmp(type._M_p@0,(_Alloc_hider)._M_p@0.rns458..mga.__13824,*(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
  2303 |    if (!(__13934.rnn60 == 0)) goto lab_33;
          lab_32:
            __14166 = 0u;
            goto lab_34;
          lab_33:
            __14166 = 1u;
          lab_34:
  2280 |    __13853 = (char) (0u == __14166);
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__13824);
            if (!(__13853 != 0u)) goto lab_30;
   548 |    $$RET148 = (long long) __builtin_strlen("File read error: wrong data type (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong data type (",$$RET148);
  2503 |    __13982 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,type._M_p@0,(long long) *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET149 = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13982,").",$$RET149);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns442.(__13982);
  1188 |    exit(-2)
            return;
  1189 |  lab_30:
  1193 |    std::istream::operator>>(int&)(&input,&dimen);
  1194 |    if (!(dimen != 1)) goto lab_54;
   548 |    $$RET14A = (long long) __builtin_strlen("File read error: wrong dimension (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong dimension (",$$RET14A);
   513 |    __14082 = std::ostream::operator<<(int)(&std::cerr,dimen);
   548 |    $$RET14B = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14082,").",$$RET14B);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns444.(__14082);
  1196 |    exit(-3)
            return;
  1197 |  lab_54:
  1200 |    std::istream::operator>>(int&)(&input,(this + 16));
  1203 |    if (!1) goto lab_76;
            $$CIV1A = 0ll;
            do {   /* id=2 guarded */ /* ~74 */ 
              /* region = 31 */
              /* bump-normalized */
              $$RET14C = std::istream::operator>>(int&)(&input,((char *)this  + 24ll + (4ll)*($$CIV1A)));
  1204 |      std::istream::operator>>(int&)($$RET14C,((char *)this  + 28ll + (4ll)*($$CIV1A)));
  1203 |      $$CIV1A = $$CIV1A + 1ll;
            } while ((unsigned long long) $$CIV1A < 1ull);    /* ~74 */
          lab_76:
  1209 |    *((int *)((char *)this + 20)) = 0;
  1213 |    if (!(*((char * *)this) != NULL)) goto lab_77;
  1214 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
  1215 |    *((char * *)this) = NULL;
  1216 |  lab_77:
  1217 |    MMSP::grid<1, MMSP::vector<double> >::setup(bool)(this,(char) (SINGLE != 0))
  1220 |    if (!1) goto lab_84;
            $$CIV1B = 0ll;
            do {   /* id=1 guarded */ /* ~82 */ 
              /* region = 30 */
              /* bump-normalized */
   207 |      std::istream& std::istream::_M_extract<double>(double&)(&input,((char *)this  + 64ll + (8ll)*($$CIV1B)));
  1220 |      $$CIV1B = $$CIV1B + 1ll;
            } while ((unsigned long long) $$CIV1B < 1ull);    /* ~82 */
          lab_84:
  1224 |    std::istream::ignore(long, int)(&input,10ll,10);
  1227 |    MMSP::grid<1, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(this,&input,GHOSTS)
  1230 |    $$RET14D = std::basic_filebuf<char, std::char_traits<char> >::close()(&input._M_filebuf@10);
   565 |    if ($$RET14D != NULL) goto lab_87;
   566 |    $$VOL8 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns454..mga.input;
            $$VOL9 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns454..mga.input;
   419 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&input  + $$VOL8[-24ll / 8]),*((int *)((char *)&input + 32 + $$VOL9[-24ll / 8])) | 4)
   527 |  lab_87:
  1232 |    __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 0u;
            std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()(&input);
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1203             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1203             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275          1203                  Loop was not SIMD vectorized because it contains 
                                          operation in &input which is not  suitable for SIMD 
                                          vectorization.
       275          1203                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1220             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1220             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.

  1344 |  void MMSP::grid<1, MMSP::vector<double> >::output(char const*) const(grid<1,MMSP::vector<double> > *this, char * filename)
  1345 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1347 |    np = 1u;
  1349 |    std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(char const*, std::_Ios_Openmode)(&output,filename,48);
            __es.__c4@3 = 1u;
   116 |    $$VOLA = (basic_ofstream<char,std::char_traits<char> >)[]@0.rns485..mga.output;
   192 |    __14243 = (char) (0 != (*((int *)((char *)&output + 32 + $$VOLA[-24ll / 8])) & 5));
   116 |    if (!(__14243 != 0u)) goto lab_1;
   548 |    $$RET14E = (long long) __builtin_strlen("File output error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File output error: could not open ",$$RET14E);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET14F = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET14F);
          lab_20:
   548 |    $$RET150 = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET150);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns471.(&std::cerr);
    35 |    exit(-1)
            return;
  1354 |  lab_1:
  1356 |    std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
            __es.__c4@3 = 2u;
  1359 |    std::string MMSP::name<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&)(&type,this)
            __es.__c4@3 = 3u;
  2503 |    __14279 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),(_Alloc_hider)._M_p@0.rns489..mga.type,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns489..mga.type) + -1ll * 24ll / 8));
  2504 |    __14281 = 10u;
   458 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14279,&__14281,1ll);
            __14283 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),1);
            __14284 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14283,&__14284,1ll);
            __14286 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),*((int *)((char *)this + 16)));
            __14287 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14286,&__14287,1ll);
  1369 |    if (!1) goto lab_32;
            $$CIV1C = 0ll;
            do {   /* id=2 guarded */ /* ~30 */ 
              /* region = 19 */
              /* bump-normalized */
   506 |      __14397 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),((int *)((char *)this + 24))[$$CIV1C]);
   548 |      $$RET151 = (long long) __builtin_strlen(" ");
   510 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14397," ",$$RET151);
   513 |      __14297 = std::ostream::operator<<(int)(__14397,((int *)((char *)this + 28))[$$CIV1C]);
              __14298 = 10u;
   458 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14297,&__14298,1ll);
  1369 |      $$CIV1C = $$CIV1C + 1ll;
            } while ((unsigned long long) $$CIV1C < 1ull);    /* ~30 */
          lab_32:
  1373 |    if (!1) goto lab_44;
            $$CIV1D = 0ll;
            do {   /* id=1 guarded */ /* ~42 */ 
              /* region = 18 */
              /* bump-normalized */
   458 |      __14301 = std::ostream& std::ostream::_M_insert<double>(double)(((char *)&outstr  + 16ll),((double *)((char *)this + 64))[$$CIV1D]);
              __14302 = 10u;
              std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14301,&__14302,1ll);
  1373 |      $$CIV1D = $$CIV1D + 1ll;
            } while ((unsigned long long) $$CIV1D < 1ull);    /* ~42 */
          lab_44:
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__14230,&outstr._M_stringbuf@18)
            __es.__c4@3 = 4u;
   278 |    $$BD114 = (_Alloc_hider)._M_p@0.rns495..mga.__14230;
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__14231,&outstr._M_stringbuf@18)
            __es.__c4@3 = 5u;
   629 |    std::ostream::write(char const*, long)(&output,$$BD114,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns496..mga.__14231) + -1ll * 24ll / 8));
            __es.__c4@3 = 4u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14231);
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14230);
  1379 |    std::ostream::write(char const*, long)(&output,&np,4ll);
  1383 |    size_of_buffer = MMSP::grid<1, MMSP::vector<double> >::write_buffer(char*&) const(this,&buffer);
  1385 |    std::ostream::write(char const*, long)(&output,buffer,(long long) size_of_buffer);
  1386 |    operator delete[](void*)(buffer)
  1387 |    buffer = NULL;
  1799 |    __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 1u;
            std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
            __es.__c4@3 = 0u;
            std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()(&output);
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1369             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1369             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       220           506                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)&outstr  + 16ll) which is not  
                                          suitable for SIMD vectorization.
       220           506                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           548                  Loop was not SIMD vectorized because it contains 
                                          operation in (long long) __builtin_strlen(" ") which 
                                          is not  suitable for SIMD vectorization.
       220           548                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          operation in __14397 which is not  suitable for SIMD 
                                          vectorization.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           513                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1373             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1373             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)&outstr  + 16ll) which is not  
                                          suitable for SIMD vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           458                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       220           458                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

    72 |  char * MMSP::grid<3, MMSP::vector<double> >::grid(MMSP::grid<3, MMSP::vector<double> > const&)(grid<3,MMSP::vector<double> > *this, char * GRID)
          {
            $$RET152 = int MMSP::fields<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(GRID);
    75 |    *((int *)((char *)this + 16)) = $$RET152;
    78 |    if (!1) goto lab_3;
            $$CIV1E = 0ll;
            do {   /* id=2 guarded */ /* ~1 */ 
              /* region = 13 */
              /* bump-normalized */
              $$RET153 = int MMSP::g0<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1E);
    79 |      ((int *)((char *)this + 24))[$$CIV1E] = $$RET153;
              $$RET154 = int MMSP::g1<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1E);
    80 |      ((int *)((char *)this + 36))[$$CIV1E] = $$RET154;
    78 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < 3ull);    /* ~1 */
          lab_3:
    84 |    *((int *)((char *)this + 20)) = 0;
    91 |    MMSP::grid<3, MMSP::vector<double> >::setup(bool)(this,0u)
    94 |    if (!1) goto lab_6;
            $$CIV1F = 0ll;
            do {   /* id=1 guarded */ /* ~4 */ 
              /* region = 12 */
              /* bump-normalized */
              $$RET155 = int MMSP::b0<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1F);
    95 |      ((int *)((char *)this + 120))[$$CIV1F] = $$RET155;
              $$RET156 = int MMSP::b1<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1F);
    96 |      ((int *)((char *)this + 132))[$$CIV1F] = $$RET156;
              $$RET157 = double MMSP::dx<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1F);
    97 |      ((double *)((char *)this + 144))[$$CIV1F] = $$RET157;
    94 |      $$CIV1F = $$CIV1F + 1ll;
            } while ((unsigned long long) $$CIV1F < 3ull);    /* ~4 */
          lab_6:
    99 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            78             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            78             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            78                  Loop was not SIMD vectorized because it contains 
                                          operation in GRID which is not  suitable for SIMD 
                                          vectorization.
       275            78                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            79                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            79                  Loop was not SIMD vectorized because it contains 
                                          operation in GRID which is not  suitable for SIMD 
                                          vectorization.
       275            79                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            80                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            94             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            94             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            94                  Loop was not SIMD vectorized because it contains 
                                          operation in GRID which is not  suitable for SIMD 
                                          vectorization.
       275            94                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            95                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            95                  Loop was not SIMD vectorized because it contains 
                                          operation in GRID which is not  suitable for SIMD 
                                          vectorization.
       275            95                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            96                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            96                  Loop was not SIMD vectorized because it contains 
                                          operation in GRID which is not  suitable for SIMD 
                                          vectorization.
       275            96                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            96                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       275            97                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.

   374 |  char * MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(grid<3,MMSP::vector<double> > *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV20 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.i2B = (int) $$CIV20;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.i2B < *((int *)((char *)x + 8))) goto lab_17;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$IRET6 = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.i2B));
   377 |      $$RET158 = $$IRET6;
   378 |      $$PARM.xA = $$RET158;
              $$PARM.x0B = ((int *)((char *)this + 48))[$$CIV20];
              $$PARM.x1C = ((int *)((char *)this + 60))[$$CIV20];
              $$PARM.b0D = ((int *)((char *)this + 120))[$$CIV20];
              $$PARM.b1E = ((int *)((char *)this + 132))[$$CIV20];
    44 |      if (!(*$$PARM.xA < $$PARM.x0B)) goto lab_4;
    45 |      if ($$PARM.b0D == 1) goto lab_5;
              if (!($$PARM.b0D == 4)) goto lab_6;
            lab_5:
              *$$PARM.xA = $$PARM.x0B;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b0D == 2)) goto lab_8;
              *$$PARM.xA = *$$PARM.xA + ($$PARM.x1C - $$PARM.x0B);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b0D == 0)) goto lab_16;
              *$$PARM.xA = $$PARM.x0B * 2 - *$$PARM.xA;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.xA >= $$PARM.x1C)) goto lab_16;
    51 |      if ($$PARM.b1E == 1) goto lab_10;
              if (!($$PARM.b1E == 4)) goto lab_11;
            lab_10:
              *$$PARM.xA = $$PARM.x1C - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b1E == 2)) goto lab_13;
              *$$PARM.xA = *$$PARM.xA + ($$PARM.x0B - $$PARM.x1C);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b1E == 0)) goto lab_16;
              *$$PARM.xA = ($$PARM.x1C * 2 - *$$PARM.xA) - 2;
    57 |    lab_16:
   378 |      $$PARM.i2F = (int) $$CIV20;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.i2F < *((int *)((char *)x + 8))) goto lab_19;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$IRET8 = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.i2F));
   378 |      $$RET159 = $$IRET8;
   379 |      p = ((char *)p  + (long long) ((*$$RET159 - ((int *)((char *)this + 84))[$$CIV20]) * ((int *)((char *)this + 108))[$$CIV20]) * 16ll);
   377 |      $$CIV20 = ($$CIV20 + 1);
            } while ((unsigned long long) $$CIV20 < 3ull);    /* ~1 */
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


   384 |  char * MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(grid<3,MMSP::vector<double> > *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (16ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


  1173 |  void MMSP::grid<3, MMSP::vector<double> >::input(char const*, int, int)(grid<3,MMSP::vector<double> > *this, char * filename, int GHOSTS, int SINGLE)
  1174 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1176 |    std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)(&input,filename,8);
            __es.__c4@3 = 1u;
   116 |    $$VOLB = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns542..mga.input;
   192 |    __14536 = (char) (0 != (*((int *)((char *)&input + 32 + $$VOLB[-24ll / 8])) & 5));
   116 |    if (!(__14536 != 0u)) goto lab_1;
   548 |    $$RET15A = (long long) __builtin_strlen("File input error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: could not open ",$$RET15A);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET15B = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET15B);
          lab_20:
   548 |    $$RET15C = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET15C);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns524.(&std::cerr);
  1180 |    exit(-1)
            return;
  1181 |  lab_1:
   260 |    type._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 2u;
  1185 |    std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)(&input,&type,10u);
  2280 |    std::string MMSP::name<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(&__14496,this)
            __es.__c4@3 = 3u;
  2241 |    if (!(*(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8) == *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns546..mga.__14496) + -1ll * 24ll / 8))) goto lab_32;
   259 |    __14606.rnn6F = 0 == __builtin_memcmp(type._M_p@0,(_Alloc_hider)._M_p@0.rns546..mga.__14496,*(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
  2303 |    if (!(__14606.rnn6F == 0)) goto lab_33;
          lab_32:
            __14838 = 0u;
            goto lab_34;
          lab_33:
            __14838 = 1u;
          lab_34:
  2280 |    __14525 = (char) (0u == __14838);
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14496);
            if (!(__14525 != 0u)) goto lab_30;
   548 |    $$RET15D = (long long) __builtin_strlen("File read error: wrong data type (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong data type (",$$RET15D);
  2503 |    __14654 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,type._M_p@0,(long long) *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET15E = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14654,").",$$RET15E);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns530.(__14654);
  1188 |    exit(-2)
            return;
  1189 |  lab_30:
  1193 |    std::istream::operator>>(int&)(&input,&dimen);
  1194 |    if (!(dimen != 3)) goto lab_54;
   548 |    $$RET15F = (long long) __builtin_strlen("File read error: wrong dimension (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong dimension (",$$RET15F);
   513 |    __14754 = std::ostream::operator<<(int)(&std::cerr,dimen);
   548 |    $$RET160 = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14754,").",$$RET160);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns532.(__14754);
  1196 |    exit(-3)
            return;
  1197 |  lab_54:
  1200 |    std::istream::operator>>(int&)(&input,(this + 16));
  1203 |    if (!1) goto lab_76;
            $$CIV21 = 0ll;
            do {   /* id=2 guarded */ /* ~74 */ 
              /* region = 33 */
              /* bump-normalized */
              $$RET161 = std::istream::operator>>(int&)(&input,((char *)this  + 24ll + (4ll)*($$CIV21)));
  1204 |      std::istream::operator>>(int&)($$RET161,((char *)this  + 36ll + (4ll)*($$CIV21)));
  1203 |      $$CIV21 = $$CIV21 + 1ll;
            } while ((unsigned long long) $$CIV21 < 3ull);    /* ~74 */
          lab_76:
  1209 |    *((int *)((char *)this + 20)) = 0;
  1213 |    if (!(*((char * *)this) != NULL)) goto lab_77;
  1214 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
  1215 |    *((char * *)this) = NULL;
  1216 |  lab_77:
  1217 |    MMSP::grid<3, MMSP::vector<double> >::setup(bool)(this,(char) (SINGLE != 0))
  1220 |    if (!1) goto lab_84;
            $$CIV22 = 0ll;
            do {   /* id=1 guarded */ /* ~82 */ 
              /* region = 32 */
              /* bump-normalized */
   207 |      std::istream& std::istream::_M_extract<double>(double&)(&input,((char *)this  + 144ll + (8ll)*($$CIV22)));
  1220 |      $$CIV22 = $$CIV22 + 1ll;
            } while ((unsigned long long) $$CIV22 < 3ull);    /* ~82 */
          lab_84:
  1224 |    std::istream::ignore(long, int)(&input,10ll,10);
  1227 |    MMSP::grid<3, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(this,&input,GHOSTS)
  1230 |    if (SINGLE != 0) goto lab_85;
            MMSP::grid<3, MMSP::vector<double> >::ghostswap()(this)
          lab_85:
            $$RET162 = std::basic_filebuf<char, std::char_traits<char> >::close()(&input._M_filebuf@10);
   565 |    if ($$RET162 != NULL) goto lab_87;
   566 |    $$VOLC = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns542..mga.input;
            $$VOLD = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns542..mga.input;
   419 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&input  + $$VOLC[-24ll / 8]),*((int *)((char *)&input + 32 + $$VOLD[-24ll / 8])) | 4)
   527 |  lab_87:
  1232 |    __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 0u;
            std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()(&input);
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1203             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1203             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275          1203                  Loop was not SIMD vectorized because it contains 
                                          operation in &input which is not  suitable for SIMD 
                                          vectorization.
       275          1203                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1220             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1220             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.

  1344 |  void MMSP::grid<3, MMSP::vector<double> >::output(char const*) const(grid<3,MMSP::vector<double> > *this, char * filename)
  1345 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1347 |    np = 1u;
  1349 |    std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(char const*, std::_Ios_Openmode)(&output,filename,48);
            __es.__c4@3 = 1u;
   116 |    $$VOLE = (basic_ofstream<char,std::char_traits<char> >)[]@0.rns573..mga.output;
   192 |    __14915 = (char) (0 != (*((int *)((char *)&output + 32 + $$VOLE[-24ll / 8])) & 5));
   116 |    if (!(__14915 != 0u)) goto lab_1;
   548 |    $$RET163 = (long long) __builtin_strlen("File output error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File output error: could not open ",$$RET163);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET164 = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET164);
          lab_20:
   548 |    $$RET165 = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET165);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns559.(&std::cerr);
    35 |    exit(-1)
            return;
  1354 |  lab_1:
  1356 |    std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
            __es.__c4@3 = 2u;
  1359 |    std::string MMSP::name<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(&type,this)
            __es.__c4@3 = 3u;
  2503 |    __14951 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),(_Alloc_hider)._M_p@0.rns577..mga.type,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns577..mga.type) + -1ll * 24ll / 8));
  2504 |    __14953 = 10u;
   458 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14951,&__14953,1ll);
            __14955 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),3);
            __14956 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14955,&__14956,1ll);
            __14958 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),*((int *)((char *)this + 16)));
            __14959 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14958,&__14959,1ll);
  1369 |    if (!1) goto lab_32;
            $$CIV23 = 0ll;
            do {   /* id=2 guarded */ /* ~30 */ 
              /* region = 19 */
              /* bump-normalized */
   506 |      __15069 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),((int *)((char *)this + 24))[$$CIV23]);
   548 |      $$RET166 = (long long) __builtin_strlen(" ");
   510 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__15069," ",$$RET166);
   513 |      __14969 = std::ostream::operator<<(int)(__15069,((int *)((char *)this + 36))[$$CIV23]);
              __14970 = 10u;
   458 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14969,&__14970,1ll);
  1369 |      $$CIV23 = $$CIV23 + 1ll;
            } while ((unsigned long long) $$CIV23 < 3ull);    /* ~30 */
          lab_32:
  1373 |    if (!1) goto lab_44;
            $$CIV24 = 0ll;
            do {   /* id=1 guarded */ /* ~42 */ 
              /* region = 18 */
              /* bump-normalized */
   458 |      __14973 = std::ostream& std::ostream::_M_insert<double>(double)(((char *)&outstr  + 16ll),((double *)((char *)this + 144))[$$CIV24]);
              __14974 = 10u;
              std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14973,&__14974,1ll);
  1373 |      $$CIV24 = $$CIV24 + 1ll;
            } while ((unsigned long long) $$CIV24 < 3ull);    /* ~42 */
          lab_44:
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__14902,&outstr._M_stringbuf@18)
            __es.__c4@3 = 4u;
   278 |    $$BD123 = (_Alloc_hider)._M_p@0.rns583..mga.__14902;
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__14903,&outstr._M_stringbuf@18)
            __es.__c4@3 = 5u;
   629 |    std::ostream::write(char const*, long)(&output,$$BD123,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns584..mga.__14903) + -1ll * 24ll / 8));
            __es.__c4@3 = 4u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14903);
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14902);
  1379 |    std::ostream::write(char const*, long)(&output,&np,4ll);
  1383 |    size_of_buffer = MMSP::grid<3, MMSP::vector<double> >::write_buffer(char*&) const(this,&buffer);
  1385 |    std::ostream::write(char const*, long)(&output,buffer,(long long) size_of_buffer);
  1386 |    operator delete[](void*)(buffer)
  1387 |    buffer = NULL;
  1799 |    __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 1u;
            std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
            __es.__c4@3 = 0u;
            std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()(&output);
            return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1369             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1369             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       220           506                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)&outstr  + 16ll) which is not  
                                          suitable for SIMD vectorization.
       220           506                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           548                  Loop was not SIMD vectorized because it contains 
                                          operation in (long long) __builtin_strlen(" ") which 
                                          is not  suitable for SIMD vectorization.
       220           548                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          operation in __15069 which is not  suitable for SIMD 
                                          vectorization.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           513                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       220           513                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1373             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1373             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)&outstr  + 16ll) which is not  
                                          suitable for SIMD vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       220           458                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       220           458                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       220           458                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

          void std::vector<double, std::allocator<double> >::__dftbdt(std::_Vector_base<double, std::allocator<double> >*)(_Vector_impl *__15124)
   145 |  {
            if (!(*((char * *)__15124) != NULL)) goto lab_4;
    95 |    operator delete(void*)(*((char * *)__15124))
   110 |  lab_4:
   132 |    $$PARM.this226 = __15124;
   109 |    $$PARM.this224 = $$PARM.this226;
    73 |    $$IRET129 = $$PARM.this224;
   109 |    $$IRET12A = $$PARM.this226;
   132 |    $$IRET12B = $$PARM.this226;
   133 |    $$IRET12D = __15124;
            return;
          } /* function */ 


    67 |  char * Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(Point<int> *__first, char * __last, Point<int> *__result)
    70 |  {
            __cur = __result;
    73 |    if (!(__first != __last)) goto lab_3;
            $$CIV25 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV25 * 12ll))) goto lab_5;
    12 |      ((int *)__result)[($$CIV25 * 12ll) / 4] = ((int *)__first)[($$CIV25 * 12ll) / 4];
              ((int *)((char *)__result + 4))[($$CIV25 * 12ll) / 4] = ((int *)((char *)__first + 4))[($$CIV25 * 12ll) / 4];
              ((int *)((char *)__result + 8))[($$CIV25 * 12ll) / 4] = ((int *)((char *)__first + 8))[($$CIV25 * 12ll) / 4];
            lab_5:
    73 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) ((__last - __first) / 12ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last - __first) / 12ll) * 12ll);
          lab_3:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       305            73             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       305            73             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   582 |  char * int* std::__copy_move_backward_a<false, int*, int*>(int*, int*, int*)(char * __first, char * __last, char * __result)
   588 |  {
   575 |    __builtin_memmove(((char *)__result  - ((__last - __first) / 4ll) * 4ll),__first,(unsigned long long) (((__last - __first) / 4ll) * 4ll));
   577 |    rstr = ((char *)__result  - ((__last - __first) / 4ll) * 4ll);
            return rstr;
   596 |  } /* function */ 


   458 |  char * int* std::copy<int*, int*>(int*, int*, int*)(char * __first, char * __last, char * __result)
   392 |  {
   378 |    __builtin_memmove(__result,__first,(unsigned long long) (((__last - __first) / 4ll) * 4ll));
   437 |    rstr = ((char *)__result  + ((__last - __first) / 4ll) * 4ll);
            return rstr;
   469 |  } /* function */ 


   104 |  void __gnu_cxx::new_allocator<std::vector<Point<int>, std::allocator<Point<int> > > >::construct(std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > > const&)(char * this, char * __p, char * __val)
   101 |  {
            if (!(__p != NULL)) goto lab_2;
   105 |    std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(__p,__val);
          lab_2:
            return;
          } /* function */ 


   312 |  char * std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::~vector()(char * this)
   141 |  {
            if (!(*((char * *)this) != *((char * *)(this + 8)))) goto lab_3;
            $$CIVINIT26 = *((char * *)this);
            $$CIVFINAL26 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll);
            $$CIV26 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 12 */
              /* bump-normalized */
   145 |      if (!(((char * *)$$CIVINIT26)[($$CIV26 * 24ll) / 8] != NULL)) goto lab_4;
    95 |      operator delete(void*)(((char * *)$$CIVINIT26)[($$CIV26 * 24ll) / 8])
   110 |    lab_4:
    92 |      $$CIV26 = $$CIV26 + 1ll;
            } while ((unsigned long long) $$CIV26 < $$CIVFINAL26);    /* ~1 */
          lab_3:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_10;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_10:
   314 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       304           141             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       304           141             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   295 |  void std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > > >, std::vector<Point<int>, std::allocator<Point<int> > > const&)(char * this, aggr8 __position, char * __x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    if (!(*((char * *)(this + 8)) != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!(*((char * *)(this + 8)) != NULL)) goto lab_6;
   105 |    std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(*((char * *)(this + 8)),((char *)*((char * *)(this + 8))  - 24ll));
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + 24ll);
   306 |    std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(&__x_copy,__x);
            __es.__c4@3 = 1u;
   545 |    if (!((((char *)*((char * *)(this + 8))  - 48ll) - __position._M_current@0) / 24ll > 0ll)) goto lab_10;
            $$CIVFINAL27 = (unsigned long long) ((((char *)*((char * *)(this + 8))  - 48ll) - __position._M_current@0) / 24ll);
            $$CIV27 = 0ll;
            $$CIVSTART8 = ((char *)*((char * *)(this + 8))  - 48ll);
            $$CIVSTART9 = ((char *)*((char * *)(this + 8))  - 24ll);
            do {   /* id=3 guarded */ /* ~8 */ 
              /* region = 53 */
              /* bump-normalized */
   546 |      std::vector<Point<int>, std::allocator<Point<int> > >::operator=(std::vector<Point<int>, std::allocator<Point<int> > > const&)(((char *)$$CIVSTART9  + (-24ll - $$CIV27 * 24ll)),((char *)$$CIVSTART8  + (-24ll - $$CIV27 * 24ll)));
   545 |      $$CIV27 = $$CIV27 + 1ll;
            } while ((unsigned long long) $$CIV27 < $$CIVFINAL27);    /* ~8 */
          lab_10:
   312 |    std::vector<Point<int>, std::allocator<Point<int> > >::operator=(std::vector<Point<int>, std::allocator<Point<int> > > const&)(__position._M_current@0,&__x_copy);
   316 |    __es.__c4@3 = 0u;
   145 |    if (!(&__x_copy->(_Vector_impl)._M_start@0.rns758.$$1153$$1460 != NULL)) goto lab_61;
    95 |    operator delete(void*)(&__x_copy->(_Vector_impl)._M_start@0.rns758.$$1153$$1460)
   110 |  lab_61:
   316 |    goto lab_11;
          lab_3:
   319 |    $$PARM.__n379 = 1ull;
   538 |    if (!((unsigned long long) (768614336404564650ll - (*((char * *)(this + 8)) - *((char * *)this)) / 24ll) < 1ull)) goto lab_73;
  1137 |    std::__throw_length_error(char const*)("vector::_M_insert_aux")
            return;
          lab_73:
  1139 |    __19700 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll);
  1140 |    if ((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll) < 1ull ? &$$PARM.__n379 : &__19700->(unsigned long).rns1098.$$1440 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll) < (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll)) goto lab_75;
   538 |    if (!((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll) < 1ull ? &$$PARM.__n379 : &__19700->(unsigned long).rns1098.$$1440 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll) > 768614336404564650ull)) goto lab_76;
          lab_75:
            __19725 = 768614336404564650ull;
            goto lab_77;
          lab_76:
            __19725 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll) < 1ull ? &$$PARM.__n379 : &__19700->(unsigned long).rns1098.$$1440 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll);
          lab_77:
   686 |    __15378._M_current@0 = *((char * *)this);
   426 |    __15270 = __15378;
   140 |    if (!(__19725 != 0ull)) goto lab_13;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__19725 > 768614336404564650ull),0ll))) goto lab_15;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_15:
    89 |    __15391 = operator new(unsigned long)(__19725 * 24ull);
   107 |    __15721 = __15391;
            goto lab_14;
          lab_13:
            __15721 = NULL;
          lab_14:
   325 |    __es.__c4@3 = 2u;
    55 |    if (!(NULL != ((char *)__15721  + ((__position._M_current@0 - __15378._M_current@0) / 24ll) * 24ll))) goto lab_18;
   323 |    __new_finish = __15721;
   105 |    std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(((char *)__15721  + ((__position._M_current@0 - __15378._M_current@0) / 24ll) * 24ll),__x);
            goto __15716;
            goto __15717;
          lab_18:
   336 |    __new_finish = NULL;
   264 |    $$RET167 = std::vector<Point<int>, std::allocator<Point<int> > >* std::__uninitialized_copy<false>::uninitialized_copy<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*>(std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*)(*((char * *)this),__position._M_current@0,__15721);
            goto __15716;
            goto __15717;
   342 |    __new_finish = ((char *)$$RET167  + 24ll);
   264 |    $$RET168 = std::vector<Point<int>, std::allocator<Point<int> > >* std::__uninitialized_copy<false>::uninitialized_copy<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*>(std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET167  + 24ll));
            goto __15716;
            goto __15717;
   268 |    __new_finish = $$RET168;
   349 |    __es.__c4@3 = 0u;
            goto @15718;
   351 |  lab_39:
            /* GLAB  id_no=3960{__15716} labtype=USR_LAB          */
            __es.__c4@3 = 3u;
            __15719 = __int_register_value(29u);
            __cxa_begin_catch((char *) __15719)
   352 |    if (__new_finish != NULL) goto lab_21;
   145 |    if (!(((char * *)__15721)[(((__position._M_current@0 - __15378._M_current@0) / 24ll) * 24ll) / 8] != NULL)) goto lab_67;
    95 |    operator delete(void*)(((char * *)__15721)[(((__position._M_current@0 - __15378._M_current@0) / 24ll) * 24ll) / 8])
   110 |  lab_67:
   115 |    goto lab_23;
          lab_21:
   141 |    if (!(__15721 != __new_finish)) goto lab_26;
            $$CIV28 = 0ll;
            do {   /* id=2 guarded */ /* ~24 */ 
              /* region = 54 */
              /* bump-normalized */
   145 |      if (!(((char * *)__15721)[($$CIV28 * 24ll) / 8] != NULL)) goto lab_55;
    95 |      operator delete(void*)(((char * *)__15721)[($$CIV28 * 24ll) / 8])
   110 |    lab_55:
    92 |      $$CIV28 = $$CIV28 + 1ll;
            } while ((unsigned long long) $$CIV28 < (unsigned long long) ((__new_finish - __15721) / 24ll));    /* ~24 */
          lab_26:
   143 |  lab_23:
   145 |    if (!(__15721 != NULL)) goto lab_27;
    95 |    operator delete(void*)(__15721)
   110 |  lab_27:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @15718:
   141 |    if (!(*((char * *)this) != *((char * *)(this + 8)))) goto lab_31;
            $$CIVINIT29 = *((char * *)this);
            $$CIVFINAL29 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll);
            $$CIV29 = 0ll;
            do {   /* id=1 guarded */ /* ~29 */ 
              /* region = 55 */
              /* bump-normalized */
   145 |      if (!(((char * *)$$CIVINIT29)[($$CIV29 * 24ll) / 8] != NULL)) goto lab_49;
    95 |      operator delete(void*)(((char * *)$$CIVINIT29)[($$CIV29 * 24ll) / 8])
   110 |    lab_49:
    92 |      $$CIV29 = $$CIV29 + 1ll;
            } while ((unsigned long long) $$CIV29 < $$CIVFINAL29);    /* ~29 */
          lab_31:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_32;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_32:
   364 |    *((char * *)this) = __15721;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__15721  + (long long) (__19725 * 24ull));
   367 |  lab_11:
   368 |    return;
   351 |    /* GLAB  id_no=3961{__15717} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __15720 = __int_register_value(29u);
            _Unwind_Resume((char *) __15720)
            goto lab_39;
   368 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       109           545             3    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       304           141             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       304           141             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       304           141             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       304           141             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   912 |  unsigned long long unsigned long MMSP::approximate_voronoi<2, unsigned long>(MMSP::grid<2, unsigned long>&, std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > > const&)(grid<2,unsigned long> *grid, _Vector_base<std::vector<Point<int>,std::allocator<Point<int> > >,std::allocator<std::vector<Point<int>,std::allocator<Point<int> > > > > *seeds)
   913 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
            guard___func__43 = 1;
   931 |    $$VAMEMBER6 = &distance_grid;
            $$VAMEMBER7 = 1;
            $$VAMEMBER8 = ((int *)((char *)grid + 24))[0ll];
            $$VAMEMBER9 = ((int *)((char *)grid + 32))[0ll];
            $$VAMEMBERA = ((int *)((char *)grid + 24))[1ll];
            $$VAMEMBERB = ((int *)((char *)grid + 32))[1ll];
    48 |    *((int *)((char *)$$VAMEMBER6 + 16)) = $$VAMEMBER7;
            $$RET182 = (unsigned long long) __builtinParameterAddress(&$$VAMEMBER7);
    53 |    if (!1) goto lab_141;
    52 |    list = (char *) ($$RET182 + 11ull & 18446744073709551608ull);
    53 |    $$CIV5F = 0ll;
            do {   /* id=16 guarded */ /* ~142 */ 
              /* region = 170 */
              /* bump-normalized */
    54 |      ((int *)((char *)$$VAMEMBER6 + 24))[$$CIV5F] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)$$VAMEMBER6 + 32))[$$CIV5F] = (list + -4ll / 4)[0ll];
    53 |      $$CIV5F = $$CIV5F + 1ll;
            } while ((unsigned long long) $$CIV5F < 2ull);    /* ~142 */
          lab_141:
    61 |    *((int *)((char *)$$VAMEMBER6 + 20)) = 0;
    68 |    MMSP::grid<2, DistanceVoxel>::setup(bool)($$VAMEMBER6,0u)
   931 |    __es.__c4@3 = 1u;
   937 |    if (!(0 < distance_grid.nodes@8)) goto lab_7;
    81 |    value.distance@10 =  1.7976931348623157E+308;
    82 |    value.id@c = 0u;
   937 |    i = 0;
            do {   /* id=7 guarded */ /* ~5 */ 
              /* region = 156 */
   938 |      MMSP::grid<2, unsigned long>::position(int) const(&pos,grid,i)
              __es.__c4@3 = 2u;
   939 |      if (!1) goto lab_10;
              $$CIV2B = 0ll;
              do {   /* id=8 guarded */ /* ~8 */ 
                /* region = 155 */
                /* bump-normalized */
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV2B < &pos->(vector<int>).size@8.rns391.$$1492) goto lab_47;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_47:
   309 |        if (!(((int *)&pos->(vector<int>).data@0.rns392.$$1492)[$$CIV2B] >= ((int *)((char *)&distance_grid + 40))[$$CIV2B])) goto lab_12;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV2B < &pos->(vector<int>).size@8.rns391.$$1492) goto lab_45;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_45:
   313 |        if (!(((int *)&pos->(vector<int>).data@0.rns392.$$1492)[$$CIV2B] < ((int *)((char *)&distance_grid + 48))[$$CIV2B])) goto lab_15;
   939 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < 2ull);    /* ~8 */
            lab_10:
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if (0 < &pos->(vector<int>).size@8.rns391.$$1492) goto lab_53;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_53:
    78 |      value.x@0 = ((int *)&pos->(vector<int>).data@0.rns392.$$1492)[0ll];
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if (1 < &pos->(vector<int>).size@8.rns391.$$1492) goto lab_49;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_49:
    79 |      value.y@4 = ((int *)&pos->(vector<int>).data@0.rns392.$$1492)[1ll];
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if (2 < &pos->(vector<int>).size@8.rns391.$$1492) goto lab_51;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_51:
    80 |      value.z@8 = ((int *)&pos->(vector<int>).data@0.rns392.$$1492)[2ll];
   946 |      ((aggr24 *)&distance_grid->(grid<2,DistanceVoxel>).data@0.rns1189.$$1488)[(long long) i] = value;
   947 |      __es.__c4@3 = 1u;
    47 |      if (!(&pos->(vector<int>).data@0.rns401.$$1489 != NULL)) goto lab_59;
    48 |      operator delete[](void*)(&pos->(vector<int>).data@0.rns401.$$1489)
    49 |      &pos->(vector<int>).data@0.rns401.$$1489 = NULL;
    50 |    lab_59:
   937 |      i = i + 1;
            } while (i < distance_grid.nodes@8);    /* ~5 */
          lab_7:
    81 |    (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue = NULL;
            (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue = NULL;
            (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_end_of_storage@10.rns645..mga.queue = NULL;
    55 |    __es.__c4@3 = 3u;
   428 |    __memset(&queue._M_t@18,0,1ull);
   429 |    __memset((&queue._M_t@18 + 8),0,32ull);
   434 |    &queue._M_t@18->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns783.$$1464 = 0ull;
   446 |    ((int *)&queue._M_t@18)[8 / 4] = 0;
   447 |    ((char * *)((char *)&queue._M_t@18 + 8))[8 / 8] = NULL;
   448 |    ((char * *)((char *)&queue._M_t@18 + 16))[8 / 8] = (&queue._M_t@18 + 8);
   449 |    ((char * *)((char *)&queue._M_t@18 + 24))[8 / 8] = (&queue._M_t@18 + 8);
    22 |    __es.__c4@3 = 4u;
   533 |    if (!(0ull < (unsigned long long) ((*((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_finish@8.rns648. - *((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_start@0.rns647.) / 12ll))) goto lab_22;
   956 |    i = 0;
   533 |    do {   /* id=4 guarded */ /* ~20 */ 
              /* region = 160 */
   626 |      MMSP::vector<int> getPosition<2, int>(Point<int> const&)(&pos,((char *)*((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_start@0.rns649.  + (long long) ((unsigned long long) i * 12ull)))
              __es.__c4@3 = 5u;
   958 |      $$RET13A = &pos->(vector<int>).size@8.rns899.$$1250$$1476;
    17 |      &__15744->(vector<int>).size@8.rns397.$$1476 = &pos->(vector<int>).size@8.rns899.$$1250$$1476;
              $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |      &__15744->(vector<int>).data@0.rns398.$$1476 = $$RET13B;
    19 |      if (!(0 < &__15744->(vector<int>).size@8.rns397.$$1476)) goto lab_66;
              i = 0;
              do {   /* id=9 guarded */ /* ~67 */ 
                /* region = 157 */
    33 |        MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |        if (i < &pos->(vector<int>).size@8.rns896.$$1252$$1476) goto lab_68;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                return;
              lab_68:
    20 |        $$RET13B[(long long) i] = ((int *)&pos->(vector<int>).data@0.rns897.$$1252$$1476)[(long long) i];
    19 |        i = i + 1;
              } while (i < &__15744->(vector<int>).size@8.rns397.$$1476);    /* ~67 */
            lab_66:
   958 |      __es.__c4@3 = 6u;
              $$PARM.x39F = copyin((pali((vector<int>).rns633.UDd,&__15744)), (pali((x{vector<int>})$$1477UDd,$$PARM.x39F#)))UDb;;
   376 |      p = &distance_grid->(grid<2,DistanceVoxel>).data@0.rns1181.$$1477;
   377 |      if (!1) goto lab_74;
              $$CIV60 = 0ll;
              do {   /* id=6 guarded */ /* ~75 */ 
                /* region = 159 */
                /* bump-normalized */
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV60 < *((int *)((char *)$$PARM.x39F + 8))) goto lab_76;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_76:
    44 |        if (!(((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] < ((int *)((char *)&distance_grid + 40))[$$CIV60])) goto lab_78;
    45 |        if (((int *)((char *)&distance_grid + 88))[$$CIV60] == 1) goto lab_79;
                if (!(((int *)((char *)&distance_grid + 88))[$$CIV60] == 4)) goto lab_80;
              lab_79:
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)((char *)&distance_grid + 40))[$$CIV60];
                goto lab_90;
              lab_80:
    47 |        if (!(((int *)((char *)&distance_grid + 88))[$$CIV60] == 2)) goto lab_82;
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] + (((int *)((char *)&distance_grid + 48))[$$CIV60] - ((int *)((char *)&distance_grid + 40))[$$CIV60]);
                goto lab_90;
              lab_82:
    49 |        if (!(((int *)((char *)&distance_grid + 88))[$$CIV60] == 0)) goto lab_90;
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)((char *)&distance_grid + 40))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60];
    50 |        goto lab_90;
              lab_78:
                if (!(((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] >= ((int *)((char *)&distance_grid + 48))[$$CIV60])) goto lab_90;
    51 |        if (((int *)((char *)&distance_grid + 96))[$$CIV60] == 1) goto lab_84;
                if (!(((int *)((char *)&distance_grid + 96))[$$CIV60] == 4)) goto lab_85;
              lab_84:
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)((char *)&distance_grid + 48))[$$CIV60] - 1;
                goto lab_90;
              lab_85:
    53 |        if (!(((int *)((char *)&distance_grid + 96))[$$CIV60] == 2)) goto lab_87;
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] + (((int *)((char *)&distance_grid + 40))[$$CIV60] - ((int *)((char *)&distance_grid + 48))[$$CIV60]);
                goto lab_90;
              lab_87:
    55 |        if (!(((int *)((char *)&distance_grid + 96))[$$CIV60] == 0)) goto lab_90;
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = (((int *)((char *)&distance_grid + 48))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60]) - 2;
    57 |      lab_90:
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV60 < *((int *)((char *)$$PARM.x39F + 8))) goto lab_91;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_91:
   379 |        p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] - ((int *)((char *)&distance_grid + 64))[$$CIV60]) * ((int *)((char *)&distance_grid + 80))[$$CIV60]) * 24ll);
   377 |        $$CIV60 = $$CIV60 + 1ll;
              } while ((unsigned long long) $$CIV60 < 2ull);    /* ~75 */
            lab_74:
   382 |      copyout((pali((vector<int>).rns633.UDd,&__15744)), (pali((x{vector<int>})$$1477UDd,$$PARM.x39F)))UDb;
   958 |      __es.__c4@3 = 5u;
    47 |      if (!(&__15744->(vector<int>).data@0.rns401.$$1478 != NULL)) goto lab_63;
    48 |      operator delete[](void*)(&__15744->(vector<int>).data@0.rns401.$$1478)
    49 |      &__15744->(vector<int>).data@0.rns401.$$1478 = NULL;
    50 |    lab_63:
   959 |      if (!1) goto lab_25;
              $$CIV2C = 0ll;
              do {   /* id=5 guarded */ /* ~23 */ 
                /* region = 158 */
                /* bump-normalized */
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV2C < &pos->(vector<int>).size@8.rns391.$$1481) goto lab_55;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_55:
   313 |        if (!(((int *)&pos->(vector<int>).data@0.rns392.$$1481)[$$CIV2C] < ((int *)((char *)grid + 48))[$$CIV2C])) goto lab_27;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV2C < &pos->(vector<int>).size@8.rns391.$$1481) goto lab_57;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_57:
   309 |        if (!(((int *)&pos->(vector<int>).data@0.rns392.$$1481)[$$CIV2C] >= ((int *)((char *)grid + 40))[$$CIV2C])) goto lab_27;
   959 |        $$CIV2C = $$CIV2C + 1ll;
              } while ((unsigned long long) $$CIV2C < 2ull);    /* ~23 */
            lab_25:
    81 |      *((double *)((char *)p + 16)) =  0.0000000000000000E+000;
    82 |      *((unsigned int *)((char *)p + 12)) = (unsigned int) i;
   963 |      void MMSP::propagate_distance<2>(DistanceVoxel const*, MMSP::grid<2, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(p,&distance_grid,&queue)
   964 |      __es.__c4@3 = 4u;
    47 |      if (!(&pos->(vector<int>).data@0.rns401.$$1480 != NULL)) goto lab_61;
    48 |      operator delete[](void*)(&pos->(vector<int>).data@0.rns401.$$1480)
    49 |      &pos->(vector<int>).data@0.rns401.$$1480 = NULL;
    50 |    lab_61:
   956 |      i = i + 1;
   533 |    } while ((unsigned long long) i < (unsigned long long) ((*((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_finish@8.rns655. - *((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_start@0.rns654.) / 12ll));    /* ~20 */
          lab_22:
    31 |    MCFUNCx(&tmp,&lower,&upper,1,"r r r:","0:                  /n.mftbu   %0           /n.mftb    %1           /n.mftbu   %2           /n.cmpw    %2,%0        /n.bne     0b         /n",3,0)
   435 |    __15863._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue;
    93 |    __15861 = __15863;
   453 |    __15868._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue;
   100 |    __15862 = __15868;
   129 |    __15882 = (char) ((_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue == (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue);
    42 |    if (__15882 != 0u) goto lab_32;
            do {   /* id=3 guarded */ /* ~30 */ 
              /* region = 164 */
    74 |      DistanceVoxel_PriorityQueue::top() const::guard___func__2 = 1;
   435 |      __17464._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns761.$$1469;
              __17462 = __17464;
   453 |      __17469._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns762.$$1469;
              __17463 = __17469;
   178 |      __17481 = (char) (__17464._M_current@0 == __17469._M_current@0);
   575 |      if (!(__17481 != 0u)) goto lab_136;
              __assert_fail("!m_heap.empty()","priority_queue.h",75u,&DistanceVoxel_PriorityQueue::top() const::__func__)
              return;
            lab_136:
   969 |      p = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns761.$$1469->(DistanceVoxel *).rns760.$$1472;
   107 |      DistanceVoxel_PriorityQueue::pop()::guard___func__3 = 1;
   435 |      __17497._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1473;
              __17495 = __17497;
   453 |      __17502._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1473;
              __17496 = __17502;
   178 |      __17514 = (char) (__17497._M_current@0 == __17502._M_current@0);
   575 |      if (!(__17514 != 0u)) goto lab_94;
              __assert_fail("!m_heap.empty()","priority_queue.h",108u,&DistanceVoxel_PriorityQueue::pop()::__func__)
              return;
            lab_94:
   109 |      $$PARM.__x3B1 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1473;
  1051 |      __y = ((&queue + 24) + 8);
  1052 |      if (!(((char * *)((char *)&queue + 24 + 8))[8 / 8] != NULL)) goto lab_96;
  1050 |      __x = ((char * *)((char *)&queue + 24 + 8))[8 / 8];
  1052 |      do {   /* id=10 guarded */ /* ~97 */ 
                /* region = 163 */
   505 |        __memset(&__21476,0,1ull);
   230 |        __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553$$1473 < *$$PARM.__x3B1);
                if (!(__21489 != 0u)) goto lab_98;
   517 |        __x = *((char * *)(__x + 24));
                goto lab_99;
              lab_98:
   505 |        __memset(&__21493,0,1ull);
   230 |        __21506 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553$$1473);
                if (!(__21506 != 0u)) goto lab_100;
  1057 |        __y = __x;
   509 |        __x = *((char * *)(__x + 16));
  1066 |      lab_99:
  1052 |      } while (__x != NULL);    /* ~97 */
            lab_96:
   171 |      __21472._M_node@0 = __y;
              __21473._M_node@0 = __y;
              __21471.first@0 = __21472;
    84 |      __21471.second@8 = __21473;
              $$IRET1E5 = __21471;
              goto lab_101;
   509 |    lab_100:
   517 |      __xu.rnn170 = *((char * *)(__x + 24));
    84 |      $$PARM.__x11D = *((char * *)(__x + 16));
              $$PARM.__y11E = __x;
   985 |      if (!(*((char * *)(__x + 16)) != NULL)) goto lab_102;
              do {   /* id=11 guarded */ /* ~103 */ 
                /* region = 161 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906$$1795$$1553$$1473 < *$$PARM.__x3B1);
                if (__21720 != 0u) goto lab_104;
   987 |        $$PARM.__y11E = $$PARM.__x11D;
   509 |        $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
                goto lab_105;
              lab_104:
   517 |        $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
              lab_105:
   985 |      } while ($$PARM.__x11D != NULL);    /* ~103 */
            lab_102:
   171 |      __21706._M_node@0 = $$PARM.__y11E;
              $$IRET74 = __21706;
    84 |      __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.$$1795$$1553$$1473;
              $$PARM.__x3AB = __xu.rnn170;
              $$PARM.__y3AC = __y;
  1017 |      if (!(__xu.rnn170 != NULL)) goto lab_107;
              do {   /* id=12 guarded */ /* ~108 */ 
                /* region = 162 */
   505 |        __memset(&__21730,0,1ull);
   230 |        __21743 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907$$1795$$1553$$1473);
                if (!(__21743 != 0u)) goto lab_109;
  1019 |        $$PARM.__y3AC = $$PARM.__x3AB;
   509 |        $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
                goto lab_110;
              lab_109:
   517 |        $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
              lab_110:
  1017 |      } while ($$PARM.__x3AB != NULL);    /* ~108 */
            lab_107:
   171 |      __21729._M_node@0 = $$PARM.__y3AC;
              $$IRET1E4 = __21729;
    84 |      __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.$$1795$$1553$$1473;
              __21466.first@0 = __21467;
              __21466.second@8 = __21468;
              $$IRET1E5 = __21466;
  1070 |    lab_101:
  1372 |      __p = &$$IRET1E5->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> > >).rns1304.$$1553$$1473;
  1373 |      __old_size = ((unsigned long long *)((char *)&queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns1307.$$1553$$1473;
  1374 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)((&queue + 24),__p.first@0,__p.second@8)
   110 |      if (1 == (int) (__old_size - ((unsigned long long *)((char *)&queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns1307.$$1553$$1473)) goto lab_113;
              __assert_fail("success == 1","priority_queue.h",110u,&DistanceVoxel_PriorityQueue::pop()::__func__)
              return;
            lab_113:
   686 |      __17521._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1473;
   444 |      __17518 = __17521;
   747 |      __17525._M_current@0 = ((char *)__17521._M_current@0  - 8ll);
   298 |      __17520 = __17525;
   696 |      &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1473->(DistanceVoxel *).rns769.$$1473 = *__17525._M_current@0;
   766 |      &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1473 = ((char *)&queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1473  - 8ll);
   113 |      DistanceVoxel_PriorityQueue::percolate_down(int)(&queue,0)
   971 |      void MMSP::propagate_distance<2>(DistanceVoxel const*, MMSP::grid<2, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(p,&distance_grid,&queue)
   435 |      __15863._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue;
    93 |      __15861 = __15863;
   453 |      __15868._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue;
   100 |      __15862 = __15868;
   129 |      __15882.rnn99 = (char) ((_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue == (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue);
    42 |    } while (!(__15882.rnn99 != 0u));   /* ~30 */
          lab_32:
    31 |    MCFUNCx(&tmp,&lower,&upper,1,"r r r:","0:                  /n.mftbu   %0           /n.mftb    %1           /n.mftbu   %2           /n.cmpw    %2,%0        /n.bne     0b         /n",3,0)
            MCFUNCx(&tmp,&lower,&upper,1,"r r r:","0:                  /n.mftbu   %0           /n.mftb    %1           /n.mftbu   %2           /n.cmpw    %2,%0        /n.bne     0b         /n",3,0)
   435 |    __16078._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue;
    93 |    __16076 = __16078;
   453 |    __16083._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue;
   100 |    __16077 = __16083;
   129 |    __16097 = (char) ((_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue == (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue);
    42 |    if (__16097 != 0u) goto lab_35;
            do {   /* id=2 guarded */ /* ~33 */ 
              /* region = 168 */
    74 |      DistanceVoxel_PriorityQueue::top() const::guard___func__2 = 1;
   435 |      __17464._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns761.$$1469;
              __17462 = __17464;
   453 |      __17469._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns762.$$1469;
              __17463 = __17469;
   178 |      __17481 = (char) (__17464._M_current@0 == __17469._M_current@0);
   575 |      if (!(__17481 != 0u)) goto lab_134;
              __assert_fail("!m_heap.empty()","priority_queue.h",75u,&DistanceVoxel_PriorityQueue::top() const::__func__)
              return;
            lab_134:
  1027 |      p = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns761.$$1469->(DistanceVoxel *).rns760.$$1469;
   107 |      DistanceVoxel_PriorityQueue::pop()::guard___func__3 = 1;
   435 |      __17497._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1470;
              __17495 = __17497;
   453 |      __17502._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1470;
              __17496 = __17502;
   178 |      __17514 = (char) (__17497._M_current@0 == __17502._M_current@0);
   575 |      if (!(__17514 != 0u)) goto lab_114;
              __assert_fail("!m_heap.empty()","priority_queue.h",108u,&DistanceVoxel_PriorityQueue::pop()::__func__)
              return;
            lab_114:
   109 |      $$PARM.__x3B1 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1470;
  1051 |      __y = ((&queue + 24) + 8);
  1052 |      if (!(((char * *)((char *)&queue + 24 + 8))[8 / 8] != NULL)) goto lab_116;
  1050 |      __x = ((char * *)((char *)&queue + 24 + 8))[8 / 8];
  1052 |      do {   /* id=13 guarded */ /* ~117 */ 
                /* region = 167 */
   505 |        __memset(&__21476,0,1ull);
   230 |        __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553$$1470 < *$$PARM.__x3B1);
                if (!(__21489 != 0u)) goto lab_118;
   517 |        __x = *((char * *)(__x + 24));
                goto lab_119;
              lab_118:
   505 |        __memset(&__21493,0,1ull);
   230 |        __21506 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553$$1470);
                if (!(__21506 != 0u)) goto lab_120;
  1057 |        __y = __x;
   509 |        __x = *((char * *)(__x + 16));
  1066 |      lab_119:
  1052 |      } while (__x != NULL);    /* ~117 */
            lab_116:
   171 |      __21472._M_node@0 = __y;
              __21473._M_node@0 = __y;
              __21471.first@0 = __21472;
    84 |      __21471.second@8 = __21473;
              $$IRET1E5 = __21471;
              goto lab_121;
   509 |    lab_120:
   517 |      __xu.rnn170 = *((char * *)(__x + 24));
    84 |      $$PARM.__x11D = *((char * *)(__x + 16));
              $$PARM.__y11E = __x;
   985 |      if (!(*((char * *)(__x + 16)) != NULL)) goto lab_122;
              do {   /* id=14 guarded */ /* ~123 */ 
                /* region = 165 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906$$1795$$1553$$1470 < *$$PARM.__x3B1);
                if (__21720 != 0u) goto lab_124;
   987 |        $$PARM.__y11E = $$PARM.__x11D;
   509 |        $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
                goto lab_125;
              lab_124:
   517 |        $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
              lab_125:
   985 |      } while ($$PARM.__x11D != NULL);    /* ~123 */
            lab_122:
   171 |      __21706._M_node@0 = $$PARM.__y11E;
              $$IRET74 = __21706;
    84 |      __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.$$1795$$1553$$1470;
              $$PARM.__x3AB = __xu.rnn170;
              $$PARM.__y3AC = __y;
  1017 |      if (!(__xu.rnn170 != NULL)) goto lab_127;
              do {   /* id=15 guarded */ /* ~128 */ 
                /* region = 166 */
   505 |        __memset(&__21730,0,1ull);
   230 |        __21743 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907$$1795$$1553$$1470);
                if (!(__21743 != 0u)) goto lab_129;
  1019 |        $$PARM.__y3AC = $$PARM.__x3AB;
   509 |        $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
                goto lab_130;
              lab_129:
   517 |        $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
              lab_130:
  1017 |      } while ($$PARM.__x3AB != NULL);    /* ~128 */
            lab_127:
   171 |      __21729._M_node@0 = $$PARM.__y3AC;
              $$IRET1E4 = __21729;
    84 |      __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.$$1795$$1553$$1470;
              __21466.first@0 = __21467;
              __21466.second@8 = __21468;
              $$IRET1E5 = __21466;
  1070 |    lab_121:
  1372 |      __p = &$$IRET1E5->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> > >).rns1304.$$1553$$1470;
  1373 |      __old_size = ((unsigned long long *)((char *)&queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns1307.$$1553$$1470;
  1374 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)((&queue + 24),__p.first@0,__p.second@8)
   110 |      if (1 == (int) (__old_size - ((unsigned long long *)((char *)&queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns1307.$$1553$$1470)) goto lab_133;
              __assert_fail("success == 1","priority_queue.h",110u,&DistanceVoxel_PriorityQueue::pop()::__func__)
              return;
            lab_133:
   686 |      __17521._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1470;
   444 |      __17518 = __17521;
   747 |      __17525._M_current@0 = ((char *)__17521._M_current@0  - 8ll);
   298 |      __17520 = __17525;
   696 |      &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1470->(DistanceVoxel *).rns769.$$1470 = *__17525._M_current@0;
   766 |      &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1470 = ((char *)&queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1470  - 8ll);
   113 |      DistanceVoxel_PriorityQueue::percolate_down(int)(&queue,0)
  1029 |      void MMSP::propagate_distance<2>(DistanceVoxel const*, MMSP::grid<2, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(p,&distance_grid,&queue)
   435 |      __16078._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue;
    93 |      __16076 = __16078;
   453 |      __16083._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue;
   100 |      __16077 = __16083;
   129 |      __16097.rnn98 = (char) ((_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue == (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue);
    42 |    } while (!(__16097.rnn98 != 0u));   /* ~33 */
          lab_35:
    31 |    MCFUNCx(&tmp,&lower,&upper,1,"r r r:","0:                  /n.mftbu   %0           /n.mftb    %1           /n.mftbu   %2           /n.cmpw    %2,%0        /n.bne     0b         /n",3,0)
  1034 |    if (!(0 < distance_grid.nodes@8)) goto lab_38;
            i = 0;
            do {   /* id=1 guarded */ /* ~36 */ 
              /* region = 169 */
    76 |      ((unsigned long long *)(*((char * *)grid)))[(long long) i] = (unsigned long long) *(((unsigned int *)((char *)&distance_grid->(grid<2,DistanceVoxel>).data@0.rns1189.$$1488 + 12)) + (long long) i * 24ll / 4);
  1034 |      i = i + 1;
            } while (i < distance_grid.nodes@8);    /* ~36 */
          lab_38:
  1037 |    __es.__c4@3 = 1u;
            DistanceVoxel_PriorityQueue::~DistanceVoxel_PriorityQueue()(&queue);
            __es.__c4@3 = 0u;
   331 |    if (!(&distance_grid->(grid<2,DistanceVoxel>).data@0.rns1177.$$1466 != NULL)) goto lab_138;
   332 |    operator delete[](void*)(&distance_grid->(grid<2,DistanceVoxel>).data@0.rns1177.$$1466)
   333 |    &distance_grid->(grid<2,DistanceVoxel>).data@0.rns1177.$$1466 = NULL;
   334 |  lab_138:
  1157 |    rstr = ((lower | upper << 32) - (lower | upper << 32)) + ((lower | upper << 32) - (lower | upper << 32));
            return rstr;
   309 |  lab_27:
            __assert_fail("(pos[j] < x1(grid, j)) && (pos[j] >= x0(grid, j))","tessellate.hpp",959u,&__func__)
            return rstr;
          lab_12:
            __assert_fail("pos[d] >= x0(distance_grid, d)","tessellate.hpp",940u,&__func__)
            return rstr;
   313 |  lab_15:
            __assert_fail("pos[d] < x1(distance_grid, d)","tessellate.hpp",941u,&__func__)
            return rstr;
  1158 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            53            16    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)$$VAMEMBER6 + 
                                          (4ll)*($$CIV5F)) with  non-vectorizable strides.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)$$VAMEMBER6 
                                          + (4ll)*($$CIV5F)).
       275            55                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)(char *) ((unsigned long long) 
                                          ((char *)(char *) ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll) + 7ull & 
                                          18446744073709551608ull)  + 8ll) which is not  
                                          suitable for SIMD vectorization.
       275            55                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)$$VAMEMBER6 + 
                                          (4ll)*($$CIV5F)) with  non-vectorizable strides.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)$$VAMEMBER6 
                                          + (4ll)*($$CIV5F)).
       297           937             7    Loop cannot be normalized and no loop optimizations 
                                          applied.
       297           937             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       297           937             7    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           939             8    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           939             8    Loop was not SIMD vectorized because it contains 
                                          control flow.
       306           533             4    Loop cannot be normalized and no loop optimizations 
                                          applied.
       306           533             4    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       306           533             4    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19             9    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19             9    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275           377             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           377             6    Loop was not SIMD vectorized because it contains 
                                          control flow.
       297           959             5    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           959             5    Loop was not SIMD vectorized because it contains 
                                          control flow.
       356            42             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       356            42             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1052            10    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1052            10    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985            11    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            11    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312          1017            12    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1017            12    Loop was not SIMD vectorized because it contains 
                                          control flow.
       356            42             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       356            42             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1052            13    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1052            13    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985            14    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            14    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312          1017            15    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1017            15    Loop was not SIMD vectorized because it contains 
                                          control flow.
       297          1034             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       297          1034             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   478 |  void void std::vector<Point<int>, std::allocator<Point<int> > >::_M_range_insert<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > > >(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, std::forward_iterator_tag)(char * this, aggr8 __position, aggr8 __first, aggr8 __last, aggr1 NONAME_4236)
   481 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   482 |    if (!(__first._M_current@0 != __last._M_current@0)) goto lab_3;
   161 |    __memset(&__16294,0,1ull);
   485 |    if (!((unsigned long long) ((*((char * *)(this + 16)) - *((char * *)(this + 8))) / 12ll) >= (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll))) goto lab_5;
   686 |    __16315._M_current@0 = *((char * *)(this + 8));
   444 |    __16247 = __16315;
   489 |    __old_finish = *((char * *)(this + 8));
   490 |    if (!((unsigned long long) ((*((char * *)(this + 8)) - __position._M_current@0) / 12ll) > (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll))) goto lab_7;
    70 |    __cur = *((char * *)(this + 8));
    73 |    if (!(((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll != 0ll)) goto lab_45;
            $$CIVINIT25 = ((char *)*((char * *)(this + 8))  - ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
            $$CIV25 = 0ll;
            do {   /* id=4 guarded */ /* ~46 */ 
              /* region = 55 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)*((char * *)(this + 8))  + $$CIV25 * 12ll))) goto lab_47;
    12 |      ((int *)(*((char * *)(this + 8))))[($$CIV25 * 12ll) / 4] = ((int *)$$CIVINIT25)[($$CIV25 * 12ll) / 4];
              ((int *)((char *)*((char * *)(this + 8)) + 4))[($$CIV25 * 12ll) / 4] = ((int *)((char *)$$CIVINIT25 + 4))[($$CIV25 * 12ll) / 4];
              ((int *)((char *)*((char * *)(this + 8)) + 8))[($$CIV25 * 12ll) / 4] = ((int *)((char *)$$CIVINIT25 + 8))[($$CIV25 * 12ll) / 4];
            lab_47:
    73 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) ((((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll) / 12ll));    /* ~46 */
            __cur = ((char *)*((char * *)(this + 8))  + ((((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll) / 12ll) * 12ll);
          lab_45:
   496 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
   545 |    if (!((((char *)__old_finish  - ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll) - __position._M_current@0) / 12ll > 0ll)) goto lab_11;
            $$CIV2D = 0ll;
            do {   /* id=3 guarded */ /* ~9 */ 
              /* region = 56 */
              /* bump-normalized */
   546 |      *((aggr12 *)((char *)__old_finish + -12ll - $$CIV2D * 12ll)) = *((aggr12 *)((char *)__old_finish + - ((1ll + ($$CIV2D + (__last._M_current@0 - __first._M_current@0) / 12ll)) * 12ll)));
   545 |      $$CIV2D = $$CIV2D + 1ll;
            } while ((unsigned long long) $$CIV2D < (unsigned long long) ((((char *)__old_finish  - ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll) - __position._M_current@0) / 12ll));    /* ~9 */
          lab_11:
   459 |    __16785 = __position._M_current@0;
   341 |    if (!((__last._M_current@0 - __first._M_current@0) / 12ll > 0ll)) goto lab_14;
            $$CIV2E = 0ll;
            do {   /* id=2 guarded */ /* ~12 */ 
              /* region = 57 */
              /* bump-normalized */
   343 |      __position._M_current@0[$$CIV2E] = __first._M_current@0[$$CIV2E];
   341 |      $$CIV2E = $$CIV2E + 1ll;
            } while ((unsigned long long) $$CIV2E < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll));    /* ~12 */
            __16785 = ((char *)__position._M_current@0  + ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
          lab_14:
   518 |    __16773 = __16785;
   500 |    goto lab_19;
          lab_7:
   503 |    __mid = __first;
   161 |    __memset(&__16434,0,1ull);
   735 |    __16832._M_current@0.off0 = ((char *)__16832._M_current@0.off0  + ((__16315._M_current@0 - __position._M_current@0) / 12ll) * 12ll);
   115 |    Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(__mid,__last,*((char * *)(this + 8)));
   508 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + (((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll - ((__16315._M_current@0 - __position._M_current@0) / 12ll) * 12ll));
    70 |    __cur = *((char * *)(this + 8));
    73 |    if (!(__position._M_current@0 != __old_finish)) goto lab_49;
            $$CIV25 = 0ll;
            do {   /* id=5 guarded */ /* ~50 */ 
              /* region = 58 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)*((char * *)(this + 8))  + $$CIV25 * 12ll))) goto lab_51;
    12 |      ((int *)(*((char * *)(this + 8))))[($$CIV25 * 12ll) / 4] = ((int *)__position._M_current@0)[($$CIV25 * 12ll) / 4];
              ((int *)((char *)*((char * *)(this + 8)) + 4))[($$CIV25 * 12ll) / 4] = ((int *)((char *)__position._M_current@0 + 4))[($$CIV25 * 12ll) / 4];
              ((int *)((char *)*((char * *)(this + 8)) + 8))[($$CIV25 * 12ll) / 4] = ((int *)((char *)__position._M_current@0 + 8))[($$CIV25 * 12ll) / 4];
            lab_51:
    73 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) ((__old_finish - __position._M_current@0) / 12ll));    /* ~50 */
            __cur = ((char *)*((char * *)(this + 8))  + ((__old_finish - __position._M_current@0) / 12ll) * 12ll);
          lab_49:
   513 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + ((__16315._M_current@0 - __position._M_current@0) / 12ll) * 12ll);
   459 |    __16821 = __position._M_current@0;
   341 |    if (!((__16832._M_current@0.off0 - __first._M_current@0) / 12ll > 0ll)) goto lab_18;
            $$CIV2F = 0ll;
            do {   /* id=1 guarded */ /* ~16 */ 
              /* region = 59 */
              /* bump-normalized */
   343 |      __position._M_current@0[$$CIV2F] = __first._M_current@0[$$CIV2F];
   341 |      $$CIV2F = $$CIV2F + 1ll;
            } while ((unsigned long long) $$CIV2F < (unsigned long long) ((__16832._M_current@0.off0 - __first._M_current@0) / 12ll));    /* ~16 */
            __16821 = ((char *)__position._M_current@0  + ((__16832._M_current@0.off0 - __first._M_current@0) / 12ll) * 12ll);
          lab_18:
   518 |    __16809 = __16821;
   516 |    goto lab_19;
          lab_5:
   519 |    $$PARM.__n385 = (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll);
   538 |    if (!((unsigned long long) (1537228672809129301ll - (*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll))) goto lab_53;
  1137 |    std::__throw_length_error(char const*)("vector::_M_range_insert")
            return;
          lab_53:
  1139 |    __12982 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll);
  1140 |    if ((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll) ? &$$PARM.__n385 : &__12982->(unsigned long).rns249.$$1495 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll)) goto lab_55;
   538 |    if (!((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll) ? &$$PARM.__n385 : &__12982->(unsigned long).rns249.$$1495 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) > 1537228672809129301ull)) goto lab_56;
          lab_55:
            __13007 = 1537228672809129301ull;
            goto lab_57;
          lab_56:
            __13007 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll) < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll) ? &$$PARM.__n385 : &__12982->(unsigned long).rns249.$$1495 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 12ll);
          lab_57:
   140 |    if (!(__13007 != 0ull)) goto lab_21;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__13007 > 1537228672809129301ull),0ll))) goto lab_23;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_23:
    89 |    __16565 = operator new(unsigned long)(__13007 * 12ull);
   107 |    __16844 = __16565;
            goto lab_22;
          lab_21:
            __16844 = NULL;
          lab_22:
   522 |    __new_finish = __16844;
   524 |    __es.__c4@3 = 1u;
   264 |    $$RET171 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(*((char * *)this),__position._M_current@0,__16844);
            goto __16839;
            goto __16840;
   268 |    __new_finish = $$RET171;
   257 |    $$RET172 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(__first,__last,$$RET171);
            goto __16839;
            goto __16840;
            __new_finish = $$RET172;
   264 |    $$RET173 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(__position._M_current@0,*((char * *)(this + 8)),$$RET172);
            goto __16839;
            goto __16840;
   268 |    __new_finish = $$RET173;
   539 |    __es.__c4@3 = 0u;
            goto @16841;
   541 |  lab_35:
            /* GLAB  id_no=4243{__16839} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __16842 = __int_register_value(29u);
            __cxa_begin_catch((char *) __16842)
   145 |    if (!(__16844 != NULL)) goto lab_26;
    95 |    operator delete(void*)(__16844)
   110 |  lab_26:
   545 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @16841:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_28;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_28:
   552 |    *((char * *)this) = __16844;
   553 |    *((char * *)(this + 8)) = __new_finish;
   554 |    *((char * *)(this + 16)) = ((char *)__16844  + (long long) (__13007 * 12ull));
   555 |  lab_19:
   556 |  lab_3:
   557 |    return;
   541 |    /* GLAB  id_no=4249{__16840} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __16843 = __int_register_value(29u);
            _Unwind_Resume((char *) __16843)
            goto lab_35;
   557 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       305            73             4    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       305            73             4    Loop was not SIMD vectorized because it contains 
                                          control flow.
       109           546                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       109           546                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       109           343                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       109           343                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       305            73             5    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       305            73             5    Loop was not SIMD vectorized because it contains 
                                          control flow.
       109           343                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       109           343                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

   312 |  char * std::vector<double, std::allocator<double> >::~vector()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this226 = this;
   109 |    $$PARM.this224 = $$PARM.this226;
    73 |    $$IRET129 = $$PARM.this224;
   109 |    $$IRET12A = $$PARM.this226;
   132 |    $$IRET12B = $$PARM.this226;
   133 |    $$IRET12C = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   295 |  void std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(char * this, aggr8 __position, long long *__x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    if (!(*((char * *)(this + 8)) != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!(*((char * *)(this + 8)) != NULL)) goto lab_6;
   105 |    *((char * *)(this + 8))->(double).rns690. = ((double *)((char *)*((char * *)(this + 8))  - 8ll))->(double).rns691.;
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + 8ll);
   306 |    __x_copy = *__x;
   638 |    $$PARM.__first3FF = __position._M_current@0;
            $$PARM.__last400 = ((char *)*((char * *)(this + 8))  - 16ll);
            $$PARM.__result401 = ((char *)*((char * *)(this + 8))  - 8ll);
   575 |    __builtin_memmove(((char *)$$PARM.__result401  - (($$PARM.__last400 - $$PARM.__first3FF) / 8ll) * 8ll),$$PARM.__first3FF,(unsigned long long) ((($$PARM.__last400 - $$PARM.__first3FF) / 8ll) * 8ll));
   577 |    $$IRET211 = ((char *)$$PARM.__result401  - (($$PARM.__last400 - $$PARM.__first3FF) / 8ll) * 8ll);
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_8;
          lab_3:
   319 |    $$PARM.__n403 = 1ull;
            $$PARM.__s404 = "vector::_M_insert_aux";
   538 |    if (!((unsigned long long) (2305843009213693951ll - (*((char * *)(this + 8)) - *((char * *)this)) / 8ll) < $$PARM.__n403)) goto lab_35;
  1137 |    std::__throw_length_error(char const*)($$PARM.__s404)
            return;
          lab_35:
  1139 |    __19763 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll);
   215 |    __19774 = ((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll) < $$PARM.__n403 ? &$$PARM.__n403 : &__19763);
  1140 |    if (*__19774 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll) < (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll)) goto lab_37;
   538 |    if (!(*__19774 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll) > 2305843009213693951ull)) goto lab_38;
          lab_37:
            __19788 = 2305843009213693951ull;
            goto lab_39;
          lab_38:
            __19788 = *__19774 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll);
          lab_39:
            $$IRET212 = __19788;
   319 |    __len = $$IRET212;
   686 |    __16991._M_current@0 = *((char * *)this);
   426 |    __16913 = __16991;
   858 |    $$FSM3 = (__normal_iterator<double *,std::vector<double,std::allocator<double> > >)._M_current@0.rns708..mga.__16913;
   140 |    if (!(__len != 0ull)) goto lab_10;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__len > 2305843009213693951ull),0ll))) goto lab_12;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_12:
    89 |    __17004 = operator new(unsigned long)(__len * 8ull);
   107 |    __17204 = __17004;
            goto lab_11;
          lab_10:
            __17204 = NULL;
          lab_11:
   858 |    __elems_before = (unsigned long long) ((__position._M_current@0 - $$FSM3) / 8ll);
   325 |    __es.__c4@3 = 1u;
    55 |    if (!(NULL != ((char *)__17204  + (long long) (__elems_before * 8ull)))) goto lab_15;
   105 |    *((double *)((char *)__17204 + (long long) (__elems_before * 8ull))) = *__x;
          lab_15:
   336 |    __new_finish = NULL;
   264 |    $$RET174 = double* std::copy<double*, double*>(double*, double*, double*)(*((char * *)this),__position._M_current@0,__17204);
            goto __17199;
            goto __17200;
   342 |    __new_finish = ((char *)$$RET174  + 8ll);
   264 |    $$RET175 = double* std::copy<double*, double*>(double*, double*, double*)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET174  + 8ll));
            goto __17199;
            goto __17200;
   268 |    __new_finish = $$RET175;
   349 |    __es.__c4@3 = 0u;
            goto @17201;
   351 |  lab_30:
            /* GLAB  id_no=4480{__17199} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __17202 = __int_register_value(29u);
            __cxa_begin_catch((char *) __17202)
   145 |    if (!(__17204 != NULL)) goto lab_21;
    95 |    operator delete(void*)(__17204)
   110 |  lab_21:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @17201:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_23;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_23:
   364 |    *((char * *)this) = __17204;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__17204  + (long long) (__len * 8ull));
   367 |  lab_8:
   368 |    return;
   351 |    /* GLAB  id_no=4486{__17200} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __17203 = __int_register_value(29u);
            _Unwind_Resume((char *) __17203)
            goto lab_30;
   368 |  } /* function */ 


   529 |  void void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(char * GRID)
   531 |  {
            $$PARM.this407 = GRID;
   532 |    return;
          } /* function */ 


   523 |  void MMSP::vector<int> MMSP::position<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(char * __classReturn, char * GRID, int index)
   525 |  {
            MMSP::grid<1, MMSP::vector<double> >::position(int) const(__classReturn,GRID,index)
   526 |    return;
          } /* function */ 


    66 |  double double MMSP::f<double>(double, double)(double c, double phi)
    74 |  {
            rstr = _fmadd@47( 5.0000000000000000E-001 * _fmsub@49( 2.0000000000000000E+000,c, 1.8999999999999999E+000),phi,_fmadd@47( 2.9999999999999998E-001,_fnmsub@53( 2.0000000000000000E+000, 7.5000000000000000E-001,_fmsub@49( 4.0000000000000000E+000,c, 5.0000000000000000E-001)),( 5.0000000000000000E-001 * _fmsub@49( 2.0000000000000000E+000,c, 1.0000000000000000E-001)) * ( 1.0000000000000000E+000 - phi)));
            return rstr;
    75 |  } /* function */ 


    77 |  void std::vector<double, std::allocator<double> > MMSP::dE<double>(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)(char * deltas, double c, _Vector_base<double,std::allocator<double> > *phases, _Vector_base<double,std::allocator<double> > *grains)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    81 |    *((char * *)deltas) = NULL;
            *((char * *)(deltas + 8)) = NULL;
            *((char * *)(deltas + 16)) = NULL;
    85 |    __es.__c4@3 = 1u;
   734 |    __17207 =  0.0000000000000000E+000;
   735 |    if (!(*((char * *)(deltas + 8)) != *((char * *)(deltas + 16)))) goto lab_1;
   169 |    if (!(*((char * *)(deltas + 8)) != NULL)) goto lab_4;
   105 |    *((char * *)(deltas + 8))->(double).rns713. =  0.0000000000000000E+000;
          lab_4:
   738 |    *((char * *)(deltas + 8)) = ((char *)*((char * *)(deltas + 8))  + 8ll);
   739 |    goto lab_6;
          lab_1:
   686 |    __17268._M_current@0 = *((char * *)(deltas + 8));
   444 |    std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(deltas,__17268,&__17207)
          lab_6:
    87 |    original = _fmadd@47( 5.0000000000000000E-001 * ((c -  9.4999999999999995E-001) * (c -  9.4999999999999995E-001)),*((char * *)phases)->(double).rns715.,_fmadd@47( 2.9999999999999998E-001,_fmadd@47(c -  2.5000000000000000E-001,c -  2.5000000000000000E-001,(c -  7.5000000000000000E-001) * (c -  7.5000000000000000E-001)),( 5.0000000000000000E-001 * ((c -  5.0000000000000002E-002) * (c -  5.0000000000000002E-002))) * ( 1.0000000000000000E+000 - *((char * *)phases)->(double).rns715.)));
    88 |    if (!1) goto lab_9;
            $$CIV30 = 0ll;
            do {   /* id=3 guarded */ /* ~7 */ 
              /* region = 28 */
              /* bump-normalized */
    89 |      original = original + (double) ((char) (*((double *)((char *)(*((char * *)grains)) + (long long) ((unsigned long long) ((int) ($$CIV30 + 1ll)) * 8ull))) != *((char * *)grains)->(double).rns716.));
    88 |      $$CIV30 = $$CIV30 + 1ll;
            } while ((unsigned long long) $$CIV30 < 4ull);    /* ~7 */
          lab_9:
    91 |    if (!1) goto lab_12;
            $$CIV32 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 27 */
              /* bump-normalized */
    92 |      changed = _fmadd@47( 5.0000000000000000E-001 * ((c -  9.4999999999999995E-001) * (c -  9.4999999999999995E-001)),*((double *)((char *)(*((char * *)phases)) + (long long) ((unsigned long long) ((int) ($$CIV32 + 1ll)) * 8ull))),_fmadd@47( 2.9999999999999998E-001,_fmadd@47(c -  2.5000000000000000E-001,c -  2.5000000000000000E-001,(c -  7.5000000000000000E-001) * (c -  7.5000000000000000E-001)),( 5.0000000000000000E-001 * ((c -  5.0000000000000002E-002) * (c -  5.0000000000000002E-002))) * ( 1.0000000000000000E+000 - *((double *)((char *)(*((char * *)phases)) + (long long) ((unsigned long long) ((int) ($$CIV32 + 1ll)) * 8ull))))));
    93 |      if (!1) goto lab_15;
              $$CIV31 = 0ll;
              do {   /* id=2 guarded */ /* ~13 */ 
                /* region = 26 */
                /* bump-normalized */
    94 |        changed = changed + (double) ((char) (*((double *)((char *)(*((char * *)grains)) + (long long) ((unsigned long long) ((int) ($$CIV32 + 1ll)) * 8ull))) != *((double *)((char *)(*((char * *)grains)) + (long long) ((unsigned long long) ((int) ($$CIV31 + 1ll)) * 8ull)))));
    93 |        $$CIV31 = $$CIV31 + 1ll;
              } while ((unsigned long long) $$CIV31 < 4ull);    /* ~13 */
            lab_15:
   734 |      __17208 = changed - original;
   735 |      if (!(*((char * *)(deltas + 8)) != *((char * *)(deltas + 16)))) goto lab_16;
   169 |      if (!(*((char * *)(deltas + 8)) != NULL)) goto lab_19;
   105 |      *((char * *)(deltas + 8))->(double).rns719. = changed - original;
            lab_19:
   738 |      *((char * *)(deltas + 8)) = ((char *)*((char * *)(deltas + 8))  + 8ll);
   739 |      goto lab_21;
            lab_16:
   686 |      __17254._M_current@0 = *((char * *)(deltas + 8));
   444 |      std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(deltas,__17254,&__17208)
            lab_21:
    91 |      $$CIV32 = $$CIV32 + 1ll;
            } while ((unsigned long long) $$CIV32 < 4ull);    /* ~10 */
          lab_12:
    99 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
         0            88             3    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0            89                  Loop was not SIMD vectorized because it contains 
                                          operation in original + (double) ((char) (((double 
                                          *)((char 
                                          *)grains->(_Vector_base<double,std::allocator<double> 
                                          >)._M_start@0.rns728.  + (long long) ((unsigned long 
                                          long) ((int) ($$CIV30 + 1ll)) * 
                                          8ull)))->(double).rns716. != 
                                          grains->(_Vector_base<double,std::allocator<double> 
                                          >)._M_start@0.rns728.->(double).rns716.)) which is 
                                          not  suitable for SIMD vectorization.
         0            89                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
         0            89                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            89                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0            89                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
         0            91             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
         0            93             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          operation in changed + (double) ((char) (((double 
                                          *)((char 
                                          *)grains->(_Vector_base<double,std::allocator<double> 
                                          >)._M_start@0.rns728.  + (long long) ((unsigned long 
                                          long) ((int) ($$CIV32 + 1ll)) * 
                                          8ull)))->(double).rns718. != ((double *)((char 
                                          *)grains->(_Vector_base<double,std::allocator<double> 
                                          >)._M_start@0.rns728.  + (long long) ((unsigned long 
                                          long) ((int) ($$CIV31 + 1ll)) * 
                                          8ull)))->(double).rns718.)) which is not  suitable 
                                          for SIMD vectorization.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
         0            94                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
         0            94                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
         0            94                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.

   580 |  void void MMSP::swap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&, MMSP::grid<1, MMSP::vector<double> >&)(char * GRID1, char * GRID2)
   582 |  {
            MMSP::grid<1, MMSP::vector<double> >::swap(MMSP::grid<1, MMSP::vector<double> >&)(GRID1,GRID2)
   583 |    return;
          } /* function */ 


   529 |  void void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(char * GRID)
   531 |  {
            $$PARM.this432 = GRID;
   532 |    return;
          } /* function */ 


   523 |  void MMSP::vector<int> MMSP::position<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(char * __classReturn, char * GRID, int index)
   525 |  {
            MMSP::grid<2, MMSP::vector<double> >::position(int) const(__classReturn,GRID,index)
   526 |    return;
          } /* function */ 


   580 |  void void MMSP::swap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&, MMSP::grid<2, MMSP::vector<double> >&)(char * GRID1, char * GRID2)
   582 |  {
            MMSP::grid<2, MMSP::vector<double> >::swap(MMSP::grid<2, MMSP::vector<double> >&)(GRID1,GRID2)
   583 |    return;
          } /* function */ 


   529 |  void void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(char * GRID)
   531 |  {
            MMSP::grid<3, MMSP::vector<double> >::ghostswap()(GRID)
   532 |    return;
          } /* function */ 


   523 |  void MMSP::vector<int> MMSP::position<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(char * __classReturn, char * GRID, int index)
   525 |  {
            MMSP::grid<3, MMSP::vector<double> >::position(int) const(__classReturn,GRID,index)
   526 |    return;
          } /* function */ 


   580 |  void void MMSP::swap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&, MMSP::grid<3, MMSP::vector<double> >&)(char * GRID1, char * GRID2)
   582 |  {
            MMSP::grid<3, MMSP::vector<double> >::swap(MMSP::grid<3, MMSP::vector<double> >&)(GRID1,GRID2)
   583 |    return;
          } /* function */ 


   123 |  char * char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)(char *__beg, char * __end, char * __a, aggr1 NONAME_4684)
   128 |  {
            if (!(__beg == __end)) goto lab_3;
   122 |    goto lab_4;
          lab_3:
            __17430 = 0u;
            goto lab_5;
          lab_4:
            __17430 = 1u;
          lab_5:
            if (!(__17430 != 0u)) goto lab_1;
   215 |    rstr = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
            return rstr;
          lab_1:
   149 |    __17374 = (char) (__beg == NULL);
            if (!(__17374 != 0u)) goto lab_9;
   133 |    if (__beg != __end) goto lab_10;
          lab_9:
            __17431 = 0u;
            goto lab_11;
          lab_10:
            __17431 = 1u;
          lab_11:
            if (!(0ll != __builtin_expect@34((long long) __17431,0ll))) goto lab_7;
   134 |    std::__throw_logic_error(char const*)("basic_string::_S_construct NULL not valid")
            return rstr;
          lab_7:
   161 |    __memset(&__17376,0,1ull);
   139 |    __r = std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)((unsigned long long) (__end - __beg),0ull,__a);
   341 |    if (!(0ull == (unsigned long long) ((__end - __beg) - 1ll))) goto lab_13;
   247 |    ((char *)__r)[24ll / 1] = *__beg;
   113 |    goto lab_15;
          lab_13:
   275 |    __builtin_memcpy(((char *)__r  + 24ll),__beg,(unsigned long long) (__end - __beg));
   196 |  lab_15:
   180 |    if (!(0ll != __builtin_expect@34((long long) (__r != &std::string::_Rep::_S_empty_rep_storage),0ll))) goto lab_16;
   196 |    *((int *)(__r + 16)) = 0;
   206 |    *((unsigned long long *)__r) = (unsigned long long) (__end - __beg);
   247 |    ((char *)(((char *)__r  + 24ll)))[__end - __beg] = std::string::_Rep::_S_terminal;
   210 |  lab_16:
   215 |    rstr = ((char *)__r  + 24ll);
            return rstr;
   149 |  } /* function */ 


   131 |  char * std::_Vector_base<double, std::allocator<double> >::~_Vector_base()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this226 = this;
   109 |    $$PARM.this224 = $$PARM.this226;
    73 |    $$IRET129 = $$PARM.this224;
   109 |    $$IRET12A = $$PARM.this226;
   132 |    $$IRET12B = $$PARM.this226;
   133 |    rstr = this;
            return rstr;
          } /* function */ 


   131 |  char * std::_Vector_base<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::~_Vector_base()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this38D = this;
   109 |    $$PARM.this38B = $$PARM.this38D;
    73 |    $$IRET1D5 = $$PARM.this38B;
   109 |    $$IRET1D6 = $$PARM.this38D;
   132 |    $$IRET1D7 = $$PARM.this38D;
   133 |    rstr = this;
            return rstr;
          } /* function */ 


   131 |  char * std::_Vector_base<Point<int>, std::allocator<Point<int> > >::~_Vector_base()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this2 = this;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    rstr = this;
            return rstr;
          } /* function */ 


    73 |  char * DistanceVoxel_PriorityQueue::top() const(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> > *this)
    74 |  {
            DistanceVoxel_PriorityQueue::top() const::guard___func__2 = 1;
   435 |    __17464._M_current@0 = *((char * *)this);
            __17462 = __17464;
   453 |    __17469._M_current@0 = *((char * *)((char *)this + 8));
            __17463 = __17469;
   178 |    __17481 = (char) ((__normal_iterator<DistanceVoxel * const *,std::vector<DistanceVoxel *,std::allocator<DistanceVoxel *> > >)._M_current@0.rns764..mga.__17462 == (__normal_iterator<DistanceVoxel * const *,std::vector<DistanceVoxel *,std::allocator<DistanceVoxel *> > >)._M_current@0.rns763..mga.__17463);
   575 |    if (!(__17481 != 0u)) goto lab_4;
            __assert_fail("!m_heap.empty()","priority_queue.h",75u,&DistanceVoxel_PriorityQueue::top() const::__func__)
            return;
          lab_4:
    76 |    rstr = *((char * *)this)->(DistanceVoxel *).rns760.;
            return rstr;
    77 |  } /* function */ 


   106 |  void DistanceVoxel_PriorityQueue::pop()(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> > *this)
   107 |  {
            DistanceVoxel_PriorityQueue::pop()::guard___func__3 = 1;
   435 |    __17497._M_current@0 = *((char * *)this);
            __17495 = __17497;
   453 |    __17502._M_current@0 = *((char * *)((char *)this + 8));
            __17496 = __17502;
   178 |    __17514 = (char) ((__normal_iterator<DistanceVoxel * const *,std::vector<DistanceVoxel *,std::allocator<DistanceVoxel *> > >)._M_current@0.rns775..mga.__17495 == (__normal_iterator<DistanceVoxel * const *,std::vector<DistanceVoxel *,std::allocator<DistanceVoxel *> > >)._M_current@0.rns774..mga.__17496);
   575 |    if (!(__17514 != 0u)) goto lab_4;
            __assert_fail("!m_heap.empty()","priority_queue.h",108u,&DistanceVoxel_PriorityQueue::pop()::__func__)
            return;
          lab_4:
   109 |    $$PARM.this3B0 = (this + 24);
            $$PARM.__x3B1 = *((char * *)this);
  1372 |    $$PARM.this3AE = $$PARM.this3B0;
  1051 |    __y = ($$PARM.this3AE + 8);
  1052 |    if (!(((char * *)((char *)$$PARM.this3AE + 8))[8 / 8] != NULL)) goto lab_11;
  1050 |    __x = ((char * *)((char *)$$PARM.this3AE + 8))[8 / 8];
  1052 |    do {   /* id=1 guarded */ /* ~12 */ 
              /* region = 33 */
   505 |      __memset(&__21476,0,1ull);
   230 |      __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553 < *$$PARM.__x3B1);
              if (!(__21489 != 0u)) goto lab_13;
   517 |      __x = *((char * *)(__x + 24));
              goto lab_14;
            lab_13:
   505 |      __memset(&__21493,0,1ull);
   230 |      __21506 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553);
              if (!(__21506 != 0u)) goto lab_15;
  1057 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
  1066 |    lab_14:
  1052 |    } while (__x != NULL);    /* ~12 */
          lab_11:
   171 |    __21472._M_node@0 = __y;
            __21473._M_node@0 = __y;
            __21471.first@0 = __21472;
    84 |    __21471.second@8 = __21473;
            $$IRET1E5 = __21471;
            goto lab_16;
   509 |  lab_15:
   517 |    __xu.rnn170 = *((char * *)(__x + 24));
    84 |    $$PARM.this11C = $$PARM.this3AE;
            $$PARM.__x11D = *((char * *)(__x + 16));
            $$PARM.__y11E = __x;
   985 |    if (!($$PARM.__x11D != NULL)) goto lab_17;
            do {   /* id=2 guarded */ /* ~18 */ 
              /* region = 31 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906$$1795$$1553 < *$$PARM.__x3B1);
              if (__21720 != 0u) goto lab_19;
   987 |      $$PARM.__y11E = $$PARM.__x11D;
   509 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
              goto lab_20;
            lab_19:
   517 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
            lab_20:
   985 |    } while ($$PARM.__x11D != NULL);    /* ~18 */
          lab_17:
   171 |    __21706._M_node@0 = $$PARM.__y11E;
            $$IRET74 = __21706;
    84 |    __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.$$1795$$1553;
            $$PARM.this3AA = $$PARM.this3AE;
            $$PARM.__x3AB = __xu.rnn170;
            $$PARM.__y3AC = __y;
  1017 |    if (!($$PARM.__x3AB != NULL)) goto lab_22;
            do {   /* id=3 guarded */ /* ~23 */ 
              /* region = 32 */
   505 |      __memset(&__21730,0,1ull);
   230 |      __21743 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907$$1795$$1553);
              if (!(__21743 != 0u)) goto lab_24;
  1019 |      $$PARM.__y3AC = $$PARM.__x3AB;
   509 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
              goto lab_25;
            lab_24:
   517 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
            lab_25:
  1017 |    } while ($$PARM.__x3AB != NULL);    /* ~23 */
          lab_22:
   171 |    __21729._M_node@0 = $$PARM.__y3AC;
            $$IRET1E4 = __21729;
    84 |    __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.$$1795$$1553;
            __21466.first@0 = __21467;
            __21466.second@8 = __21468;
            $$IRET1E5 = __21466;
  1070 |  lab_16:
  1372 |    __p = &$$IRET1E5->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> > >).rns1304.$$1553;
  1373 |    __old_size = *((unsigned long long *)((char *)$$PARM.this3B0 + 40));
  1374 |    std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)($$PARM.this3B0,__p.first@0,__p.second@8)
  1375 |    $$IRET1E6 = __old_size - *((unsigned long long *)((char *)$$PARM.this3B0 + 40));
   109 |    success = (int) $$IRET1E6;
   110 |    if (success == 1) goto lab_7;
            __assert_fail("success == 1","priority_queue.h",110u,&DistanceVoxel_PriorityQueue::pop()::__func__)
            return;
          lab_7:
   686 |    __17521._M_current@0 = *((char * *)((char *)this + 8));
   444 |    __17518 = __17521;
   747 |    __17525._M_current@0 = ((char *)(__normal_iterator<DistanceVoxel **,std::vector<DistanceVoxel *,std::allocator<DistanceVoxel *> > >)._M_current@0.rns776..mga.__17518  - 8ll);
   298 |    __17520 = __17525;
   696 |    *((char * *)this)->(DistanceVoxel *).rns769. = *(__normal_iterator<DistanceVoxel **,std::vector<DistanceVoxel *,std::allocator<DistanceVoxel *> > >)._M_current@0.rns777..mga.__17520;
   766 |    *((char * *)((char *)this + 8)) = ((char *)*((char * *)((char *)this + 8))  - 8ll);
   113 |    DistanceVoxel_PriorityQueue::percolate_down(int)(this,0)
   114 |    return;
          } /* function */ 


   312 |  char * std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::~vector()(char * this)
   141 |  {
            if (!(*((char * *)this) != *((char * *)(this + 8)))) goto lab_3;
    92 |  lab_3:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_4;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_4:
   132 |    $$PARM.this3B9 = this;
   109 |    $$PARM.this3B7 = $$PARM.this3B9;
    73 |    $$IRET1EA = $$PARM.this3B7;
   109 |    $$IRET1EB = $$PARM.this3B9;
   132 |    $$IRET1EC = $$PARM.this3B9;
   133 |    $$IRET1ED = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   591 |  char * std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_Rb_tree()(char * this)
   428 |  {
            __memset(this,0,1ull);
   429 |    __memset((this + 8),0,32ull);
   434 |    *((unsigned long long *)(this + 40)) = 0ull;
   446 |    ((int *)this)[8 / 4] = 0;
   447 |    ((char * *)(this + 8))[8 / 8] = NULL;
   448 |    ((char * *)(this + 16))[8 / 8] = (this + 8);
   449 |    ((char * *)(this + 24))[8 / 8] = (this + 8);
   591 |    rstr = this;
            return rstr;
          } /* function */ 


          char * std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()(char * this)
   109 |  {
            $$PARM.this35C = this;
    73 |    $$IRET1BF = $$PARM.this35C;
   109 |    $$IRET1C0 = this;
            rstr = this;
            return rstr;
          } /* function */ 


   241 |  char * std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(char * this, _Vector_base<Point<int>,std::allocator<Point<int> > > *__x)
   242 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            $$PARM.__n363 = (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll);
            $$PARM.__a364 = __x;
    85 |    *((char * *)this) = NULL;
            *((char * *)(this + 8)) = NULL;
            *((char * *)(this + 16)) = NULL;
   140 |    if (!($$PARM.__n363 != 0ull)) goto lab_1;
   111 |    if (!(0ll != __builtin_expect@34((long long) ($$PARM.__n363 > 1537228672809129301ull),0ll))) goto lab_2;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_2:
    89 |    __20562 = operator new(unsigned long)($$PARM.__n363 * 12ull);
   107 |    __20566 = __20562;
            goto lab_4;
          lab_1:
            __20566 = NULL;
          lab_4:
   140 |    *((char * *)this) = __20566;
   114 |    *((char * *)(this + 8)) = *((char * *)this);
   115 |    *((char * *)(this + 16)) = ((char *)*((char * *)this)  + (long long) ($$PARM.__n363 * 12ull));
   116 |    $$IRET1C5 = this;
   242 |    __es.__c4@3 = 1u;
   435 |    __17585._M_current@0 = *((char * *)__x);
   453 |    __17590._M_current@0 = *((char * *)((char *)__x + 8));
   115 |    __17629 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(__17585,__17590,*((char * *)this));
   257 |    *((char * *)(this + 8)) = __17629;
   247 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
          } /* function */ 


   156 |  char * std::vector<Point<int>, std::allocator<Point<int> > >::operator=(std::vector<Point<int>, std::allocator<Point<int> > > const&)(vector<Point<int>,std::allocator<Point<int> > > *this, _Vector_base<Point<int>,std::allocator<Point<int> > > *__x)
   159 |  {
            if (!(__x != this)) goto lab_1;
   161 |    __xlen = (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll);
   162 |    if (!((unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll) > (unsigned long long) ((*((char * *)((char *)this + 16)) - *((char * *)this)) / 12ll))) goto lab_3;
   435 |    __17673._M_current@0 = *((char * *)__x);
   453 |    __17678._M_current@0 = *((char * *)((char *)__x + 8));
            __tmp = Point<int>* std::vector<Point<int>, std::allocator<Point<int> > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > > >(unsigned long, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >)(this,(unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll),__17673,__17678);
   145 |    if (!(*((char * *)this) != NULL)) goto lab_5;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_5:
   171 |    *((char * *)this) = __tmp;
   172 |    *((char * *)((char *)this + 16)) = ((char *)__tmp  + (long long) (__xlen * 12ull));
   173 |    goto lab_7;
          lab_3:
   174 |    if (!((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) >= (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll))) goto lab_8;
   459 |    __17935 = *((char * *)this);
   341 |    if (!((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll > 0ll)) goto lab_12;
            $$CIV34 = 0ll;
            do {   /* id=2 guarded */ /* ~10 */ 
              /* region = 27 */
              /* bump-normalized */
   343 |      ((aggr12 *)(*((char * *)this)))[$$CIV34] = ((aggr12 *)(*((char * *)__x)))[$$CIV34];
   341 |      $$CIV34 = $$CIV34 + 1ll;
            } while ((unsigned long long) $$CIV34 < (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll));    /* ~10 */
            __17935 = ((char *)*((char * *)this)  + ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll) * 12ll);
          lab_12:
   518 |    __17923 = __17935;
   178 |    goto lab_13;
          lab_8:
   341 |    if (!((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll) / 12ll > 0ll)) goto lab_16;
            $$CIV35 = 0ll;
            do {   /* id=1 guarded */ /* ~14 */ 
              /* region = 28 */
              /* bump-normalized */
   343 |      ((aggr12 *)(*((char * *)this)))[$$CIV35] = ((aggr12 *)(*((char * *)__x)))[$$CIV35];
   341 |      $$CIV35 = $$CIV35 + 1ll;
            } while ((unsigned long long) $$CIV35 < (unsigned long long) ((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll) / 12ll));    /* ~14 */
          lab_16:
    70 |    __cur = *((char * *)((char *)this + 8));
    73 |    if (!(*((char * *)((char *)__x + 8)) != ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll))) goto lab_17;
            $$CIVINIT25 = ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll);
            $$CIV25 = 0ll;
            do {   /* id=3 guarded */ /* ~18 */ 
              /* region = 29 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)*((char * *)((char *)this + 8))  + $$CIV25 * 12ll))) goto lab_19;
    12 |      ((int *)(*((char * *)((char *)this + 8))))[($$CIV25 * 12ll) / 4] = ((int *)$$CIVINIT25)[($$CIV25 * 12ll) / 4];
              ((int *)((char *)*((char * *)((char *)this + 8)) + 4))[($$CIV25 * 12ll) / 4] = ((int *)((char *)$$CIVINIT25 + 4))[($$CIV25 * 12ll) / 4];
              ((int *)((char *)*((char * *)((char *)this + 8)) + 8))[($$CIV25 * 12ll) / 4] = ((int *)((char *)$$CIVINIT25 + 8))[($$CIV25 * 12ll) / 4];
            lab_19:
    73 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll)) / 12ll));    /* ~18 */
            __cur = ((char *)*((char * *)((char *)this + 8))  + ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll)) / 12ll) * 12ll);
          lab_17:
   187 |  lab_13:
          lab_7:
   188 |    *((char * *)((char *)this + 8)) = ((char *)*((char * *)this)  + (long long) (__xlen * 12ull));
   189 |  lab_1:
   190 |    rstr = this;
            return rstr;
   191 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       109           341             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       109           343                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       109           343                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       109           343                  Loop was not SIMD vectorized because it contains 
                                          memory references  with  non-vectorizable strides.
       109           343                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       305            73             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       305            73             3    Loop was not SIMD vectorized because it contains 
                                          control flow.

   401 |  void MMSP::grid<2, unsigned long>::position(int) const(vector<int> *x, grid<2,unsigned long> *this, int i)
   402 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   403 |    $$PARM.this39A = x;
    33 |    *((int *)((char *)x + 8)) = 2;
            $$RET1A0 = operator new[](unsigned long)(8ull);
    34 |    *((char * *)$$PARM.this39A) = $$RET1A0;
   403 |    __es.__c4@3 = 1u;
   404 |    if (!1) goto lab_3;
            $$CIV36 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   405 |      n = i / ((int *)((char *)this + 56))[$$CIV36];
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV36 < *((int *)((char *)x + 8))) goto lab_15;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_15:
   406 |      ((int *)(*((char * *)x)))[$$CIV36] = ((int *)((char *)this + 40))[$$CIV36] + i / ((int *)((char *)this + 56))[$$CIV36];
   407 |      i = i + - (((int *)((char *)this + 56))[$$CIV36] * n);
   404 |      $$CIV36 = $$CIV36 + 1ll;
            } while ((unsigned long long) $$CIV36 < 2ull);    /* ~1 */
          lab_3:
   410 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           404             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           404             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

          void MMSP::vector<double>::__dftct()(vector<double> *this)
    11 |  {
            *((int *)((char *)this + 8)) = 0;
    12 |    *((char * *)this) = NULL;
    13 |    $$IRET128 = this;
            return;
          } /* function */ 


   401 |  void MMSP::grid<2, MMSP::vector<double> >::position(int) const(vector<int> *x, grid<2,MMSP::vector<double> > *this, int i)
   402 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   403 |    $$PARM.this394 = x;
    33 |    *((int *)((char *)x + 8)) = 2;
            $$RET1A0 = operator new[](unsigned long)(8ull);
    34 |    *((char * *)$$PARM.this394) = $$RET1A0;
   403 |    __es.__c4@3 = 1u;
   404 |    if (!1) goto lab_3;
            $$CIV37 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   405 |      n = i / ((int *)((char *)this + 56))[$$CIV37];
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV37 < *((int *)((char *)x + 8))) goto lab_15;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_15:
   406 |      ((int *)(*((char * *)x)))[$$CIV37] = ((int *)((char *)this + 40))[$$CIV37] + i / ((int *)((char *)this + 56))[$$CIV37];
   407 |      i = i + - (((int *)((char *)this + 56))[$$CIV37] * n);
   404 |      $$CIV37 = $$CIV37 + 1ll;
            } while ((unsigned long long) $$CIV37 < 2ull);    /* ~1 */
          lab_3:
   410 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           404             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           404             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   413 |  void MMSP::grid<2, MMSP::vector<double> >::ghostswap()(char * this)
          {
   510 |    return;
          } /* function */ 


  1234 |  void MMSP::grid<2, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(grid<2,MMSP::vector<double> > *this, char * file, int GHOSTS)
  1235 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1245 |    std::istream::read(char*, long)(file,&blocks,4ll);
  1253 |    if (!(0 < blocks)) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 64 */
  1257 |      if (!1) goto lab_6;
              $$CIV38 = 0ll;
              do {   /* id=5 guarded */ /* ~4 */ 
                /* region = 63 */
                /* bump-normalized */
  1258 |        std::istream::read(char*, long)(file,((char *)&lmin + (4ll)*($$CIV38)),4ll);
  1259 |        std::istream::read(char*, long)(file,((char *)&lmax + (4ll)*($$CIV38)),4ll);
  1257 |        $$CIV38 = ($$CIV38 + 1);
              } while ((unsigned long long) $$CIV38 < 2ull);    /* ~4 */
            lab_6:
  1264 |      if (!1) goto lab_9;
              $$CIV39 = 0ll;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 62 */
                /* bump-normalized */
  1265 |        std::istream::read(char*, long)(file,((char *)&blo + (4ll)*($$CIV39)),4ll);
  1266 |        std::istream::read(char*, long)(file,((char *)&bhi + (4ll)*($$CIV39)),4ll);
  1264 |        $$CIV39 = ($$CIV39 + 1);
              } while ((unsigned long long) $$CIV39 < 2ull);    /* ~7 */
            lab_9:
  1271 |      std::istream::read(char*, long)(file,&size_in_mem,8ll);
  1272 |      std::istream::read(char*, long)(file,&size_on_disk,8ll);
  1277 |      overlap = 1u;
  1278 |      if (!1) goto lab_12;
              $$CIV3A = 0ll;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 61 */
                /* bump-normalized */
  1279 |        min[$$CIV3A] = max(((int *)((char *)this + 40))[$$CIV3A],lmin[$$CIV3A]);
  1280 |        max[$$CIV3A] = min(((int *)((char *)this + 48))[$$CIV3A],lmax[$$CIV3A]);
  1281 |        overlap = (max(((int *)((char *)this + 40))[$$CIV3A],lmin[$$CIV3A]) >= min(((int *)((char *)this + 48))[$$CIV3A],lmax[$$CIV3A]) ? 0u : overlap);
  1278 |        $$CIV3A = ($$CIV3A + 1);
              } while ((unsigned long long) $$CIV3A < 2ull);    /* ~10 */
            lab_12:
  1284 |      if (!(overlap != 0u)) goto lab_21;
  1289 |      buffer.rnnCD = operator new[](unsigned long)(size_on_disk);
  1290 |      std::istream::read(char*, long)(file,buffer.rnnCD,(long long) size_on_disk);
  1291 |      MMSP::grid<2, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(&GRID,*((int *)((char *)this + 16)),&lmin,&lmax,0,1u);
              __es.__c4@3 = 1u;
  1292 |      if (size_in_mem != size_on_disk) goto lab_45;
  1316 |      MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*)(&GRID,buffer.rnnCD);
  1317 |      operator delete[](void*)(buffer.rnnCD)
  1321 |      $$PARM.this348 = &GRID;
              $$PARM.min349 = &min;
              $$PARM.max34A = &max;
              $$PARM.p344 = &GRID->(grid<2,MMSP::vector<double> >).data@0.rns1345.$$1584;
              $$PARM.i345 = 0;
  1103 |      size = 0ull;
  1104 |      if (!($$PARM.i345 == 1)) goto lab_61;
  1105 |      if (!(min[(long long) $$PARM.i345] < max[(long long) $$PARM.i345])) goto lab_62;
              x = min[(long long) $$PARM.i345];
              do {   /* id=8 guarded */ /* ~63 */ 
                /* region = 56 */
                $$PARM.v340 = ((char *)$$PARM.p344  + (long long) ((x - ((int *)((char *)$$PARM.this348 + 64))[(long long) $$PARM.i345]) * ((int *)((char *)$$PARM.this348 + 80))[(long long) $$PARM.i345]) * 16ll);
    97 |        $$IRET1B3 = (int) ((unsigned long long) *((int *)((char *)$$PARM.v340 + 8)) * 8ull + 4ull);
  1105 |        $$RET1CD = $$IRET1B3;
    79 |        $$IRET1B4 = $$RET1CD;
  1105 |        $$RET1BB = (unsigned long long) $$IRET1B4;
  1106 |        size = size + $$RET1BB;
  1105 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i345]);    /* ~63 */
            lab_62:
  1107 |      goto lab_66;
            lab_61:
              if (!($$PARM.i345 >= 0)) goto lab_67;
              if (!($$PARM.i345 < 2)) goto lab_67;
  1108 |      if (!(min[(long long) $$PARM.i345] < max[(long long) $$PARM.i345])) goto lab_68;
              x = min[(long long) $$PARM.i345];
              do {   /* id=9 guarded */ /* ~69 */ 
                /* region = 57 */
                $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const($$PARM.this348,((char *)$$PARM.p344  + (long long) ((x - ((int *)((char *)$$PARM.this348 + 64))[(long long) $$PARM.i345]) * ((int *)((char *)$$PARM.this348 + 80))[(long long) $$PARM.i345]) * 16ll),$$PARM.i345 + 1,$$PARM.min349,$$PARM.max34A);
  1109 |        size = size + $$RET1BC;
  1108 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i345]);    /* ~69 */
            lab_68:
  1110 |    lab_67:
            lab_66:
  1111 |      $$IRET1B7 = size;
  1321 |      $$RET19B = $$IRET1B7;
  1121 |      $$IRET1B8 = $$RET19B;
  1321 |      size = $$IRET1B8;
  1322 |      buffer.rnnCB = operator new[](unsigned long)(size);
  1323 |      $$PARM.this335 = &GRID;
              $$PARM.buffer336 = buffer.rnnCB;
              $$PARM.min337 = &min;
              $$PARM.max338 = &max;
              $$PARM.p331 = &GRID->(grid<2,MMSP::vector<double> >).data@0.rns1355.$$1586;
              $$PARM.i332 = 0;
  1138 |      size = 0ull;
  1139 |      if (!($$PARM.i332 == 1)) goto lab_50;
  1140 |      if (!(min[(long long) $$PARM.i332] < max[(long long) $$PARM.i332])) goto lab_51;
              x = min[(long long) $$PARM.i332];
              do {   /* id=6 guarded */ /* ~52 */ 
                /* region = 58 */
                $$PARM.v32B = ((char *)$$PARM.p331  + (long long) ((x - ((int *)((char *)$$PARM.this335 + 64))[(long long) $$PARM.i332]) * ((int *)((char *)$$PARM.this335 + 80))[(long long) $$PARM.i332]) * 16ll);
                $$PARM.buffer32C = ((char *)$$PARM.buffer336  + (long long) size);
                $$PARM.this327 = $$PARM.v32B;
                $$PARM.buffer328 = $$PARM.buffer32C;
   102 |        __builtin_memcpy($$PARM.buffer328,($$PARM.this327 + 8),4ull);
   103 |        __builtin_memcpy(((char *)$$PARM.buffer328  + 4ll),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
   104 |        $$IRET1AB = (int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull);
  1140 |        $$RET1CE = $$IRET1AB;
    82 |        $$IRET1AD = $$RET1CE;
  1140 |        $$RET1BD = (unsigned long long) $$IRET1AD;
  1141 |        size = size + $$RET1BD;
  1140 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i332]);    /* ~52 */
            lab_51:
  1142 |      goto lab_55;
            lab_50:
              if (!($$PARM.i332 >= 0)) goto lab_56;
              if (!($$PARM.i332 < 2)) goto lab_56;
  1143 |      if (!(min[(long long) $$PARM.i332] < max[(long long) $$PARM.i332])) goto lab_57;
              x = min[(long long) $$PARM.i332];
              do {   /* id=7 guarded */ /* ~58 */ 
                /* region = 59 */
                $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const($$PARM.this335,((char *)$$PARM.buffer336  + (long long) size),((char *)$$PARM.p331  + (long long) ((x - ((int *)((char *)$$PARM.this335 + 64))[(long long) $$PARM.i332]) * ((int *)((char *)$$PARM.this335 + 80))[(long long) $$PARM.i332]) * 16ll),$$PARM.i332 + 1,$$PARM.min337,$$PARM.max338);
  1144 |        size = size + $$RET1BE;
  1143 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i332]);    /* ~58 */
            lab_57:
  1145 |    lab_56:
            lab_55:
  1146 |      $$IRET1AF = size;
  1323 |      $$RET19D = $$IRET1AF;
  1133 |      $$IRET1B0 = $$RET19D;
  1324 |      MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(this,buffer.rnnCB,&min,&max);
  1325 |      operator delete[](void*)(buffer.rnnCB)
  1329 |      if (!1) goto lab_37;
              $$CIV3B = 0ll;
              do {   /* id=2 guarded */ /* ~35 */ 
                /* region = 60 */
                /* bump-normalized */
  1330 |        if (!(((int *)((char *)this + 40))[$$CIV3B] == lmin[$$CIV3B])) goto lab_38;
                ((int *)((char *)this + 88))[$$CIV3B] = blo[$$CIV3B];
              lab_38:
  1331 |        if (!(((int *)((char *)this + 48))[$$CIV3B] == lmax[$$CIV3B])) goto lab_40;
                ((int *)((char *)this + 96))[$$CIV3B] = bhi[$$CIV3B];
              lab_40:
  1329 |        $$CIV3B = ($$CIV3B + 1);
              } while ((unsigned long long) $$CIV3B < 2ull);    /* ~35 */
            lab_37:
  1333 |      __es.__c4@3 = 0u;
              $$PARM.this325 = &GRID;
   331 |      if (!(&GRID->(grid<2,MMSP::vector<double> >).data@0.rns173.$$1589 != NULL)) goto lab_48;
   332 |      __cxa_vec_delete3(&GRID->(grid<2,MMSP::vector<double> >).data@0.rns173.$$1589,16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |      &GRID->(grid<2,MMSP::vector<double> >).data@0.rns173.$$1589 = NULL;
   334 |    lab_48:
   335 |      $$IRET1A9 = $$PARM.this325;
  1333 |      goto lab_42;
            lab_21:
  1335 |      std::istream::seekg(long, std::_Ios_Seekdir)(file,(long long) size_on_disk,1);
  1336 |    lab_42:
  1253 |      i = i + 1;
            } while (i < blocks);    /* ~1 */
          lab_3:
  1342 |    goto lab_47;
  1292 |  lab_45:
   548 |    $$RET178 = (long long) __builtin_strlen("Unable to uncompress data: compiled without zlib.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"Unable to uncompress data: compiled without zlib.",$$RET178);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns835.(&std::cerr);
  1295 |    exit(1)
            return;
          lab_47:
            return;
  1342 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1253             1    Loop cannot be normalized and no loop optimizations 
                                          applied.

  1801 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::write_buffer(char*&) const(char * this, char * *buf)
  1804 |  {
            $$PARM.p344 = *((char * *)this);
  1103 |    size = 0ull;
  1108 |    if (!(((int *)(this + 40))[0ll] < ((int *)(this + 48))[0ll])) goto lab_31;
            x = ((int *)(this + 40))[0ll];
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 26 */
              $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)$$PARM.p344  + (long long) ((x - ((int *)(this + 64))[0ll]) * ((int *)(this + 80))[0ll]) * 16ll),1,(this + 40),(this + 48));
  1109 |      size = size + $$RET1BC;
  1108 |      x = x + 1;
            } while (x < ((int *)(this + 48))[0ll]);    /* ~32 */
          lab_31:
  1804 |    size_in_mem = size;
  1807 |    size_on_disk = size;
  1811 |    header_size = 0ull;
  1812 |    if (!1) goto lab_3;
            $$CIV3D = 0ll;
            do {   /* id=3 guarded */ /* ~1 */ 
              /* region = 30 */
              /* bump-normalized */
              header_size = header_size + 16ull;
              $$CIV3D = $$CIV3D + 1ll;
            } while ((unsigned long long) $$CIV3D < 2ull);    /* ~1 */
          lab_3:
  1819 |    $$RET179 = operator new[](unsigned long)(16ull + (header_size + size));
  1821 |    *buf = $$RET179;
  1822 |    dst = $$RET179;
  1826 |    if (!1) goto lab_6;
            $$CIV3E = 0ll;
            do {   /* id=2 guarded */ /* ~4 */ 
              /* region = 29 */
              /* bump-normalized */
  1828 |      __builtin_memcpy(((char *)$$RET179  + $$CIV3E * 8ll),((char *)this  + 40ll + (4ll)*($$CIV3E)),4ull);
  1831 |      __builtin_memcpy(((char *)$$RET179  + ($$CIV3E * 8ll + 4ll)),((char *)this  + 48ll + (4ll)*($$CIV3E)),4ull);
  1826 |      $$CIV3E = $$CIV3E + 1ll;
            } while ((unsigned long long) $$CIV3E < 2ull);    /* ~4 */
            dst = ((char *)$$RET179  + 16ll);
          lab_6:
  1836 |    if (!1) goto lab_9;
            $$CIV3F = 0ll;
            do {   /* id=1 guarded */ /* ~7 */ 
              /* region = 28 */
              /* bump-normalized */
  1838 |      __builtin_memcpy(((char *)dst  + $$CIV3F * 8ll),((char *)this  + 88ll + (4ll)*($$CIV3F)),4ull);
  1841 |      __builtin_memcpy(((char *)dst  + ($$CIV3F * 8ll + 4ll)),((char *)this  + 96ll + (4ll)*($$CIV3F)),4ull);
  1836 |      $$CIV3F = $$CIV3F + 1ll;
            } while ((unsigned long long) $$CIV3F < 2ull);    /* ~7 */
            dst = ((char *)dst  + 16ll);
          lab_9:
  1847 |    __builtin_memcpy(dst,&size_in_mem,8ull);
  1855 |    __builtin_memcpy(((char *)dst  + 8ll),&size_on_disk,8ull);
  1860 |    $$PARM.p331 = *((char * *)this);
  1138 |    size = 0ull;
  1143 |    if (!(((int *)(this + 40))[0ll] < ((int *)(this + 48))[0ll])) goto lab_19;
            x = ((int *)(this + 40))[0ll];
            do {   /* id=5 guarded */ /* ~20 */ 
              /* region = 27 */
              $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)dst  + (long long) (size + 16ull)),((char *)$$PARM.p331  + (long long) ((x - ((int *)(this + 64))[0ll]) * ((int *)(this + 80))[0ll]) * 16ll),1,(this + 40),(this + 48));
  1144 |      size = size + $$RET1BE;
  1143 |      x = x + 1;
            } while (x < ((int *)(this + 48))[0ll]);    /* ~20 */
          lab_19:
  1860 |    size_on_disk = size;
  1891 |    rstr = 16ull + (size + header_size);
            return rstr;
  1892 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1108             7    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1812             3    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
                                          Loop was not SIMD vectorized because it contains 
                                          operation in header_size + 16ull which is not  
                                          suitable for SIMD vectorization.
                                          Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
                                          Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1826             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1836             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1143             5    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1892                  Loop has been rolled.

  1896 |  void MMSP::grid<2, MMSP::vector<double> >::swap(MMSP::grid<2, MMSP::vector<double> >&)(grid<2,MMSP::vector<double> > *this, grid<2,MMSP::vector<double> > *GRID)
  1899 |  {
            DATA = *((char * *)this);
  1900 |    *((char * *)this) = *((char * *)GRID);
  1901 |    *((char * *)GRID) = DATA;
  1904 |    NODES = *((int *)((char *)this + 8));
  1905 |    *((int *)((char *)this + 8)) = *((int *)((char *)GRID + 8));
  1906 |    *((int *)((char *)GRID + 8)) = NODES;
  1909 |    CELLS = *((int *)((char *)this + 12));
  1910 |    *((int *)((char *)this + 12)) = *((int *)((char *)GRID + 12));
  1911 |    *((int *)((char *)GRID + 12)) = CELLS;
  1914 |    FIELDS = *((int *)((char *)this + 16));
  1915 |    *((int *)((char *)this + 16)) = *((int *)((char *)GRID + 16));
  1916 |    *((int *)((char *)GRID + 16)) = FIELDS;
  1919 |    GHOSTS = *((int *)((char *)this + 20));
  1920 |    *((int *)((char *)this + 20)) = *((int *)((char *)GRID + 20));
  1921 |    *((int *)((char *)GRID + 20)) = GHOSTS;
  1924 |    if (!1) goto lab_3;
            $$CIV40 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
  1925 |      G0 = ((int *)((char *)this + 24))[$$CIV40];
  1926 |      ((int *)((char *)this + 24))[$$CIV40] = ((int *)((char *)GRID + 24))[$$CIV40];
  1927 |      ((int *)((char *)GRID + 24))[$$CIV40] = G0;
  1928 |      G1 = ((int *)((char *)this + 32))[$$CIV40];
  1929 |      ((int *)((char *)this + 32))[$$CIV40] = ((int *)((char *)GRID + 32))[$$CIV40];
  1930 |      ((int *)((char *)GRID + 32))[$$CIV40] = G1;
  1931 |      X0 = ((int *)((char *)this + 40))[$$CIV40];
  1932 |      ((int *)((char *)this + 40))[$$CIV40] = ((int *)((char *)GRID + 40))[$$CIV40];
  1933 |      ((int *)((char *)GRID + 40))[$$CIV40] = X0;
  1934 |      X1 = ((int *)((char *)this + 48))[$$CIV40];
  1935 |      ((int *)((char *)this + 48))[$$CIV40] = ((int *)((char *)GRID + 48))[$$CIV40];
  1936 |      ((int *)((char *)GRID + 48))[$$CIV40] = X1;
  1937 |      XX = ((int *)((char *)this + 56))[$$CIV40];
  1938 |      ((int *)((char *)this + 56))[$$CIV40] = ((int *)((char *)GRID + 56))[$$CIV40];
  1939 |      ((int *)((char *)GRID + 56))[$$CIV40] = XX;
  1940 |      S0 = ((int *)((char *)this + 64))[$$CIV40];
  1941 |      ((int *)((char *)this + 64))[$$CIV40] = ((int *)((char *)GRID + 64))[$$CIV40];
  1942 |      ((int *)((char *)GRID + 64))[$$CIV40] = S0;
  1943 |      S1 = ((int *)((char *)this + 72))[$$CIV40];
  1944 |      ((int *)((char *)this + 72))[$$CIV40] = ((int *)((char *)GRID + 72))[$$CIV40];
  1945 |      ((int *)((char *)GRID + 72))[$$CIV40] = S1;
  1946 |      SX = ((int *)((char *)this + 80))[$$CIV40];
  1947 |      ((int *)((char *)this + 80))[$$CIV40] = ((int *)((char *)GRID + 80))[$$CIV40];
  1948 |      ((int *)((char *)GRID + 80))[$$CIV40] = SX;
  1949 |      B0 = ((int *)((char *)this + 88))[$$CIV40];
  1950 |      ((int *)((char *)this + 88))[$$CIV40] = ((int *)((char *)GRID + 88))[$$CIV40];
  1951 |      ((int *)((char *)GRID + 88))[$$CIV40] = B0;
  1952 |      B1 = ((int *)((char *)this + 96))[$$CIV40];
  1953 |      ((int *)((char *)this + 96))[$$CIV40] = ((int *)((char *)GRID + 96))[$$CIV40];
  1954 |      ((int *)((char *)GRID + 96))[$$CIV40] = B1;
  1955 |      DX = ((double *)((char *)this + 104))[$$CIV40];
  1956 |      ((double *)((char *)this + 104))[$$CIV40] = ((double *)((char *)GRID + 104))[$$CIV40];
  1957 |      ((double *)((char *)GRID + 104))[$$CIV40] = DX;
  1958 |      P0 = ((int *)((char *)this + 120))[$$CIV40];
  1959 |      ((int *)((char *)this + 120))[$$CIV40] = ((int *)((char *)GRID + 120))[$$CIV40];
  1960 |      ((int *)((char *)GRID + 120))[$$CIV40] = P0;
  1961 |      P1 = ((int *)((char *)this + 128))[$$CIV40];
  1962 |      ((int *)((char *)this + 128))[$$CIV40] = ((int *)((char *)GRID + 128))[$$CIV40];
  1963 |      ((int *)((char *)GRID + 128))[$$CIV40] = P1;
  1964 |      SP = ((int *)((char *)this + 136))[$$CIV40];
  1965 |      ((int *)((char *)this + 136))[$$CIV40] = ((int *)((char *)GRID + 136))[$$CIV40];
  1966 |      ((int *)((char *)GRID + 136))[$$CIV40] = SP;
  1967 |      N0 = ((int *)((char *)this + 144))[$$CIV40];
  1968 |      ((int *)((char *)this + 144))[$$CIV40] = ((int *)((char *)GRID + 144))[$$CIV40];
  1969 |      ((int *)((char *)GRID + 144))[$$CIV40] = N0;
  1970 |      N1 = ((int *)((char *)this + 152))[$$CIV40];
  1971 |      ((int *)((char *)this + 152))[$$CIV40] = ((int *)((char *)GRID + 152))[$$CIV40];
  1972 |      ((int *)((char *)GRID + 152))[$$CIV40] = N1;
  1924 |      $$CIV40 = ($$CIV40 + 1);
            } while ((unsigned long long) $$CIV40 < 2ull);    /* ~1 */
          lab_3:
  1974 |    return;
          } /* function */ 


    33 |  char * MMSP::vector<int>::operator[](int) const(vector<int> *this, int i)
          {
            MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |    if (i < *((int *)((char *)this + 8))) goto lab_4;
            __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
            return;
          lab_4:
    35 |    rstr = ((char *)*((char * *)this) + (4ll)*((long long) i));
            return rstr;
    36 |  } /* function */ 


   131 |  int MMSP::vector<int>::length() const(vector<int> *this)
   133 |  {
            rstr = *((int *)((char *)this + 8));
            return rstr;
   134 |  } /* function */ 


   142 |  void MMSP::grid<1, MMSP::vector<double> >::setup(bool)(grid<1,MMSP::vector<double> > *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIV41 = 0ll;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 33 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 32))[$$CIV41] = ((int *)((char *)this + 24))[$$CIV41];
   147 |      ((int *)((char *)this + 36))[$$CIV41] = ((int *)((char *)this + 28))[$$CIV41];
   149 |      ((int *)((char *)this + 56))[$$CIV41] = 2;
   150 |      ((int *)((char *)this + 60))[$$CIV41] = 2;
   152 |      ((double *)((char *)this + 64))[$$CIV41] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 72))[$$CIV41] = 0;
   155 |      ((int *)((char *)this + 76))[$$CIV41] = 1;
   156 |      ((int *)((char *)this + 80))[$$CIV41] = 1;
   158 |      ((int *)((char *)this + 84))[$$CIV41] = 0;
   159 |      ((int *)((char *)this + 88))[$$CIV41] = 0;
   145 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < 1ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIV42 = 0ll;
            do {   /* id=4 guarded */ /* ~4 */ 
              /* region = 32 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 44))[$$CIV42] = ((int *)((char *)this + 32))[$$CIV42] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 48))[$$CIV42] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 36))[$$CIV42];
   301 |      $$CIV42 = $$CIV42 + 1ll;
            } while ((unsigned long long) $$CIV42 < 1ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_29;
            $$DCIV6 = 0ll;
            do {   /* id=6 guarded */ /* ~30 */ 
              /* region = 31 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 40))[$$DCIV6] = 1;
   306 |      ((int *)((char *)this + 52))[$$DCIV6] = 1;
   305 |      $$DCIV6 = $$DCIV6 + 1ll;
            } while ((unsigned long long) $$DCIV6 < 1ull);    /* ~30 */
          lab_29:
            if (!1) goto lab_31;
            $$DCIV7 = 0ll;
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 30 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIV7 + 1 < 1)) goto lab_33;
              $$DCIV8 = 0ll;
              $$SCREP4 = ((int *)((char *)this + 40))[$$DCIV7];
              $$SCREP5 = ((int *)((char *)this + 52))[$$DCIV7];
              do {   /* id=8 guarded */ /* ~34 */ 
                /* region = 28 */
                /* bump-normalized */
   310 |        $$SCREP4 = $$SCREP4 * (((int *)((char *)this + 36))[(long long) ((int) (1ll + ($$DCIV8 + $$DCIV7)))] - ((int *)((char *)this + 32))[(long long) ((int) (1ll + ($$DCIV8 + $$DCIV7)))]);
   309 |        $$SCREP5 = $$SCREP5 * (((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIV8 + $$DCIV7)))] - ((int *)((char *)this + 44))[(long long) ((int) (1ll + ($$DCIV8 + $$DCIV7)))]);
   308 |        $$DCIV8 = $$DCIV8 + 1ll;
              } while ((unsigned long long) $$DCIV8 < (unsigned long long) (- $$DCIV7));    /* ~34 */
              ((int *)((char *)this + 52))[$$DCIV7] = $$SCREP5;
              ((int *)((char *)this + 40))[$$DCIV7] = $$SCREP4;
            lab_33:
   305 |      $$DCIV7 = $$DCIV7 + 1ll;
            } while ((unsigned long long) $$DCIV7 < 1ull);    /* ~32 */
          lab_31:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 36))[0ll] - ((int *)((char *)this + 32))[0ll]) * ((int *)((char *)this + 40))[0ll];
            $$RET17A = __cxa_vec_new3((unsigned long long) ((((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]),16ll,8ll,&MMSP::vector<double>::__dftct(),&MMSP::vector<double>::~vector(),&operator new[](unsigned long),&operator delete[](void*));
   319 |    *((char * *)this) = $$RET17A;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_15;
            i = 0;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 29 */
   101 |      MMSP::vector<double>::resize(int)(((char *)*((char * *)this) + (16ll)*((long long) i)),*((int *)((char *)this + 16)))
   320 |      i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~13 */
          lab_15:
   326 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           145             5    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           145             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           146                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           147                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           149                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           150                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           152                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       275           154                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           155                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           156                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           158                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           159                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           301             4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           301             4    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          operation in this->(grid<1,MMSP::vector<double> 
                                          >).x0[]@20.rns902.[$$CIV42] - 
                                          this->(grid<1,MMSP::vector<double> 
                                          >).ghosts@14.rns915. which is not  suitable for SIMD 
                                          vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          operation in this->(grid<1,MMSP::vector<double> 
                                          >).ghosts@14.rns915. + 
                                          this->(grid<1,MMSP::vector<double> 
                                          >).x1[]@24.rns904.[$$CIV42] which is not  suitable 
                                          for SIMD vectorization.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             6    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           307                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           306                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       275           308             8    Loop was not SIMD vectorized because it contains 
                                          non-vectorizable reductions.
       275           308             8    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP4 * 
                                          (this->(grid<1,MMSP::vector<double> 
                                          >).x1[]@24.rns904.[(long long) ((int) (1ll + ($$DCIV8 
                                          + $$DCIV7)))] - this->(grid<1,MMSP::vector<double> 
                                          >).x0[]@20.rns902.[(long long) ((int) (1ll + ($$DCIV8 
                                          + $$DCIV7)))]) which is not  suitable for SIMD 
                                          vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP5 * 
                                          (this->(grid<1,MMSP::vector<double> 
                                          >).s1[]@30.rns916.[(long long) ((int) (1ll + ($$DCIV8 
                                          + $$DCIV7)))] - this->(grid<1,MMSP::vector<double> 
                                          >).s0[]@2c.rns914.[(long long) ((int) (1ll + ($$DCIV8 
                                          + $$DCIV7)))]) which is not  suitable for SIMD 
                                          vectorization.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           320             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275           320             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   401 |  void MMSP::grid<1, MMSP::vector<double> >::position(int) const(vector<int> *x, grid<1,MMSP::vector<double> > *this, int i)
   402 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   403 |    $$PARM.this398 = x;
    33 |    *((int *)((char *)x + 8)) = 1;
            $$RET1A0 = operator new[](unsigned long)(4ull);
    34 |    *((char * *)$$PARM.this398) = $$RET1A0;
   403 |    __es.__c4@3 = 1u;
   404 |    if (!1) goto lab_3;
            $$CIV45 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   405 |      n = i / ((int *)((char *)this + 40))[$$CIV45];
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV45 < *((int *)((char *)x + 8))) goto lab_15;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_15:
   406 |      ((int *)(*((char * *)x)))[$$CIV45] = ((int *)((char *)this + 32))[$$CIV45] + i / ((int *)((char *)this + 40))[$$CIV45];
   407 |      i = i + - (((int *)((char *)this + 40))[$$CIV45] * n);
   404 |      $$CIV45 = $$CIV45 + 1ll;
            } while ((unsigned long long) $$CIV45 < 1ull);    /* ~1 */
          lab_3:
   410 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           404             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           404             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   413 |  void MMSP::grid<1, MMSP::vector<double> >::ghostswap()(char * this)
          {
   510 |    return;
          } /* function */ 


  1234 |  void MMSP::grid<1, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(grid<1,MMSP::vector<double> > *this, char * file, int GHOSTS)
  1235 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1245 |    std::istream::read(char*, long)(file,&blocks,4ll);
  1253 |    if (!(0 < blocks)) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 96 */
  1257 |      if (!1) goto lab_6;
              $$CIV46 = 0ll;
              do {   /* id=5 guarded */ /* ~4 */ 
                /* region = 95 */
                /* bump-normalized */
  1258 |        std::istream::read(char*, long)(file,((char *)&lmin + (4ll)*($$CIV46)),4ll);
  1259 |        std::istream::read(char*, long)(file,((char *)&lmax + (4ll)*($$CIV46)),4ll);
  1257 |        $$CIV46 = ($$CIV46 + 1);
              } while ((unsigned long long) $$CIV46 < 1ull);    /* ~4 */
            lab_6:
  1264 |      if (!1) goto lab_9;
              $$CIV47 = 0ll;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 94 */
                /* bump-normalized */
  1265 |        std::istream::read(char*, long)(file,((char *)&blo + (4ll)*($$CIV47)),4ll);
  1266 |        std::istream::read(char*, long)(file,((char *)&bhi + (4ll)*($$CIV47)),4ll);
  1264 |        $$CIV47 = ($$CIV47 + 1);
              } while ((unsigned long long) $$CIV47 < 1ull);    /* ~7 */
            lab_9:
  1271 |      std::istream::read(char*, long)(file,&size_in_mem,8ll);
  1272 |      std::istream::read(char*, long)(file,&size_on_disk,8ll);
  1277 |      overlap = 1u;
  1278 |      if (!1) goto lab_12;
              $$CIV48 = 0ll;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 93 */
                /* bump-normalized */
  1279 |        min[$$CIV48] = max(((int *)((char *)this + 32))[$$CIV48],lmin[$$CIV48]);
  1280 |        max[$$CIV48] = min(((int *)((char *)this + 36))[$$CIV48],lmax[$$CIV48]);
  1281 |        overlap = (max(((int *)((char *)this + 32))[$$CIV48],lmin[$$CIV48]) >= min(((int *)((char *)this + 36))[$$CIV48],lmax[$$CIV48]) ? 0u : overlap);
  1278 |        $$CIV48 = ($$CIV48 + 1);
              } while ((unsigned long long) $$CIV48 < 1ull);    /* ~10 */
            lab_12:
  1284 |      if (!(overlap != 0u)) goto lab_21;
  1289 |      buffer.rnnF5 = operator new[](unsigned long)(size_on_disk);
  1290 |      std::istream::read(char*, long)(file,buffer.rnnF5,(long long) size_on_disk);
  1291 |      $$PARM.this42C = &GRID;
              $$PARM.FIELDS42D = *((int *)((char *)this + 16));
              $$PARM.GHOSTS430 = 0;
              $$PARM.SINGLE431 = 1u;
    25 |      &GRID->(grid<1,MMSP::vector<double> >).fields@10.rns1389.$$1614 = $$PARM.FIELDS42D;
    28 |      if (!1) goto lab_97;
              $$CIV6A = 0ll;
              do {   /* id=14 guarded */ /* ~98 */ 
                /* region = 92 */
                /* bump-normalized */
    29 |        ((int *)((char *)$$PARM.this42C + 24))[$$CIV6A] = lmin[$$CIV6A];
    30 |        ((int *)((char *)$$PARM.this42C + 28))[$$CIV6A] = lmax[$$CIV6A];
    28 |        $$CIV6A = ($$CIV6A + 1);
              } while ((unsigned long long) $$CIV6A < 1ull);    /* ~98 */
            lab_97:
    34 |      &GRID->(grid<1,MMSP::vector<double> >).ghosts@14.rns1392.$$1614 = 0;
    41 |      MMSP::grid<1, MMSP::vector<double> >::setup(bool)($$PARM.this42C,$$PARM.SINGLE431)
    42 |      $$IRET223 = $$PARM.this42C;
  1291 |      __es.__c4@3 = 1u;
  1292 |      if (size_in_mem != size_on_disk) goto lab_45;
  1316 |      $$PARM.this42A = &GRID;
              $$PARM.buffer42B = buffer.rnnF5;
              $$PARM.this426 = $$PARM.this42A;
              $$PARM.min428 = ($$PARM.this42A + 32);
              $$PARM.max429 = ($$PARM.this42A + 36);
              $$PARM.p41E = *((char * *)$$PARM.this426);
              $$PARM.i41F = 0;
  1161 |      size = 0ull;
  1162 |      if (!($$PARM.i41F == 0)) goto lab_84;
  1163 |      if (!($$PARM.min428[(long long) $$PARM.i41F] < $$PARM.max429[(long long) $$PARM.i41F])) goto lab_85;
              x = $$PARM.min428[(long long) $$PARM.i41F];
              do {   /* id=12 guarded */ /* ~86 */ 
                /* region = 83 */
                $$PARM.v41A = ((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)$$PARM.this426 + 44))[(long long) $$PARM.i41F]) * ((int *)((char *)$$PARM.this426 + 52))[(long long) $$PARM.i41F]) * 16ll);
                $$PARM.buffer41B = ((char *)$$PARM.buffer42B  + (long long) size);
                $$PARM.this414 = $$PARM.v41A;
                $$PARM.buffer415 = $$PARM.buffer41B;
   109 |        if (!(*((char * *)$$PARM.this414) != NULL)) goto lab_87;
   110 |        operator delete[](void*)(*((char * *)$$PARM.this414))
   111 |        *((char * *)$$PARM.this414) = NULL;
   112 |      lab_87:
   113 |        __builtin_memcpy(($$PARM.this414 + 8),$$PARM.buffer415,4ull);
                $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |        *((char * *)$$PARM.this414) = $$RET1D0;
   115 |        __builtin_memcpy($$RET1D0,((char *)$$PARM.buffer415  + 4ll),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   116 |        $$IRET21B = (int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull);
  1163 |        $$RET1CF = $$IRET21B;
    85 |        $$IRET21E = $$RET1CF;
  1163 |        $$RET1C5 = (unsigned long long) $$IRET21E;
  1164 |        size = size + $$RET1C5;
  1163 |        x = x + 1;
              } while (x < $$PARM.max429[(long long) $$PARM.i41F]);    /* ~86 */
            lab_85:
  1165 |      goto lab_90;
            lab_84:
              if (!($$PARM.i41F >= 0)) goto lab_91;
              if (!($$PARM.i41F < 1)) goto lab_91;
  1166 |      if (!($$PARM.min428[(long long) $$PARM.i41F] < $$PARM.max429[(long long) $$PARM.i41F])) goto lab_92;
              x = $$PARM.min428[(long long) $$PARM.i41F];
              do {   /* id=13 guarded */ /* ~93 */ 
                /* region = 84 */
                $$RET1C6 = MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)($$PARM.this426,((char *)$$PARM.buffer42B  + (long long) size),((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)$$PARM.this426 + 44))[(long long) $$PARM.i41F]) * ((int *)((char *)$$PARM.this426 + 52))[(long long) $$PARM.i41F]) * 16ll),$$PARM.i41F + 1,$$PARM.min428,$$PARM.max429);
  1167 |        size = size + $$RET1C6;
  1166 |        x = x + 1;
              } while (x < $$PARM.max429[(long long) $$PARM.i41F]);    /* ~93 */
            lab_92:
  1168 |    lab_91:
            lab_90:
  1169 |      $$IRET21F = size;
  1170 |      $$RET1A9 = $$IRET21F;
  1156 |      $$IRET221 = $$RET1A9;
  1316 |      $$RET1A8 = $$IRET221;
  1151 |      $$IRET222 = $$RET1A8;
  1317 |      operator delete[](void*)(buffer.rnnF5)
  1321 |      $$PARM.this3DD = &GRID;
              $$PARM.min3DE = &min;
              $$PARM.max3DF = &max;
              $$PARM.p3D9 = &GRID->(grid<1,MMSP::vector<double> >).data@0.rns1400.$$1621;
              $$PARM.i3DA = 0;
  1103 |      size = 0ull;
  1104 |      if (!($$PARM.i3DA == 0)) goto lab_59;
  1105 |      if (!(min[(long long) $$PARM.i3DA] < max[(long long) $$PARM.i3DA])) goto lab_60;
              x = min[(long long) $$PARM.i3DA];
              do {   /* id=8 guarded */ /* ~61 */ 
                /* region = 85 */
                $$PARM.v341 = ((char *)$$PARM.p3D9  + (long long) ((x - ((int *)((char *)$$PARM.this3DD + 44))[(long long) $$PARM.i3DA]) * ((int *)((char *)$$PARM.this3DD + 52))[(long long) $$PARM.i3DA]) * 16ll);
    97 |        $$IRET1B3 = (int) ((unsigned long long) *((int *)((char *)$$PARM.v341 + 8)) * 8ull + 4ull);
  1105 |        $$RET1CD = $$IRET1B3;
    79 |        $$IRET1B5 = $$RET1CD;
  1105 |        $$RET1C1 = (unsigned long long) $$IRET1B5;
  1106 |        size = size + $$RET1C1;
  1105 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i3DA]);    /* ~61 */
            lab_60:
  1107 |      goto lab_64;
            lab_59:
              if (!($$PARM.i3DA >= 0)) goto lab_65;
              if (!($$PARM.i3DA < 1)) goto lab_65;
  1108 |      if (!(min[(long long) $$PARM.i3DA] < max[(long long) $$PARM.i3DA])) goto lab_66;
              x = min[(long long) $$PARM.i3DA];
              do {   /* id=9 guarded */ /* ~67 */ 
                /* region = 86 */
                $$RET1C2 = MMSP::grid<1, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const($$PARM.this3DD,((char *)$$PARM.p3D9  + (long long) ((x - ((int *)((char *)$$PARM.this3DD + 44))[(long long) $$PARM.i3DA]) * ((int *)((char *)$$PARM.this3DD + 52))[(long long) $$PARM.i3DA]) * 16ll),$$PARM.i3DA + 1,$$PARM.min3DE,$$PARM.max3DF);
  1109 |        size = size + $$RET1C2;
  1108 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i3DA]);    /* ~67 */
            lab_66:
  1110 |    lab_65:
            lab_64:
  1111 |      $$IRET1FB = size;
  1321 |      $$RET1A5 = $$IRET1FB;
  1121 |      $$IRET1FC = $$RET1A5;
  1321 |      size = $$IRET1FC;
  1322 |      buffer.rnnF3 = operator new[](unsigned long)(size);
  1323 |      $$PARM.this3CE = &GRID;
              $$PARM.buffer3CF = buffer.rnnF3;
              $$PARM.min3D0 = &min;
              $$PARM.max3D1 = &max;
              $$PARM.p3CA = &GRID->(grid<1,MMSP::vector<double> >).data@0.rns1410.$$1623;
              $$PARM.i3CB = 0;
  1138 |      size = 0ull;
  1139 |      if (!($$PARM.i3CB == 0)) goto lab_48;
  1140 |      if (!(min[(long long) $$PARM.i3CB] < max[(long long) $$PARM.i3CB])) goto lab_49;
              x = min[(long long) $$PARM.i3CB];
              do {   /* id=6 guarded */ /* ~50 */ 
                /* region = 87 */
                $$PARM.v32D = ((char *)$$PARM.p3CA  + (long long) ((x - ((int *)((char *)$$PARM.this3CE + 44))[(long long) $$PARM.i3CB]) * ((int *)((char *)$$PARM.this3CE + 52))[(long long) $$PARM.i3CB]) * 16ll);
                $$PARM.buffer32E = ((char *)$$PARM.buffer3CF  + (long long) size);
                $$PARM.this327 = $$PARM.v32D;
                $$PARM.buffer328 = $$PARM.buffer32E;
   102 |        __builtin_memcpy($$PARM.buffer328,($$PARM.this327 + 8),4ull);
   103 |        __builtin_memcpy(((char *)$$PARM.buffer328  + 4ll),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
   104 |        $$IRET1AB = (int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull);
  1140 |        $$RET1CE = $$IRET1AB;
    82 |        $$IRET1AE = $$RET1CE;
  1140 |        $$RET1C3 = (unsigned long long) $$IRET1AE;
  1141 |        size = size + $$RET1C3;
  1140 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i3CB]);    /* ~50 */
            lab_49:
  1142 |      goto lab_53;
            lab_48:
              if (!($$PARM.i3CB >= 0)) goto lab_54;
              if (!($$PARM.i3CB < 1)) goto lab_54;
  1143 |      if (!(min[(long long) $$PARM.i3CB] < max[(long long) $$PARM.i3CB])) goto lab_55;
              x = min[(long long) $$PARM.i3CB];
              do {   /* id=7 guarded */ /* ~56 */ 
                /* region = 88 */
                $$RET1C4 = MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const($$PARM.this3CE,((char *)$$PARM.buffer3CF  + (long long) size),((char *)$$PARM.p3CA  + (long long) ((x - ((int *)((char *)$$PARM.this3CE + 44))[(long long) $$PARM.i3CB]) * ((int *)((char *)$$PARM.this3CE + 52))[(long long) $$PARM.i3CB]) * 16ll),$$PARM.i3CB + 1,$$PARM.min3D0,$$PARM.max3D1);
  1144 |        size = size + $$RET1C4;
  1143 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i3CB]);    /* ~56 */
            lab_55:
  1145 |    lab_54:
            lab_53:
  1146 |      $$IRET1F7 = size;
  1323 |      $$RET1A7 = $$IRET1F7;
  1133 |      $$IRET1F8 = $$RET1A7;
  1324 |      $$PARM.buffer423 = buffer.rnnF3;
              $$PARM.min424 = &min;
              $$PARM.max425 = &max;
              $$PARM.p41E = *((char * *)this);
              $$PARM.i41F = 0;
  1161 |      size = 0ull;
  1162 |      if (!($$PARM.i41F == 0)) goto lab_72;
  1163 |      if (!(min[(long long) $$PARM.i41F] < max[(long long) $$PARM.i41F])) goto lab_73;
              x = min[(long long) $$PARM.i41F];
              do {   /* id=10 guarded */ /* ~74 */ 
                /* region = 89 */
                $$PARM.v41A = ((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)this + 44))[(long long) $$PARM.i41F]) * ((int *)((char *)this + 52))[(long long) $$PARM.i41F]) * 16ll);
                $$PARM.buffer41B = ((char *)$$PARM.buffer423  + (long long) size);
                $$PARM.this414 = $$PARM.v41A;
                $$PARM.buffer415 = $$PARM.buffer41B;
   109 |        if (!(*((char * *)$$PARM.this414) != NULL)) goto lab_75;
   110 |        operator delete[](void*)(*((char * *)$$PARM.this414))
   111 |        *((char * *)$$PARM.this414) = NULL;
   112 |      lab_75:
   113 |        __builtin_memcpy(($$PARM.this414 + 8),$$PARM.buffer415,4ull);
                $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |        *((char * *)$$PARM.this414) = $$RET1D0;
   115 |        __builtin_memcpy($$RET1D0,((char *)$$PARM.buffer415  + 4ll),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   116 |        $$IRET21B = (int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull);
  1163 |        $$RET1CF = $$IRET21B;
    85 |        $$IRET21E = $$RET1CF;
  1163 |        $$RET1C5 = (unsigned long long) $$IRET21E;
  1164 |        size = size + $$RET1C5;
  1163 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i41F]);    /* ~74 */
            lab_73:
  1165 |      goto lab_78;
            lab_72:
              if (!($$PARM.i41F >= 0)) goto lab_79;
              if (!($$PARM.i41F < 1)) goto lab_79;
  1166 |      if (!(min[(long long) $$PARM.i41F] < max[(long long) $$PARM.i41F])) goto lab_80;
              x = min[(long long) $$PARM.i41F];
              do {   /* id=11 guarded */ /* ~81 */ 
                /* region = 90 */
                $$RET1C6 = MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,((char *)$$PARM.buffer423  + (long long) size),((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)this + 44))[(long long) $$PARM.i41F]) * ((int *)((char *)this + 52))[(long long) $$PARM.i41F]) * 16ll),$$PARM.i41F + 1,$$PARM.min424,$$PARM.max425);
  1167 |        size = size + $$RET1C6;
  1166 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i41F]);    /* ~81 */
            lab_80:
  1168 |    lab_79:
            lab_78:
  1169 |      $$IRET21F = size;
  1324 |      $$RET1A9 = $$IRET21F;
  1156 |      $$IRET220 = $$RET1A9;
  1325 |      operator delete[](void*)(buffer.rnnF3)
  1329 |      if (!1) goto lab_37;
              $$CIV49 = 0ll;
              do {   /* id=2 guarded */ /* ~35 */ 
                /* region = 91 */
                /* bump-normalized */
  1330 |        if (!(((int *)((char *)this + 32))[$$CIV49] == lmin[$$CIV49])) goto lab_38;
                ((int *)((char *)this + 56))[$$CIV49] = blo[$$CIV49];
              lab_38:
  1331 |        if (!(((int *)((char *)this + 36))[$$CIV49] == lmax[$$CIV49])) goto lab_40;
                ((int *)((char *)this + 60))[$$CIV49] = bhi[$$CIV49];
              lab_40:
  1329 |        $$CIV49 = ($$CIV49 + 1);
              } while ((unsigned long long) $$CIV49 < 1ull);    /* ~35 */
            lab_37:
  1333 |      __es.__c4@3 = 0u;
              $$PARM.this406 = &GRID;
   331 |      if (!(&GRID->(grid<1,MMSP::vector<double> >).data@0.rns216.$$1626 != NULL)) goto lab_70;
   332 |      __cxa_vec_delete3(&GRID->(grid<1,MMSP::vector<double> >).data@0.rns216.$$1626,16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |      &GRID->(grid<1,MMSP::vector<double> >).data@0.rns216.$$1626 = NULL;
   334 |    lab_70:
   335 |      $$IRET214 = $$PARM.this406;
  1333 |      goto lab_42;
            lab_21:
  1335 |      std::istream::seekg(long, std::_Ios_Seekdir)(file,(long long) size_on_disk,1);
  1336 |    lab_42:
  1253 |      i = i + 1;
            } while (i < blocks);    /* ~1 */
          lab_3:
  1342 |    goto lab_47;
  1292 |  lab_45:
   548 |    $$RET17C = (long long) __builtin_strlen("Unable to uncompress data: compiled without zlib.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"Unable to uncompress data: compiled without zlib.",$$RET17C);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns939.(&std::cerr);
  1295 |    exit(1)
            return;
          lab_47:
            return;
  1342 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1253             1    Loop cannot be normalized and no loop optimizations 
                                          applied.

  1801 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::write_buffer(char*&) const(char * this, char * *buf)
  1103 |  {
            size = 0ull;
  1105 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_25;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=6 guarded */ /* ~26 */ 
              /* region = 26 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)*((char * *)this) + 8))[((long long) (((int *)(this + 52))[0ll] * (x - ((int *)(this + 44))[0ll])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~26 */
          lab_25:
  1804 |    size_in_mem = size;
  1807 |    size_on_disk = size;
  1811 |    header_size = 0ull;
  1812 |    if (!1) goto lab_3;
            $$CIV4B = 0ll;
            do {   /* id=3 guarded */ /* ~1 */ 
              /* region = 30 */
              /* bump-normalized */
              header_size = header_size + 16ull;
              $$CIV4B = $$CIV4B + 1ll;
            } while ((unsigned long long) $$CIV4B < 1ull);    /* ~1 */
          lab_3:
  1819 |    $$RET17D = operator new[](unsigned long)(16ull + (header_size + size));
  1821 |    *buf = $$RET17D;
  1822 |    dst = $$RET17D;
  1826 |    if (!1) goto lab_6;
            $$CIV4C = 0ll;
            do {   /* id=2 guarded */ /* ~4 */ 
              /* region = 29 */
              /* bump-normalized */
  1828 |      __builtin_memcpy(((char *)$$RET17D  + $$CIV4C * 8ll),((char *)this  + 32ll + (4ll)*($$CIV4C)),4ull);
  1831 |      __builtin_memcpy(((char *)$$RET17D  + ($$CIV4C * 8ll + 4ll)),((char *)this  + 36ll + (4ll)*($$CIV4C)),4ull);
  1826 |      $$CIV4C = $$CIV4C + 1ll;
            } while ((unsigned long long) $$CIV4C < 1ull);    /* ~4 */
            dst = ((char *)$$RET17D  + 8ll);
          lab_6:
  1836 |    if (!1) goto lab_9;
            $$CIV4D = 0ll;
            do {   /* id=1 guarded */ /* ~7 */ 
              /* region = 28 */
              /* bump-normalized */
  1838 |      __builtin_memcpy(((char *)dst  + $$CIV4D * 8ll),((char *)this  + 56ll + (4ll)*($$CIV4D)),4ull);
  1841 |      __builtin_memcpy(((char *)dst  + ($$CIV4D * 8ll + 4ll)),((char *)this  + 60ll + (4ll)*($$CIV4D)),4ull);
  1836 |      $$CIV4D = $$CIV4D + 1ll;
            } while ((unsigned long long) $$CIV4D < 1ull);    /* ~7 */
            dst = ((char *)dst  + 8ll);
          lab_9:
  1847 |    __builtin_memcpy(dst,&size_in_mem,8ull);
  1855 |    __builtin_memcpy(((char *)dst  + 8ll),&size_on_disk,8ull);
  1860 |    $$PARM.p3CA = *((char * *)this);
  1138 |    size = 0ull;
  1140 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_13;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=4 guarded */ /* ~14 */ 
              /* region = 27 */
              $$PARM.this327 = ((char *)$$PARM.p3CA  + (long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll);
   102 |      __builtin_memcpy(((char *)dst  + (long long) (size + 16ull)),(((char *)$$PARM.p3CA  + (long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)dst  + (long long) (size + 20ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~14 */
          lab_13:
  1860 |    size_on_disk = size;
  1891 |    rstr = 16ull + (size + header_size);
            return rstr;
  1892 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1105             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1812             3    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
                                          Loop was not SIMD vectorized because it contains 
                                          operation in header_size + 16ull which is not  
                                          suitable for SIMD vectorization.
                                          Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
                                          Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1826             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1836             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1140             4    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1892                  Loop has been rolled.

  1896 |  void MMSP::grid<1, MMSP::vector<double> >::swap(MMSP::grid<1, MMSP::vector<double> >&)(grid<1,MMSP::vector<double> > *this, grid<1,MMSP::vector<double> > *GRID)
  1899 |  {
            DATA = *((char * *)this);
  1900 |    *((char * *)this) = *((char * *)GRID);
  1901 |    *((char * *)GRID) = DATA;
  1904 |    NODES = *((int *)((char *)this + 8));
  1905 |    *((int *)((char *)this + 8)) = *((int *)((char *)GRID + 8));
  1906 |    *((int *)((char *)GRID + 8)) = NODES;
  1909 |    CELLS = *((int *)((char *)this + 12));
  1910 |    *((int *)((char *)this + 12)) = *((int *)((char *)GRID + 12));
  1911 |    *((int *)((char *)GRID + 12)) = CELLS;
  1914 |    FIELDS = *((int *)((char *)this + 16));
  1915 |    *((int *)((char *)this + 16)) = *((int *)((char *)GRID + 16));
  1916 |    *((int *)((char *)GRID + 16)) = FIELDS;
  1919 |    GHOSTS = *((int *)((char *)this + 20));
  1920 |    *((int *)((char *)this + 20)) = *((int *)((char *)GRID + 20));
  1921 |    *((int *)((char *)GRID + 20)) = GHOSTS;
  1924 |    if (!1) goto lab_3;
            $$CIV4E = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
  1925 |      G0 = ((int *)((char *)this + 24))[$$CIV4E];
  1926 |      ((int *)((char *)this + 24))[$$CIV4E] = ((int *)((char *)GRID + 24))[$$CIV4E];
  1927 |      ((int *)((char *)GRID + 24))[$$CIV4E] = G0;
  1928 |      G1 = ((int *)((char *)this + 28))[$$CIV4E];
  1929 |      ((int *)((char *)this + 28))[$$CIV4E] = ((int *)((char *)GRID + 28))[$$CIV4E];
  1930 |      ((int *)((char *)GRID + 28))[$$CIV4E] = G1;
  1931 |      X0 = ((int *)((char *)this + 32))[$$CIV4E];
  1932 |      ((int *)((char *)this + 32))[$$CIV4E] = ((int *)((char *)GRID + 32))[$$CIV4E];
  1933 |      ((int *)((char *)GRID + 32))[$$CIV4E] = X0;
  1934 |      X1 = ((int *)((char *)this + 36))[$$CIV4E];
  1935 |      ((int *)((char *)this + 36))[$$CIV4E] = ((int *)((char *)GRID + 36))[$$CIV4E];
  1936 |      ((int *)((char *)GRID + 36))[$$CIV4E] = X1;
  1937 |      XX = ((int *)((char *)this + 40))[$$CIV4E];
  1938 |      ((int *)((char *)this + 40))[$$CIV4E] = ((int *)((char *)GRID + 40))[$$CIV4E];
  1939 |      ((int *)((char *)GRID + 40))[$$CIV4E] = XX;
  1940 |      S0 = ((int *)((char *)this + 44))[$$CIV4E];
  1941 |      ((int *)((char *)this + 44))[$$CIV4E] = ((int *)((char *)GRID + 44))[$$CIV4E];
  1942 |      ((int *)((char *)GRID + 44))[$$CIV4E] = S0;
  1943 |      S1 = ((int *)((char *)this + 48))[$$CIV4E];
  1944 |      ((int *)((char *)this + 48))[$$CIV4E] = ((int *)((char *)GRID + 48))[$$CIV4E];
  1945 |      ((int *)((char *)GRID + 48))[$$CIV4E] = S1;
  1946 |      SX = ((int *)((char *)this + 52))[$$CIV4E];
  1947 |      ((int *)((char *)this + 52))[$$CIV4E] = ((int *)((char *)GRID + 52))[$$CIV4E];
  1948 |      ((int *)((char *)GRID + 52))[$$CIV4E] = SX;
  1949 |      B0 = ((int *)((char *)this + 56))[$$CIV4E];
  1950 |      ((int *)((char *)this + 56))[$$CIV4E] = ((int *)((char *)GRID + 56))[$$CIV4E];
  1951 |      ((int *)((char *)GRID + 56))[$$CIV4E] = B0;
  1952 |      B1 = ((int *)((char *)this + 60))[$$CIV4E];
  1953 |      ((int *)((char *)this + 60))[$$CIV4E] = ((int *)((char *)GRID + 60))[$$CIV4E];
  1954 |      ((int *)((char *)GRID + 60))[$$CIV4E] = B1;
  1955 |      DX = ((double *)((char *)this + 64))[$$CIV4E];
  1956 |      ((double *)((char *)this + 64))[$$CIV4E] = ((double *)((char *)GRID + 64))[$$CIV4E];
  1957 |      ((double *)((char *)GRID + 64))[$$CIV4E] = DX;
  1958 |      P0 = ((int *)((char *)this + 72))[$$CIV4E];
  1959 |      ((int *)((char *)this + 72))[$$CIV4E] = ((int *)((char *)GRID + 72))[$$CIV4E];
  1960 |      ((int *)((char *)GRID + 72))[$$CIV4E] = P0;
  1961 |      P1 = ((int *)((char *)this + 76))[$$CIV4E];
  1962 |      ((int *)((char *)this + 76))[$$CIV4E] = ((int *)((char *)GRID + 76))[$$CIV4E];
  1963 |      ((int *)((char *)GRID + 76))[$$CIV4E] = P1;
  1964 |      SP = ((int *)((char *)this + 80))[$$CIV4E];
  1965 |      ((int *)((char *)this + 80))[$$CIV4E] = ((int *)((char *)GRID + 80))[$$CIV4E];
  1966 |      ((int *)((char *)GRID + 80))[$$CIV4E] = SP;
  1967 |      N0 = ((int *)((char *)this + 84))[$$CIV4E];
  1968 |      ((int *)((char *)this + 84))[$$CIV4E] = ((int *)((char *)GRID + 84))[$$CIV4E];
  1969 |      ((int *)((char *)GRID + 84))[$$CIV4E] = N0;
  1970 |      N1 = ((int *)((char *)this + 88))[$$CIV4E];
  1971 |      ((int *)((char *)this + 88))[$$CIV4E] = ((int *)((char *)GRID + 88))[$$CIV4E];
  1972 |      ((int *)((char *)GRID + 88))[$$CIV4E] = N1;
  1924 |      $$CIV4E = ($$CIV4E + 1);
            } while ((unsigned long long) $$CIV4E < 1ull);    /* ~1 */
          lab_3:
  1974 |    return;
          } /* function */ 


   142 |  void MMSP::grid<3, MMSP::vector<double> >::setup(bool)(grid<3,MMSP::vector<double> > *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIV4F = 0ll;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 33 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 48))[$$CIV4F] = ((int *)((char *)this + 24))[$$CIV4F];
   147 |      ((int *)((char *)this + 60))[$$CIV4F] = ((int *)((char *)this + 36))[$$CIV4F];
   149 |      ((int *)((char *)this + 120))[$$CIV4F] = 2;
   150 |      ((int *)((char *)this + 132))[$$CIV4F] = 2;
   152 |      ((double *)((char *)this + 144))[$$CIV4F] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 168))[$$CIV4F] = 0;
   155 |      ((int *)((char *)this + 180))[$$CIV4F] = 1;
   156 |      ((int *)((char *)this + 192))[$$CIV4F] = 1;
   158 |      ((int *)((char *)this + 204))[$$CIV4F] = 0;
   159 |      ((int *)((char *)this + 216))[$$CIV4F] = 0;
   145 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < 3ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIV50 = 0ll;
            do {   /* id=4 guarded */ /* ~4 */ 
              /* region = 32 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 84))[$$CIV50] = ((int *)((char *)this + 48))[$$CIV50] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 96))[$$CIV50] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 60))[$$CIV50];
   301 |      $$CIV50 = $$CIV50 + 1ll;
            } while ((unsigned long long) $$CIV50 < 3ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_29;
            $$DCIV9 = 0ll;
            do {   /* id=6 guarded */ /* ~30 */ 
              /* region = 31 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 72))[$$DCIV9] = 1;
   306 |      ((int *)((char *)this + 108))[$$DCIV9] = 1;
   305 |      $$DCIV9 = $$DCIV9 + 1ll;
            } while ((unsigned long long) $$DCIV9 < 3ull);    /* ~30 */
          lab_29:
            if (!1) goto lab_31;
            $$DCIVA = 0ll;
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 30 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIVA + 1 < 3)) goto lab_33;
              $$DCIVB = 0ll;
              $$SCREP6 = ((int *)((char *)this + 72))[$$DCIVA];
              $$SCREP7 = ((int *)((char *)this + 108))[$$DCIVA];
              do {   /* id=8 guarded */ /* ~34 */ 
                /* region = 28 */
                /* bump-normalized */
   310 |        $$SCREP6 = $$SCREP6 * (((int *)((char *)this + 60))[(long long) ((int) (1ll + ($$DCIVB + $$DCIVA)))] - ((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIVB + $$DCIVA)))]);
   309 |        $$SCREP7 = $$SCREP7 * (((int *)((char *)this + 96))[(long long) ((int) (1ll + ($$DCIVB + $$DCIVA)))] - ((int *)((char *)this + 84))[(long long) ((int) (1ll + ($$DCIVB + $$DCIVA)))]);
   308 |        $$DCIVB = $$DCIVB + 1ll;
              } while ((unsigned long long) $$DCIVB < (unsigned long long) (2ll - $$DCIVA));    /* ~34 */
              ((int *)((char *)this + 108))[$$DCIVA] = $$SCREP7;
              ((int *)((char *)this + 72))[$$DCIVA] = $$SCREP6;
            lab_33:
   305 |      $$DCIVA = $$DCIVA + 1ll;
            } while ((unsigned long long) $$DCIVA < 3ull);    /* ~32 */
          lab_31:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 96))[0ll] - ((int *)((char *)this + 84))[0ll]) * ((int *)((char *)this + 108))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 60))[0ll] - ((int *)((char *)this + 48))[0ll]) * ((int *)((char *)this + 72))[0ll];
            $$RET17E = __cxa_vec_new3((unsigned long long) ((((int *)((char *)this + 96))[0ll] - ((int *)((char *)this + 84))[0ll]) * ((int *)((char *)this + 108))[0ll]),16ll,8ll,&MMSP::vector<double>::__dftct(),&MMSP::vector<double>::~vector(),&operator new[](unsigned long),&operator delete[](void*));
   319 |    *((char * *)this) = $$RET17E;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_15;
            i = 0;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 29 */
   101 |      MMSP::vector<double>::resize(int)(((char *)*((char * *)this) + (16ll)*((long long) i)),*((int *)((char *)this + 16)))
   320 |      i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~13 */
          lab_15:
   326 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           145             5    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           145             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           146                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           147                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           149                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           150                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           152                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       275           154                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           155                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           156                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           158                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           159                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           301             4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           301             4    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          operation in this->(grid<3,MMSP::vector<double> 
                                          >).x0[]@30.rns1000.[$$CIV50] - 
                                          this->(grid<3,MMSP::vector<double> 
                                          >).ghosts@14.rns1013. which is not  suitable for SIMD 
                                          vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          operation in this->(grid<3,MMSP::vector<double> 
                                          >).ghosts@14.rns1013. + 
                                          this->(grid<3,MMSP::vector<double> 
                                          >).x1[]@3c.rns1002.[$$CIV50] which is not  suitable 
                                          for SIMD vectorization.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             6    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           307                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           306                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       275           308             8    Loop was not SIMD vectorized because it contains 
                                          non-vectorizable reductions.
       275           308             8    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP6 * 
                                          (this->(grid<3,MMSP::vector<double> 
                                          >).x1[]@3c.rns1002.[(long long) ((int) (1ll + 
                                          ($$DCIVB + $$DCIVA)))] - 
                                          this->(grid<3,MMSP::vector<double> 
                                          >).x0[]@30.rns1000.[(long long) ((int) (1ll + 
                                          ($$DCIVB + $$DCIVA)))]) which is not  suitable for 
                                          SIMD vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP7 * 
                                          (this->(grid<3,MMSP::vector<double> 
                                          >).s1[]@60.rns1014.[(long long) ((int) (1ll + 
                                          ($$DCIVB + $$DCIVA)))] - 
                                          this->(grid<3,MMSP::vector<double> 
                                          >).s0[]@54.rns1012.[(long long) ((int) (1ll + 
                                          ($$DCIVB + $$DCIVA)))]) which is not  suitable for 
                                          SIMD vectorization.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           320             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275           320             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   401 |  void MMSP::grid<3, MMSP::vector<double> >::position(int) const(vector<int> *x, grid<3,MMSP::vector<double> > *this, int i)
   402 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   403 |    $$PARM.this396 = x;
    33 |    *((int *)((char *)x + 8)) = 3;
            $$RET1A0 = operator new[](unsigned long)(12ull);
    34 |    *((char * *)$$PARM.this396) = $$RET1A0;
   403 |    __es.__c4@3 = 1u;
   404 |    if (!1) goto lab_3;
            $$CIV53 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   405 |      n = i / ((int *)((char *)this + 72))[$$CIV53];
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV53 < *((int *)((char *)x + 8))) goto lab_15;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_15:
   406 |      ((int *)(*((char * *)x)))[$$CIV53] = ((int *)((char *)this + 48))[$$CIV53] + i / ((int *)((char *)this + 72))[$$CIV53];
   407 |      i = i + - (((int *)((char *)this + 72))[$$CIV53] * n);
   404 |      $$CIV53 = $$CIV53 + 1ll;
            } while ((unsigned long long) $$CIV53 < 3ull);    /* ~1 */
          lab_3:
   410 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           404             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           404             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   413 |  void MMSP::grid<3, MMSP::vector<double> >::ghostswap()(char * this)
          {
   510 |    return;
          } /* function */ 


  1234 |  void MMSP::grid<3, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(grid<3,MMSP::vector<double> > *this, char * file, int GHOSTS)
  1235 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1245 |    std::istream::read(char*, long)(file,&blocks,4ll);
  1253 |    if (!(0 < blocks)) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 38 */
  1257 |      if (!1) goto lab_6;
              $$CIV54 = 0ll;
              do {   /* id=5 guarded */ /* ~4 */ 
                /* region = 37 */
                /* bump-normalized */
  1258 |        std::istream::read(char*, long)(file,((char *)&lmin + (4ll)*($$CIV54)),4ll);
  1259 |        std::istream::read(char*, long)(file,((char *)&lmax + (4ll)*($$CIV54)),4ll);
  1257 |        $$CIV54 = $$CIV54 + 1ll;
              } while ((unsigned long long) $$CIV54 < 3ull);    /* ~4 */
            lab_6:
  1264 |      if (!1) goto lab_9;
              $$CIV55 = 0ll;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 36 */
                /* bump-normalized */
  1265 |        std::istream::read(char*, long)(file,((char *)&blo + (4ll)*($$CIV55)),4ll);
  1266 |        std::istream::read(char*, long)(file,((char *)&bhi + (4ll)*($$CIV55)),4ll);
  1264 |        $$CIV55 = $$CIV55 + 1ll;
              } while ((unsigned long long) $$CIV55 < 3ull);    /* ~7 */
            lab_9:
  1271 |      std::istream::read(char*, long)(file,&size_in_mem,8ll);
  1272 |      std::istream::read(char*, long)(file,&size_on_disk,8ll);
  1277 |      overlap = 1u;
  1278 |      if (!1) goto lab_12;
              __alignx(32,((char *)&min + (4ll)*(0ll)))
              __alignx(32,((char *)&lmin + (4ll)*(0ll)))
              __alignx(32,((char *)&max + (4ll)*(0ll)))
              __alignx(32,((char *)&lmax + (4ll)*(0ll)))
              $$CIV56 = 0ll;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 35 */
                /* bump-normalized */
  1279 |        min[$$CIV56] = max(((int *)((char *)this + 48))[$$CIV56],lmin[$$CIV56]);
  1280 |        max[$$CIV56] = min(((int *)((char *)this + 60))[$$CIV56],lmax[$$CIV56]);
  1281 |        overlap = (max(((int *)((char *)this + 48))[$$CIV56],lmin[$$CIV56]) >= min(((int *)((char *)this + 60))[$$CIV56],lmax[$$CIV56]) ? 0u : overlap);
  1278 |        $$CIV56 = $$CIV56 + 1ll;
              } while ((unsigned long long) $$CIV56 < 3ull);    /* ~10 */
            lab_12:
  1284 |      if (!(overlap != 0u)) goto lab_21;
  1289 |      buffer.rnn11D = operator new[](unsigned long)(size_on_disk);
  1290 |      std::istream::read(char*, long)(file,buffer.rnn11D,(long long) size_on_disk);
  1291 |      MMSP::grid<3, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(&GRID,*((int *)((char *)this + 16)),&lmin,&lmax,0,1u);
              __es.__c4@3 = 1u;
  1292 |      if (size_in_mem != size_on_disk) goto lab_45;
  1316 |      MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*)(&GRID,buffer.rnn11D);
  1317 |      operator delete[](void*)(buffer.rnn11D)
  1321 |      size = MMSP::grid<3, MMSP::vector<double> >::buffer_size(int const*, int const*) const(&GRID,&min,&max);
  1322 |      buffer.rnn11B = operator new[](unsigned long)(size);
  1323 |      MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(&GRID,buffer.rnn11B,&min,&max);
  1324 |      MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(this,buffer.rnn11B,&min,&max);
  1325 |      operator delete[](void*)(buffer.rnn11B)
  1329 |      if (!1) goto lab_37;
              $$CIV57 = 0ll;
              do {   /* id=2 guarded */ /* ~35 */ 
                /* region = 34 */
                /* bump-normalized */
  1330 |        if (!(((int *)((char *)this + 48))[$$CIV57] == lmin[$$CIV57])) goto lab_38;
                ((int *)((char *)this + 120))[$$CIV57] = blo[$$CIV57];
              lab_38:
  1331 |        if (!(((int *)((char *)this + 60))[$$CIV57] == lmax[$$CIV57])) goto lab_40;
                ((int *)((char *)this + 132))[$$CIV57] = bhi[$$CIV57];
              lab_40:
  1329 |        $$CIV57 = $$CIV57 + 1ll;
              } while ((unsigned long long) $$CIV57 < 3ull);    /* ~35 */
            lab_37:
  1333 |      __es.__c4@3 = 0u;
              MMSP::grid<3, MMSP::vector<double> >::~grid()(&GRID);
              goto lab_42;
            lab_21:
  1335 |      std::istream::seekg(long, std::_Ios_Seekdir)(file,(long long) size_on_disk,1);
  1336 |    lab_42:
  1253 |      i = i + 1;
            } while (i < blocks);    /* ~1 */
          lab_3:
  1342 |    goto lab_47;
  1292 |  lab_45:
   548 |    $$RET180 = (long long) __builtin_strlen("Unable to uncompress data: compiled without zlib.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"Unable to uncompress data: compiled without zlib.",$$RET180);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns1037.(&std::cerr);
  1295 |    exit(1)
            return;
          lab_47:
            return;
  1342 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1253             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1253             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       275          1253             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1257             5    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1257             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275          1264             4    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1264             4    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275          1278             3    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1279                  Loop was not SIMD vectorized because it contains 
                                          operation in max(this->(grid<3,MMSP::vector<double> 
                                          >).x0[]@30.rns1038.[$$CIV56],lmin[]@0[$$CIV56]) which 
                                          is not  suitable for SIMD vectorization.
       275          1279                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1280                  Loop was not SIMD vectorized because it contains 
                                          operation in min(this->(grid<3,MMSP::vector<double> 
                                          >).x1[]@3c.rns1039.[$$CIV56],lmax[]@0[$$CIV56]) which 
                                          is not  suitable for SIMD vectorization.
       275          1280                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1281                  Loop was not SIMD vectorized because it contains 
                                          operation in max(this->(grid<3,MMSP::vector<double> 
                                          >).x0[]@30.rns1038.[$$CIV56],lmin[]@0[$$CIV56]) >= 
                                          min(this->(grid<3,MMSP::vector<double> 
                                          >).x1[]@3c.rns1039.[$$CIV56],lmax[]@0[$$CIV56]) ? 0u 
                                          : overlap which is not  suitable for SIMD 
                                          vectorization.
       275          1281                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       275          1281                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1329             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1329             2    Loop was not SIMD vectorized because it contains 
                                          control flow.

  1801 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::write_buffer(char*&) const(char * this, char * *buf)
  1804 |  {
            size_in_mem = MMSP::grid<3, MMSP::vector<double> >::buffer_size() const(this);
  1807 |    size_on_disk = size_in_mem;
  1811 |    header_size = 0ull;
  1812 |    if (!1) goto lab_3;
            $$CIV59 = 0ll;
            do {   /* id=3 guarded */ /* ~1 */ 
              /* region = 18 */
              /* bump-normalized */
              header_size = header_size + 16ull;
              $$CIV59 = $$CIV59 + 1ll;
            } while ((unsigned long long) $$CIV59 < 3ull);    /* ~1 */
          lab_3:
  1819 |    $$RET181 = operator new[](unsigned long)(16ull + (header_size + size_in_mem));
  1821 |    *buf = $$RET181;
  1822 |    dst = $$RET181;
  1826 |    if (!1) goto lab_6;
            $$CIV5A = 0ll;
            do {   /* id=2 guarded */ /* ~4 */ 
              /* region = 17 */
              /* bump-normalized */
  1828 |      __builtin_memcpy(((char *)$$RET181  + $$CIV5A * 8ll),((char *)this  + 48ll + (4ll)*($$CIV5A)),4ull);
  1831 |      __builtin_memcpy(((char *)$$RET181  + ($$CIV5A * 8ll + 4ll)),((char *)this  + 60ll + (4ll)*($$CIV5A)),4ull);
  1826 |      $$CIV5A = $$CIV5A + 1ll;
            } while ((unsigned long long) $$CIV5A < 3ull);    /* ~4 */
            dst = ((char *)$$RET181  + 24ll);
          lab_6:
  1836 |    if (!1) goto lab_9;
            $$CIV5B = 0ll;
            do {   /* id=1 guarded */ /* ~7 */ 
              /* region = 16 */
              /* bump-normalized */
  1838 |      __builtin_memcpy(((char *)dst  + $$CIV5B * 8ll),((char *)this  + 120ll + (4ll)*($$CIV5B)),4ull);
  1841 |      __builtin_memcpy(((char *)dst  + ($$CIV5B * 8ll + 4ll)),((char *)this  + 132ll + (4ll)*($$CIV5B)),4ull);
  1836 |      $$CIV5B = $$CIV5B + 1ll;
            } while ((unsigned long long) $$CIV5B < 3ull);    /* ~7 */
            dst = ((char *)dst  + 24ll);
          lab_9:
  1847 |    __builtin_memcpy(dst,&size_in_mem,8ull);
  1855 |    __builtin_memcpy(((char *)dst  + 8ll),&size_on_disk,8ull);
  1860 |    size_on_disk = MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*) const(this,((char *)dst  + 16ll));
  1891 |    rstr = 16ull + (size_on_disk + header_size);
            return rstr;
  1892 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1812             3    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
                                          Loop was not SIMD vectorized because it contains 
                                          operation in header_size + 16ull which is not  
                                          suitable for SIMD vectorization.
                                          Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
                                          Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275          1826             2    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1836             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275          1892                  Loop has been rolled.

  1896 |  void MMSP::grid<3, MMSP::vector<double> >::swap(MMSP::grid<3, MMSP::vector<double> >&)(grid<3,MMSP::vector<double> > *this, grid<3,MMSP::vector<double> > *GRID)
  1899 |  {
            DATA = *((char * *)this);
  1900 |    *((char * *)this) = *((char * *)GRID);
  1901 |    *((char * *)GRID) = DATA;
  1904 |    NODES = *((int *)((char *)this + 8));
  1905 |    *((int *)((char *)this + 8)) = *((int *)((char *)GRID + 8));
  1906 |    *((int *)((char *)GRID + 8)) = NODES;
  1909 |    CELLS = *((int *)((char *)this + 12));
  1910 |    *((int *)((char *)this + 12)) = *((int *)((char *)GRID + 12));
  1911 |    *((int *)((char *)GRID + 12)) = CELLS;
  1914 |    FIELDS = *((int *)((char *)this + 16));
  1915 |    *((int *)((char *)this + 16)) = *((int *)((char *)GRID + 16));
  1916 |    *((int *)((char *)GRID + 16)) = FIELDS;
  1919 |    GHOSTS = *((int *)((char *)this + 20));
  1920 |    *((int *)((char *)this + 20)) = *((int *)((char *)GRID + 20));
  1921 |    *((int *)((char *)GRID + 20)) = GHOSTS;
  1924 |    if (!1) goto lab_3;
            $$CIV5C = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
  1925 |      G0 = ((int *)((char *)this + 24))[$$CIV5C];
  1926 |      ((int *)((char *)this + 24))[$$CIV5C] = ((int *)((char *)GRID + 24))[$$CIV5C];
  1927 |      ((int *)((char *)GRID + 24))[$$CIV5C] = G0;
  1928 |      G1 = ((int *)((char *)this + 36))[$$CIV5C];
  1929 |      ((int *)((char *)this + 36))[$$CIV5C] = ((int *)((char *)GRID + 36))[$$CIV5C];
  1930 |      ((int *)((char *)GRID + 36))[$$CIV5C] = G1;
  1931 |      X0 = ((int *)((char *)this + 48))[$$CIV5C];
  1932 |      ((int *)((char *)this + 48))[$$CIV5C] = ((int *)((char *)GRID + 48))[$$CIV5C];
  1933 |      ((int *)((char *)GRID + 48))[$$CIV5C] = X0;
  1934 |      X1 = ((int *)((char *)this + 60))[$$CIV5C];
  1935 |      ((int *)((char *)this + 60))[$$CIV5C] = ((int *)((char *)GRID + 60))[$$CIV5C];
  1936 |      ((int *)((char *)GRID + 60))[$$CIV5C] = X1;
  1937 |      XX = ((int *)((char *)this + 72))[$$CIV5C];
  1938 |      ((int *)((char *)this + 72))[$$CIV5C] = ((int *)((char *)GRID + 72))[$$CIV5C];
  1939 |      ((int *)((char *)GRID + 72))[$$CIV5C] = XX;
  1940 |      S0 = ((int *)((char *)this + 84))[$$CIV5C];
  1941 |      ((int *)((char *)this + 84))[$$CIV5C] = ((int *)((char *)GRID + 84))[$$CIV5C];
  1942 |      ((int *)((char *)GRID + 84))[$$CIV5C] = S0;
  1943 |      S1 = ((int *)((char *)this + 96))[$$CIV5C];
  1944 |      ((int *)((char *)this + 96))[$$CIV5C] = ((int *)((char *)GRID + 96))[$$CIV5C];
  1945 |      ((int *)((char *)GRID + 96))[$$CIV5C] = S1;
  1946 |      SX = ((int *)((char *)this + 108))[$$CIV5C];
  1947 |      ((int *)((char *)this + 108))[$$CIV5C] = ((int *)((char *)GRID + 108))[$$CIV5C];
  1948 |      ((int *)((char *)GRID + 108))[$$CIV5C] = SX;
  1949 |      B0 = ((int *)((char *)this + 120))[$$CIV5C];
  1950 |      ((int *)((char *)this + 120))[$$CIV5C] = ((int *)((char *)GRID + 120))[$$CIV5C];
  1951 |      ((int *)((char *)GRID + 120))[$$CIV5C] = B0;
  1952 |      B1 = ((int *)((char *)this + 132))[$$CIV5C];
  1953 |      ((int *)((char *)this + 132))[$$CIV5C] = ((int *)((char *)GRID + 132))[$$CIV5C];
  1954 |      ((int *)((char *)GRID + 132))[$$CIV5C] = B1;
  1955 |      DX = ((double *)((char *)this + 144))[$$CIV5C];
  1956 |      ((double *)((char *)this + 144))[$$CIV5C] = ((double *)((char *)GRID + 144))[$$CIV5C];
  1957 |      ((double *)((char *)GRID + 144))[$$CIV5C] = DX;
  1958 |      P0 = ((int *)((char *)this + 168))[$$CIV5C];
  1959 |      ((int *)((char *)this + 168))[$$CIV5C] = ((int *)((char *)GRID + 168))[$$CIV5C];
  1960 |      ((int *)((char *)GRID + 168))[$$CIV5C] = P0;
  1961 |      P1 = ((int *)((char *)this + 180))[$$CIV5C];
  1962 |      ((int *)((char *)this + 180))[$$CIV5C] = ((int *)((char *)GRID + 180))[$$CIV5C];
  1963 |      ((int *)((char *)GRID + 180))[$$CIV5C] = P1;
  1964 |      SP = ((int *)((char *)this + 192))[$$CIV5C];
  1965 |      ((int *)((char *)this + 192))[$$CIV5C] = ((int *)((char *)GRID + 192))[$$CIV5C];
  1966 |      ((int *)((char *)GRID + 192))[$$CIV5C] = SP;
  1967 |      N0 = ((int *)((char *)this + 204))[$$CIV5C];
  1968 |      ((int *)((char *)this + 204))[$$CIV5C] = ((int *)((char *)GRID + 204))[$$CIV5C];
  1969 |      ((int *)((char *)GRID + 204))[$$CIV5C] = N0;
  1970 |      N1 = ((int *)((char *)this + 216))[$$CIV5C];
  1971 |      ((int *)((char *)this + 216))[$$CIV5C] = ((int *)((char *)GRID + 216))[$$CIV5C];
  1972 |      ((int *)((char *)GRID + 216))[$$CIV5C] = N1;
  1924 |      $$CIV5C = ($$CIV5C + 1);
            } while ((unsigned long long) $$CIV5C < 3ull);    /* ~1 */
          lab_3:
  1974 |    return;
          } /* function */ 


  1134 |  unsigned long long std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::_M_check_len(unsigned long, char const*) const(_Vector_base<std::vector<Point<int>,std::allocator<Point<int> > >,std::allocator<std::vector<Point<int>,std::allocator<Point<int> > > > > *this, unsigned long long __n, char * __s)
   538 |  {
            if (!((unsigned long long) (768614336404564650ll - (*((char * *)((char *)this + 8)) - *((char * *)this)) / 24ll) < __n)) goto lab_1;
  1137 |    std::__throw_length_error(char const*)(__s)
            return;
          lab_1:
  1139 |    __19700 = (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 24ll);
   215 |    __19711 = ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 24ll) < __n ? &__n : &__19700);
  1140 |    if (*__19711 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 24ll) < (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 24ll)) goto lab_6;
   538 |    if (!(*__19711 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 24ll) > 768614336404564650ull)) goto lab_7;
          lab_6:
            __19725 = 768614336404564650ull;
            goto lab_8;
          lab_7:
            __19725 = *__19711 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 24ll);
          lab_8:
            rstr = __19725;
            return rstr;
  1141 |  } /* function */ 


          char * DistanceVoxel_PriorityQueue::~DistanceVoxel_PriorityQueue()(char * this)
          {
            __es.__l@0 = 2;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            __es.__c4@3 = 1u;
   614 |    $$PARM.__x3A7 = ((char * *)((char *)this + 24 + 8))[8 / 8];
   968 |    if (!(((char * *)((char *)this + 24 + 8))[8 / 8] != NULL)) goto lab_8;
            do {   /* id=1 guarded */ /* ~9 */ 
              /* region = 10 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)((this + 24),*((char * *)((char *)$$PARM.__x3A7 + 24)))
   509 |      __y = *((char * *)((char *)$$PARM.__x3A7 + 16));
    95 |      operator delete(void*)($$PARM.__x3A7)
   973 |      $$PARM.__x3A7 = __y;
   968 |    } while (__y != NULL);    /* ~9 */
          lab_8:
            __es.__c4@3 = 0u;
   145 |    if (!(*((char * *)this) != NULL)) goto lab_2;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_2:
            rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312           968             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   207 |  char * std::vector<double, std::allocator<double> >::vector()(_Vector_impl;vector<double,std::allocator<double> > *this)
    81 |  {
            *((char * *)this) = NULL;
            *((char * *)((char *)this + 8)) = NULL;
            *((char * *)((char *)this + 16)) = NULL;
   208 |    rstr = this;
            return rstr;
          } /* function */ 


  1134 |  unsigned long long std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const(_Vector_base<double,std::allocator<double> > *this, unsigned long long __n, char * __s)
   538 |  {
            if (!((unsigned long long) (2305843009213693951ll - (*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll) < __n)) goto lab_1;
  1137 |    std::__throw_length_error(char const*)(__s)
            return;
          lab_1:
  1139 |    __19763 = (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll);
   215 |    __19774 = ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll) < __n ? &__n : &__19763);
  1140 |    if (*__19774 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll) < (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll)) goto lab_6;
   538 |    if (!(*__19774 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll) > 2305843009213693951ull)) goto lab_7;
          lab_6:
            __19788 = 2305843009213693951ull;
            goto lab_8;
          lab_7:
            __19788 = *__19774 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll);
          lab_8:
            rstr = __19788;
            return rstr;
  1141 |  } /* function */ 


   168 |  void void MMSP::resize<unsigned long>(unsigned long&, int)(char * value, int n)
          {
   170 |    return;
          } /* function */ 


    26 |  int int MMSP::fields<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(grid<2,MMSP::vector<double> > *GRID)
    28 |  {
            rstr = *((int *)((char *)GRID + 16));
            return rstr;
    29 |  } /* function */ 


    34 |  int int MMSP::g0<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   283 |  {
            rstr = ((int *)((char *)GRID + 24))[(long long) i];
            return rstr;
    37 |  } /* function */ 


    38 |  int int MMSP::g1<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   287 |  {
            rstr = ((int *)((char *)GRID + 32))[(long long) i];
            return rstr;
    41 |  } /* function */ 


    42 |  int int MMSP::b0<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   291 |  {
            rstr = ((int *)((char *)GRID + 88))[(long long) i];
            return rstr;
    45 |  } /* function */ 


    46 |  int int MMSP::b1<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   295 |  {
            rstr = ((int *)((char *)GRID + 96))[(long long) i];
            return rstr;
    49 |  } /* function */ 


    80 |  double double MMSP::dx<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   329 |  {
            rstr = ((double *)((char *)GRID + 104))[(long long) i];
            return rstr;
    83 |  } /* function */ 


   100 |  void void MMSP::resize<double>(MMSP::vector<double>&, int)(char * v, int n)
   101 |  {
            MMSP::vector<double>::resize(int)(v,n)
   102 |    return;
          } /* function */ 


   588 |  void std::string MMSP::name<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(char * __classReturn, char * GRID)
   589 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__19800,"grid:",&__19802);
            __es.__c4@3 = 1u;
            $$PARM.this220 = &__19803;
    11 |    &__19803->(vector<double>).size@8.rns1372.$$1682 = 0;
    12 |    &__19803->(vector<double>).data@0.rns1373.$$1682 = NULL;
    13 |    $$IRET125 = $$PARM.this220;
   101 |    __es.__c4@3 = 2u;
            std::string MMSP::name<double>(MMSP::vector<double> const&)(&__19805,&__19803)
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(__classReturn,&__19800,&__19805)
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19805);
            __es.__c4@3 = 1u;
            $$PARM.this350 = &__19803;
    47 |    if (!(&__19803->(vector<double>).data@0.rns408.$$1686 != NULL)) goto lab_5;
    48 |    operator delete[](void*)(&__19803->(vector<double>).data@0.rns408.$$1686)
    49 |    &__19803->(vector<double>).data@0.rns408.$$1686 = NULL;
    50 |  lab_5:
    51 |    $$IRET1BC = $$PARM.this350;
   101 |    __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19800);
   591 |    return;
          } /* function */ 


    26 |  int int MMSP::fields<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&)(grid<1,MMSP::vector<double> > *GRID)
    28 |  {
            rstr = *((int *)((char *)GRID + 16));
            return rstr;
    29 |  } /* function */ 


    34 |  int int MMSP::g0<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   283 |  {
            rstr = ((int *)((char *)GRID + 24))[(long long) i];
            return rstr;
    37 |  } /* function */ 


    38 |  int int MMSP::g1<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   287 |  {
            rstr = ((int *)((char *)GRID + 28))[(long long) i];
            return rstr;
    41 |  } /* function */ 


    42 |  int int MMSP::b0<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   291 |  {
            rstr = ((int *)((char *)GRID + 56))[(long long) i];
            return rstr;
    45 |  } /* function */ 


    46 |  int int MMSP::b1<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   295 |  {
            rstr = ((int *)((char *)GRID + 60))[(long long) i];
            return rstr;
    49 |  } /* function */ 


    80 |  double double MMSP::dx<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   329 |  {
            rstr = ((double *)((char *)GRID + 64))[(long long) i];
            return rstr;
    83 |  } /* function */ 


   588 |  void std::string MMSP::name<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&)(char * __classReturn, char * GRID)
   589 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__19871,"grid:",&__19873);
            __es.__c4@3 = 1u;
            $$PARM.this222 = &__19874;
    11 |    &__19874->(vector<double>).size@8.rns1372.$$1689 = 0;
    12 |    &__19874->(vector<double>).data@0.rns1373.$$1689 = NULL;
    13 |    $$IRET127 = $$PARM.this222;
   101 |    __es.__c4@3 = 2u;
            std::string MMSP::name<double>(MMSP::vector<double> const&)(&__19876,&__19874)
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(__classReturn,&__19871,&__19876)
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19876);
            __es.__c4@3 = 1u;
            $$PARM.this34F = &__19874;
    47 |    if (!(&__19874->(vector<double>).data@0.rns408.$$1693 != NULL)) goto lab_5;
    48 |    operator delete[](void*)(&__19874->(vector<double>).data@0.rns408.$$1693)
    49 |    &__19874->(vector<double>).data@0.rns408.$$1693 = NULL;
    50 |  lab_5:
    51 |    $$IRET1BB = $$PARM.this34F;
   101 |    __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19871);
   591 |    return;
          } /* function */ 


    26 |  int int MMSP::fields<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(grid<3,MMSP::vector<double> > *GRID)
    28 |  {
            rstr = *((int *)((char *)GRID + 16));
            return rstr;
    29 |  } /* function */ 


    34 |  int int MMSP::g0<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   283 |  {
            rstr = ((int *)((char *)GRID + 24))[(long long) i];
            return rstr;
    37 |  } /* function */ 


    38 |  int int MMSP::g1<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   287 |  {
            rstr = ((int *)((char *)GRID + 36))[(long long) i];
            return rstr;
    41 |  } /* function */ 


    42 |  int int MMSP::b0<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   291 |  {
            rstr = ((int *)((char *)GRID + 120))[(long long) i];
            return rstr;
    45 |  } /* function */ 


    46 |  int int MMSP::b1<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   295 |  {
            rstr = ((int *)((char *)GRID + 132))[(long long) i];
            return rstr;
    49 |  } /* function */ 


    80 |  double double MMSP::dx<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   329 |  {
            rstr = ((double *)((char *)GRID + 144))[(long long) i];
            return rstr;
    83 |  } /* function */ 


   588 |  void std::string MMSP::name<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(char * __classReturn, char * GRID)
   589 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__19942,"grid:",&__19944);
            __es.__c4@3 = 1u;
            $$PARM.this221 = &__19945;
    11 |    &__19945->(vector<double>).size@8.rns1372.$$1696 = 0;
    12 |    &__19945->(vector<double>).data@0.rns1373.$$1696 = NULL;
    13 |    $$IRET126 = $$PARM.this221;
   101 |    __es.__c4@3 = 2u;
            std::string MMSP::name<double>(MMSP::vector<double> const&)(&__19947,&__19945)
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(__classReturn,&__19942,&__19947)
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19947);
            __es.__c4@3 = 1u;
            $$PARM.this351 = &__19945;
    47 |    if (!(&__19945->(vector<double>).data@0.rns408.$$1700 != NULL)) goto lab_5;
    48 |    operator delete[](void*)(&__19945->(vector<double>).data@0.rns408.$$1700)
    49 |    &__19945->(vector<double>).data@0.rns408.$$1700 = NULL;
    50 |  lab_5:
    51 |    $$IRET1BD = $$PARM.this351;
   101 |    __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19942);
   591 |    return;
          } /* function */ 


    67 |  char * std::vector<Point<int>, std::allocator<Point<int> > >* std::__uninitialized_copy<false>::uninitialized_copy<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*>(std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*)(char * __first, char * __last, _Vector_impl *__result)
    69 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    70 |    __cur = __result;
    72 |    __es.__c4@3 = 1u;
    73 |    if (!(__first != __last)) goto lab_5;
            $$CIVFINAL5D = (unsigned long long) ((__last - __first) / 24ll);
            $$CIV5D = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV5D * 24ll))) goto lab_7;
    74 |      std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(((char *)__result  + $$CIV5D * 24ll),((char *)__first  + $$CIV5D * 24ll));
              goto __20044;
              goto __20045;
            lab_7:
    73 |      $$CIV5D = $$CIV5D + 1ll;
            } while ((unsigned long long) $$CIV5D < $$CIVFINAL5D);    /* ~3 */
            __cur = ((char *)__result  + ((__last - __first) / 24ll) * 24ll);
          lab_5:
    76 |    __es.__c4@3 = 0u;
            rstr = __cur;
            return rstr;
    79 |    /* GLAB  id_no=5600{__20045} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __20048 = __int_register_value(29u);
            _Unwind_Resume((char *) __20048)
            /* GLAB  id_no=5594{__20044} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __20047 = __int_register_value(29u);
            __cxa_begin_catch((char *) __20047)
   113 |    if (!(0ll != $$CIV5D * 24ll)) goto lab_12;
            $$CIV5E = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 19 */
              /* bump-normalized */
   145 |      if (!(((char * *)__result)[($$CIV5E * 24ll) / 8] != NULL)) goto lab_16;
    95 |      operator delete(void*)(((char * *)__result)[($$CIV5E * 24ll) / 8])
   110 |    lab_16:
    92 |      $$CIV5E = $$CIV5E + 1ll;
            } while ((unsigned long long) $$CIV5E < (unsigned long long) (($$CIV5D * 24ll) / 24ll));    /* ~10 */
          lab_12:
    81 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
    83 |    return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       305            73             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       305            73             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       304           113             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       304           113             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

    45 |  char * MMSP::grid<2, DistanceVoxel>::grid(int, ...)(grid<2,DistanceVoxel> *this, int FIELDS)
    48 |  {
            *((int *)((char *)this + 16)) = FIELDS;
            $$RET182 = (unsigned long long) __builtinParameterAddress(&FIELDS);
    53 |    if (!1) goto lab_3;
    52 |    list = (char *) ($$RET182 + 11ull & 18446744073709551608ull);
    53 |    $$CIV5F = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    54 |      ((int *)((char *)this + 24))[$$CIV5F] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)this + 32))[$$CIV5F] = (list + -4ll / 4)[0ll];
    53 |      $$CIV5F = $$CIV5F + 1ll;
            } while ((unsigned long long) $$CIV5F < 2ull);    /* ~1 */
          lab_3:
    61 |    *((int *)((char *)this + 20)) = 0;
    68 |    MMSP::grid<2, DistanceVoxel>::setup(bool)(this,0u)
    69 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            53             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)((char *)(char *) 
                                          ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll)  + -4ll + 
                                          (4ll)*(0ll)) with  non-vectorizable strides.
       275            54                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          operation in ((char *)(char *) ((unsigned long long) 
                                          ((char *)(char *) ((unsigned long long) list + 7ull & 
                                          18446744073709551608ull)  + 8ll) + 7ull & 
                                          18446744073709551608ull)  + 8ll) which is not  
                                          suitable for SIMD vectorization.
       275            55                  Loop was not SIMD vectorized because a data 
                                          dependence  prevents SIMD  vectorization.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)list  + -4ll + 
                                          (4ll)*(0ll)) with  non-vectorizable strides.
       275            55                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

   329 |  char * MMSP::grid<2, DistanceVoxel>::~grid()(grid<2,DistanceVoxel> *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    operator delete[](void*)(*((char * *)this))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   374 |  char * MMSP::grid<2, DistanceVoxel>::operator()(MMSP::vector<int>) const(grid<2,DistanceVoxel> *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV60 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.iC3 = (int) $$CIV60;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.iC3 < *((int *)((char *)x + 8))) goto lab_19;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$IRET52 = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.iC3));
   377 |      $$RET183 = $$IRET52;
   378 |      $$PARM.x23 = $$RET183;
              $$PARM.x024 = ((int *)((char *)this + 40))[$$CIV60];
              $$PARM.x125 = ((int *)((char *)this + 48))[$$CIV60];
              $$PARM.b026 = ((int *)((char *)this + 88))[$$CIV60];
              $$PARM.b127 = ((int *)((char *)this + 96))[$$CIV60];
    44 |      if (!(*$$PARM.x23 < $$PARM.x024)) goto lab_4;
    45 |      if ($$PARM.b026 == 1) goto lab_5;
              if (!($$PARM.b026 == 4)) goto lab_6;
            lab_5:
              *$$PARM.x23 = $$PARM.x024;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b026 == 2)) goto lab_8;
              *$$PARM.x23 = *$$PARM.x23 + ($$PARM.x125 - $$PARM.x024);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b026 == 0)) goto lab_16;
              *$$PARM.x23 = $$PARM.x024 * 2 - *$$PARM.x23;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.x23 >= $$PARM.x125)) goto lab_16;
    51 |      if ($$PARM.b127 == 1) goto lab_10;
              if (!($$PARM.b127 == 4)) goto lab_11;
            lab_10:
              *$$PARM.x23 = $$PARM.x125 - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b127 == 2)) goto lab_13;
              *$$PARM.x23 = *$$PARM.x23 + ($$PARM.x024 - $$PARM.x125);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b127 == 0)) goto lab_16;
              *$$PARM.x23 = ($$PARM.x125 * 2 - *$$PARM.x23) - 2;
    57 |    lab_16:
   378 |      $$PARM.iC1 = (int) $$CIV60;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.iC1 < *((int *)((char *)x + 8))) goto lab_17;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$IRET51 = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.iC1));
   378 |      $$RET184 = $$IRET51;
   379 |      p = ((char *)p  + (long long) ((*$$RET184 - ((int *)((char *)this + 64))[$$CIV60]) * ((int *)((char *)this + 80))[$$CIV60]) * 24ll);
   377 |      $$CIV60 = ($$CIV60 + 1);
            } while ((unsigned long long) $$CIV60 < 2ull);    /* ~1 */
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


   384 |  char * MMSP::grid<2, DistanceVoxel>::operator()(int) const(grid<2,DistanceVoxel> *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (24ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


    58 |  void MMSP::vector<int> getPosition<2, int>(Point<int> const&)(vector<int> *answer, Point<int> *p)
    59 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    60 |    __20067 = 0;
            $$PARM.this21D = answer;
    39 |    *((int *)((char *)answer + 8)) = 2;
            $$RET1B3 = operator new[](unsigned long)(8ull);
    40 |    *((char * *)$$PARM.this21D) = $$RET1B3;
    41 |    if (!(0 < *((int *)((char *)$$PARM.this21D + 8)))) goto lab_8;
            i = 0;
            do {   /* id=1 guarded */ /* ~9 */ 
              /* region = 13 */
    42 |      $$RET1B3[(long long) i] = __20067;
    41 |      i = i + 1;
            } while (i < *((int *)((char *)$$PARM.this21D + 8)));    /* ~9 */
          lab_8:
    60 |    __es.__c4@3 = 1u;
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (0 < *((int *)((char *)answer + 8))) goto lab_6;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_6:
    61 |    ((int *)(*((char * *)answer)))[0ll] = *((int *)p);
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (1 < *((int *)((char *)answer + 8))) goto lab_4;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_4:
    62 |    ((int *)(*((char * *)answer)))[1ll] = *((int *)((char *)p + 4));
    65 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       264            41             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   571 |  void void MMSP::propagate_distance<2>(DistanceVoxel const*, MMSP::grid<2, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(DistanceVoxel *core_voxel, char * grid, char * queue)
   572 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    72 |    x = *((int *)core_voxel);
    73 |    y = *((int *)((char *)core_voxel + 4));
    11 |    __20073.x@0 = *((int *)core_voxel);
            __20073.y@4 = *((int *)((char *)core_voxel + 4));
            __20073.z@8 = 0;
            MMSP::vector<int> getPosition<2, int>(Point<int> const&)(&position,&__20073)
            __es.__c4@3 = 1u;
   577 |    $$RET13A = &position->(vector<int>).size@8.rns899.$$1250$$1721;
    17 |    &__20075->(vector<int>).size@8.rns397.$$1721 = &position->(vector<int>).size@8.rns899.$$1250$$1721;
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    &__20075->(vector<int>).data@0.rns398.$$1721 = $$RET13B;
    19 |    if (!(0 < &__20075->(vector<int>).size@8.rns397.$$1721)) goto lab_185;
            i = 0;
            do {   /* id=16 guarded */ /* ~186 */ 
              /* region = 287 */
    33 |      MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |      if (i < &position->(vector<int>).size@8.rns896.$$1252$$1721) goto lab_187;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_187:
    20 |      $$RET13B[(long long) i] = ((int *)&position->(vector<int>).data@0.rns897.$$1252$$1721)[(long long) i];
    19 |      i = i + 1;
            } while (i < &__20075->(vector<int>).size@8.rns397.$$1721);    /* ~186 */
          lab_185:
   577 |    __es.__c4@3 = 2u;
            $$PARM.x3A3 = copyin((pali((vector<int>).rns1198.UDd,&__20075)), (pali((x{vector<int>})$$1722UDd,$$PARM.x3A3#)))UDb;;
   376 |    p = *((char * *)grid);
   377 |    if (!1) goto lab_231;
            $$CIV60 = 0ll;
            do {   /* id=19 guarded */ /* ~232 */ 
              /* region = 305 */
              /* bump-normalized */
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV60 < *((int *)((char *)$$PARM.x3A3 + 8))) goto lab_233;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_233:
    44 |      if (!(((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] < ((int *)(grid + 40))[$$CIV60])) goto lab_235;
    45 |      if (((int *)(grid + 88))[$$CIV60] == 1) goto lab_236;
              if (!(((int *)(grid + 88))[$$CIV60] == 4)) goto lab_237;
            lab_236:
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60];
              goto lab_247;
            lab_237:
    47 |      if (!(((int *)(grid + 88))[$$CIV60] == 2)) goto lab_239;
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] + (((int *)(grid + 48))[$$CIV60] - ((int *)(grid + 40))[$$CIV60]);
              goto lab_247;
            lab_239:
    49 |      if (!(((int *)(grid + 88))[$$CIV60] == 0)) goto lab_247;
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60];
    50 |      goto lab_247;
            lab_235:
              if (!(((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] >= ((int *)(grid + 48))[$$CIV60])) goto lab_247;
    51 |      if (((int *)(grid + 96))[$$CIV60] == 1) goto lab_241;
              if (!(((int *)(grid + 96))[$$CIV60] == 4)) goto lab_242;
            lab_241:
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(grid + 48))[$$CIV60] - 1;
              goto lab_247;
            lab_242:
    53 |      if (!(((int *)(grid + 96))[$$CIV60] == 2)) goto lab_244;
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] + (((int *)(grid + 40))[$$CIV60] - ((int *)(grid + 48))[$$CIV60]);
              goto lab_247;
            lab_244:
    55 |      if (!(((int *)(grid + 96))[$$CIV60] == 0)) goto lab_247;
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = (((int *)(grid + 48))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60]) - 2;
    57 |    lab_247:
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV60 < *((int *)((char *)$$PARM.x3A3 + 8))) goto lab_248;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_248:
   379 |      p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] - ((int *)(grid + 64))[$$CIV60]) * ((int *)(grid + 80))[$$CIV60]) * 24ll);
   377 |      $$CIV60 = $$CIV60 + 1ll;
            } while ((unsigned long long) $$CIV60 < 2ull);    /* ~232 */
          lab_231:
   382 |    copyout((pali((vector<int>).rns1198.UDd,&__20075)), (pali((x{vector<int>})$$1722UDd,$$PARM.x3A3)))UDb;
    75 |    core_distance = *((double *)((char *)p + 16));
            __es.__c4@3 = 1u;
    47 |    if (!(&__20075->(vector<int>).data@0.rns401.$$1723 != NULL)) goto lab_170;
    48 |    operator delete[](void*)(&__20075->(vector<int>).data@0.rns401.$$1723)
    49 |    &__20075->(vector<int>).data@0.rns401.$$1723 = NULL;
    50 |  lab_170:
   578 |    $$RET13A = &position->(vector<int>).size@8.rns899.$$1250$$1724;
    17 |    &__20076->(vector<int>).size@8.rns397.$$1724 = &position->(vector<int>).size@8.rns899.$$1250$$1724;
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    &__20076->(vector<int>).data@0.rns398.$$1724 = $$RET13B;
    19 |    if (!(0 < &__20076->(vector<int>).size@8.rns397.$$1724)) goto lab_179;
            i = 0;
            do {   /* id=15 guarded */ /* ~180 */ 
              /* region = 288 */
    33 |      MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |      if (i < &position->(vector<int>).size@8.rns896.$$1252$$1724) goto lab_181;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_181:
    20 |      $$RET13B[(long long) i] = ((int *)&position->(vector<int>).data@0.rns897.$$1252$$1724)[(long long) i];
    19 |      i = i + 1;
            } while (i < &__20076->(vector<int>).size@8.rns397.$$1724);    /* ~180 */
          lab_179:
   578 |    __es.__c4@3 = 3u;
            $$PARM.x3A1 = copyin((pali((vector<int>).rns1200.UDd,&__20076)), (pali((x{vector<int>})$$1725UDd,$$PARM.x3A1#)))UDb;;
   376 |    p = *((char * *)grid);
   377 |    if (!1) goto lab_211;
            $$CIV60 = 0ll;
            do {   /* id=18 guarded */ /* ~212 */ 
              /* region = 304 */
              /* bump-normalized */
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV60 < *((int *)((char *)$$PARM.x3A1 + 8))) goto lab_213;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_213:
    44 |      if (!(((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] < ((int *)(grid + 40))[$$CIV60])) goto lab_215;
    45 |      if (((int *)(grid + 88))[$$CIV60] == 1) goto lab_216;
              if (!(((int *)(grid + 88))[$$CIV60] == 4)) goto lab_217;
            lab_216:
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60];
              goto lab_227;
            lab_217:
    47 |      if (!(((int *)(grid + 88))[$$CIV60] == 2)) goto lab_219;
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] + (((int *)(grid + 48))[$$CIV60] - ((int *)(grid + 40))[$$CIV60]);
              goto lab_227;
            lab_219:
    49 |      if (!(((int *)(grid + 88))[$$CIV60] == 0)) goto lab_227;
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60];
    50 |      goto lab_227;
            lab_215:
              if (!(((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] >= ((int *)(grid + 48))[$$CIV60])) goto lab_227;
    51 |      if (((int *)(grid + 96))[$$CIV60] == 1) goto lab_221;
              if (!(((int *)(grid + 96))[$$CIV60] == 4)) goto lab_222;
            lab_221:
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(grid + 48))[$$CIV60] - 1;
              goto lab_227;
            lab_222:
    53 |      if (!(((int *)(grid + 96))[$$CIV60] == 2)) goto lab_224;
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] + (((int *)(grid + 40))[$$CIV60] - ((int *)(grid + 48))[$$CIV60]);
              goto lab_227;
            lab_224:
    55 |      if (!(((int *)(grid + 96))[$$CIV60] == 0)) goto lab_227;
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = (((int *)(grid + 48))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60]) - 2;
    57 |    lab_227:
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV60 < *((int *)((char *)$$PARM.x3A1 + 8))) goto lab_228;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_228:
   379 |      p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] - ((int *)(grid + 64))[$$CIV60]) * ((int *)(grid + 80))[$$CIV60]) * 24ll);
   377 |      $$CIV60 = $$CIV60 + 1ll;
            } while ((unsigned long long) $$CIV60 < 2ull);    /* ~212 */
          lab_211:
   382 |    copyout((pali((vector<int>).rns1200.UDd,&__20076)), (pali((x{vector<int>})$$1725UDd,$$PARM.x3A1)))UDb;
    76 |    core_id = *((unsigned int *)((char *)p + 12));
            __es.__c4@3 = 1u;
    47 |    if (!(&__20076->(vector<int>).data@0.rns401.$$1726 != NULL)) goto lab_168;
    48 |    operator delete[](void*)(&__20076->(vector<int>).data@0.rns401.$$1726)
    49 |    &__20076->(vector<int>).data@0.rns401.$$1726 = NULL;
    50 |  lab_168:
   580 |    if (!(x - 1 <= x + 1)) goto lab_3;
            $$CIV63 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 303 */
              /* bump-normalized */
   581 |      if (!(y - 1 <= y + 1)) goto lab_6;
              $$CIV62 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 302 */
                /* bump-normalized */
   582 |        if (!(x == (int) ($$CIV63 + (long long) (x - 1)))) goto lab_7;
                if (y == (int) ((long long) (y - 1) + $$CIV62)) goto lab_5;
              lab_7:
    11 |        __20078.x@0 = (int) ($$CIV63 + (long long) (x - 1));
                __20078.y@4 = (int) ((long long) (y - 1) + $$CIV62);
                __20078.z@8 = 0;
                MMSP::vector<int> getPosition<2, int>(Point<int> const&)(&p,&__20078)
                __es.__c4@3 = 4u;
   585 |        if (!1) goto lab_12;
                $$CIV61 = 0ll;
                do {   /* id=3 guarded */ /* ~10 */ 
                  /* region = 301 */
                  /* bump-normalized */
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if ((int) $$CIV61 < &p->(vector<int>).size@8.rns391.$$1743) goto lab_48;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_48:
    44 |          if (!(((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] < ((int *)(grid + 40))[$$CIV61])) goto lab_35;
    45 |          if ((((int *)grid) + 88ll / 4)[$$CIV61] == 1) goto lab_36;
                  if (!((((int *)grid) + 88ll / 4)[$$CIV61] == 4)) goto lab_37;
                lab_36:
                  ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] = ((int *)(grid + 40))[$$CIV61];
                  goto lab_47;
                lab_37:
    47 |          if (!((((int *)grid) + 88ll / 4)[$$CIV61] == 2)) goto lab_39;
                  ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] = ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] + (((int *)(grid + 48))[$$CIV61] - ((int *)(grid + 40))[$$CIV61]);
                  goto lab_47;
                lab_39:
    49 |          if (!((((int *)grid) + 88ll / 4)[$$CIV61] == 0)) goto lab_47;
                  ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] = ((int *)(grid + 40))[$$CIV61] * 2 - ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61];
    50 |          goto lab_47;
                lab_35:
                  if (!(((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] >= ((int *)(grid + 48))[$$CIV61])) goto lab_47;
    51 |          if ((((int *)grid) + 96ll / 4)[$$CIV61] == 1) goto lab_41;
                  if (!((((int *)grid) + 96ll / 4)[$$CIV61] == 4)) goto lab_42;
                lab_41:
                  ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] = ((int *)(grid + 48))[$$CIV61] - 1;
                  goto lab_47;
                lab_42:
    53 |          if (!((((int *)grid) + 96ll / 4)[$$CIV61] == 2)) goto lab_44;
                  ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] = ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] + (((int *)(grid + 40))[$$CIV61] - ((int *)(grid + 48))[$$CIV61]);
                  goto lab_47;
                lab_44:
    55 |          if (!((((int *)grid) + 96ll / 4)[$$CIV61] == 0)) goto lab_47;
                  ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61] = (((int *)(grid + 48))[$$CIV61] * 2 - ((int *)&p->(vector<int>).data@0.rns392.$$1743)[$$CIV61]) - 2;
    57 |        lab_47:
   585 |          $$CIV61 = $$CIV61 + 1ll;
                } while ((unsigned long long) $$CIV61 < 2ull);    /* ~10 */
              lab_12:
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if (0 < &p->(vector<int>).size@8.rns391.$$1743) goto lab_50;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_50:
   586 |        if (((int *)&p->(vector<int>).data@0.rns392.$$1743)[0ll] < ((int *)(grid + 40))[0ll]) goto lab_14;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if (0 < &p->(vector<int>).size@8.rns391.$$1743) goto lab_52;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_52:
   586 |        if (!(((int *)&p->(vector<int>).data@0.rns392.$$1743)[0ll] >= ((int *)(grid + 48))[0ll])) goto lab_13;
              lab_14:
                __es.__c4@3 = 1u;
    47 |        if (!(&p->(vector<int>).data@0.rns401.$$1730 != NULL)) goto lab_158;
    48 |        operator delete[](void*)(&p->(vector<int>).data@0.rns401.$$1730)
    49 |        &p->(vector<int>).data@0.rns401.$$1730 = NULL;
    50 |      lab_158:
   586 |        goto lab_5;
              lab_13:
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if (1 < &p->(vector<int>).size@8.rns391.$$1743) goto lab_54;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_54:
   587 |        if (((int *)&p->(vector<int>).data@0.rns392.$$1743)[1ll] < ((int *)(grid + 40))[1ll]) goto lab_17;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if (1 < &p->(vector<int>).size@8.rns391.$$1743) goto lab_56;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_56:
   587 |        if (!(((int *)&p->(vector<int>).data@0.rns392.$$1743)[1ll] >= ((int *)(grid + 48))[1ll])) goto lab_16;
              lab_17:
                __es.__c4@3 = 1u;
    47 |        if (!(&p->(vector<int>).data@0.rns401.$$1730 != NULL)) goto lab_160;
    48 |        operator delete[](void*)(&p->(vector<int>).data@0.rns401.$$1730)
    49 |        &p->(vector<int>).data@0.rns401.$$1730 = NULL;
    50 |      lab_160:
   587 |        goto lab_5;
              lab_16:
   589 |        $$RET13A = &p->(vector<int>).size@8.rns899.$$1250$$1736;
    17 |        &__20080->(vector<int>).size@8.rns397.$$1736 = &p->(vector<int>).size@8.rns899.$$1250$$1736;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__20080->(vector<int>).data@0.rns398.$$1736 = $$RET13B;
    19 |        if (!(0 < &__20080->(vector<int>).size@8.rns397.$$1736)) goto lab_173;
                i = 0;
                do {   /* id=14 guarded */ /* ~174 */ 
                  /* region = 289 */
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if (i < &p->(vector<int>).size@8.rns896.$$1252$$1736) goto lab_175;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_175:
    20 |          $$RET13B[(long long) i] = ((int *)&p->(vector<int>).data@0.rns897.$$1252$$1736)[(long long) i];
    19 |          i = i + 1;
                } while (i < &__20080->(vector<int>).size@8.rns397.$$1736);    /* ~174 */
              lab_173:
   589 |        __es.__c4@3 = 5u;
                $$PARM.x39D = copyin((pali((vector<int>).rns1208.UDd,&__20080)), (pali((x{vector<int>})$$1737UDd,$$PARM.x39D#)))UDb;;
   376 |        p = *((char * *)grid);
   377 |        if (!1) goto lab_191;
                $$CIV60 = 0ll;
                do {   /* id=17 guarded */ /* ~192 */ 
                  /* region = 300 */
                  /* bump-normalized */
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if ((int) $$CIV60 < *((int *)((char *)$$PARM.x39D + 8))) goto lab_193;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_193:
    44 |          if (!(((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] < ((int *)(grid + 40))[$$CIV60])) goto lab_195;
    45 |          if (((int *)(grid + 88))[$$CIV60] == 1) goto lab_196;
                  if (!(((int *)(grid + 88))[$$CIV60] == 4)) goto lab_197;
                lab_196:
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60];
                  goto lab_207;
                lab_197:
    47 |          if (!(((int *)(grid + 88))[$$CIV60] == 2)) goto lab_199;
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] + (((int *)(grid + 48))[$$CIV60] - ((int *)(grid + 40))[$$CIV60]);
                  goto lab_207;
                lab_199:
    49 |          if (!(((int *)(grid + 88))[$$CIV60] == 0)) goto lab_207;
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60];
    50 |          goto lab_207;
                lab_195:
                  if (!(((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] >= ((int *)(grid + 48))[$$CIV60])) goto lab_207;
    51 |          if (((int *)(grid + 96))[$$CIV60] == 1) goto lab_201;
                  if (!(((int *)(grid + 96))[$$CIV60] == 4)) goto lab_202;
                lab_201:
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(grid + 48))[$$CIV60] - 1;
                  goto lab_207;
                lab_202:
    53 |          if (!(((int *)(grid + 96))[$$CIV60] == 2)) goto lab_204;
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] + (((int *)(grid + 40))[$$CIV60] - ((int *)(grid + 48))[$$CIV60]);
                  goto lab_207;
                lab_204:
    55 |          if (!(((int *)(grid + 96))[$$CIV60] == 0)) goto lab_207;
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = (((int *)(grid + 48))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60]) - 2;
    57 |        lab_207:
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if ((int) $$CIV60 < *((int *)((char *)$$PARM.x39D + 8))) goto lab_208;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_208:
   379 |          p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] - ((int *)(grid + 64))[$$CIV60]) * ((int *)(grid + 80))[$$CIV60]) * 24ll);
   377 |          $$CIV60 = $$CIV60 + 1ll;
                } while ((unsigned long long) $$CIV60 < 2ull);    /* ~192 */
              lab_191:
   382 |        copyout((pali((vector<int>).rns1208.UDd,&__20080)), (pali((x{vector<int>})$$1737UDd,$$PARM.x39D)))UDb;
   589 |        __es.__c4@3 = 4u;
    47 |        if (!(&__20080->(vector<int>).data@0.rns401.$$1738 != NULL)) goto lab_164;
    48 |        operator delete[](void*)(&__20080->(vector<int>).data@0.rns401.$$1738)
    49 |        &__20080->(vector<int>).data@0.rns401.$$1738 = NULL;
    50 |      lab_164:
    75 |        if (!(*((double *)((char *)p + 16)) > core_distance + __sqrt@18((__pow@6((double) (x - (int) ((long long) (x - 1) + $$CIV63)), 2.0000000000000000E+000) + __pow@6((double) (y - (int) ((long long) (y - 1) + $$CIV62)), 2.0000000000000000E+000)) + __pow@6( 0.0000000000000000E+000, 2.0000000000000000E+000)))) goto lab_19;
    81 |        *((double *)((char *)p + 16)) = core_distance + __sqrt@18((__pow@6((double) (x - (int) ((long long) (x - 1) + $$CIV63)), 2.0000000000000000E+000) + __pow@6((double) (y - (int) ((long long) (y - 1) + $$CIV62)), 2.0000000000000000E+000)) + __pow@6( 0.0000000000000000E+000, 2.0000000000000000E+000));
    82 |        *((unsigned int *)((char *)p + 12)) = core_id;
    81 |        __20252 = p;
  1434 |        $$PARM.__x14B = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                $$PARM.__y14C = ((queue + 24) + 8);
  1001 |        if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_149;
                do {   /* id=13 guarded */ /* ~150 */ 
                  /* region = 290 */
   505 |          __memset(&__21358,0,1ull);
   230 |          __21371 = (char) (((char * *)((char *)$$PARM.__x14B  + 32))->(DistanceVoxel *).rns1568.$$1797$$1740 < __20252);
                  if (__21371 != 0u) goto lab_151;
  1003 |          $$PARM.__y14C = $$PARM.__x14B;
   513 |          $$PARM.__x14B = *((char * *)($$PARM.__x14B + 16));
                  goto lab_152;
                lab_151:
   521 |          $$PARM.__x14B = *((char * *)($$PARM.__x14B + 24));
                lab_152:
  1001 |        } while ($$PARM.__x14B != NULL);    /* ~150 */
              lab_149:
   243 |        __21357._M_node@0 = $$PARM.__y14C;
                $$IRET82 = __21357;
  1434 |        __j = &$$IRET82->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1312.$$1740;
   243 |        __20726._M_node@0 = ((queue + 24) + 8);
   647 |        __20722 = __20726;
   288 |        __20732 = (char) (__j._M_node@0 == __20726._M_node@0);
                if (__20732 != 0u) goto lab_154;
   529 |        __20741 = __j._M_node@0;
                __memset(&__20733,0,1ull);
   230 |        __20746 = (char) (__20252 < ((char * *)((char *)__20741  + 32))->(DistanceVoxel *).rns1313.$$1740);
                if (!(__20746 != 0u)) goto lab_155;
              lab_154:
   243 |        __20747._M_node@0 = ((queue + 24) + 8);
   647 |        __20723 = __20747;
                __20751 = &__20723;
                goto lab_156;
              lab_155:
                __20751 = &__j;
              lab_156:
                $$IRET84 = *__20751;
   674 |        __20238 = &$$IRET84->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1211.;
   243 |        __20243._M_node@0 = ((queue + 24) + 8);
    99 |        __20237 = __20243;
    64 |        __20254 = (char) (itr._M_node@0.off0 != ((queue + 24) + 8));
    84 |        if (__20254 != 0u) goto lab_21;
   593 |        $$PARM.element13D = p;
    88 |        DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::guard___func__4 = 1;
  1421 |        $$PARM.__x119 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                $$PARM.__y11A = ((queue + 24) + 8);
   985 |        if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_58;
                do {   /* id=4 guarded */ /* ~59 */ 
                  /* region = 291 */
   505 |          __memset(&__21707,0,1ull);
   230 |          __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1780$$1742 < $$PARM.element13D);
                  if (__21720 != 0u) goto lab_60;
   987 |          $$PARM.__y11A = $$PARM.__x119;
   509 |          $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
                  goto lab_61;
                lab_60:
   517 |          $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
                lab_61:
   985 |        } while ($$PARM.__x119 != NULL);    /* ~59 */
              lab_58:
   171 |        __21706._M_node@0 = $$PARM.__y11A;
                $$IRET73 = __21706;
  1421 |        __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1780$$1742;
   171 |        __21438._M_node@0 = ((queue + 24) + 8);
   640 |        __21434 = __21438;
   213 |        __21444 = (char) (__j._M_node@0 == __21438._M_node@0);
                if (__21444 != 0u) goto lab_63;
   529 |        __21453 = __j._M_node@0;
                __memset(&__21445,0,1ull);
   230 |        __21458 = (char) ($$PARM.element13D < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1780$$1742);
                if (!(__21458 != 0u)) goto lab_64;
              lab_63:
   171 |        __21459._M_node@0 = ((queue + 24) + 8);
   640 |        __21435 = __21459;
                __21463 = &__21435;
                goto lab_65;
              lab_64:
                __21463 = &__j;
              lab_65:
                $$IRET7C = *__21463;
   659 |        __20570 = &$$IRET7C->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1273.$$1742;
   171 |        __20575._M_node@0 = (queue + 32);
   325 |        __20569 = __20575;
   213 |        __20583 = (char) (itr._M_node@0.off0 == &__20569->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1282.$$1742);
                if (__20583 != 0u) goto lab_67;
                __assert_fail("itr == backpointers.end()","priority_queue.h",90u,&DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::__func__)
                return;
              lab_67:
   735 |        if (!(*((char * *)(queue + 8)) != *((char * *)(queue + 16)))) goto lab_69;
   169 |        if (!(*((char * *)(queue + 8)) != NULL)) goto lab_70;
   105 |        *((char * *)(queue + 8))->(DistanceVoxel *).rns1275.$$1742 = $$PARM.element13D;
              lab_70:
   738 |        *((char * *)(queue + 8)) = ((char *)*((char * *)(queue + 8))  + 8ll);
   739 |        goto lab_71;
              lab_69:
   686 |        __20626._M_current@0 = *((char * *)(queue + 8));
   444 |        std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<DistanceVoxel**, std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> > >, DistanceVoxel* const&)(queue,__20626,&$$PARM.element13D)
              lab_71:
   745 |        $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                $$PARM.__y116 = ((queue + 24) + 8);
   985 |        if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_72;
                do {   /* id=5 guarded */ /* ~73 */ 
                  /* region = 292 */
   505 |          __memset(&__21707,0,1ull);
   230 |          __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1782$$1742 < $$PARM.element13D);
                  if (__21720 != 0u) goto lab_74;
   987 |          $$PARM.__y116 = $$PARM.__x115;
   509 |          $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                  goto lab_75;
                lab_74:
   517 |          $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                lab_75:
   985 |        } while ($$PARM.__x115 != NULL);    /* ~73 */
              lab_72:
   171 |        __21706._M_node@0 = $$PARM.__y116;
                $$IRET72 = __21706;
   745 |        __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782$$1742;
   701 |        __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782$$1742;
   171 |        __21545._M_node@0 = ((queue + 24) + 8);
   325 |        __21528 = __21545;
   213 |        __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                if (__21553 != 0u) goto lab_77;
   635 |        __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1782$$1742;
   230 |        if (!($$PARM.element13D < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_78;
              lab_77:
   450 |        __21532.first@0 = $$PARM.element13D;
    84 |        __21532.second@8 = 0;
   246 |        __21562._M_node@0 = __i._M_node@0.off0;
   107 |        __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1782$$1742;
   540 |        __i = __21563;
              lab_78:
    92 |        ((int *)((char *)__i._M_node@0  + 40))->(int).rns1276.$$1742 = (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll));
   140 |        if (!((int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll)) > 0)) goto lab_80;
   139 |        __20652 = (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll));
   140 |        do {   /* id=6 guarded */ /* ~81 */ 
                  /* region = 295 */
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20652 > 0) goto lab_82;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_82:
    50 |          if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_84;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_84:
    75 |          if (!(*((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20652 * 8ull)))->(DistanceVoxel).distance@10.rns1286.$$1742 < *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull)))->(DistanceVoxel).distance@10.rns1287.$$1742)) goto lab_23;
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20652 > 0) goto lab_86;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_86:
    50 |          if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_88;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_88:
   129 |          temp = *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull)));
   130 |          *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull))) = *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20652 * 8ull)));
   131 |          *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20652 * 8ull))) = temp;
                  $$PARM.__k127 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) __20652 * 8ull));
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_89;
                  do {   /* id=7 guarded */ /* ~90 */ 
                    /* region = 293 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1785$$1742 < *$$PARM.__k127);
                    if (__21720 != 0u) goto lab_91;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_92;
                  lab_91:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_92:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~90 */
                lab_89:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785$$1742;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785$$1742;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                  if (__21553 != 0u) goto lab_94;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1910$$1785$$1742;
   230 |          if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_95;
                lab_94:
   450 |          __21532.first@0 = *$$PARM.__k127;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1785$$1742;
   540 |          __i = __21563;
                lab_95:
   133 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1622.$$1785$$1742 = __20652;
                  $$PARM.__k125 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull));
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_97;
                  do {   /* id=8 guarded */ /* ~98 */ 
                    /* region = 294 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1785$$1742 < *$$PARM.__k125);
                    if (__21720 != 0u) goto lab_99;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_100;
                  lab_99:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_100:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~98 */
                lab_97:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785$$1742;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785$$1742;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                  if (__21553 != 0u) goto lab_102;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1911$$1785$$1742;
   230 |          if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_103;
                lab_102:
   450 |          __21532.first@0 = *$$PARM.__k125;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1785$$1742;
   540 |          __i = __21563;
                lab_103:
   134 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1624.$$1785$$1742 = (__20652 - 1) / 2;
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20652 > 0) goto lab_106;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_106:
    50 |          if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_108;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_108:
   145 |          __20652 = (__20652 - 1) / 2;
   140 |        } while (__20652 > 0);    /* ~81 */
              lab_80:
    94 |        goto lab_23;
   593 |      lab_21:
   594 |        $$PARM.element149 = p;
    98 |        DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::guard___func__4 = 1;
  1421 |        $$PARM.__x119 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                $$PARM.__y11A = ((queue + 24) + 8);
   985 |        if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_109;
                do {   /* id=9 guarded */ /* ~110 */ 
                  /* region = 296 */
   505 |          __memset(&__21707,0,1ull);
   230 |          __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1788$$1741 < $$PARM.element149);
                  if (__21720 != 0u) goto lab_111;
   987 |          $$PARM.__y11A = $$PARM.__x119;
   509 |          $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
                  goto lab_112;
                lab_111:
   517 |          $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
                lab_112:
   985 |        } while ($$PARM.__x119 != NULL);    /* ~110 */
              lab_109:
   171 |        __21706._M_node@0 = $$PARM.__y11A;
                $$IRET73 = __21706;
  1421 |        __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1788$$1741;
   171 |        __21438._M_node@0 = ((queue + 24) + 8);
   640 |        __21434 = __21438;
   213 |        __21444 = (char) (__j._M_node@0 == __21438._M_node@0);
                if (__21444 != 0u) goto lab_114;
   529 |        __21453 = __j._M_node@0;
                __memset(&__21445,0,1ull);
   230 |        __21458 = (char) ($$PARM.element149 < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1788$$1741);
                if (!(__21458 != 0u)) goto lab_115;
              lab_114:
   171 |        __21459._M_node@0 = ((queue + 24) + 8);
   640 |        __21435 = __21459;
                __21463 = &__21435;
                goto lab_116;
              lab_115:
                __21463 = &__j;
              lab_116:
                $$IRET7D = *__21463;
   659 |        __20658 = &$$IRET7D->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1290.$$1741;
   171 |        __20663._M_node@0 = (queue + 32);
   325 |        __20657 = __20663;
   217 |        __20671 = (char) (itr._M_node@0.off0 != &__20657->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1295.$$1741);
                if (__20671 != 0u) goto lab_118;
                __assert_fail("itr != backpointers.end()","priority_queue.h",100u,&DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::__func__)
                return;
              lab_118:
   140 |        if (!(((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4] > 0)) goto lab_120;
   139 |        __20714 = ((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4];
   140 |        do {   /* id=10 guarded */ /* ~121 */ 
                  /* region = 299 */
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20714 > 0) goto lab_122;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_122:
    50 |          if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_124;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_124:
    75 |          if (!(*((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20714 * 8ull)))->(DistanceVoxel).distance@10.rns1299.$$1741 < *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull)))->(DistanceVoxel).distance@10.rns1300.$$1741)) goto lab_120;
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20714 > 0) goto lab_126;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_126:
    50 |          if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_128;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_128:
   129 |          temp = *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull)));
   130 |          *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull))) = *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20714 * 8ull)));
   131 |          *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20714 * 8ull))) = temp;
                  $$PARM.__k127 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) __20714 * 8ull));
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_129;
                  do {   /* id=11 guarded */ /* ~130 */ 
                    /* region = 297 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1792$$1741 < *$$PARM.__k127);
                    if (__21720 != 0u) goto lab_131;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_132;
                  lab_131:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_132:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~130 */
                lab_129:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792$$1741;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792$$1741;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                  if (__21553 != 0u) goto lab_134;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1910$$1792$$1741;
   230 |          if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_135;
                lab_134:
   450 |          __21532.first@0 = *$$PARM.__k127;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1792$$1741;
   540 |          __i = __21563;
                lab_135:
   133 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1622.$$1792$$1741 = __20714;
                  $$PARM.__k125 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull));
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_137;
                  do {   /* id=12 guarded */ /* ~138 */ 
                    /* region = 298 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1792$$1741 < *$$PARM.__k125);
                    if (__21720 != 0u) goto lab_139;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_140;
                  lab_139:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_140:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~138 */
                lab_137:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792$$1741;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792$$1741;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                  if (__21553 != 0u) goto lab_142;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1911$$1792$$1741;
   230 |          if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_143;
                lab_142:
   450 |          __21532.first@0 = *$$PARM.__k125;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1792$$1741;
   540 |          __i = __21563;
                lab_143:
   134 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1624.$$1792$$1741 = (__20714 - 1) / 2;
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20714 > 0) goto lab_146;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_146:
    50 |          if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_148;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_148:
   145 |          __20714 = (__20714 - 1) / 2;
   140 |        } while (__20714 > 0);    /* ~121 */
              lab_120:
   102 |        DistanceVoxel_PriorityQueue::percolate_down(int)(queue,((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4])
   594 |      lab_23:
   595 |      lab_19:
   596 |        __es.__c4@3 = 1u;
    47 |        if (!(&p->(vector<int>).data@0.rns401.$$1730 != NULL)) goto lab_162;
    48 |        operator delete[](void*)(&p->(vector<int>).data@0.rns401.$$1730)
    49 |        &p->(vector<int>).data@0.rns401.$$1730 = NULL;
    50 |      lab_162:
   596 |      lab_5:
   581 |        $$CIV62 = $$CIV62 + 1ll;
              } while ((unsigned long long) $$CIV62 < (unsigned long long) (1ll + ((long long) (y + 1) - (long long) (y - 1))));    /* ~4 */
            lab_6:
   580 |      $$CIV63 = $$CIV63 + 1ll;
            } while ((unsigned long long) $$CIV63 < (unsigned long long) (1ll + ((long long) (x + 1) - (long long) (x - 1))));    /* ~1 */
          lab_3:
   598 |    __es.__c4@3 = 0u;
    47 |    if (!(&position->(vector<int>).data@0.rns401.$$1727 != NULL)) goto lab_166;
    48 |    operator delete[](void*)(&position->(vector<int>).data@0.rns401.$$1727)
    49 |    &position->(vector<int>).data@0.rns401.$$1727 = NULL;
    50 |  lab_166:
   628 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       264            19            16    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19            16    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275           377            19    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           377            19    Loop was not SIMD vectorized because it contains 
                                          control flow.
       264            19            15    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19            15    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275           377            18    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           377            18    Loop was not SIMD vectorized because it contains 
                                          control flow.
       297           580             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       297           580             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           581             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       297           581             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           585             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           585             3    Loop was not SIMD vectorized because it contains 
                                          control flow.
       264            19            14    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19            14    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275           377            17    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           377            17    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312          1001            13    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1001            13    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             4    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             4    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             5    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             5    Loop was not SIMD vectorized because it contains 
                                          control flow.
       356           140             6    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       356           140             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             7    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             7    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             8    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             8    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             9    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             9    Loop was not SIMD vectorized because it contains 
                                          control flow.
       356           140            10    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       356           140            10    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            11    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            11    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985            12    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            12    Loop was not SIMD vectorized because it contains 
                                          control flow.

   571 |  void void MMSP::propagate_distance<3>(DistanceVoxel const*, MMSP::grid<3, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(DistanceVoxel *core_voxel, char * grid, char * queue)
   572 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    72 |    x = *((int *)core_voxel);
    73 |    y = *((int *)((char *)core_voxel + 4));
    74 |    z = *((int *)((char *)core_voxel + 8));
    11 |    __20308.x@0 = *((int *)core_voxel);
            __20308.y@4 = *((int *)((char *)core_voxel + 4));
            __20308.z@8 = *((int *)((char *)core_voxel + 8));
            MMSP::vector<int> getPosition<3, int>(Point<int> const&)(&position,&__20308)
            __es.__c4@3 = 1u;
   603 |    $$RET13A = &position->(vector<int>).size@8.rns899.$$1250$$1746;
    17 |    &__20310->(vector<int>).size@8.rns397.$$1746 = &position->(vector<int>).size@8.rns899.$$1250$$1746;
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    &__20310->(vector<int>).data@0.rns398.$$1746 = $$RET13B;
    19 |    if (!(0 < &__20310->(vector<int>).size@8.rns397.$$1746)) goto lab_252;
            i = 0;
            do {   /* id=19 guarded */ /* ~253 */ 
              /* region = 301 */
    33 |      MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |      if (i < &position->(vector<int>).size@8.rns896.$$1252$$1746) goto lab_254;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_254:
    20 |      $$RET13B[(long long) i] = ((int *)&position->(vector<int>).data@0.rns897.$$1252$$1746)[(long long) i];
    19 |      i = i + 1;
            } while (i < &__20310->(vector<int>).size@8.rns397.$$1746);    /* ~253 */
          lab_252:
   603 |    __es.__c4@3 = 2u;
            $$PARM.x1D2 = copyin((pali((vector<int>).rns1224.UDd,&__20310)), (pali((x{vector<int>})$$1747UDd,$$PARM.x1D2#)))UDb;;
   376 |    p = *((char * *)grid);
   377 |    if (!1) goto lab_225;
            $$CIV72 = 0ll;
            do {   /* id=17 guarded */ /* ~226 */ 
              /* region = 320 */
              /* bump-normalized */
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1D2 + 8))) goto lab_227;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_227:
    44 |      if (!(((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] < ((int *)(grid + 48))[$$CIV72])) goto lab_229;
    45 |      if (((int *)(grid + 120))[$$CIV72] == 1) goto lab_230;
              if (!(((int *)(grid + 120))[$$CIV72] == 4)) goto lab_231;
            lab_230:
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72];
              goto lab_241;
            lab_231:
    47 |      if (!(((int *)(grid + 120))[$$CIV72] == 2)) goto lab_233;
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] + (((int *)(grid + 60))[$$CIV72] - ((int *)(grid + 48))[$$CIV72]);
              goto lab_241;
            lab_233:
    49 |      if (!(((int *)(grid + 120))[$$CIV72] == 0)) goto lab_241;
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72];
    50 |      goto lab_241;
            lab_229:
              if (!(((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] >= ((int *)(grid + 60))[$$CIV72])) goto lab_241;
    51 |      if (((int *)(grid + 132))[$$CIV72] == 1) goto lab_235;
              if (!(((int *)(grid + 132))[$$CIV72] == 4)) goto lab_236;
            lab_235:
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(grid + 60))[$$CIV72] - 1;
              goto lab_241;
            lab_236:
    53 |      if (!(((int *)(grid + 132))[$$CIV72] == 2)) goto lab_238;
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] + (((int *)(grid + 48))[$$CIV72] - ((int *)(grid + 60))[$$CIV72]);
              goto lab_241;
            lab_238:
    55 |      if (!(((int *)(grid + 132))[$$CIV72] == 0)) goto lab_241;
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = (((int *)(grid + 60))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72]) - 2;
    57 |    lab_241:
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1D2 + 8))) goto lab_242;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_242:
   379 |      p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] - ((int *)(grid + 84))[$$CIV72]) * ((int *)(grid + 108))[$$CIV72]) * 24ll);
   377 |      $$CIV72 = $$CIV72 + 1ll;
            } while ((unsigned long long) $$CIV72 < 3ull);    /* ~226 */
          lab_225:
   382 |    copyout((pali((vector<int>).rns1224.UDd,&__20310)), (pali((x{vector<int>})$$1747UDd,$$PARM.x1D2)))UDb;
    75 |    core_distance = *((double *)((char *)p + 16));
            __es.__c4@3 = 1u;
    47 |    if (!(&__20310->(vector<int>).data@0.rns401.$$1748 != NULL)) goto lab_179;
    48 |    operator delete[](void*)(&__20310->(vector<int>).data@0.rns401.$$1748)
    49 |    &__20310->(vector<int>).data@0.rns401.$$1748 = NULL;
    50 |  lab_179:
   604 |    $$RET13A = &position->(vector<int>).size@8.rns899.$$1250$$1749;
    17 |    &__20311->(vector<int>).size@8.rns397.$$1749 = &position->(vector<int>).size@8.rns899.$$1250$$1749;
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    &__20311->(vector<int>).data@0.rns398.$$1749 = $$RET13B;
    19 |    if (!(0 < &__20311->(vector<int>).size@8.rns397.$$1749)) goto lab_258;
            i = 0;
            do {   /* id=20 guarded */ /* ~259 */ 
              /* region = 302 */
    33 |      MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |      if (i < &position->(vector<int>).size@8.rns896.$$1252$$1749) goto lab_260;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_260:
    20 |      $$RET13B[(long long) i] = ((int *)&position->(vector<int>).data@0.rns897.$$1252$$1749)[(long long) i];
    19 |      i = i + 1;
            } while (i < &__20311->(vector<int>).size@8.rns397.$$1749);    /* ~259 */
          lab_258:
   604 |    __es.__c4@3 = 3u;
            $$PARM.x1D0 = copyin((pali((vector<int>).rns1226.UDd,&__20311)), (pali((x{vector<int>})$$1750UDd,$$PARM.x1D0#)))UDb;;
   376 |    p = *((char * *)grid);
   377 |    if (!1) goto lab_205;
            $$CIV72 = 0ll;
            do {   /* id=16 guarded */ /* ~206 */ 
              /* region = 319 */
              /* bump-normalized */
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1D0 + 8))) goto lab_207;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_207:
    44 |      if (!(((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] < ((int *)(grid + 48))[$$CIV72])) goto lab_209;
    45 |      if (((int *)(grid + 120))[$$CIV72] == 1) goto lab_210;
              if (!(((int *)(grid + 120))[$$CIV72] == 4)) goto lab_211;
            lab_210:
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72];
              goto lab_221;
            lab_211:
    47 |      if (!(((int *)(grid + 120))[$$CIV72] == 2)) goto lab_213;
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] + (((int *)(grid + 60))[$$CIV72] - ((int *)(grid + 48))[$$CIV72]);
              goto lab_221;
            lab_213:
    49 |      if (!(((int *)(grid + 120))[$$CIV72] == 0)) goto lab_221;
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72];
    50 |      goto lab_221;
            lab_209:
              if (!(((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] >= ((int *)(grid + 60))[$$CIV72])) goto lab_221;
    51 |      if (((int *)(grid + 132))[$$CIV72] == 1) goto lab_215;
              if (!(((int *)(grid + 132))[$$CIV72] == 4)) goto lab_216;
            lab_215:
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(grid + 60))[$$CIV72] - 1;
              goto lab_221;
            lab_216:
    53 |      if (!(((int *)(grid + 132))[$$CIV72] == 2)) goto lab_218;
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] + (((int *)(grid + 48))[$$CIV72] - ((int *)(grid + 60))[$$CIV72]);
              goto lab_221;
            lab_218:
    55 |      if (!(((int *)(grid + 132))[$$CIV72] == 0)) goto lab_221;
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = (((int *)(grid + 60))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72]) - 2;
    57 |    lab_221:
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1D0 + 8))) goto lab_222;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_222:
   379 |      p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] - ((int *)(grid + 84))[$$CIV72]) * ((int *)(grid + 108))[$$CIV72]) * 24ll);
   377 |      $$CIV72 = $$CIV72 + 1ll;
            } while ((unsigned long long) $$CIV72 < 3ull);    /* ~206 */
          lab_205:
   382 |    copyout((pali((vector<int>).rns1226.UDd,&__20311)), (pali((x{vector<int>})$$1750UDd,$$PARM.x1D0)))UDb;
    76 |    core_id = *((unsigned int *)((char *)p + 12));
            __es.__c4@3 = 1u;
    47 |    if (!(&__20311->(vector<int>).data@0.rns401.$$1751 != NULL)) goto lab_181;
    48 |    operator delete[](void*)(&__20311->(vector<int>).data@0.rns401.$$1751)
    49 |    &__20311->(vector<int>).data@0.rns401.$$1751 = NULL;
    50 |  lab_181:
   606 |    if (!(x - 1 <= x + 1)) goto lab_3;
            $$CIV67 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 318 */
              /* bump-normalized */
   607 |      if (!(y - 1 <= y + 1)) goto lab_6;
              $$CIV66 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 317 */
                /* bump-normalized */
   608 |        if (!(z - 1 <= z + 1)) goto lab_9;
                $$CIV65 = 0ll;
                do {   /* id=3 guarded */ /* ~7 */ 
                  /* region = 316 */
                  /* bump-normalized */
   609 |          if (!(x == (int) ($$CIV67 + (long long) (x - 1)))) goto lab_10;
                  if (!(y == (int) ($$CIV66 + (long long) (y - 1)))) goto lab_10;
                  if (z == (int) ((long long) (z - 1) + $$CIV65)) goto lab_8;
                lab_10:
    11 |          __20313.x@0 = (int) ($$CIV67 + (long long) (x - 1));
                  __20313.y@4 = (int) ($$CIV66 + (long long) (y - 1));
                  __20313.z@8 = (int) ((long long) (z - 1) + $$CIV65);
                  MMSP::vector<int> getPosition<3, int>(Point<int> const&)(&p,&__20313)
                  __es.__c4@3 = 4u;
   612 |          if (!1) goto lab_16;
                  $$CIV64 = 0ll;
                  do {   /* id=4 guarded */ /* ~14 */ 
                    /* region = 315 */
                    /* bump-normalized */
    29 |            MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |            if ((int) $$CIV64 < &p->(vector<int>).size@8.rns391.$$1771) goto lab_55;
                    __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                    return;
                  lab_55:
    44 |            if (!(((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] < ((int *)(grid + 48))[$$CIV64])) goto lab_42;
    45 |            if ((((int *)grid) + 120ll / 4)[$$CIV64] == 1) goto lab_43;
                    if (!((((int *)grid) + 120ll / 4)[$$CIV64] == 4)) goto lab_44;
                  lab_43:
                    ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] = ((int *)(grid + 48))[$$CIV64];
                    goto lab_54;
                  lab_44:
    47 |            if (!((((int *)grid) + 120ll / 4)[$$CIV64] == 2)) goto lab_46;
                    ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] = ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] + (((int *)(grid + 60))[$$CIV64] - ((int *)(grid + 48))[$$CIV64]);
                    goto lab_54;
                  lab_46:
    49 |            if (!((((int *)grid) + 120ll / 4)[$$CIV64] == 0)) goto lab_54;
                    ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] = ((int *)(grid + 48))[$$CIV64] * 2 - ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64];
    50 |            goto lab_54;
                  lab_42:
                    if (!(((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] >= ((int *)(grid + 60))[$$CIV64])) goto lab_54;
    51 |            if ((((int *)grid) + 132ll / 4)[$$CIV64] == 1) goto lab_48;
                    if (!((((int *)grid) + 132ll / 4)[$$CIV64] == 4)) goto lab_49;
                  lab_48:
                    ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] = ((int *)(grid + 60))[$$CIV64] - 1;
                    goto lab_54;
                  lab_49:
    53 |            if (!((((int *)grid) + 132ll / 4)[$$CIV64] == 2)) goto lab_51;
                    ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] = ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] + (((int *)(grid + 48))[$$CIV64] - ((int *)(grid + 60))[$$CIV64]);
                    goto lab_54;
                  lab_51:
    55 |            if (!((((int *)grid) + 132ll / 4)[$$CIV64] == 0)) goto lab_54;
                    ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64] = (((int *)(grid + 60))[$$CIV64] * 2 - ((int *)&p->(vector<int>).data@0.rns392.$$1771)[$$CIV64]) - 2;
    57 |          lab_54:
   612 |            $$CIV64 = $$CIV64 + 1ll;
                  } while ((unsigned long long) $$CIV64 < 3ull);    /* ~14 */
                lab_16:
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (0 < &p->(vector<int>).size@8.rns391.$$1771) goto lab_57;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_57:
   613 |          if (((int *)&p->(vector<int>).data@0.rns392.$$1771)[0ll] < ((int *)(grid + 48))[0ll]) goto lab_18;
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (0 < &p->(vector<int>).size@8.rns391.$$1771) goto lab_59;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_59:
   613 |          if (!(((int *)&p->(vector<int>).data@0.rns392.$$1771)[0ll] >= ((int *)(grid + 60))[0ll])) goto lab_17;
                lab_18:
                  __es.__c4@3 = 1u;
    47 |          if (!(&p->(vector<int>).data@0.rns401.$$1755 != NULL)) goto lab_169;
    48 |          operator delete[](void*)(&p->(vector<int>).data@0.rns401.$$1755)
    49 |          &p->(vector<int>).data@0.rns401.$$1755 = NULL;
    50 |        lab_169:
   613 |          goto lab_8;
                lab_17:
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (1 < &p->(vector<int>).size@8.rns391.$$1771) goto lab_61;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_61:
   614 |          if (((int *)&p->(vector<int>).data@0.rns392.$$1771)[1ll] < ((int *)(grid + 48))[1ll]) goto lab_21;
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (1 < &p->(vector<int>).size@8.rns391.$$1771) goto lab_63;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_63:
   614 |          if (!(((int *)&p->(vector<int>).data@0.rns392.$$1771)[1ll] >= ((int *)(grid + 60))[1ll])) goto lab_20;
                lab_21:
                  __es.__c4@3 = 1u;
    47 |          if (!(&p->(vector<int>).data@0.rns401.$$1755 != NULL)) goto lab_171;
    48 |          operator delete[](void*)(&p->(vector<int>).data@0.rns401.$$1755)
    49 |          &p->(vector<int>).data@0.rns401.$$1755 = NULL;
    50 |        lab_171:
   614 |          goto lab_8;
                lab_20:
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (2 < &p->(vector<int>).size@8.rns391.$$1771) goto lab_65;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_65:
   615 |          if (((int *)&p->(vector<int>).data@0.rns392.$$1771)[2ll] < ((int *)(grid + 48))[2ll]) goto lab_24;
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (2 < &p->(vector<int>).size@8.rns391.$$1771) goto lab_67;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_67:
   615 |          if (!(((int *)&p->(vector<int>).data@0.rns392.$$1771)[2ll] >= ((int *)(grid + 60))[2ll])) goto lab_23;
                lab_24:
                  __es.__c4@3 = 1u;
    47 |          if (!(&p->(vector<int>).data@0.rns401.$$1755 != NULL)) goto lab_173;
    48 |          operator delete[](void*)(&p->(vector<int>).data@0.rns401.$$1755)
    49 |          &p->(vector<int>).data@0.rns401.$$1755 = NULL;
    50 |        lab_173:
   615 |          goto lab_8;
                lab_23:
   617 |          $$RET13A = &p->(vector<int>).size@8.rns899.$$1250$$1764;
    17 |          &__20315->(vector<int>).size@8.rns397.$$1764 = &p->(vector<int>).size@8.rns899.$$1250$$1764;
                  $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |          &__20315->(vector<int>).data@0.rns398.$$1764 = $$RET13B;
    19 |          if (!(0 < &__20315->(vector<int>).size@8.rns397.$$1764)) goto lab_246;
                  i = 0;
                  do {   /* id=18 guarded */ /* ~247 */ 
                    /* region = 303 */
    33 |            MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |            if (i < &p->(vector<int>).size@8.rns896.$$1252$$1764) goto lab_248;
                    __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                    return;
                  lab_248:
    20 |            $$RET13B[(long long) i] = ((int *)&p->(vector<int>).data@0.rns897.$$1252$$1764)[(long long) i];
    19 |            i = i + 1;
                  } while (i < &__20315->(vector<int>).size@8.rns397.$$1764);    /* ~247 */
                lab_246:
   617 |          __es.__c4@3 = 5u;
                  $$PARM.x1CE = copyin((pali((vector<int>).rns1236.UDd,&__20315)), (pali((x{vector<int>})$$1765UDd,$$PARM.x1CE#)))UDb;;
   376 |          p = *((char * *)grid);
   377 |          if (!1) goto lab_185;
                  $$CIV72 = 0ll;
                  do {   /* id=15 guarded */ /* ~186 */ 
                    /* region = 314 */
                    /* bump-normalized */
    29 |            MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |            if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1CE + 8))) goto lab_187;
                    __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                    return;
                  lab_187:
    44 |            if (!(((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] < ((int *)(grid + 48))[$$CIV72])) goto lab_189;
    45 |            if (((int *)(grid + 120))[$$CIV72] == 1) goto lab_190;
                    if (!(((int *)(grid + 120))[$$CIV72] == 4)) goto lab_191;
                  lab_190:
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72];
                    goto lab_201;
                  lab_191:
    47 |            if (!(((int *)(grid + 120))[$$CIV72] == 2)) goto lab_193;
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] + (((int *)(grid + 60))[$$CIV72] - ((int *)(grid + 48))[$$CIV72]);
                    goto lab_201;
                  lab_193:
    49 |            if (!(((int *)(grid + 120))[$$CIV72] == 0)) goto lab_201;
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72];
    50 |            goto lab_201;
                  lab_189:
                    if (!(((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] >= ((int *)(grid + 60))[$$CIV72])) goto lab_201;
    51 |            if (((int *)(grid + 132))[$$CIV72] == 1) goto lab_195;
                    if (!(((int *)(grid + 132))[$$CIV72] == 4)) goto lab_196;
                  lab_195:
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(grid + 60))[$$CIV72] - 1;
                    goto lab_201;
                  lab_196:
    53 |            if (!(((int *)(grid + 132))[$$CIV72] == 2)) goto lab_198;
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] + (((int *)(grid + 48))[$$CIV72] - ((int *)(grid + 60))[$$CIV72]);
                    goto lab_201;
                  lab_198:
    55 |            if (!(((int *)(grid + 132))[$$CIV72] == 0)) goto lab_201;
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = (((int *)(grid + 60))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72]) - 2;
    57 |          lab_201:
    29 |            MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |            if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1CE + 8))) goto lab_202;
                    __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                    return;
                  lab_202:
   379 |            p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] - ((int *)(grid + 84))[$$CIV72]) * ((int *)(grid + 108))[$$CIV72]) * 24ll);
   377 |            $$CIV72 = $$CIV72 + 1ll;
                  } while ((unsigned long long) $$CIV72 < 3ull);    /* ~186 */
                lab_185:
   382 |          copyout((pali((vector<int>).rns1236.UDd,&__20315)), (pali((x{vector<int>})$$1765UDd,$$PARM.x1CE)))UDb;
   617 |          __es.__c4@3 = 4u;
    47 |          if (!(&__20315->(vector<int>).data@0.rns401.$$1766 != NULL)) goto lab_175;
    48 |          operator delete[](void*)(&__20315->(vector<int>).data@0.rns401.$$1766)
    49 |          &__20315->(vector<int>).data@0.rns401.$$1766 = NULL;
    50 |        lab_175:
    75 |          if (!(*((double *)((char *)p + 16)) > core_distance + __sqrt@18((__pow@6((double) (x - (int) ((long long) (x - 1) + $$CIV67)), 2.0000000000000000E+000) + __pow@6((double) (y - (int) ((long long) (y - 1) + $$CIV66)), 2.0000000000000000E+000)) + __pow@6((double) (z - (int) ((long long) (z - 1) + $$CIV65)), 2.0000000000000000E+000)))) goto lab_26;
    81 |          *((double *)((char *)p + 16)) = core_distance + __sqrt@18((__pow@6((double) (x - (int) ((long long) (x - 1) + $$CIV67)), 2.0000000000000000E+000) + __pow@6((double) (y - (int) ((long long) (y - 1) + $$CIV66)), 2.0000000000000000E+000)) + __pow@6((double) (z - (int) ((long long) (z - 1) + $$CIV65)), 2.0000000000000000E+000));
    82 |          *((unsigned int *)((char *)p + 12)) = core_id;
    81 |          __20435 = p;
  1434 |          $$PARM.__x14B = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y14C = ((queue + 24) + 8);
  1001 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_160;
                  do {   /* id=14 guarded */ /* ~161 */ 
                    /* region = 304 */
   505 |            __memset(&__21358,0,1ull);
   230 |            __21371 = (char) (((char * *)((char *)$$PARM.__x14B  + 32))->(DistanceVoxel *).rns1568.$$1797$$1768 < __20435);
                    if (__21371 != 0u) goto lab_162;
  1003 |            $$PARM.__y14C = $$PARM.__x14B;
   513 |            $$PARM.__x14B = *((char * *)($$PARM.__x14B + 16));
                    goto lab_163;
                  lab_162:
   521 |            $$PARM.__x14B = *((char * *)($$PARM.__x14B + 24));
                  lab_163:
  1001 |          } while ($$PARM.__x14B != NULL);    /* ~161 */
                lab_160:
   243 |          __21357._M_node@0 = $$PARM.__y14C;
                  $$IRET82 = __21357;
  1434 |          __j = &$$IRET82->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1312.$$1768;
   243 |          __20726._M_node@0 = ((queue + 24) + 8);
   647 |          __20722 = __20726;
   288 |          __20732 = (char) (__j._M_node@0 == __20726._M_node@0);
                  if (__20732 != 0u) goto lab_165;
   529 |          __20741 = __j._M_node@0;
                  __memset(&__20733,0,1ull);
   230 |          __20746 = (char) (__20435 < ((char * *)((char *)__20741  + 32))->(DistanceVoxel *).rns1313.$$1768);
                  if (!(__20746 != 0u)) goto lab_166;
                lab_165:
   243 |          __20747._M_node@0 = ((queue + 24) + 8);
   647 |          __20723 = __20747;
                  __20751 = &__20723;
                  goto lab_167;
                lab_166:
                  __20751 = &__j;
                lab_167:
                  $$IRET83 = *__20751;
   674 |          __20421 = &$$IRET83->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1239.;
   243 |          __20426._M_node@0 = ((queue + 24) + 8);
    99 |          __20420 = __20426;
    64 |          __20437 = (char) (itr._M_node@0.off0 != ((queue + 24) + 8));
    84 |          if (__20437 != 0u) goto lab_28;
   621 |          $$PARM.element13B = p;
    88 |          DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::guard___func__4 = 1;
  1421 |          $$PARM.__x119 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y11A = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_69;
                  do {   /* id=5 guarded */ /* ~70 */ 
                    /* region = 305 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1780$$1770 < $$PARM.element13B);
                    if (__21720 != 0u) goto lab_71;
   987 |            $$PARM.__y11A = $$PARM.__x119;
   509 |            $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
                    goto lab_72;
                  lab_71:
   517 |            $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
                  lab_72:
   985 |          } while ($$PARM.__x119 != NULL);    /* ~70 */
                lab_69:
   171 |          __21706._M_node@0 = $$PARM.__y11A;
                  $$IRET73 = __21706;
  1421 |          __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1780$$1770;
   171 |          __21438._M_node@0 = ((queue + 24) + 8);
   640 |          __21434 = __21438;
   213 |          __21444 = (char) (__j._M_node@0 == __21438._M_node@0);
                  if (__21444 != 0u) goto lab_74;
   529 |          __21453 = __j._M_node@0;
                  __memset(&__21445,0,1ull);
   230 |          __21458 = (char) ($$PARM.element13B < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1780$$1770);
                  if (!(__21458 != 0u)) goto lab_75;
                lab_74:
   171 |          __21459._M_node@0 = ((queue + 24) + 8);
   640 |          __21435 = __21459;
                  __21463 = &__21435;
                  goto lab_76;
                lab_75:
                  __21463 = &__j;
                lab_76:
                  $$IRET7C = *__21463;
   659 |          __20570 = &$$IRET7C->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1273.$$1770;
   171 |          __20575._M_node@0 = (queue + 32);
   325 |          __20569 = __20575;
   213 |          __20583 = (char) (itr._M_node@0.off0 == &__20569->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1282.$$1770);
                  if (__20583 != 0u) goto lab_78;
                  __assert_fail("itr == backpointers.end()","priority_queue.h",90u,&DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::__func__)
                  return;
                lab_78:
   735 |          if (!(*((char * *)(queue + 8)) != *((char * *)(queue + 16)))) goto lab_80;
   169 |          if (!(*((char * *)(queue + 8)) != NULL)) goto lab_81;
   105 |          *((char * *)(queue + 8))->(DistanceVoxel *).rns1275.$$1770 = $$PARM.element13B;
                lab_81:
   738 |          *((char * *)(queue + 8)) = ((char *)*((char * *)(queue + 8))  + 8ll);
   739 |          goto lab_82;
                lab_80:
   686 |          __20626._M_current@0 = *((char * *)(queue + 8));
   444 |          std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<DistanceVoxel**, std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> > >, DistanceVoxel* const&)(queue,__20626,&$$PARM.element13B)
                lab_82:
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_83;
                  do {   /* id=6 guarded */ /* ~84 */ 
                    /* region = 306 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1782$$1770 < $$PARM.element13B);
                    if (__21720 != 0u) goto lab_85;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_86;
                  lab_85:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_86:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~84 */
                lab_83:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782$$1770;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782$$1770;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                  if (__21553 != 0u) goto lab_88;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1782$$1770;
   230 |          if (!($$PARM.element13B < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_89;
                lab_88:
   450 |          __21532.first@0 = $$PARM.element13B;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1782$$1770;
   540 |          __i = __21563;
                lab_89:
    92 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1276.$$1770 = (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll));
   140 |          if (!((int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll)) > 0)) goto lab_91;
   139 |          __20652 = (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll));
   140 |          do {   /* id=7 guarded */ /* ~92 */ 
                    /* region = 309 */
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20652 > 0) goto lab_93;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_93:
    50 |            if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_95;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_95:
    75 |            if (!(*((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20652 * 8ull)))->(DistanceVoxel).distance@10.rns1286.$$1770 < *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull)))->(DistanceVoxel).distance@10.rns1287.$$1770)) goto lab_30;
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20652 > 0) goto lab_97;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_97:
    50 |            if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_99;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_99:
   129 |            temp = *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull)));
   130 |            *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull))) = *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20652 * 8ull)));
   131 |            *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20652 * 8ull))) = temp;
                    $$PARM.__k127 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) __20652 * 8ull));
   745 |            $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                    $$PARM.__y116 = ((queue + 24) + 8);
   985 |            if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_100;
                    do {   /* id=8 guarded */ /* ~101 */ 
                      /* region = 307 */
   505 |              __memset(&__21707,0,1ull);
   230 |              __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1785$$1770 < *$$PARM.__k127);
                      if (__21720 != 0u) goto lab_102;
   987 |              $$PARM.__y116 = $$PARM.__x115;
   509 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                      goto lab_103;
                    lab_102:
   517 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                    lab_103:
   985 |            } while ($$PARM.__x115 != NULL);    /* ~101 */
                  lab_100:
   171 |            __21706._M_node@0 = $$PARM.__y116;
                    $$IRET72 = __21706;
   745 |            __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785$$1770;
   701 |            __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785$$1770;
   171 |            __21545._M_node@0 = ((queue + 24) + 8);
   325 |            __21528 = __21545;
   213 |            __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                    if (__21553 != 0u) goto lab_105;
   635 |            __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1910$$1785$$1770;
   230 |            if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_106;
                  lab_105:
   450 |            __21532.first@0 = *$$PARM.__k127;
    84 |            __21532.second@8 = 0;
   246 |            __21562._M_node@0 = __i._M_node@0.off0;
   107 |            __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1785$$1770;
   540 |            __i = __21563;
                  lab_106:
   133 |            ((int *)((char *)__i._M_node@0  + 40))->(int).rns1622.$$1785$$1770 = __20652;
                    $$PARM.__k125 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull));
   745 |            $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                    $$PARM.__y116 = ((queue + 24) + 8);
   985 |            if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_108;
                    do {   /* id=9 guarded */ /* ~109 */ 
                      /* region = 308 */
   505 |              __memset(&__21707,0,1ull);
   230 |              __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1785$$1770 < *$$PARM.__k125);
                      if (__21720 != 0u) goto lab_110;
   987 |              $$PARM.__y116 = $$PARM.__x115;
   509 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                      goto lab_111;
                    lab_110:
   517 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                    lab_111:
   985 |            } while ($$PARM.__x115 != NULL);    /* ~109 */
                  lab_108:
   171 |            __21706._M_node@0 = $$PARM.__y116;
                    $$IRET72 = __21706;
   745 |            __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785$$1770;
   701 |            __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785$$1770;
   171 |            __21545._M_node@0 = ((queue + 24) + 8);
   325 |            __21528 = __21545;
   213 |            __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                    if (__21553 != 0u) goto lab_113;
   635 |            __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1911$$1785$$1770;
   230 |            if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_114;
                  lab_113:
   450 |            __21532.first@0 = *$$PARM.__k125;
    84 |            __21532.second@8 = 0;
   246 |            __21562._M_node@0 = __i._M_node@0.off0;
   107 |            __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1785$$1770;
   540 |            __i = __21563;
                  lab_114:
   134 |            ((int *)((char *)__i._M_node@0  + 40))->(int).rns1624.$$1785$$1770 = (__20652 - 1) / 2;
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20652 > 0) goto lab_117;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_117:
    50 |            if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_119;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_119:
   145 |            __20652 = (__20652 - 1) / 2;
   140 |          } while (__20652 > 0);    /* ~92 */
                lab_91:
    94 |          goto lab_30;
   621 |        lab_28:
   622 |          $$PARM.element147 = p;
    98 |          DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::guard___func__4 = 1;
  1421 |          $$PARM.__x119 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y11A = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_120;
                  do {   /* id=10 guarded */ /* ~121 */ 
                    /* region = 310 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1788$$1769 < $$PARM.element147);
                    if (__21720 != 0u) goto lab_122;
   987 |            $$PARM.__y11A = $$PARM.__x119;
   509 |            $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
                    goto lab_123;
                  lab_122:
   517 |            $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
                  lab_123:
   985 |          } while ($$PARM.__x119 != NULL);    /* ~121 */
                lab_120:
   171 |          __21706._M_node@0 = $$PARM.__y11A;
                  $$IRET73 = __21706;
  1421 |          __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1788$$1769;
   171 |          __21438._M_node@0 = ((queue + 24) + 8);
   640 |          __21434 = __21438;
   213 |          __21444 = (char) (__j._M_node@0 == __21438._M_node@0);
                  if (__21444 != 0u) goto lab_125;
   529 |          __21453 = __j._M_node@0;
                  __memset(&__21445,0,1ull);
   230 |          __21458 = (char) ($$PARM.element147 < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1788$$1769);
                  if (!(__21458 != 0u)) goto lab_126;
                lab_125:
   171 |          __21459._M_node@0 = ((queue + 24) + 8);
   640 |          __21435 = __21459;
                  __21463 = &__21435;
                  goto lab_127;
                lab_126:
                  __21463 = &__j;
                lab_127:
                  $$IRET7D = *__21463;
   659 |          __20658 = &$$IRET7D->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1290.$$1769;
   171 |          __20663._M_node@0 = (queue + 32);
   325 |          __20657 = __20663;
   217 |          __20671 = (char) (itr._M_node@0.off0 != &__20657->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1295.$$1769);
                  if (__20671 != 0u) goto lab_129;
                  __assert_fail("itr != backpointers.end()","priority_queue.h",100u,&DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::__func__)
                  return;
                lab_129:
   140 |          if (!(((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4] > 0)) goto lab_131;
   139 |          __20714 = ((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4];
   140 |          do {   /* id=11 guarded */ /* ~132 */ 
                    /* region = 313 */
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20714 > 0) goto lab_133;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_133:
    50 |            if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_135;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_135:
    75 |            if (!(*((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20714 * 8ull)))->(DistanceVoxel).distance@10.rns1299.$$1769 < *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull)))->(DistanceVoxel).distance@10.rns1300.$$1769)) goto lab_131;
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20714 > 0) goto lab_137;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_137:
    50 |            if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_139;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_139:
   129 |            temp = *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull)));
   130 |            *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull))) = *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20714 * 8ull)));
   131 |            *((char * *)((char *)(*((char * *)queue)) + (long long) ((unsigned long long) __20714 * 8ull))) = temp;
                    $$PARM.__k127 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) __20714 * 8ull));
   745 |            $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                    $$PARM.__y116 = ((queue + 24) + 8);
   985 |            if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_140;
                    do {   /* id=12 guarded */ /* ~141 */ 
                      /* region = 311 */
   505 |              __memset(&__21707,0,1ull);
   230 |              __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1792$$1769 < *$$PARM.__k127);
                      if (__21720 != 0u) goto lab_142;
   987 |              $$PARM.__y116 = $$PARM.__x115;
   509 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                      goto lab_143;
                    lab_142:
   517 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                    lab_143:
   985 |            } while ($$PARM.__x115 != NULL);    /* ~141 */
                  lab_140:
   171 |            __21706._M_node@0 = $$PARM.__y116;
                    $$IRET72 = __21706;
   745 |            __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792$$1769;
   701 |            __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792$$1769;
   171 |            __21545._M_node@0 = ((queue + 24) + 8);
   325 |            __21528 = __21545;
   213 |            __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                    if (__21553 != 0u) goto lab_145;
   635 |            __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1910$$1792$$1769;
   230 |            if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_146;
                  lab_145:
   450 |            __21532.first@0 = *$$PARM.__k127;
    84 |            __21532.second@8 = 0;
   246 |            __21562._M_node@0 = __i._M_node@0.off0;
   107 |            __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1792$$1769;
   540 |            __i = __21563;
                  lab_146:
   133 |            ((int *)((char *)__i._M_node@0  + 40))->(int).rns1622.$$1792$$1769 = __20714;
                    $$PARM.__k125 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull));
   745 |            $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                    $$PARM.__y116 = ((queue + 24) + 8);
   985 |            if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_148;
                    do {   /* id=13 guarded */ /* ~149 */ 
                      /* region = 312 */
   505 |              __memset(&__21707,0,1ull);
   230 |              __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1792$$1769 < *$$PARM.__k125);
                      if (__21720 != 0u) goto lab_150;
   987 |              $$PARM.__y116 = $$PARM.__x115;
   509 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                      goto lab_151;
                    lab_150:
   517 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                    lab_151:
   985 |            } while ($$PARM.__x115 != NULL);    /* ~149 */
                  lab_148:
   171 |            __21706._M_node@0 = $$PARM.__y116;
                    $$IRET72 = __21706;
   745 |            __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792$$1769;
   701 |            __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792$$1769;
   171 |            __21545._M_node@0 = ((queue + 24) + 8);
   325 |            __21528 = __21545;
   213 |            __21553 = (char) (__i._M_node@0.off0 == __21545._M_node@0);
                    if (__21553 != 0u) goto lab_153;
   635 |            __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1911$$1792$$1769;
   230 |            if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_154;
                  lab_153:
   450 |            __21532.first@0 = *$$PARM.__k125;
    84 |            __21532.second@8 = 0;
   246 |            __21562._M_node@0 = __i._M_node@0.off0;
   107 |            __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1792$$1769;
   540 |            __i = __21563;
                  lab_154:
   134 |            ((int *)((char *)__i._M_node@0  + 40))->(int).rns1624.$$1792$$1769 = (__20714 - 1) / 2;
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20714 > 0) goto lab_157;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_157:
    50 |            if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_159;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_159:
   145 |            __20714 = (__20714 - 1) / 2;
   140 |          } while (__20714 > 0);    /* ~132 */
                lab_131:
   102 |          DistanceVoxel_PriorityQueue::percolate_down(int)(queue,((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4])
   622 |        lab_30:
   623 |        lab_26:
   624 |          __es.__c4@3 = 1u;
    47 |          if (!(&p->(vector<int>).data@0.rns401.$$1755 != NULL)) goto lab_177;
    48 |          operator delete[](void*)(&p->(vector<int>).data@0.rns401.$$1755)
    49 |          &p->(vector<int>).data@0.rns401.$$1755 = NULL;
    50 |        lab_177:
   624 |        lab_8:
   608 |          $$CIV65 = $$CIV65 + 1ll;
                } while ((unsigned long long) $$CIV65 < (unsigned long long) (1ll + ((long long) (z + 1) - (long long) (z - 1))));    /* ~7 */
              lab_9:
   607 |        $$CIV66 = $$CIV66 + 1ll;
              } while ((unsigned long long) $$CIV66 < (unsigned long long) (1ll + ((long long) (y + 1) - (long long) (y - 1))));    /* ~4 */
            lab_6:
   606 |      $$CIV67 = $$CIV67 + 1ll;
            } while ((unsigned long long) $$CIV67 < (unsigned long long) (1ll + ((long long) (x + 1) - (long long) (x - 1))));    /* ~1 */
          lab_3:
   627 |    __es.__c4@3 = 0u;
    47 |    if (!(&position->(vector<int>).data@0.rns401.$$1752 != NULL)) goto lab_183;
    48 |    operator delete[](void*)(&position->(vector<int>).data@0.rns401.$$1752)
    49 |    &position->(vector<int>).data@0.rns401.$$1752 = NULL;
    50 |  lab_183:
   628 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       264            19            19    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19            19    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275           377            17    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           377            17    Loop was not SIMD vectorized because it contains 
                                          control flow.
       264            19            20    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19            20    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275           377            16    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           377            16    Loop was not SIMD vectorized because it contains 
                                          control flow.
       297           606             1    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       297           606             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           607             2    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       297           607             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           608             3    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       297           608             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           612             4    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       297           612             4    Loop was not SIMD vectorized because it contains 
                                          control flow.
       264            19            18    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       264            19            18    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275           377            15    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275           377            15    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312          1001            14    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1001            14    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             5    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             5    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             6    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             6    Loop was not SIMD vectorized because it contains 
                                          control flow.
       356           140             7    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       356           140             7    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             8    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             8    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             9    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             9    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985            10    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            10    Loop was not SIMD vectorized because it contains 
                                          control flow.
       356           140            11    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       356           140            11    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            12    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            12    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985            13    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985            13    Loop was not SIMD vectorized because it contains 
                                          control flow.

    67 |  char * Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(aggr8 __first, aggr8 __last, Point<int> *__result)
    70 |  {
            __cur = __result;
    73 |    if (!(__first._M_current@0 != __last._M_current@0)) goto lab_3;
            $$CIV68 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV68 * 12ll))) goto lab_5;
    12 |      ((int *)__result)[($$CIV68 * 12ll) / 4] = ((int *)__first._M_current@0)[($$CIV68 * 12ll) / 4];
              ((int *)((char *)__result + 4))[($$CIV68 * 12ll) / 4] = ((int *)((char *)__first._M_current@0 + 4))[($$CIV68 * 12ll) / 4];
              ((int *)((char *)__result + 8))[($$CIV68 * 12ll) / 4] = ((int *)((char *)__first._M_current@0 + 8))[($$CIV68 * 12ll) / 4];
            lab_5:
   710 |      $$CIV68 = $$CIV68 + 1ll;
            } while ((unsigned long long) $$CIV68 < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
          lab_3:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       305            73             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       305            73             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   582 |  char * double* std::__copy_move_backward_a<false, double*, double*>(double*, double*, double*)(char * __first, char * __last, char * __result)
   588 |  {
   575 |    __builtin_memmove(((char *)__result  - ((__last - __first) / 8ll) * 8ll),__first,(unsigned long long) (((__last - __first) / 8ll) * 8ll));
   577 |    rstr = ((char *)__result  - ((__last - __first) / 8ll) * 8ll);
            return rstr;
   596 |  } /* function */ 


   458 |  char * double* std::copy<double*, double*>(double*, double*, double*)(char * __first, char * __last, char * __result)
   392 |  {
   378 |    __builtin_memmove(__result,__first,(unsigned long long) (((__last - __first) / 8ll) * 8ll));
   437 |    rstr = ((char *)__result  + ((__last - __first) / 8ll) * 8ll);
            return rstr;
   469 |  } /* function */ 


   131 |  char * std::_Vector_base<DistanceVoxel*, std::allocator<DistanceVoxel*> >::~_Vector_base()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this3B9 = this;
   109 |    $$PARM.this3B7 = $$PARM.this3B9;
    73 |    $$IRET1EA = $$PARM.this3B7;
   109 |    $$IRET1EB = $$PARM.this3B9;
   132 |    $$IRET1EC = $$PARM.this3B9;
   133 |    rstr = this;
            return rstr;
          } /* function */ 


   109 |  char * std::allocator<int>::~allocator()(char * this)
          {
            $$PARM.this35C = this;
    73 |    $$IRET1BF = $$PARM.this35C;
   109 |    rstr = this;
            return rstr;
          } /* function */ 


   110 |  char * std::_Vector_base<Point<int>, std::allocator<Point<int> > >::_Vector_base(unsigned long, std::allocator<Point<int> > const&)(_Vector_impl *this, unsigned long long __n, char * __a)
    85 |  {
            *((char * *)this) = NULL;
            *((char * *)((char *)this + 8)) = NULL;
            *((char * *)((char *)this + 16)) = NULL;
   140 |    if (!(__n != 0ull)) goto lab_2;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__n > 1537228672809129301ull),0ll))) goto lab_4;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_4:
    89 |    __20562 = operator new(unsigned long)(__n * 12ull);
   107 |    __20566 = __20562;
            goto lab_3;
          lab_2:
            __20566 = NULL;
          lab_3:
   140 |    *((char * *)this) = __20566;
   114 |    *((char * *)((char *)this + 8)) = *((char * *)this);
   115 |    *((char * *)((char *)this + 16)) = ((char *)*((char * *)this)  + (long long) (__n * 12ull));
   116 |    rstr = this;
            return rstr;
          } /* function */ 


    87 |  void DistanceVoxel_PriorityQueue::push(DistanceVoxel*)(_Vector_impl *this, char * element)
    88 |  {
            DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::guard___func__4 = 1;
   659 |    $$PARM.this136 = (this + 24);
  1421 |    $$PARM.this118 = $$PARM.this136;
            $$PARM.__x119 = ((char * *)((char *)$$PARM.this136 + 8))[8 / 8];
            $$PARM.__y11A = ($$PARM.this136 + 8);
   985 |    if (!($$PARM.__x119 != NULL)) goto lab_57;
            do {   /* id=5 guarded */ /* ~58 */ 
              /* region = 73 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1780 < element);
              if (__21720 != 0u) goto lab_59;
   987 |      $$PARM.__y11A = $$PARM.__x119;
   509 |      $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
              goto lab_60;
            lab_59:
   517 |      $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
            lab_60:
   985 |    } while ($$PARM.__x119 != NULL);    /* ~58 */
          lab_57:
   171 |    __21706._M_node@0 = $$PARM.__y11A;
            $$IRET73 = __21706;
  1421 |    __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1780;
   171 |    __21438._M_node@0 = ($$PARM.this136 + 8);
   640 |    __21434 = __21438;
   213 |    __21444 = (char) (__j._M_node@0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1591..mga.__21434);
            if (__21444 != 0u) goto lab_62;
   529 |    __21453 = __j._M_node@0;
            __memset(&__21445,0,1ull);
   230 |    __21458 = (char) (element < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1780);
            if (!(__21458 != 0u)) goto lab_63;
          lab_62:
   171 |    __21459._M_node@0 = ($$PARM.this136 + 8);
   640 |    __21435 = __21459;
            __21463 = &__21435;
            goto lab_64;
          lab_63:
            __21463 = &__j;
          lab_64:
            $$IRET7C = *__21463;
   659 |    __20570 = &$$IRET7C->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1273.;
   171 |    __20575._M_node@0 = (this + 32);
   325 |    __20569 = __20575;
   213 |    __20583 = (char) (itr._M_node@0.off0 == &__20569->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1282.);
            if (__20583 != 0u) goto lab_4;
            __assert_fail("itr == backpointers.end()","priority_queue.h",90u,&DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::__func__)
            return;
          lab_4:
   735 |    if (!(*((char * *)((char *)this + 8)) != *((char * *)((char *)this + 16)))) goto lab_5;
   169 |    if (!(*((char * *)((char *)this + 8)) != NULL)) goto lab_8;
   105 |    *((char * *)((char *)this + 8))->(DistanceVoxel *).rns1275. = element;
          lab_8:
   738 |    *((char * *)((char *)this + 8)) = ((char *)*((char * *)((char *)this + 8))  + 8ll);
   739 |    goto lab_10;
          lab_5:
   686 |    __20626._M_current@0 = *((char * *)((char *)this + 8));
   444 |    std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<DistanceVoxel**, std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> > >, DistanceVoxel* const&)(this,__20626,&element)
          lab_10:
            $$PARM.this128 = (this + 24);
   745 |    $$PARM.this114 = $$PARM.this128;
            $$PARM.__x115 = ((char * *)($$PARM.this128 + 8))[8 / 8];
            $$PARM.__y116 = ($$PARM.this128 + 8);
   985 |    if (!($$PARM.__x115 != NULL)) goto lab_32;
            do {   /* id=2 guarded */ /* ~33 */ 
              /* region = 74 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1782 < element);
              if (__21720 != 0u) goto lab_34;
   987 |      $$PARM.__y116 = $$PARM.__x115;
   509 |      $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
              goto lab_35;
            lab_34:
   517 |      $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
            lab_35:
   985 |    } while ($$PARM.__x115 != NULL);    /* ~33 */
          lab_32:
   171 |    __21706._M_node@0 = $$PARM.__y116;
            $$IRET72 = __21706;
   745 |    __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782;
   701 |    __i = __21536;
   171 |    __21545._M_node@0 = ($$PARM.this128 + 8);
   325 |    __21528 = __21545;
   213 |    __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
            if (__21553 != 0u) goto lab_37;
   635 |    __21529 = *((aggr1 *)$$PARM.this128);
   230 |    if (!(element < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_38;
          lab_37:
   450 |    __21532.first@0 = element;
    84 |    __21532.second@8 = 0;
   246 |    __21562._M_node@0 = __i._M_node@0.off0;
   107 |    __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this128,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1782;
   540 |    __i = __21563;
          lab_38:
   451 |    $$IRET79 = (__i._M_node@0 + 40);
   444 |    $$RET195 = $$IRET79;
    92 |    *$$RET195 = (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll - 1ll));
   140 |    if (!((int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll - 1ll)) > 0)) goto lab_13;
   139 |    __20652 = (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll - 1ll));
   140 |    do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 77 */
    75 |      $$BD16F = *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) __20652 * 8ull)))->(DistanceVoxel).distance@10.rns1286.;
   139 |      $$PARM.thisE4 = this;
              $$PARM.iE5 = __20652;
    48 |      DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |      if ($$PARM.iE5 > 0) goto lab_26;
              __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_26:
    50 |      if ($$PARM.iE5 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.thisE4 + 8)) - *((char * *)$$PARM.thisE4)) / 8ll))) goto lab_28;
              __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_28:
    51 |      $$IRET63 = ($$PARM.iE5 - 1) / 2;
   139 |      __20637 = (unsigned long long) $$IRET63;
    75 |      if (!($$BD16F < *((char * *)((char *)(*((char * *)this)) + (long long) (__20637 * 8ull)))->(DistanceVoxel).distance@10.rns1287.)) goto lab_13;
              $$PARM.thisE6 = this;
              $$PARM.iE7 = __20652;
    48 |      DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |      if ($$PARM.iE7 > 0) goto lab_29;
              __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_29:
    50 |      if ($$PARM.iE7 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.thisE6 + 8)) - *((char * *)$$PARM.thisE6)) / 8ll))) goto lab_31;
              __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_31:
    51 |      $$IRET64 = ($$PARM.iE7 - 1) / 2;
    75 |      $$RET196 = $$IRET64;
   144 |      $$PARM.this12A = this;
              $$PARM.i12B = __20652;
              $$PARM.j12C = $$RET196;
   129 |      temp = *((char * *)((char *)(*((char * *)$$PARM.this12A)) + (long long) ((unsigned long long) $$PARM.j12C * 8ull)));
   130 |      *((char * *)((char *)(*((char * *)$$PARM.this12A)) + (long long) ((unsigned long long) $$PARM.j12C * 8ull))) = *((char * *)((char *)(*((char * *)$$PARM.this12A)) + (long long) ((unsigned long long) $$PARM.i12B * 8ull)));
   131 |      *((char * *)((char *)(*((char * *)$$PARM.this12A)) + (long long) ((unsigned long long) $$PARM.i12B * 8ull))) = temp;
              $$PARM.this126 = ($$PARM.this12A + 24);
              $$PARM.__k127 = ((char *)*((char * *)$$PARM.this12A)  + (long long) ((unsigned long long) $$PARM.i12B * 8ull));
   745 |      $$PARM.this114 = $$PARM.this126;
              $$PARM.__x115 = ((char * *)($$PARM.this126 + 8))[8 / 8];
              $$PARM.__y116 = ($$PARM.this126 + 8);
   985 |      if (!($$PARM.__x115 != NULL)) goto lab_40;
              do {   /* id=3 guarded */ /* ~41 */ 
                /* region = 75 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1785 < *$$PARM.__k127);
                if (__21720 != 0u) goto lab_42;
   987 |        $$PARM.__y116 = $$PARM.__x115;
   509 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                goto lab_43;
              lab_42:
   517 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
              lab_43:
   985 |      } while ($$PARM.__x115 != NULL);    /* ~41 */
            lab_40:
   171 |      __21706._M_node@0 = $$PARM.__y116;
              $$IRET72 = __21706;
   745 |      __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785;
   701 |      __i = __21536;
   171 |      __21545._M_node@0 = ($$PARM.this126 + 8);
   325 |      __21528 = __21545;
   213 |      __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
              if (__21553 != 0u) goto lab_45;
   635 |      __21529 = *((aggr1 *)$$PARM.this126);
   230 |      if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_46;
            lab_45:
   450 |      __21532.first@0 = *$$PARM.__k127;
    84 |      __21532.second@8 = 0;
   246 |      __21562._M_node@0 = __i._M_node@0.off0;
   107 |      __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this126,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1785;
   540 |      __i = __21563;
            lab_46:
   451 |      $$IRET78 = (__i._M_node@0 + 40);
   131 |      $$RET1B9 = $$IRET78;
   133 |      *$$RET1B9 = $$PARM.i12B;
              $$PARM.this124 = ($$PARM.this12A + 24);
              $$PARM.__k125 = ((char *)*((char * *)$$PARM.this12A)  + (long long) ((unsigned long long) $$PARM.j12C * 8ull));
   745 |      $$PARM.this114 = $$PARM.this124;
              $$PARM.__x115 = ((char * *)($$PARM.this124 + 8))[8 / 8];
              $$PARM.__y116 = ($$PARM.this124 + 8);
   985 |      if (!($$PARM.__x115 != NULL)) goto lab_48;
              do {   /* id=4 guarded */ /* ~49 */ 
                /* region = 76 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1785 < *$$PARM.__k125);
                if (__21720 != 0u) goto lab_50;
   987 |        $$PARM.__y116 = $$PARM.__x115;
   509 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                goto lab_51;
              lab_50:
   517 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
              lab_51:
   985 |      } while ($$PARM.__x115 != NULL);    /* ~49 */
            lab_48:
   171 |      __21706._M_node@0 = $$PARM.__y116;
              $$IRET72 = __21706;
   745 |      __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785;
   701 |      __i = __21536;
   171 |      __21545._M_node@0 = ($$PARM.this124 + 8);
   325 |      __21528 = __21545;
   213 |      __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
              if (__21553 != 0u) goto lab_53;
   635 |      __21529 = *((aggr1 *)$$PARM.this124);
   230 |      if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_54;
            lab_53:
   450 |      __21532.first@0 = *$$PARM.__k125;
    84 |      __21532.second@8 = 0;
   246 |      __21562._M_node@0 = __i._M_node@0.off0;
   107 |      __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this124,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1785;
   540 |      __i = __21563;
            lab_54:
   451 |      $$IRET77 = (__i._M_node@0 + 40);
   133 |      $$RET1BA = $$IRET77;
   134 |      *$$RET1BA = $$PARM.j12C;
   145 |      $$PARM.thisE0 = this;
              $$PARM.iE1 = __20652;
    48 |      DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |      if ($$PARM.iE1 > 0) goto lab_23;
              __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_23:
    50 |      if ($$PARM.iE1 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.thisE0 + 8)) - *((char * *)$$PARM.thisE0)) / 8ll))) goto lab_25;
              __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_25:
    51 |      $$IRET61 = ($$PARM.iE1 - 1) / 2;
   145 |      __20652 = $$IRET61;
   140 |    } while (__20652 > 0);    /* ~11 */
          lab_13:
    94 |    return;
          } /* function */ 


    97 |  void DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)(_Vector_impl *this, char * element)
    98 |  {
            DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::guard___func__4 = 1;
   659 |    $$PARM.this138 = (this + 24);
  1421 |    $$PARM.this118 = $$PARM.this138;
            $$PARM.__x119 = ((char * *)((char *)$$PARM.this138 + 8))[8 / 8];
            $$PARM.__y11A = ($$PARM.this138 + 8);
   985 |    if (!($$PARM.__x119 != NULL)) goto lab_43;
            do {   /* id=4 guarded */ /* ~44 */ 
              /* region = 59 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1788 < element);
              if (__21720 != 0u) goto lab_45;
   987 |      $$PARM.__y11A = $$PARM.__x119;
   509 |      $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
              goto lab_46;
            lab_45:
   517 |      $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
            lab_46:
   985 |    } while ($$PARM.__x119 != NULL);    /* ~44 */
          lab_43:
   171 |    __21706._M_node@0 = $$PARM.__y11A;
            $$IRET73 = __21706;
  1421 |    __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1788;
   171 |    __21438._M_node@0 = ($$PARM.this138 + 8);
   640 |    __21434 = __21438;
   213 |    __21444 = (char) (__j._M_node@0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1591..mga.__21434);
            if (__21444 != 0u) goto lab_48;
   529 |    __21453 = __j._M_node@0;
            __memset(&__21445,0,1ull);
   230 |    __21458 = (char) (element < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1788);
            if (!(__21458 != 0u)) goto lab_49;
          lab_48:
   171 |    __21459._M_node@0 = ($$PARM.this138 + 8);
   640 |    __21435 = __21459;
            __21463 = &__21435;
            goto lab_50;
          lab_49:
            __21463 = &__j;
          lab_50:
            $$IRET7D = *__21463;
   659 |    __20658 = &$$IRET7D->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1290.;
   171 |    __20663._M_node@0 = (this + 32);
   325 |    __20657 = __20663;
   217 |    __20671 = (char) (itr._M_node@0.off0 != &__20657->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1295.);
            if (__20671 != 0u) goto lab_4;
            __assert_fail("itr != backpointers.end()","priority_queue.h",100u,&DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::__func__)
            return;
          lab_4:
   140 |    if (!(((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4] > 0)) goto lab_7;
   139 |    __20714 = ((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4];
   140 |    do {   /* id=1 guarded */ /* ~5 */ 
              /* region = 62 */
    75 |      $$BD170 = *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) __20714 * 8ull)))->(DistanceVoxel).distance@10.rns1299.;
   139 |      $$PARM.thisEA = this;
              $$PARM.iEB = __20714;
    48 |      DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |      if ($$PARM.iEB > 0) goto lab_23;
              __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_23:
    50 |      if ($$PARM.iEB < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.thisEA + 8)) - *((char * *)$$PARM.thisEA)) / 8ll))) goto lab_25;
              __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_25:
    51 |      $$IRET66 = ($$PARM.iEB - 1) / 2;
   139 |      __20699 = (unsigned long long) $$IRET66;
    75 |      if (!($$BD170 < *((char * *)((char *)(*((char * *)this)) + (long long) (__20699 * 8ull)))->(DistanceVoxel).distance@10.rns1300.)) goto lab_7;
              $$PARM.thisE8 = this;
              $$PARM.iE9 = __20714;
    48 |      DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |      if ($$PARM.iE9 > 0) goto lab_20;
              __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_20:
    50 |      if ($$PARM.iE9 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.thisE8 + 8)) - *((char * *)$$PARM.thisE8)) / 8ll))) goto lab_22;
              __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_22:
    51 |      $$IRET65 = ($$PARM.iE9 - 1) / 2;
    75 |      $$RET197 = $$IRET65;
   144 |      $$PARM.this12D = this;
              $$PARM.i12E = __20714;
              $$PARM.j12F = $$RET197;
   129 |      temp = *((char * *)((char *)(*((char * *)$$PARM.this12D)) + (long long) ((unsigned long long) $$PARM.j12F * 8ull)));
   130 |      *((char * *)((char *)(*((char * *)$$PARM.this12D)) + (long long) ((unsigned long long) $$PARM.j12F * 8ull))) = *((char * *)((char *)(*((char * *)$$PARM.this12D)) + (long long) ((unsigned long long) $$PARM.i12E * 8ull)));
   131 |      *((char * *)((char *)(*((char * *)$$PARM.this12D)) + (long long) ((unsigned long long) $$PARM.i12E * 8ull))) = temp;
              $$PARM.this126 = ($$PARM.this12D + 24);
              $$PARM.__k127 = ((char *)*((char * *)$$PARM.this12D)  + (long long) ((unsigned long long) $$PARM.i12E * 8ull));
   745 |      $$PARM.this114 = $$PARM.this126;
              $$PARM.__x115 = ((char * *)($$PARM.this126 + 8))[8 / 8];
              $$PARM.__y116 = ($$PARM.this126 + 8);
   985 |      if (!($$PARM.__x115 != NULL)) goto lab_26;
              do {   /* id=2 guarded */ /* ~27 */ 
                /* region = 60 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1792 < *$$PARM.__k127);
                if (__21720 != 0u) goto lab_28;
   987 |        $$PARM.__y116 = $$PARM.__x115;
   509 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                goto lab_29;
              lab_28:
   517 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
              lab_29:
   985 |      } while ($$PARM.__x115 != NULL);    /* ~27 */
            lab_26:
   171 |      __21706._M_node@0 = $$PARM.__y116;
              $$IRET72 = __21706;
   745 |      __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792;
   701 |      __i = __21536;
   171 |      __21545._M_node@0 = ($$PARM.this126 + 8);
   325 |      __21528 = __21545;
   213 |      __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
              if (__21553 != 0u) goto lab_31;
   635 |      __21529 = *((aggr1 *)$$PARM.this126);
   230 |      if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_32;
            lab_31:
   450 |      __21532.first@0 = *$$PARM.__k127;
    84 |      __21532.second@8 = 0;
   246 |      __21562._M_node@0 = __i._M_node@0.off0;
   107 |      __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this126,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1792;
   540 |      __i = __21563;
            lab_32:
   451 |      $$IRET78 = (__i._M_node@0 + 40);
   131 |      $$RET1B9 = $$IRET78;
   133 |      *$$RET1B9 = $$PARM.i12E;
              $$PARM.this124 = ($$PARM.this12D + 24);
              $$PARM.__k125 = ((char *)*((char * *)$$PARM.this12D)  + (long long) ((unsigned long long) $$PARM.j12F * 8ull));
   745 |      $$PARM.this114 = $$PARM.this124;
              $$PARM.__x115 = ((char * *)($$PARM.this124 + 8))[8 / 8];
              $$PARM.__y116 = ($$PARM.this124 + 8);
   985 |      if (!($$PARM.__x115 != NULL)) goto lab_34;
              do {   /* id=3 guarded */ /* ~35 */ 
                /* region = 61 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1792 < *$$PARM.__k125);
                if (__21720 != 0u) goto lab_36;
   987 |        $$PARM.__y116 = $$PARM.__x115;
   509 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                goto lab_37;
              lab_36:
   517 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
              lab_37:
   985 |      } while ($$PARM.__x115 != NULL);    /* ~35 */
            lab_34:
   171 |      __21706._M_node@0 = $$PARM.__y116;
              $$IRET72 = __21706;
   745 |      __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792;
   701 |      __i = __21536;
   171 |      __21545._M_node@0 = ($$PARM.this124 + 8);
   325 |      __21528 = __21545;
   213 |      __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
              if (__21553 != 0u) goto lab_39;
   635 |      __21529 = *((aggr1 *)$$PARM.this124);
   230 |      if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_40;
            lab_39:
   450 |      __21532.first@0 = *$$PARM.__k125;
    84 |      __21532.second@8 = 0;
   246 |      __21562._M_node@0 = __i._M_node@0.off0;
   107 |      __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this124,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1792;
   540 |      __i = __21563;
            lab_40:
   451 |      $$IRET77 = (__i._M_node@0 + 40);
   133 |      $$RET1BA = $$IRET77;
   134 |      *$$RET1BA = $$PARM.j12F;
   145 |      $$PARM.thisE2 = this;
              $$PARM.iE3 = __20714;
    48 |      DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |      if ($$PARM.iE3 > 0) goto lab_17;
              __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_17:
    50 |      if ($$PARM.iE3 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.thisE2 + 8)) - *((char * *)$$PARM.thisE2)) / 8ll))) goto lab_19;
              __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
              return;
            lab_19:
    51 |      $$IRET62 = ($$PARM.iE3 - 1) / 2;
   145 |      __20714 = $$IRET62;
   140 |    } while (__20714 > 0);    /* ~5 */
          lab_7:
   102 |    DistanceVoxel_PriorityQueue::percolate_down(int)(this,((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4])
   103 |    return;
          } /* function */ 


  1369 |  unsigned long long std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(DistanceVoxel* const&)(char * this, char * *__x)
  1051 |  {
            __y = (this + 8);
  1052 |    if (!(((char * *)(this + 8))[8 / 8] != NULL)) goto lab_1;
  1050 |    __x = ((char * *)(this + 8))[8 / 8];
  1052 |    do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 30 */
   505 |      __memset(&__21476,0,1ull);
   230 |      __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795 < *__x);
              if (!(__21489 != 0u)) goto lab_3;
   517 |      __x = *((char * *)(__x + 24));
              goto lab_4;
            lab_3:
   505 |      __memset(&__21493,0,1ull);
   230 |      __21506 = (char) (*__x < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795);
              if (!(__21506 != 0u)) goto lab_5;
  1057 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
  1066 |    lab_4:
  1052 |    } while (__x != NULL);    /* ~2 */
          lab_1:
   171 |    __21472._M_node@0 = __y;
            __21473._M_node@0 = __y;
            __21471.first@0 = __21472;
    84 |    __21471.second@8 = __21473;
            $$IRET1E5 = __21471;
            goto lab_6;
   509 |  lab_5:
   517 |    __xu.rnn170 = *((char * *)(__x + 24));
    84 |    $$PARM.__x11D = *((char * *)(__x + 16));
            $$PARM.__y11E = __x;
   985 |    if (!(*((char * *)(__x + 16)) != NULL)) goto lab_7;
            do {   /* id=2 guarded */ /* ~8 */ 
              /* region = 28 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906$$1795 < *__x);
              if (__21720 != 0u) goto lab_9;
   987 |      $$PARM.__y11E = $$PARM.__x11D;
   509 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
              goto lab_10;
            lab_9:
   517 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
            lab_10:
   985 |    } while ($$PARM.__x11D != NULL);    /* ~8 */
          lab_7:
   171 |    __21706._M_node@0 = $$PARM.__y11E;
            $$IRET74 = __21706;
    84 |    __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.$$1795;
            $$PARM.__x3AB = __xu.rnn170;
            $$PARM.__y3AC = __y;
  1017 |    if (!(__xu.rnn170 != NULL)) goto lab_12;
            do {   /* id=3 guarded */ /* ~13 */ 
              /* region = 29 */
   505 |      __memset(&__21730,0,1ull);
   230 |      __21743 = (char) (*__x < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907$$1795);
              if (!(__21743 != 0u)) goto lab_14;
  1019 |      $$PARM.__y3AC = $$PARM.__x3AB;
   509 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
              goto lab_15;
            lab_14:
   517 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
            lab_15:
  1017 |    } while ($$PARM.__x3AB != NULL);    /* ~13 */
          lab_12:
   171 |    __21729._M_node@0 = $$PARM.__y3AC;
            $$IRET1E4 = __21729;
    84 |    __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.$$1795;
            __21466.first@0 = __21467;
            __21466.second@8 = __21468;
            $$IRET1E5 = __21466;
  1070 |  lab_6:
  1372 |    __p = &$$IRET1E5->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> > >).rns1304.;
  1373 |    __old_size = *((unsigned long long *)(this + 40));
  1374 |    std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)(this,__p.first@0,__p.second@8)
  1375 |    rstr = __old_size - *((unsigned long long *)(this + 40));
            return rstr;
  1376 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312          1052             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1052             1    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312          1017             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1017             3    Loop was not SIMD vectorized because it contains 
                                          control flow.

  1431 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::find(DistanceVoxel* const&) const(_Rb_tree_node_base;_Rb_tree<DistanceVoxel *,std::pair<DistanceVoxel * const,int>,std::_Select1st<std::pair<DistanceVoxel * const,int> >,std::less<DistanceVoxel *>,std::allocator<std::pair<DistanceVoxel * const,int> > > *this, char * *__k)
  1434 |  {
            $$PARM.__x14B = ((char * *)((char *)this + 8))[8 / 8];
            $$PARM.__y14C = (this + 8);
  1001 |    if (!(((char * *)((char *)this + 8))[8 / 8] != NULL)) goto lab_5;
            do {   /* id=1 guarded */ /* ~6 */ 
              /* region = 15 */
   505 |      __memset(&__21358,0,1ull);
   230 |      __21371 = (char) (((char * *)((char *)$$PARM.__x14B  + 32))->(DistanceVoxel *).rns1568.$$1797 < *__k);
              if (__21371 != 0u) goto lab_7;
  1003 |      $$PARM.__y14C = $$PARM.__x14B;
   513 |      $$PARM.__x14B = *((char * *)($$PARM.__x14B + 16));
              goto lab_8;
            lab_7:
   521 |      $$PARM.__x14B = *((char * *)($$PARM.__x14B + 24));
            lab_8:
  1001 |    } while ($$PARM.__x14B != NULL);    /* ~6 */
          lab_5:
   243 |    __21357._M_node@0 = $$PARM.__y14C;
            $$IRET82 = __21357;
  1434 |    __j = &$$IRET82->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1312.;
   243 |    __20726._M_node@0 = (this + 8);
   647 |    __20722 = __20726;
   288 |    __20732 = (char) (__j._M_node@0 == __20726._M_node@0);
            if (__20732 != 0u) goto lab_1;
   529 |    __20741 = __j._M_node@0;
            __memset(&__20733,0,1ull);
   230 |    __20746 = (char) (*__k < ((char * *)((char *)__20741  + 32))->(DistanceVoxel *).rns1313.);
            if (!(__20746 != 0u)) goto lab_2;
          lab_1:
   243 |    __20747._M_node@0 = (this + 8);
   647 |    __20723 = __20747;
            __20751 = &__20723;
            goto lab_3;
          lab_2:
            __20751 = &__j;
          lab_3:
            rstr = *__20751;
            return rstr;
  1438 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312          1001             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1001             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   154 |  void DistanceVoxel_PriorityQueue::percolate_down(int)(_Vector_impl *this, int i)
    56 |  {
            if (!(i * 2 + 1 < (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll)))) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 43 */
    60 |      if (!(i * 2 + 2 < (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll)))) goto lab_4;
   611 |      $$PARM.this13E = this;
              $$PARM.i13F = i;
    67 |      DistanceVoxel_PriorityQueue::get_right_child(int)::guard___func__3 = 1;
    68 |      if (!($$PARM.i13F >= 0)) goto lab_37;
    60 |      if ($$PARM.i13F * 2 + 2 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.this13E + 8)) - *((char * *)$$PARM.this13E)) / 8ll))) goto lab_38;
            lab_37:
              __assert_fail("i >= 0 && has_right_child( i )","priority_queue.h",68u,&DistanceVoxel_PriorityQueue::get_right_child(int)::__func__)
              return;
            lab_38:
    69 |      $$IRET7E = $$PARM.i13F * 2 + 2;
   611 |      __20764 = (unsigned long long) $$IRET7E;
    75 |      $$BD171 = *((char * *)((char *)(*((char * *)this)) + (long long) (__20764 * 8ull)))->(DistanceVoxel).distance@10.rns1327.;
   611 |      $$PARM.this142 = this;
              $$PARM.i143 = i;
    62 |      DistanceVoxel_PriorityQueue::get_left_child(int)::guard___func__3 = 1;
    63 |      if (!($$PARM.i143 >= 0)) goto lab_43;
    56 |      if ($$PARM.i143 * 2 + 1 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.this142 + 8)) - *((char * *)$$PARM.this142)) / 8ll))) goto lab_44;
            lab_43:
              __assert_fail("i >= 0 && has_left_child( i )","priority_queue.h",63u,&DistanceVoxel_PriorityQueue::get_left_child(int)::__func__)
              return;
            lab_44:
    64 |      $$IRET80 = $$PARM.i143 * 2 + 1;
   611 |      __20773 = (unsigned long long) $$IRET80;
    75 |      if (!($$BD171 < *((char * *)((char *)(*((char * *)this)) + (long long) (__20773 * 8ull)))->(DistanceVoxel).distance@10.rns1328.)) goto lab_4;
   162 |      $$PARM.this140 = this;
              $$PARM.i141 = i;
    67 |      DistanceVoxel_PriorityQueue::get_right_child(int)::guard___func__3 = 1;
    68 |      if (!($$PARM.i141 >= 0)) goto lab_40;
    60 |      if ($$PARM.i141 * 2 + 2 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.this140 + 8)) - *((char * *)$$PARM.this140)) / 8ll))) goto lab_41;
            lab_40:
              __assert_fail("i >= 0 && has_right_child( i )","priority_queue.h",68u,&DistanceVoxel_PriorityQueue::get_right_child(int)::__func__)
              return;
            lab_41:
    69 |      $$IRET7F = $$PARM.i141 * 2 + 2;
   162 |      child = $$IRET7F;
   163 |      goto lab_7;
            lab_4:
   164 |      $$PARM.this144 = this;
              $$PARM.i145 = i;
    62 |      DistanceVoxel_PriorityQueue::get_left_child(int)::guard___func__3 = 1;
    63 |      if (!($$PARM.i145 >= 0)) goto lab_46;
    56 |      if ($$PARM.i145 * 2 + 1 < (int) ((unsigned long long) ((*((char * *)((char *)$$PARM.this144 + 8)) - *((char * *)$$PARM.this144)) / 8ll))) goto lab_47;
            lab_46:
              __assert_fail("i >= 0 && has_left_child( i )","priority_queue.h",63u,&DistanceVoxel_PriorityQueue::get_left_child(int)::__func__)
              return;
            lab_47:
    64 |      $$IRET81 = $$PARM.i145 * 2 + 1;
   164 |      child = $$IRET81;
            lab_7:
    75 |      if (!(*((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) child * 8ull)))->(DistanceVoxel).distance@10.rns1330. < *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) i * 8ull)))->(DistanceVoxel).distance@10.rns1329.)) goto lab_3;
   129 |      temp = *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) i * 8ull)));
   130 |      *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) i * 8ull))) = *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) child * 8ull)));
   131 |      *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) child * 8ull))) = temp;
              $$PARM.this122 = (this + 24);
              $$PARM.__k123 = ((char *)*((char * *)this)  + (long long) ((unsigned long long) child * 8ull));
   745 |      $$PARM.this114 = $$PARM.this122;
              $$PARM.__x115 = ((char * *)($$PARM.this122 + 8))[8 / 8];
              $$PARM.__y116 = ($$PARM.this122 + 8);
   985 |      if (!($$PARM.__x115 != NULL)) goto lab_29;
              do {   /* id=3 guarded */ /* ~30 */ 
                /* region = 41 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1800 < *$$PARM.__k123);
                if (__21720 != 0u) goto lab_31;
   987 |        $$PARM.__y116 = $$PARM.__x115;
   509 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                goto lab_32;
              lab_31:
   517 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
              lab_32:
   985 |      } while ($$PARM.__x115 != NULL);    /* ~30 */
            lab_29:
   171 |      __21706._M_node@0 = $$PARM.__y116;
              $$IRET72 = __21706;
   745 |      __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1800;
   701 |      __i = __21536;
   171 |      __21545._M_node@0 = ($$PARM.this122 + 8);
   325 |      __21528 = __21545;
   213 |      __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
              if (__21553 != 0u) goto lab_34;
   635 |      __21529 = *((aggr1 *)$$PARM.this122);
   230 |      if (!(*$$PARM.__k123 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_35;
            lab_34:
   450 |      __21532.first@0 = *$$PARM.__k123;
    84 |      __21532.second@8 = 0;
   246 |      __21562._M_node@0 = __i._M_node@0.off0;
   107 |      __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this122,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1800;
   540 |      __i = __21563;
            lab_35:
   451 |      $$IRET76 = (__i._M_node@0 + 40);
   131 |      $$RET198 = $$IRET76;
   133 |      *$$RET198 = child;
              $$PARM.this120 = (this + 24);
              $$PARM.__k121 = ((char *)*((char * *)this)  + (long long) ((unsigned long long) i * 8ull));
   745 |      $$PARM.this114 = $$PARM.this120;
              $$PARM.__x115 = ((char * *)($$PARM.this120 + 8))[8 / 8];
              $$PARM.__y116 = ($$PARM.this120 + 8);
   985 |      if (!($$PARM.__x115 != NULL)) goto lab_21;
              do {   /* id=2 guarded */ /* ~22 */ 
                /* region = 42 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1801 < *$$PARM.__k121);
                if (__21720 != 0u) goto lab_23;
   987 |        $$PARM.__y116 = $$PARM.__x115;
   509 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                goto lab_24;
              lab_23:
   517 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
              lab_24:
   985 |      } while ($$PARM.__x115 != NULL);    /* ~22 */
            lab_21:
   171 |      __21706._M_node@0 = $$PARM.__y116;
              $$IRET72 = __21706;
   745 |      __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1801;
   701 |      __i = __21536;
   171 |      __21545._M_node@0 = ($$PARM.this120 + 8);
   325 |      __21528 = __21545;
   213 |      __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
              if (__21553 != 0u) goto lab_26;
   635 |      __21529 = *((aggr1 *)$$PARM.this120);
   230 |      if (!(*$$PARM.__k121 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_27;
            lab_26:
   450 |      __21532.first@0 = *$$PARM.__k121;
    84 |      __21532.second@8 = 0;
   246 |      __21562._M_node@0 = __i._M_node@0.off0;
   107 |      __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this120,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1801;
   540 |      __i = __21563;
            lab_27:
   451 |      $$IRET75 = (__i._M_node@0 + 40);
   133 |      $$RET199 = $$IRET75;
   134 |      *$$RET199 = i;
   168 |      i = child;
    56 |    } while (child * 2 + 1 < (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll)));    /* ~1 */
          lab_3:
   175 |    return;
          } /* function */ 


    22 |  char * MMSP::grid<2, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(grid<2,MMSP::vector<double> > *this, int FIELDS, int *min, int *max, int GHOSTS, char SINGLE)
    25 |  {
            *((int *)((char *)this + 16)) = FIELDS;
    28 |    if (!1) goto lab_3;
            $$CIV69 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    29 |      ((int *)((char *)this + 24))[$$CIV69] = min[$$CIV69];
    30 |      ((int *)((char *)this + 32))[$$CIV69] = max[$$CIV69];
    28 |      $$CIV69 = $$CIV69 + 1ll;
            } while ((unsigned long long) $$CIV69 < 2ull);    /* ~1 */
          lab_3:
    34 |    *((int *)((char *)this + 20)) = 0;
    41 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)(this,SINGLE)
    42 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            28             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            28             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            29                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            30                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

  1114 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::buffer_size() const(char * this)
          {
            $$PARM.p344 = *((char * *)this);
  1103 |    size = 0ull;
  1108 |    if (!(((int *)(this + 40))[0ll] < ((int *)(this + 48))[0ll])) goto lab_8;
            x = ((int *)(this + 40))[0ll];
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 9 */
              $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)$$PARM.p344  + (long long) ((x - ((int *)(this + 64))[0ll]) * ((int *)(this + 80))[0ll]) * 16ll),1,(this + 40),(this + 48));
  1109 |      size = size + $$RET1BC;
  1108 |      x = x + 1;
            } while (x < ((int *)(this + 48))[0ll]);    /* ~9 */
          lab_8:
  1116 |    rstr = size;
            return rstr;
  1117 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1108             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1119 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::buffer_size(int const*, int const*) const(grid<2,MMSP::vector<double> > *this, int *min, int *max)
          {
            $$PARM.p344 = *((char * *)this);
  1103 |    size = 0ull;
  1108 |    if (!(min[0ll] < max[0ll])) goto lab_8;
            x = min[0ll];
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 9 */
              $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)$$PARM.p344  + (long long) ((x - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]) * 16ll),1,min,max);
  1109 |      size = size + $$RET1BC;
  1108 |      x = x + 1;
            } while (x < max[0ll]);    /* ~9 */
          lab_8:
  1121 |    rstr = size;
            return rstr;
  1122 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1108             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1126 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*) const(char * this, char * buffer)
          {
            $$PARM.p331 = *((char * *)this);
  1138 |    size = 0ull;
  1143 |    if (!(((int *)(this + 40))[0ll] < ((int *)(this + 48))[0ll])) goto lab_8;
            x = ((int *)(this + 40))[0ll];
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 9 */
              $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)$$PARM.p331  + (long long) ((x - ((int *)(this + 64))[0ll]) * ((int *)(this + 80))[0ll]) * 16ll),1,(this + 40),(this + 48));
  1144 |      size = size + $$RET1BE;
  1143 |      x = x + 1;
            } while (x < ((int *)(this + 48))[0ll]);    /* ~9 */
          lab_8:
  1128 |    rstr = size;
            return rstr;
  1129 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1143             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1131 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(grid<2,MMSP::vector<double> > *this, char * buffer, int *min, int *max)
          {
            $$PARM.p331 = *((char * *)this);
  1138 |    size = 0ull;
  1143 |    if (!(min[0ll] < max[0ll])) goto lab_8;
            x = min[0ll];
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 9 */
              $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)$$PARM.p331  + (long long) ((x - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]) * 16ll),1,min,max);
  1144 |      size = size + $$RET1BE;
  1143 |      x = x + 1;
            } while (x < max[0ll]);    /* ~9 */
          lab_8:
  1133 |    rstr = size;
            return rstr;
  1134 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1143             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1149 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*)(char * this, char * buffer)
          {
            $$RET19E = MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(this,buffer,(this + 40),(this + 48));
  1151 |    rstr = $$RET19E;
            return rstr;
  1152 |  } /* function */ 


  1154 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(grid<2,MMSP::vector<double> > *this, char * buffer, char * min, char * max)
          {
            $$RET19F = MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,buffer,*((char * *)this),0,min,max);
  1156 |    rstr = $$RET19F;
            return rstr;
  1157 |  } /* function */ 


          char * std::_Vector_base<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::_Vector_impl::~_Vector_impl()(char * this)
   109 |  {
            $$PARM.this38B = this;
    73 |    $$IRET1D5 = $$PARM.this38B;
   109 |    $$IRET1D6 = this;
            rstr = this;
            return rstr;
          } /* function */ 


          char * std::_Vector_base<Point<int>, std::allocator<Point<int> > >::_Vector_impl::~_Vector_impl()(char * this)
   109 |  {
            $$PARM.this0 = this;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = this;
            rstr = this;
            return rstr;
          } /* function */ 


          void std::vector<Point<int>, std::allocator<Point<int> > >::__dftbdt(std::_Vector_base<Point<int>, std::allocator<Point<int> > >*)(_Vector_impl *__20816)
   145 |  {
            if (!(*((char * *)__20816) != NULL)) goto lab_4;
    95 |    operator delete(void*)(*((char * *)__20816))
   110 |  lab_4:
   132 |    $$PARM.this2 = __20816;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET4 = __20816;
            return;
          } /* function */ 


    31 |  char * MMSP::vector<int>::vector(int)(vector<int> *this, int N)
    33 |  {
            *((int *)((char *)this + 8)) = N;
            $$RET1A0 = operator new[](unsigned long)((unsigned long long) N * 4ull);
    34 |    *((char * *)this) = $$RET1A0;
    35 |    rstr = this;
            return rstr;
          } /* function */ 


     9 |  char * MMSP::vector<double>::vector()(vector<double> *this)
    11 |  {
            *((int *)((char *)this + 8)) = 0;
    12 |    *((char * *)this) = NULL;
    13 |    rstr = this;
            return rstr;
          } /* function */ 


   136 |  void MMSP::vector<double>::resize(int)(vector<double> *this, int N)
   138 |  {
            if (!(*((int *)((char *)this + 8)) == 0)) goto lab_1;
   139 |    *((int *)((char *)this + 8)) = N;
            $$RET1A1 = operator new[](unsigned long)((unsigned long long) N * 8ull);
   140 |    *((char * *)this) = $$RET1A1;
   141 |    goto lab_3;
          lab_1:
            if (!(N > *((int *)((char *)this + 8)))) goto lab_4;
   142 |    temp = operator new[](unsigned long)((unsigned long long) N * 8ull);
   143 |    __builtin_memcpy(temp,*((char * *)this),(unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   144 |    if (!(*((char * *)this) != NULL)) goto lab_6;
   145 |    operator delete[](void*)(*((char * *)this))
   146 |    *((char * *)this) = NULL;
   147 |  lab_6:
   148 |    *((int *)((char *)this + 8)) = N;
            $$RET1A2 = operator new[](unsigned long)((unsigned long long) N * 8ull);
   149 |    *((char * *)this) = $$RET1A2;
   150 |    __builtin_memcpy($$RET1A2,temp,(unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   151 |    if (!(temp != NULL)) goto lab_10;
   152 |    operator delete[](void*)(temp)
   155 |    goto lab_10;
          lab_4:
            if (!(N < *((int *)((char *)this + 8)))) goto lab_11;
   156 |    temp = operator new[](unsigned long)((unsigned long long) N * 8ull);
   157 |    __builtin_memcpy(temp,*((char * *)this),(unsigned long long) N * 8ull);
   158 |    if (!(*((char * *)this) != NULL)) goto lab_13;
   159 |    operator delete[](void*)(*((char * *)this))
   160 |    *((char * *)this) = NULL;
   161 |  lab_13:
   162 |    *((int *)((char *)this + 8)) = N;
            $$RET1A3 = operator new[](unsigned long)((unsigned long long) N * 8ull);
   163 |    *((char * *)this) = $$RET1A3;
   164 |    __builtin_memcpy($$RET1A3,temp,(unsigned long long) N * 8ull);
   165 |    if (!(temp != NULL)) goto lab_15;
   166 |    operator delete[](void*)(temp)
   168 |  lab_15:
   169 |  lab_11:
          lab_10:
          lab_3:
   170 |    return;
          } /* function */ 


    22 |  char * MMSP::grid<1, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(grid<1,MMSP::vector<double> > *this, int FIELDS, int *min, int *max, int GHOSTS, char SINGLE)
    25 |  {
            *((int *)((char *)this + 16)) = FIELDS;
    28 |    if (!1) goto lab_3;
            $$CIV6A = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    29 |      ((int *)((char *)this + 24))[$$CIV6A] = min[$$CIV6A];
    30 |      ((int *)((char *)this + 28))[$$CIV6A] = max[$$CIV6A];
    28 |      $$CIV6A = $$CIV6A + 1ll;
            } while ((unsigned long long) $$CIV6A < 1ull);    /* ~1 */
          lab_3:
    34 |    *((int *)((char *)this + 20)) = 0;
    41 |    MMSP::grid<1, MMSP::vector<double> >::setup(bool)(this,SINGLE)
    42 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            28             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            28             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            29                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            30                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

  1114 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::buffer_size() const(char * this)
  1103 |  {
            size = 0ull;
  1105 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_2;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 9 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)*((char * *)this) + 8))[((long long) (((int *)(this + 52))[0ll] * (x - ((int *)(this + 44))[0ll])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~3 */
          lab_2:
  1116 |    rstr = size;
            return rstr;
  1117 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1105             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1119 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::buffer_size(int const*, int const*) const(grid<1,MMSP::vector<double> > *this, int *min, int *max)
  1103 |  {
            size = 0ull;
  1105 |    if (!(min[0ll] < max[0ll])) goto lab_2;
            x = min[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 9 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)*((char * *)this) + 8))[((long long) (((int *)((char *)this + 52))[0ll] * (x - ((int *)((char *)this + 44))[0ll])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < max[0ll]);    /* ~3 */
          lab_2:
  1121 |    rstr = size;
            return rstr;
  1122 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1105             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1126 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*) const(char * this, char * buffer)
          {
            $$PARM.p3CA = *((char * *)this);
  1138 |    size = 0ull;
  1140 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_2;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 9 */
              $$PARM.this327 = ((char *)$$PARM.p3CA  + (long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)$$PARM.p3CA  + (long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~3 */
          lab_2:
  1128 |    rstr = size;
            return rstr;
  1129 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1140             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1131 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(grid<1,MMSP::vector<double> > *this, char * buffer, int *min, int *max)
          {
            $$PARM.p3CA = *((char * *)this);
  1138 |    size = 0ull;
  1140 |    if (!(min[0ll] < max[0ll])) goto lab_2;
            x = min[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 9 */
              $$PARM.this327 = ((char *)$$PARM.p3CA  + (long long) ((x - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)$$PARM.p3CA  + (long long) ((x - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < max[0ll]);    /* ~3 */
          lab_2:
  1133 |    rstr = size;
            return rstr;
  1134 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1140             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1149 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*)(char * this, char * buffer)
          {
            $$PARM.p41E = *((char * *)this);
  1161 |    size = 0ull;
  1163 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_2;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 11 */
              $$PARM.this414 = ((char *)$$PARM.p41E  + (long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll);
   109 |      if (!(((char * *)$$PARM.p41E)[((long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll) / 8] != NULL)) goto lab_4;
   110 |      operator delete[](void*)(((char * *)$$PARM.p41E)[((long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll) / 8])
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_4:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~3 */
          lab_2:
  1151 |    rstr = size;
            return rstr;
  1152 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1163             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1163             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

  1154 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(grid<1,MMSP::vector<double> > *this, char * buffer, int *min, int *max)
          {
            $$PARM.p41E = *((char * *)this);
  1161 |    size = 0ull;
  1163 |    if (!(min[0ll] < max[0ll])) goto lab_2;
            x = min[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 11 */
              $$PARM.this414 = ((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]) * 16ll);
   109 |      if (!(((char * *)$$PARM.p41E)[((long long) ((x - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]) * 16ll) / 8] != NULL)) goto lab_4;
   110 |      operator delete[](void*)(((char * *)$$PARM.p41E)[((long long) ((x - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]) * 16ll) / 8])
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_4:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < max[0ll]);    /* ~3 */
          lab_2:
  1156 |    rstr = size;
            return rstr;
  1157 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1163             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1163             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

    22 |  char * MMSP::grid<3, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(grid<3,MMSP::vector<double> > *this, int FIELDS, int *min, int *max, int GHOSTS, char SINGLE)
    25 |  {
            *((int *)((char *)this + 16)) = FIELDS;
    28 |    if (!1) goto lab_3;
            $$CIV6B = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    29 |      ((int *)((char *)this + 24))[$$CIV6B] = min[$$CIV6B];
    30 |      ((int *)((char *)this + 36))[$$CIV6B] = max[$$CIV6B];
    28 |      $$CIV6B = $$CIV6B + 1ll;
            } while ((unsigned long long) $$CIV6B < 3ull);    /* ~1 */
          lab_3:
    34 |    *((int *)((char *)this + 20)) = 0;
    41 |    MMSP::grid<3, MMSP::vector<double> >::setup(bool)(this,SINGLE)
    42 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275            28             1    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275            28             1    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275            29                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275            30                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.

  1114 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::buffer_size() const(char * this)
          {
            $$RET1AA = MMSP::grid<3, MMSP::vector<double> >::buffer_size(int const*, int const*) const(this,(this + 48),(this + 60));
  1116 |    rstr = $$RET1AA;
            return rstr;
  1117 |  } /* function */ 


  1119 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::buffer_size(int const*, int const*) const(grid<3,MMSP::vector<double> > *this, char * min, char * max)
          {
            $$RET1AB = MMSP::grid<3, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,*((char * *)this),0,min,max);
  1121 |    rstr = $$RET1AB;
            return rstr;
  1122 |  } /* function */ 


  1126 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*) const(char * this, char * buffer)
          {
            $$RET1AC = MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(this,buffer,(this + 48),(this + 60));
  1128 |    rstr = $$RET1AC;
            return rstr;
  1129 |  } /* function */ 


  1131 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(grid<3,MMSP::vector<double> > *this, char * buffer, char * min, char * max)
          {
            $$RET1AD = MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,buffer,*((char * *)this),0,min,max);
  1133 |    rstr = $$RET1AD;
            return rstr;
  1134 |  } /* function */ 


  1149 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*)(char * this, char * buffer)
          {
            $$RET1AE = MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(this,buffer,(this + 48),(this + 60));
  1151 |    rstr = $$RET1AE;
            return rstr;
  1152 |  } /* function */ 


  1154 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(grid<3,MMSP::vector<double> > *this, char * buffer, char * min, char * max)
          {
            $$RET1AF = MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,buffer,*((char * *)this),0,min,max);
  1156 |    rstr = $$RET1AF;
            return rstr;
  1157 |  } /* function */ 


          char * std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()(char * this)
   109 |  {
            $$PARM.this224 = this;
    73 |    $$IRET129 = $$PARM.this224;
   109 |    $$IRET12A = this;
            rstr = this;
            return rstr;
          } /* function */ 


          char * std::map<DistanceVoxel*, int, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::~map()(_Rb_tree_node_base *this)
   614 |  {
            $$PARM.__x3A7 = ((char * *)((char *)this + 8))[8 / 8];
   968 |    if (!(((char * *)((char *)this + 8))[8 / 8] != NULL)) goto lab_1;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 8 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(this,*((char * *)((char *)$$PARM.__x3A7 + 24)))
   509 |      __y = *((char * *)((char *)$$PARM.__x3A7 + 16));
    95 |      operator delete(void*)($$PARM.__x3A7)
   973 |      $$PARM.__x3A7 = __y;
   968 |    } while (__y != NULL);    /* ~2 */
          lab_1:
            rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312           968             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

    67 |  char * Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(aggr8 __first, aggr8 __last, Point<int> *__result)
    70 |  {
            __cur = __result;
    73 |    if (!(__first._M_current@0 != __last._M_current@0)) goto lab_3;
            $$CIV6C = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV6C * 12ll))) goto lab_5;
    12 |      ((int *)__result)[($$CIV6C * 12ll) / 4] = ((int *)__first._M_current@0)[($$CIV6C * 12ll) / 4];
              ((int *)((char *)__result + 4))[($$CIV6C * 12ll) / 4] = ((int *)((char *)__first._M_current@0 + 4))[($$CIV6C * 12ll) / 4];
              ((int *)((char *)__result + 8))[($$CIV6C * 12ll) / 4] = ((int *)((char *)__first._M_current@0 + 8))[($$CIV6C * 12ll) / 4];
            lab_5:
   710 |      $$CIV6C = $$CIV6C + 1ll;
            } while ((unsigned long long) $$CIV6C < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
          lab_3:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       305            73             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       305            73             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

   142 |  void MMSP::grid<2, DistanceVoxel>::setup(bool)(grid<2,DistanceVoxel> *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIV6D = 0ll;
            do {   /* id=6 guarded */ /* ~1 */ 
              /* region = 39 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 40))[$$CIV6D] = ((int *)((char *)this + 24))[$$CIV6D];
   147 |      ((int *)((char *)this + 48))[$$CIV6D] = ((int *)((char *)this + 32))[$$CIV6D];
   149 |      ((int *)((char *)this + 88))[$$CIV6D] = 2;
   150 |      ((int *)((char *)this + 96))[$$CIV6D] = 2;
   152 |      ((double *)((char *)this + 104))[$$CIV6D] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 120))[$$CIV6D] = 0;
   155 |      ((int *)((char *)this + 128))[$$CIV6D] = 1;
   156 |      ((int *)((char *)this + 136))[$$CIV6D] = 1;
   158 |      ((int *)((char *)this + 144))[$$CIV6D] = 0;
   159 |      ((int *)((char *)this + 152))[$$CIV6D] = 0;
   145 |      $$CIV6D = $$CIV6D + 1ll;
            } while ((unsigned long long) $$CIV6D < 2ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIV6E = 0ll;
            do {   /* id=5 guarded */ /* ~4 */ 
              /* region = 38 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 64))[$$CIV6E] = ((int *)((char *)this + 40))[$$CIV6E] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 72))[$$CIV6E] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 48))[$$CIV6E];
   301 |      $$CIV6E = $$CIV6E + 1ll;
            } while ((unsigned long long) $$CIV6E < 2ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_34;
            $$DCIVC = 0ll;
            do {   /* id=7 guarded */ /* ~35 */ 
              /* region = 37 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 56))[$$DCIVC] = 1;
   306 |      ((int *)((char *)this + 80))[$$DCIVC] = 1;
   305 |      $$DCIVC = $$DCIVC + 1ll;
            } while ((unsigned long long) $$DCIVC < 2ull);    /* ~35 */
          lab_34:
            if (!1) goto lab_36;
            $$DCIVD = 0ll;
            do {   /* id=8 guarded */ /* ~37 */ 
              /* region = 36 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIVD + 1 < 2)) goto lab_38;
              $$DCIVE = 0ll;
              $$SCREP8 = ((int *)((char *)this + 56))[$$DCIVD];
              $$SCREP9 = ((int *)((char *)this + 80))[$$DCIVD];
              do {   /* id=9 guarded */ /* ~39 */ 
                /* region = 33 */
                /* bump-normalized */
   310 |        $$SCREP8 = $$SCREP8 * (((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIVE + $$DCIVD)))] - ((int *)((char *)this + 40))[(long long) ((int) (1ll + ($$DCIVE + $$DCIVD)))]);
   309 |        $$SCREP9 = $$SCREP9 * (((int *)((char *)this + 72))[(long long) ((int) (1ll + ($$DCIVE + $$DCIVD)))] - ((int *)((char *)this + 64))[(long long) ((int) (1ll + ($$DCIVE + $$DCIVD)))]);
   308 |        $$DCIVE = $$DCIVE + 1ll;
              } while ((unsigned long long) $$DCIVE < (unsigned long long) (1ll - $$DCIVD));    /* ~39 */
              ((int *)((char *)this + 80))[$$DCIVD] = $$SCREP9;
              ((int *)((char *)this + 56))[$$DCIVD] = $$SCREP8;
            lab_38:
   305 |      $$DCIVD = $$DCIVD + 1ll;
            } while ((unsigned long long) $$DCIVD < 2ull);    /* ~37 */
          lab_36:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 40))[0ll]) * ((int *)((char *)this + 56))[0ll];
   319 |    __20868 = operator new[](unsigned long)((unsigned long long) ((((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]) * 24ull);
            if (!(__20868 != NULL)) goto lab_13;
            if (!(0ull < (unsigned long long) *((int *)((char *)this + 12)))) goto lab_17;
            $$CIV71 = 0ll;
            do {   /* id=2 guarded */ /* ~15 */ 
              /* region = 34 */
              /* bump-normalized */
    70 |      *(((int *)__20868) + $$CIV71 * 24ll / 4) = -1;
              *(((int *)((char *)__20868 + 4)) + $$CIV71 * 24ll / 4) = -1;
              *(((int *)((char *)__20868 + 8)) + $$CIV71 * 24ll / 4) = 0;
              *(((double *)((char *)__20868 + 16)) + $$CIV71 * 24ll / 8) =  1.7976931348623157E+308;
   319 |      $$CIV71 = $$CIV71 + 1ll;
            } while ((unsigned long long) $$CIV71 < (unsigned long long) *((int *)((char *)this + 12)));    /* ~15 */
          lab_17:
          lab_13:
            *((char * *)this) = __20868;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_20;
            i = 0;
            do {   /* id=1 guarded */ /* ~18 */ 
              /* region = 35 */
              i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~18 */
          lab_20:
   326 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275           145             6    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           145             6    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           146                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           147                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           149                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           150                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           152                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       275           154                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           155                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           156                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           158                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           159                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           301             5    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           301             5    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          operation in 
                                          this->(grid<2,DistanceVoxel>).x0[]@28.rns1465.[$$CIV6E
                                          ] - this->(grid<2,DistanceVoxel>).ghosts@14.rns1478. 
                                          which is not  suitable for SIMD vectorization.
       275           302                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          operation in 
                                          this->(grid<2,DistanceVoxel>).ghosts@14.rns1478. + 
                                          this->(grid<2,DistanceVoxel>).x1[]@30.rns1467.[$$CIV6E
                                          ] which is not  suitable for SIMD vectorization.
       275           303                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             7    Loop was not SIMD vectorized because its number of 
                                          iterations is too small.
       275           307                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           306                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           305             8    Loop was not SIMD vectorized because the loop is not 
                                          the innermost loop.
       275           308             9    Loop was not SIMD vectorized because it contains 
                                          non-vectorizable reductions.
       275           308             9    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP8 * 
                                          (this->(grid<2,DistanceVoxel>).x1[]@30.rns1467.[(long 
                                          long) ((int) (1ll + ($$DCIVE + $$DCIVD)))] - 
                                          this->(grid<2,DistanceVoxel>).x0[]@28.rns1465.[(long 
                                          long) ((int) (1ll + ($$DCIVE + $$DCIVD)))]) which is 
                                          not  suitable for SIMD vectorization.
       275           310                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          operation in $$SCREP9 * 
                                          (this->(grid<2,DistanceVoxel>).s1[]@48.rns1479.[(long 
                                          long) ((int) (1ll + ($$DCIVE + $$DCIVD)))] - 
                                          this->(grid<2,DistanceVoxel>).s0[]@40.rns1477.[(long 
                                          long) ((int) (1ll + ($$DCIVE + $$DCIVD)))]) which is 
                                          not  suitable for SIMD vectorization.
       275           309                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       275           319             2    Loop was not SIMD vectorized because the 
                                          aliasing-induced dependence  prevents SIMD 
                                          vectorization.
       297            70                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)__20868 + 
                                          (24ll)*($$CIV71)) with  non-vectorizable strides.
       297            70                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       297            70                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)__20868 + 
                                          (24ll)*($$CIV71)).
       297            70                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)__20868 + 
                                          (24ll)*($$CIV71)) with  non-vectorizable strides.
       297            70                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       297            70                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)__20868 + 
                                          (24ll)*($$CIV71)).
       297            70                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)__20868 + 
                                          (24ll)*($$CIV71)) with  non-vectorizable strides.
       297            70                  Loop was not SIMD vectorized because it contains 
                                          unsupported vector data types.
       297            70                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)__20868 + 
                                          (24ll)*($$CIV71)).
       297            70                  Loop was not SIMD vectorized because it contains 
                                          memory references ((char *)__20868 + 
                                          (24ll)*($$CIV71)) with  non-vectorizable strides.
       297            70                  Loop was not SIMD vectorized because the floating 
                                          point operation is not  vectorizable under -qstrict.
       297            70                  Loop was not SIMD vectorized because it contains 
                                          non-stride-one store  references ((char *)__20868 + 
                                          (24ll)*($$CIV71)).
       275           320             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275           320             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   374 |  char * MMSP::grid<3, DistanceVoxel>::operator()(MMSP::vector<int>) const(grid<3,DistanceVoxel> *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV72 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.i4D = (int) $$CIV72;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.i4D < *((int *)((char *)x + 8))) goto lab_19;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$IRET17 = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.i4D));
   377 |      $$RET1B0 = $$IRET17;
   378 |      $$PARM.x1E = $$RET1B0;
              $$PARM.x01F = ((int *)((char *)this + 48))[$$CIV72];
              $$PARM.x120 = ((int *)((char *)this + 60))[$$CIV72];
              $$PARM.b021 = ((int *)((char *)this + 120))[$$CIV72];
              $$PARM.b122 = ((int *)((char *)this + 132))[$$CIV72];
    44 |      if (!(*$$PARM.x1E < $$PARM.x01F)) goto lab_4;
    45 |      if ($$PARM.b021 == 1) goto lab_5;
              if (!($$PARM.b021 == 4)) goto lab_6;
            lab_5:
              *$$PARM.x1E = $$PARM.x01F;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b021 == 2)) goto lab_8;
              *$$PARM.x1E = *$$PARM.x1E + ($$PARM.x120 - $$PARM.x01F);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b021 == 0)) goto lab_16;
              *$$PARM.x1E = $$PARM.x01F * 2 - *$$PARM.x1E;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.x1E >= $$PARM.x120)) goto lab_16;
    51 |      if ($$PARM.b122 == 1) goto lab_10;
              if (!($$PARM.b122 == 4)) goto lab_11;
            lab_10:
              *$$PARM.x1E = $$PARM.x120 - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b122 == 2)) goto lab_13;
              *$$PARM.x1E = *$$PARM.x1E + ($$PARM.x01F - $$PARM.x120);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b122 == 0)) goto lab_16;
              *$$PARM.x1E = ($$PARM.x120 * 2 - *$$PARM.x1E) - 2;
    57 |    lab_16:
   378 |      $$PARM.i47 = (int) $$CIV72;
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if ($$PARM.i47 < *((int *)((char *)x + 8))) goto lab_17;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$IRET14 = ((char *)*((char * *)x) + (4ll)*((long long) $$PARM.i47));
   378 |      $$RET1B1 = $$IRET14;
   379 |      p = ((char *)p  + (long long) ((*$$RET1B1 - ((int *)((char *)this + 84))[$$CIV72]) * ((int *)((char *)this + 108))[$$CIV72]) * 24ll);
   377 |      $$CIV72 = ($$CIV72 + 1);
            } while ((unsigned long long) $$CIV72 < 3ull);    /* ~1 */
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


   960 |  char * Point<int>* std::vector<Point<int>, std::allocator<Point<int> > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > > >(unsigned long, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >)(char * this, unsigned long long __n, aggr8 __first, aggr8 __last)
   962 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   140 |    if (!(__n != 0ull)) goto lab_4;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__n > 1537228672809129301ull),0ll))) goto lab_6;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_6:
    89 |    __20898 = operator new(unsigned long)(__n * 12ull);
   107 |    __20949 = __20898;
            goto lab_5;
          lab_4:
            __20949 = NULL;
          lab_5:
   965 |    __es.__c4@3 = 1u;
   257 |    Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(__first,__last,__20949);
            goto __20944;
            goto __20945;
   968 |    __es.__c4@3 = 0u;
            rstr = __20949;
            return rstr;
   971 |  lab_14:
            /* GLAB  id_no=6178{__20944} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __20947 = __int_register_value(29u);
            __cxa_begin_catch((char *) __20947)
   145 |    if (!(__20949 != NULL)) goto lab_9;
    95 |    operator delete(void*)(__20949)
   110 |  lab_9:
   973 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
   975 |    return rstr;
   971 |    /* GLAB  id_no=6184{__20945} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __20948 = __int_register_value(29u);
            _Unwind_Resume((char *) __20948)
            goto lab_14;
   975 |  } /* function */ 


   115 |  void std::string MMSP::name<double>(MMSP::vector<double> const&)(char * __classReturn, char * s)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__20963,"vector:",&__20965);
            __es.__c4@3 = 1u;
            __20966 =  0.0000000000000000E+000;
            $$PARM.__classReturn352 = &__20967;
            $$PARM.value353 = &__20966;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)($$PARM.__classReturn352,"double",&__108);
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(__classReturn,&__20963,&__20967)
            __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__20967);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__20963);
   117 |    return;
          } /* function */ 


  2161 |  void std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(char * __str, char * __lhs, char * __rhs)
  2163 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
  2164 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)(__str,__lhs);
            __es.__c4@3 = 1u;
  2165 |    std::string::append(std::string const&)(__str,__rhs);
  2167 |    return;
          } /* function */ 


    37 |  char * MMSP::vector<int>::vector<int>(int, int const&)(vector<int> *this, int N, int *value)
    39 |  {
            *((int *)((char *)this + 8)) = N;
            $$RET1B3 = operator new[](unsigned long)((unsigned long long) N * 4ull);
    40 |    *((char * *)this) = $$RET1B3;
    41 |    if (!(0 < *((int *)((char *)this + 8)))) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
    42 |      $$RET1B3[(long long) i] = *value;
    41 |      i = i + 1;
            } while (i < *((int *)((char *)this + 8)));    /* ~1 */
          lab_3:
    43 |    rstr = this;
            return rstr;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       264            41             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       264            41             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

    58 |  void MMSP::vector<int> getPosition<3, int>(Point<int> const&)(vector<int> *answer, Point<int> *p)
    59 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    60 |    __21024 = 0;
            $$PARM.this21A = answer;
    39 |    *((int *)((char *)answer + 8)) = 3;
            $$RET1B3 = operator new[](unsigned long)(12ull);
    40 |    *((char * *)$$PARM.this21A) = $$RET1B3;
    41 |    if (!(0 < *((int *)((char *)$$PARM.this21A + 8)))) goto lab_10;
            i = 0;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 15 */
    42 |      $$RET1B3[(long long) i] = __21024;
    41 |      i = i + 1;
            } while (i < *((int *)((char *)$$PARM.this21A + 8)));    /* ~11 */
          lab_10:
    60 |    __es.__c4@3 = 1u;
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (0 < *((int *)((char *)answer + 8))) goto lab_8;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_8:
    61 |    ((int *)(*((char * *)answer)))[0ll] = *((int *)p);
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (1 < *((int *)((char *)answer + 8))) goto lab_4;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_4:
    62 |    ((int *)(*((char * *)answer)))[1ll] = *((int *)((char *)p + 4));
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (2 < *((int *)((char *)answer + 8))) goto lab_6;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_6:
    63 |    ((int *)(*((char * *)answer)))[2ll] = *((int *)((char *)p + 8));
    65 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       264            41             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   109 |  char * std::allocator<double>::~allocator()(char * this)
          {
            $$PARM.this224 = this;
    73 |    $$IRET129 = $$PARM.this224;
   109 |    rstr = this;
            return rstr;
          } /* function */ 


   109 |  char * std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > >::~allocator()(char * this)
          {
            $$PARM.this38B = this;
    73 |    $$IRET1D5 = $$PARM.this38B;
   109 |    rstr = this;
            return rstr;
          } /* function */ 


    73 |  char * __gnu_cxx::new_allocator<int>::~new_allocator()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


   109 |  char * std::allocator<Point<int> >::~allocator()(char * this)
          {
            $$PARM.this0 = this;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    rstr = this;
            return rstr;
          } /* function */ 


    47 |  int DistanceVoxel_PriorityQueue::get_parent(int)(_Vector_impl *this, int i)
    48 |  {
            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |    if (i > 0) goto lab_4;
            __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
            return;
          lab_4:
    50 |    if (i < (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll))) goto lab_7;
            __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
            return;
          lab_7:
    51 |    rstr = (i - 1) / 2;
            return rstr;
    52 |  } /* function */ 


    61 |  int DistanceVoxel_PriorityQueue::get_left_child(int)(_Vector_impl *this, int i)
    62 |  {
            DistanceVoxel_PriorityQueue::get_left_child(int)::guard___func__3 = 1;
    63 |    if (!(i >= 0)) goto lab_3;
    56 |    if (i * 2 + 1 < (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll))) goto lab_4;
          lab_3:
            __assert_fail("i >= 0 && has_left_child( i )","priority_queue.h",63u,&DistanceVoxel_PriorityQueue::get_left_child(int)::__func__)
            return;
          lab_4:
    64 |    rstr = i * 2 + 1;
            return rstr;
    65 |  } /* function */ 


    66 |  int DistanceVoxel_PriorityQueue::get_right_child(int)(_Vector_impl *this, int i)
    67 |  {
            DistanceVoxel_PriorityQueue::get_right_child(int)::guard___func__3 = 1;
    68 |    if (!(i >= 0)) goto lab_3;
    60 |    if (i * 2 + 2 < (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll))) goto lab_4;
          lab_3:
            __assert_fail("i >= 0 && has_right_child( i )","priority_queue.h",68u,&DistanceVoxel_PriorityQueue::get_right_child(int)::__func__)
            return;
          lab_4:
    69 |    rstr = i * 2 + 2;
            return rstr;
    70 |  } /* function */ 


   295 |  void std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<DistanceVoxel**, std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> > >, DistanceVoxel* const&)(char * this, aggr8 __position, char * *__x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    if (!(*((char * *)(this + 8)) != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!(*((char * *)(this + 8)) != NULL)) goto lab_6;
   105 |    *((char * *)(this + 8))->(DistanceVoxel *).rns1545. = ((char * *)((char *)*((char * *)(this + 8))  - 8ll))->(DistanceVoxel *).rns1546.;
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + 8ll);
   306 |    __x_copy = *__x;
   638 |    $$PARM.__first130 = __position._M_current@0;
            $$PARM.__last131 = ((char *)*((char * *)(this + 8))  - 16ll);
            $$PARM.__result132 = ((char *)*((char * *)(this + 8))  - 8ll);
   575 |    __builtin_memmove(((char *)$$PARM.__result132  - (($$PARM.__last131 - $$PARM.__first130) / 8ll) * 8ll),$$PARM.__first130,(unsigned long long) ((($$PARM.__last131 - $$PARM.__first130) / 8ll) * 8ll));
   577 |    $$IRET7A = ((char *)$$PARM.__result132  - (($$PARM.__last131 - $$PARM.__first130) / 8ll) * 8ll);
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_8;
          lab_3:
   319 |    $$PARM.__n134 = 1ull;
            $$PARM.__s135 = "vector::_M_insert_aux";
   538 |    if (!((unsigned long long) (2305843009213693951ll - (*((char * *)(this + 8)) - *((char * *)this)) / 8ll) < $$PARM.__n134)) goto lab_47;
  1137 |    std::__throw_length_error(char const*)($$PARM.__s135)
            return;
          lab_47:
  1139 |    __21630 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll);
   215 |    __21641 = ((unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll) < $$PARM.__n134 ? &$$PARM.__n134 : &__21630);
  1140 |    if (*__21641 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll) < (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll)) goto lab_49;
   538 |    if (!(*__21641 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll) > 2305843009213693951ull)) goto lab_50;
          lab_49:
            __21655 = 2305843009213693951ull;
            goto lab_51;
          lab_50:
            __21655 = *__21641 + (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 8ll);
          lab_51:
            $$IRET7B = __21655;
   319 |    __len = $$IRET7B;
   686 |    __21139._M_current@0 = *((char * *)this);
   426 |    __21061 = __21139;
   140 |    if (!(__len != 0ull)) goto lab_10;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__len > 2305843009213693951ull),0ll))) goto lab_12;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_12:
    89 |    __21152 = operator new(unsigned long)(__len * 8ull);
   107 |    __21354 = __21152;
            goto lab_11;
          lab_10:
            __21354 = NULL;
          lab_11:
   325 |    __es.__c4@3 = 1u;
    55 |    if (!(NULL != ((char *)__21354  + ((__position._M_current@0 - __21139._M_current@0) / 8ll) * 8ll))) goto lab_15;
   105 |    __21354[(__position._M_current@0 - __21139._M_current@0) / 8ll] = *__x;
          lab_15:
   336 |    __new_finish = NULL;
   264 |    $$RET1B7 = DistanceVoxel** std::copy<DistanceVoxel**, DistanceVoxel**>(DistanceVoxel**, DistanceVoxel**, DistanceVoxel**)(*((char * *)this),__position._M_current@0,__21354);
            goto __21349;
            goto __21350;
   342 |    __new_finish = ((char *)$$RET1B7  + 8ll);
   264 |    $$RET1B8 = DistanceVoxel** std::copy<DistanceVoxel**, DistanceVoxel**>(DistanceVoxel**, DistanceVoxel**, DistanceVoxel**)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET1B7  + 8ll));
            goto __21349;
            goto __21350;
   268 |    __new_finish = $$RET1B8;
   349 |    __es.__c4@3 = 0u;
            goto @21351;
   351 |  lab_36:
            /* GLAB  id_no=6300{__21349} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __21352 = __int_register_value(29u);
            __cxa_begin_catch((char *) __21352)
   352 |    if (__new_finish != NULL) goto lab_18;
   115 |    goto lab_20;
          lab_18:
   141 |    if (!(__21354 != __new_finish)) goto lab_23;
    92 |  lab_23:
   143 |  lab_20:
   145 |    if (!(__21354 != NULL)) goto lab_24;
    95 |    operator delete(void*)(__21354)
   110 |  lab_24:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @21351:
   141 |    if (!(*((char * *)this) != *((char * *)(this + 8)))) goto lab_28;
    92 |  lab_28:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_29;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_29:
   364 |    *((char * *)this) = __21354;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__21354  + (long long) (__len * 8ull));
   367 |  lab_8:
   368 |    return;
   351 |    /* GLAB  id_no=6306{__21350} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __21353 = __int_register_value(29u);
            _Unwind_Resume((char *) __21353)
            goto lab_36;
   368 |  } /* function */ 


   613 |  char * std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::~_Rb_tree()(_Rb_tree_node_base *this)
   614 |  {
            $$PARM.this3A6 = this;
            $$PARM.__x3A7 = ((char * *)((char *)this + 8))[8 / 8];
   968 |    if (!($$PARM.__x3A7 != NULL)) goto lab_1;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 10 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)($$PARM.this3A6,*((char * *)((char *)$$PARM.__x3A7 + 24)))
   509 |      __y = *((char * *)((char *)$$PARM.__x3A7 + 16));
    95 |      operator delete(void*)($$PARM.__x3A7)
   973 |      $$PARM.__x3A7 = __y;
   968 |    } while (__y != NULL);    /* ~2 */
          lab_1:
   614 |    $$PARM.this3BE = this;
   109 |    $$PARM.this3BC = $$PARM.this3BE;
    73 |    $$IRET1EF = $$PARM.this3BC;
   109 |    $$IRET1F0 = $$PARM.this3BE;
   614 |    $$IRET1F1 = $$PARM.this3BE;
            rstr = this;
            return rstr;
          } /* function */ 


   997 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> > const*, std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> > const*, DistanceVoxel* const&) const(char * this, char * __x, char * __y, char * *__k)
  1001 |  {
            if (!(__x != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
   505 |      __memset(&__21358,0,1ull);
   230 |      __21371 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1568. < *__k);
              if (__21371 != 0u) goto lab_4;
  1003 |      __y = __x;
   513 |      __x = *((char * *)(__x + 16));
              goto lab_6;
            lab_4:
   521 |      __x = *((char * *)(__x + 24));
            lab_6:
  1001 |    } while (__x != NULL);    /* ~1 */
          lab_3:
   243 |    __21357._M_node@0 = __y;
            rstr = __21357;
            return rstr;
  1007 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312          1001             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1001             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

  1381 |  void std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)(char * this, aggr8 __first, aggr8 __last)
   171 |  {
            __21385._M_node@0 = ((char * *)(this + 16))[8 / 8];
   629 |    __21381 = __21385;
   213 |    __21392 = (char) (__first._M_node@0 == &__21381->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1578.);
            if (!(__21392 != 0u)) goto lab_1;
   171 |    __21393._M_node@0 = (this + 8);
   640 |    __21383 = __21393;
   213 |    __21399 = (char) (__last._M_node@0 == &__21383->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1579.);
            if (!(__21399 != 0u)) goto lab_1;
   726 |    $$PARM.__x3A5 = ((char * *)(this + 8))[8 / 8];
   968 |    if (!(((char * *)(this + 8))[8 / 8] != NULL)) goto lab_13;
            do {   /* id=2 guarded */ /* ~14 */ 
              /* region = 15 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(this,*((char * *)((char *)$$PARM.__x3A5 + 24)))
   509 |      __y = *((char * *)((char *)$$PARM.__x3A5 + 16));
    95 |      operator delete(void*)($$PARM.__x3A5)
   973 |      $$PARM.__x3A5 = __y;
   968 |    } while (__y != NULL);    /* ~14 */
          lab_13:
   727 |    ((char * *)(this + 16))[8 / 8] = (this + 8);
   728 |    ((char * *)(this + 8))[8 / 8] = NULL;
   729 |    ((char * *)(this + 24))[8 / 8] = (this + 8);
   730 |    *((unsigned long long *)(this + 40)) = 0ull;
   731 |    goto lab_4;
          lab_1:
  1387 |    if (!(__first._M_node@0 != __last._M_node@0)) goto lab_7;
            do {   /* id=1 guarded */ /* ~5 */ 
              /* region = 16 */
   191 |      __tmp = __first;
   192 |      __first._M_node@0 = std::_Rb_tree_increment(std::_Rb_tree_node_base*)(__first._M_node@0);
  1344 |      __y = std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21423._M_node@0.off0,(this + 8));
    95 |      operator delete(void*)(__y)
  1349 |      *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) - 1ull;
   217 |    } while (__first._M_node@0 != __last._M_node@0);    /* ~5 */
          lab_7:
          lab_4:
  1389 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312           968             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1387             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1418 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::find(DistanceVoxel* const&)(_Rb_tree_node_base *this, char * *__k)
  1421 |  {
            $$PARM.__x119 = ((char * *)((char *)this + 8))[8 / 8];
            $$PARM.__y11A = (this + 8);
   985 |    if (!(((char * *)((char *)this + 8))[8 / 8] != NULL)) goto lab_5;
            do {   /* id=1 guarded */ /* ~6 */ 
              /* region = 15 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902 < *__k);
              if (__21720 != 0u) goto lab_7;
   987 |      $$PARM.__y11A = $$PARM.__x119;
   509 |      $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
              goto lab_8;
            lab_7:
   517 |      $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
            lab_8:
   985 |    } while ($$PARM.__x119 != NULL);    /* ~6 */
          lab_5:
   171 |    __21706._M_node@0 = $$PARM.__y11A;
            $$IRET73 = __21706;
  1421 |    __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.;
   171 |    __21438._M_node@0 = (this + 8);
   640 |    __21434 = __21438;
   213 |    __21444 = (char) (__j._M_node@0 == __21438._M_node@0);
            if (__21444 != 0u) goto lab_1;
   529 |    __21453 = __j._M_node@0;
            __memset(&__21445,0,1ull);
   230 |    __21458 = (char) (*__k < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.);
            if (!(__21458 != 0u)) goto lab_2;
          lab_1:
   171 |    __21459._M_node@0 = (this + 8);
   640 |    __21435 = __21459;
            __21463 = &__21435;
            goto lab_3;
          lab_2:
            __21463 = &__j;
          lab_3:
            rstr = *__21463;
            return rstr;
  1425 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312           985             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

  1047 |  aggr16 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::equal_range(DistanceVoxel* const&)(_Rb_tree_node_base *this, char * *__k)
  1051 |  {
            __y = (this + 8);
  1052 |    if (!(((char * *)((char *)this + 8))[8 / 8] != NULL)) goto lab_3;
  1050 |    __x = ((char * *)((char *)this + 8))[8 / 8];
  1052 |    do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 29 */
   505 |      __memset(&__21476,0,1ull);
   230 |      __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593. < *__k);
              if (!(__21489 != 0u)) goto lab_4;
   517 |      __x = *((char * *)(__x + 24));
              goto lab_6;
            lab_4:
   505 |      __memset(&__21493,0,1ull);
   230 |      __21506 = (char) (*__k < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.);
              if (!(__21506 != 0u)) goto lab_7;
  1057 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
  1066 |    lab_6:
  1052 |    } while (__x != NULL);    /* ~1 */
          lab_3:
   171 |    __21472._M_node@0 = __y;
            __21473._M_node@0 = __y;
            __21471.first@0 = __21472;
    84 |    __21471.second@8 = __21473;
            rstr = __21471;
            return rstr;
   509 |  lab_7:
   517 |    __xu.rnn170 = *((char * *)(__x + 24));
    84 |    $$PARM.__x11D = *((char * *)(__x + 16));
            $$PARM.__y11E = __x;
   985 |    if (!(*((char * *)(__x + 16)) != NULL)) goto lab_10;
            do {   /* id=2 guarded */ /* ~11 */ 
              /* region = 27 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906 < *__k);
              if (__21720 != 0u) goto lab_12;
   987 |      $$PARM.__y11E = $$PARM.__x11D;
   509 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
              goto lab_13;
            lab_12:
   517 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
            lab_13:
   985 |    } while ($$PARM.__x11D != NULL);    /* ~11 */
          lab_10:
   171 |    __21706._M_node@0 = $$PARM.__y11E;
            $$IRET74 = __21706;
    84 |    __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.;
            $$PARM.__x3AB = __xu.rnn170;
            $$PARM.__y3AC = __y;
  1017 |    if (!(__xu.rnn170 != NULL)) goto lab_15;
            do {   /* id=3 guarded */ /* ~16 */ 
              /* region = 28 */
   505 |      __memset(&__21730,0,1ull);
   230 |      __21743 = (char) (*__k < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907);
              if (!(__21743 != 0u)) goto lab_17;
  1019 |      $$PARM.__y3AC = $$PARM.__x3AB;
   509 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
              goto lab_18;
            lab_17:
   517 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
            lab_18:
  1017 |    } while ($$PARM.__x3AB != NULL);    /* ~16 */
          lab_15:
   171 |    __21729._M_node@0 = $$PARM.__y3AC;
            $$IRET1E4 = __21729;
    84 |    __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.;
            __21466.first@0 = __21467;
            __21466.second@8 = __21468;
            rstr = __21466;
            return rstr;
  1070 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312          1052             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1052             1    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312           985             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       312          1017             3    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1017             3    Loop was not SIMD vectorized because it contains 
                                          control flow.

   442 |  char * std::map<DistanceVoxel*, int, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::operator[](DistanceVoxel* const&)(char * this, char * *__k)
   745 |  {
            $$PARM.this114 = this;
            $$PARM.__x115 = ((char * *)(this + 8))[8 / 8];
            $$PARM.__y116 = (this + 8);
   985 |    if (!($$PARM.__x115 != NULL)) goto lab_4;
            do {   /* id=1 guarded */ /* ~5 */ 
              /* region = 13 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908 < *__k);
              if (__21720 != 0u) goto lab_6;
   987 |      $$PARM.__y116 = $$PARM.__x115;
   509 |      $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
              goto lab_7;
            lab_6:
   517 |      $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
            lab_7:
   985 |    } while ($$PARM.__x115 != NULL);    /* ~5 */
          lab_4:
   171 |    __21706._M_node@0 = $$PARM.__y116;
            $$IRET72 = __21706;
   745 |    __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.;
   701 |    __i = __21536;
   171 |    __21545._M_node@0 = (this + 8);
   325 |    __21528 = __21545;
   213 |    __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
            if (__21553 != 0u) goto lab_2;
   635 |    __21529 = *((aggr1 *)this);
   230 |    if (!(*__k < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_1;
          lab_2:
   450 |    __21532.first@0 = *__k;
    84 |    __21532.second@8 = 0;
   246 |    __21562._M_node@0 = __i._M_node@0.off0;
   107 |    __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)(this,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.;
   540 |    __i = __21563;
          lab_1:
   451 |    rstr = (__i._M_node@0 + 40);
            return rstr;
   452 |  } /* function */ 


   126 |  void DistanceVoxel_PriorityQueue::swap(int, int)(_Vector_impl *this, int i, int j)
   129 |  {
            temp = *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) j * 8ull)));
   130 |    *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) j * 8ull))) = *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) i * 8ull)));
   131 |    *((char * *)((char *)(*((char * *)this)) + (long long) ((unsigned long long) i * 8ull))) = temp;
            $$PARM.this126 = (this + 24);
            $$PARM.__k127 = ((char *)*((char * *)this)  + (long long) ((unsigned long long) i * 8ull));
   745 |    $$PARM.this114 = $$PARM.this126;
            $$PARM.__x115 = ((char * *)($$PARM.this126 + 8))[8 / 8];
            $$PARM.__y116 = ($$PARM.this126 + 8);
   985 |    if (!($$PARM.__x115 != NULL)) goto lab_12;
            do {   /* id=2 guarded */ /* ~13 */ 
              /* region = 25 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910 < *$$PARM.__k127);
              if (__21720 != 0u) goto lab_14;
   987 |      $$PARM.__y116 = $$PARM.__x115;
   509 |      $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
              goto lab_15;
            lab_14:
   517 |      $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
            lab_15:
   985 |    } while ($$PARM.__x115 != NULL);    /* ~13 */
          lab_12:
   171 |    __21706._M_node@0 = $$PARM.__y116;
            $$IRET72 = __21706;
   745 |    __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910;
   701 |    __i = __21536;
   171 |    __21545._M_node@0 = ($$PARM.this126 + 8);
   325 |    __21528 = __21545;
   213 |    __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
            if (__21553 != 0u) goto lab_17;
   635 |    __21529 = *((aggr1 *)$$PARM.this126);
   230 |    if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_18;
          lab_17:
   450 |    __21532.first@0 = *$$PARM.__k127;
    84 |    __21532.second@8 = 0;
   246 |    __21562._M_node@0 = __i._M_node@0.off0;
   107 |    __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this126,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910;
   540 |    __i = __21563;
          lab_18:
   451 |    $$IRET78 = (__i._M_node@0 + 40);
   131 |    $$RET1B9 = $$IRET78;
   133 |    *$$RET1B9 = i;
            $$PARM.this124 = (this + 24);
            $$PARM.__k125 = ((char *)*((char * *)this)  + (long long) ((unsigned long long) j * 8ull));
   745 |    $$PARM.this114 = $$PARM.this124;
            $$PARM.__x115 = ((char * *)($$PARM.this124 + 8))[8 / 8];
            $$PARM.__y116 = ($$PARM.this124 + 8);
   985 |    if (!($$PARM.__x115 != NULL)) goto lab_4;
            do {   /* id=1 guarded */ /* ~5 */ 
              /* region = 26 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911 < *$$PARM.__k125);
              if (__21720 != 0u) goto lab_6;
   987 |      $$PARM.__y116 = $$PARM.__x115;
   509 |      $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
              goto lab_7;
            lab_6:
   517 |      $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
            lab_7:
   985 |    } while ($$PARM.__x115 != NULL);    /* ~5 */
          lab_4:
   171 |    __21706._M_node@0 = $$PARM.__y116;
            $$IRET72 = __21706;
   745 |    __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911;
   701 |    __i = __21536;
   171 |    __21545._M_node@0 = ($$PARM.this124 + 8);
   325 |    __21528 = __21545;
   213 |    __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
            if (__21553 != 0u) goto lab_9;
   635 |    __21529 = *((aggr1 *)$$PARM.this124);
   230 |    if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_10;
          lab_9:
   450 |    __21532.first@0 = *$$PARM.__k125;
    84 |    __21532.second@8 = 0;
   246 |    __21562._M_node@0 = __i._M_node@0.off0;
   107 |    __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this124,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911;
   540 |    __i = __21563;
          lab_10:
   451 |    $$IRET77 = (__i._M_node@0 + 40);
   133 |    $$RET1BA = $$IRET77;
   134 |    *$$RET1BA = j;
   135 |    return;
          } /* function */ 


  1101 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(grid<2,MMSP::vector<double> > *this, vector<double> *p, int i, int *min, int *max)
  1103 |  {
            size = 0ull;
  1104 |    if (!(i == 1)) goto lab_1;
  1105 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)p + 8))[((long long) (((int *)((char *)this + 80))[(long long) i] * (x - ((int *)((char *)this + 64))[(long long) i])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1107 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 2)) goto lab_7;
  1108 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll),i + 1,min,max);
  1109 |      size = size + $$RET1BC;
  1108 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1110 |  lab_7:
          lab_6:
  1111 |    rstr = size;
            return rstr;
  1112 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1105             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1105             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1108             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1108             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1136 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(grid<2,MMSP::vector<double> > *this, char * buffer, char * p, int i, int *min, int *max)
  1138 |  {
            size = 0ull;
  1139 |    if (!(i == 1)) goto lab_1;
  1140 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
              $$PARM.this327 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1142 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 2)) goto lab_7;
  1143 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll),i + 1,min,max);
  1144 |      size = size + $$RET1BE;
  1143 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1145 |  lab_7:
          lab_6:
  1146 |    rstr = size;
            return rstr;
  1147 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1140             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1140             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1143             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1143             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1159 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(grid<2,MMSP::vector<double> > *this, char * buffer, vector<double> *p, int i, int *min, int *max)
  1161 |  {
            size = 0ull;
  1162 |    if (!(i == 1)) goto lab_1;
  1163 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 18 */
              $$PARM.this414 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll);
   109 |      if (!(((char * *)p)[((long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll) / 8] != NULL)) goto lab_13;
   110 |      operator delete[](void*)(((char * *)p)[((long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll) / 8])
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_13:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1165 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 2)) goto lab_7;
  1166 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 19 */
              $$RET1C0 = MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll),i + 1,min,max);
  1167 |      size = size + $$RET1C0;
  1166 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1168 |  lab_7:
          lab_6:
  1169 |    rstr = size;
            return rstr;
  1170 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1163             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1163             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1163             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275          1166             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1166             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1101 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(grid<1,MMSP::vector<double> > *this, vector<double> *p, int i, int *min, int *max)
  1103 |  {
            size = 0ull;
  1104 |    if (!(i == 0)) goto lab_1;
  1105 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)p + 8))[((long long) (((int *)((char *)this + 52))[(long long) i] * (x - ((int *)((char *)this + 44))[(long long) i])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1107 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 1)) goto lab_7;
  1108 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1C2 = MMSP::grid<1, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll),i + 1,min,max);
  1109 |      size = size + $$RET1C2;
  1108 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1110 |  lab_7:
          lab_6:
  1111 |    rstr = size;
            return rstr;
  1112 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1105             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1105             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1108             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1108             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1136 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(grid<1,MMSP::vector<double> > *this, char * buffer, char * p, int i, int *min, int *max)
  1138 |  {
            size = 0ull;
  1139 |    if (!(i == 0)) goto lab_1;
  1140 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
              $$PARM.this327 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1142 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 1)) goto lab_7;
  1143 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1C4 = MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll),i + 1,min,max);
  1144 |      size = size + $$RET1C4;
  1143 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1145 |  lab_7:
          lab_6:
  1146 |    rstr = size;
            return rstr;
  1147 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1140             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1140             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1143             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1143             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1159 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(grid<1,MMSP::vector<double> > *this, char * buffer, vector<double> *p, int i, int *min, int *max)
  1161 |  {
            size = 0ull;
  1162 |    if (!(i == 0)) goto lab_1;
  1163 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 18 */
              $$PARM.this414 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll);
   109 |      if (!(((char * *)p)[((long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll) / 8] != NULL)) goto lab_13;
   110 |      operator delete[](void*)(((char * *)p)[((long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll) / 8])
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_13:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1165 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 1)) goto lab_7;
  1166 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 19 */
              $$RET1C6 = MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll),i + 1,min,max);
  1167 |      size = size + $$RET1C6;
  1166 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1168 |  lab_7:
          lab_6:
  1169 |    rstr = size;
            return rstr;
  1170 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1163             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1163             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1163             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275          1166             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1166             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1101 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(grid<3,MMSP::vector<double> > *this, vector<double> *p, int i, int *min, int *max)
  1103 |  {
            size = 0ull;
  1104 |    if (!(i == 2)) goto lab_1;
  1105 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)p + 8))[((long long) (((int *)((char *)this + 108))[(long long) i] * (x - ((int *)((char *)this + 84))[(long long) i])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1107 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 3)) goto lab_7;
  1108 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1C8 = MMSP::grid<3, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll),i + 1,min,max);
  1109 |      size = size + $$RET1C8;
  1108 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1110 |  lab_7:
          lab_6:
  1111 |    rstr = size;
            return rstr;
  1112 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1105             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1105             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1108             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1108             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1136 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(grid<3,MMSP::vector<double> > *this, char * buffer, char * p, int i, int *min, int *max)
  1138 |  {
            size = 0ull;
  1139 |    if (!(i == 2)) goto lab_1;
  1140 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
              $$PARM.this327 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1142 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 3)) goto lab_7;
  1143 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1CA = MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll),i + 1,min,max);
  1144 |      size = size + $$RET1CA;
  1143 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1145 |  lab_7:
          lab_6:
  1146 |    rstr = size;
            return rstr;
  1147 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1140             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1140             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1143             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1143             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

  1159 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(grid<3,MMSP::vector<double> > *this, char * buffer, vector<double> *p, int i, int *min, int *max)
  1161 |  {
            size = 0ull;
  1162 |    if (!(i == 2)) goto lab_1;
  1163 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 18 */
              $$PARM.this414 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll);
   109 |      if (!(((char * *)p)[((long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll) / 8] != NULL)) goto lab_13;
   110 |      operator delete[](void*)(((char * *)p)[((long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll) / 8])
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_13:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1165 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 3)) goto lab_7;
  1166 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 19 */
              $$RET1CC = MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll),i + 1,min,max);
  1167 |      size = size + $$RET1CC;
  1166 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1168 |  lab_7:
          lab_6:
  1169 |    rstr = size;
            return rstr;
  1170 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       275          1163             2    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1163             2    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       275          1163             2    Loop was not SIMD vectorized because it contains 
                                          control flow.
       275          1166             1    Loop cannot be normalized and no loop optimizations 
                                          applied.
       275          1166             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

          char * std::_Vector_base<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_Vector_impl::~_Vector_impl()(char * this)
   109 |  {
            $$PARM.this3B7 = this;
    73 |    $$IRET1EA = $$PARM.this3B7;
   109 |    $$IRET1EB = this;
            rstr = this;
            return rstr;
          } /* function */ 


   168 |  void void MMSP::resize<DistanceVoxel>(DistanceVoxel&, int)(char * value, int n)
          {
   170 |    return;
          } /* function */ 


   109 |  char * std::allocator<DistanceVoxel*>::~allocator()(char * this)
          {
            $$PARM.this3B7 = this;
    73 |    $$IRET1EA = $$PARM.this3B7;
   109 |    rstr = this;
            return rstr;
          } /* function */ 


    73 |  char * __gnu_cxx::new_allocator<std::vector<Point<int>, std::allocator<Point<int> > > >::~new_allocator()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


    73 |  char * __gnu_cxx::new_allocator<Point<int> >::~new_allocator()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


    73 |  char * __gnu_cxx::new_allocator<double>::~new_allocator()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


  1134 |  unsigned long long std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_M_check_len(unsigned long, char const*) const(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> > *this, unsigned long long __n, char * __s)
   538 |  {
            if (!((unsigned long long) (2305843009213693951ll - (*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll) < __n)) goto lab_1;
  1137 |    std::__throw_length_error(char const*)(__s)
            return;
          lab_1:
  1139 |    __21630 = (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll);
   215 |    __21641 = ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll) < __n ? &__n : &__21630);
  1140 |    if (*__21641 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll) < (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll)) goto lab_6;
   538 |    if (!(*__21641 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll) > 2305843009213693951ull)) goto lab_7;
          lab_6:
            __21655 = 2305843009213693951ull;
            goto lab_8;
          lab_7:
            __21655 = *__21641 + (unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll);
          lab_8:
            rstr = __21655;
            return rstr;
  1141 |  } /* function */ 


   381 |  void std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(char * this, char * __p)
    95 |  {
            operator delete(void*)(__p)
   385 |    return;
          } /* function */ 


   964 |  void std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(char * this, _Rb_tree_node_base *__x)
   968 |  {
            if (!(__x != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(this,*((char * *)((char *)__x + 24)))
   509 |      __y = *((char * *)((char *)__x + 16));
    95 |      operator delete(void*)(__x)
   973 |      __x = __y;
   968 |    } while (__y != NULL);    /* ~1 */
          lab_3:
   975 |    return;
          } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312           968             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.

   981 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*, std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*, DistanceVoxel* const&)(char * this, char * __x, char * __y, char * *__k)
   985 |  {
            if (!(__x != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1700. < *__k);
              if (__21720 != 0u) goto lab_4;
   987 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
              goto lab_6;
            lab_4:
   517 |      __x = *((char * *)(__x + 24));
            lab_6:
   985 |    } while (__x != NULL);    /* ~1 */
          lab_3:
   171 |    __21706._M_node@0 = __y;
            rstr = __21706;
            return rstr;
   991 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312           985             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312           985             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

  1013 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_upper_bound(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*, std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*, DistanceVoxel* const&)(char * this, char * __x, char * __y, char * *__k)
  1017 |  {
            if (!(__x != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
   505 |      __memset(&__21730,0,1ull);
   230 |      __21743 = (char) (*__k < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1703.);
              if (!(__21743 != 0u)) goto lab_4;
  1019 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
              goto lab_6;
            lab_4:
   517 |      __x = *((char * *)(__x + 24));
            lab_6:
  1017 |    } while (__x != NULL);    /* ~1 */
          lab_3:
   171 |    __21729._M_node@0 = __y;
            rstr = __21729;
            return rstr;
  1023 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312          1017             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1017             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

  1206 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)(char * this, aggr8 __position, char * *__v)
  1210 |  {
            if (!(__position._M_node@0 == (this + 8))) goto lab_1;
  1212 |    if (!(*((unsigned long long *)(this + 40)) > 0ull)) goto lab_3;
   529 |    __21779 = ((char * *)(this + 24))[8 / 8];
            __memset(&__21771,0,1ull);
            __memset(&__21752,0,1ull);
   230 |    __21787 = (char) (((char * *)((char *)__21779  + 32))->(DistanceVoxel *).rns1708. < *__v);
            if (!(__21787 != 0u)) goto lab_3;
  1215 |    $$PARM.this104 = this;
            $$PARM.__x105 = NULL;
            $$PARM.__p106 = ((char * *)(this + 24))[8 / 8];
            $$PARM.__v107 = __v;
   877 |    if ($$PARM.__x105 != NULL) goto lab_56;
            if ($$PARM.__p106 == ($$PARM.this104 + 8)) goto lab_56;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v107 < ((char * *)((char *)$$PARM.__p106  + 32))->(DistanceVoxel *).rns1751.$$1959);
            if (__21930 != 0u) goto lab_56;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this104;
            $$PARM.__xEF = $$PARM.__v107;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_57;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_57:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_59;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1959 = *$$PARM.__xEF;
          lab_59:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p106,($$PARM.this104 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this104 + 40)) = *((unsigned long long *)((char *)$$PARM.this104 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6E = __21912;
            goto lab_60;
   230 |  lab_56:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this104;
            $$PARM.__xED = $$PARM.__v107;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_61;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_61:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_63;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1959 = *$$PARM.__xED;
          lab_63:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p106,($$PARM.this104 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this104 + 40)) = *((unsigned long long *)((char *)$$PARM.this104 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6E = __21912;
   888 |  lab_60:
  1215 |    __21753 = &$$IRET6E->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1713.;
            rstr = __21753;
            return rstr;
          lab_3:
  1217 |    __21754 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique(std::pair<DistanceVoxel* const, int> const&)(this,__v)->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,bool>).rns1714.;
            rstr = __21754.first@0;
            return rstr;
  1218 |  lab_1:
   230 |    __memset(&__21755,0,1ull);
   529 |    __memset(&__21791,0,1ull);
   230 |    __21805 = (char) (*__v < ((char * *)((char *)__position._M_node@0  + 32))->(DistanceVoxel *).rns1715.);
            if (!(__21805 != 0u)) goto lab_8;
  1223 |    __before = __position;
  1224 |    if (!(__position._M_node@0 == ((char * *)(this + 16))[8 / 8])) goto lab_10;
  1225 |    $$PARM.this100 = this;
            $$PARM.__x101 = ((char * *)(this + 16))[8 / 8];
            $$PARM.__p102 = ((char * *)(this + 16))[8 / 8];
            $$PARM.__v103 = __v;
   877 |    if ($$PARM.__x101 != NULL) goto lab_48;
            if ($$PARM.__p102 == ($$PARM.this100 + 8)) goto lab_48;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v103 < ((char * *)((char *)$$PARM.__p102  + 32))->(DistanceVoxel *).rns1751.$$1955);
            if (__21930 != 0u) goto lab_48;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this100;
            $$PARM.__xEF = $$PARM.__v103;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_49;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_49:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_51;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1955 = *$$PARM.__xEF;
          lab_51:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p102,($$PARM.this100 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this100 + 40)) = *((unsigned long long *)((char *)$$PARM.this100 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6D = __21912;
            goto lab_52;
   230 |  lab_48:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this100;
            $$PARM.__xED = $$PARM.__v103;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_53;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_53:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_55;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1955 = *$$PARM.__xED;
          lab_55:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p102,($$PARM.this100 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this100 + 40)) = *((unsigned long long *)((char *)$$PARM.this100 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6D = __21912;
   888 |  lab_52:
  1225 |    __21756 = &$$IRET6D->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1717.;
            rstr = __21756;
            return rstr;
          lab_10:
   274 |    __before._M_node@0 = std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)(__position._M_node@0);
   276 |    __21819 = __before._M_node@0;
   529 |    __memset(&__21811,0,1ull);
            __memset(&__21757,0,1ull);
   230 |    __21827 = (char) (((char * *)((char *)__21819  + 32))->(DistanceVoxel *).rns1719. < *__v);
            if (!(__21827 != 0u)) goto lab_13;
   521 |    if (!(*((char * *)((char *)__before._M_node@0 + 24)) == NULL)) goto lab_15;
  1230 |    $$PARM.this108 = this;
            $$PARM.__x109 = NULL;
            $$PARM.__p10A = __before._M_node@0;
            $$PARM.__v10B = __v;
   877 |    if ($$PARM.__x109 != NULL) goto lab_64;
            if ($$PARM.__p10A == ($$PARM.this108 + 8)) goto lab_64;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v10B < ((char * *)((char *)$$PARM.__p10A  + 32))->(DistanceVoxel *).rns1751.$$1954);
            if (__21930 != 0u) goto lab_64;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this108;
            $$PARM.__xEF = $$PARM.__v10B;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_65;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_65:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_67;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1954 = *$$PARM.__xEF;
          lab_67:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p10A,($$PARM.this108 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this108 + 40)) = *((unsigned long long *)((char *)$$PARM.this108 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6F = __21912;
            goto lab_68;
   230 |  lab_64:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this108;
            $$PARM.__xED = $$PARM.__v10B;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_69;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_69:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_71;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1954 = *$$PARM.__xED;
          lab_71:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p10A,($$PARM.this108 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this108 + 40)) = *((unsigned long long *)((char *)$$PARM.this108 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6F = __21912;
   888 |  lab_68:
  1230 |    __21758 = &$$IRET6F->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1721.;
            rstr = __21758;
            return rstr;
          lab_15:
  1232 |    $$PARM.thisF4 = this;
            $$PARM.__xF5 = __position._M_node@0;
            $$PARM.__pF6 = __position._M_node@0;
            $$PARM.__vF7 = __v;
   877 |    if ($$PARM.__xF5 != NULL) goto lab_32;
            if ($$PARM.__pF6 == ($$PARM.thisF4 + 8)) goto lab_32;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__vF7 < ((char * *)((char *)$$PARM.__pF6  + 32))->(DistanceVoxel *).rns1751.$$1953);
            if (__21930 != 0u) goto lab_32;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.thisF4;
            $$PARM.__xEF = $$PARM.__vF7;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_33;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_33:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_35;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1953 = *$$PARM.__xEF;
          lab_35:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__pF6,($$PARM.thisF4 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.thisF4 + 40)) = *((unsigned long long *)((char *)$$PARM.thisF4 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6A = __21912;
            goto lab_36;
   230 |  lab_32:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.thisF4;
            $$PARM.__xED = $$PARM.__vF7;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_37;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_37:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_39;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1953 = *$$PARM.__xED;
          lab_39:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__pF6,($$PARM.thisF4 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.thisF4 + 40)) = *((unsigned long long *)((char *)$$PARM.thisF4 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6A = __21912;
   888 |  lab_36:
  1232 |    __21759 = &$$IRET6A->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1723.;
            rstr = __21759;
            return rstr;
  1234 |  lab_13:
  1236 |    __21760 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique(std::pair<DistanceVoxel* const, int> const&)(this,__v)->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,bool>).rns1724.;
            rstr = __21760.first@0;
            return rstr;
  1237 |  lab_8:
   529 |    __memset(&__21831,0,1ull);
            __memset(&__21761,0,1ull);
   230 |    __21847 = (char) (((char * *)((char *)__position._M_node@0  + 32))->(DistanceVoxel *).rns1715. < *__v);
            if (!(__21847 != 0u)) goto lab_20;
  1242 |    __after = __position;
  1243 |    if (!(__position._M_node@0 == ((char * *)(this + 24))[8 / 8])) goto lab_22;
  1244 |    $$PARM.this10C = this;
            $$PARM.__x10D = NULL;
            $$PARM.__p10E = ((char * *)(this + 24))[8 / 8];
            $$PARM.__v10F = __v;
   877 |    if ($$PARM.__x10D != NULL) goto lab_72;
            if ($$PARM.__p10E == ($$PARM.this10C + 8)) goto lab_72;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v10F < ((char * *)((char *)$$PARM.__p10E  + 32))->(DistanceVoxel *).rns1751.$$1948);
            if (__21930 != 0u) goto lab_72;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this10C;
            $$PARM.__xEF = $$PARM.__v10F;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_73;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_73:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_75;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1948 = *$$PARM.__xEF;
          lab_75:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p10E,($$PARM.this10C + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this10C + 40)) = *((unsigned long long *)((char *)$$PARM.this10C + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET70 = __21912;
            goto lab_76;
   230 |  lab_72:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this10C;
            $$PARM.__xED = $$PARM.__v10F;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_77;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_77:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_79;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1948 = *$$PARM.__xED;
          lab_79:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p10E,($$PARM.this10C + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this10C + 40)) = *((unsigned long long *)((char *)$$PARM.this10C + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET70 = __21912;
   888 |  lab_76:
  1244 |    __21762 = &$$IRET70->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1726.;
            rstr = __21762;
            return rstr;
          lab_22:
   230 |    __memset(&__21763,0,1ull);
   259 |    __after._M_node@0 = std::_Rb_tree_increment(std::_Rb_tree_node_base const*)(__after._M_node@0);
   261 |    __21862 = __after._M_node@0;
   529 |    __memset(&__21854,0,1ull);
   230 |    __21868 = (char) (*__v < ((char * *)((char *)__21862  + 32))->(DistanceVoxel *).rns1728.);
            if (!(__21868 != 0u)) goto lab_25;
   521 |    if (!(*((char * *)(__position._M_node@0 + 24)) == NULL)) goto lab_27;
  1249 |    $$PARM.this110 = this;
            $$PARM.__x111 = NULL;
            $$PARM.__p112 = __position._M_node@0;
            $$PARM.__v113 = __v;
   877 |    if ($$PARM.__x111 != NULL) goto lab_80;
            if ($$PARM.__p112 == ($$PARM.this110 + 8)) goto lab_80;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v113 < ((char * *)((char *)$$PARM.__p112  + 32))->(DistanceVoxel *).rns1751.$$1947);
            if (__21930 != 0u) goto lab_80;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this110;
            $$PARM.__xEF = $$PARM.__v113;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_81;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_81:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_83;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1947 = *$$PARM.__xEF;
          lab_83:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p112,($$PARM.this110 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this110 + 40)) = *((unsigned long long *)((char *)$$PARM.this110 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET71 = __21912;
            goto lab_84;
   230 |  lab_80:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this110;
            $$PARM.__xED = $$PARM.__v113;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_85;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_85:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_87;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1947 = *$$PARM.__xED;
          lab_87:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p112,($$PARM.this110 + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.this110 + 40)) = *((unsigned long long *)((char *)$$PARM.this110 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET71 = __21912;
   888 |  lab_84:
  1249 |    __21764 = &$$IRET71->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1729.;
            rstr = __21764;
            return rstr;
          lab_27:
  1251 |    $$PARM.thisFC = this;
            $$PARM.__xFD = __after._M_node@0;
            $$PARM.__pFE = __after._M_node@0;
            $$PARM.__vFF = __v;
   877 |    if ($$PARM.__xFD != NULL) goto lab_40;
            if ($$PARM.__pFE == ($$PARM.thisFC + 8)) goto lab_40;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__vFF < ((char * *)((char *)$$PARM.__pFE  + 32))->(DistanceVoxel *).rns1751.$$1946);
            if (__21930 != 0u) goto lab_40;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.thisFC;
            $$PARM.__xEF = $$PARM.__vFF;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_41;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_41:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_43;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1946 = *$$PARM.__xEF;
          lab_43:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__pFE,($$PARM.thisFC + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.thisFC + 40)) = *((unsigned long long *)((char *)$$PARM.thisFC + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6C = __21912;
            goto lab_44;
   230 |  lab_40:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.thisFC;
            $$PARM.__xED = $$PARM.__vFF;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_45;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_45:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_47;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1946 = *$$PARM.__xED;
          lab_47:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__pFE,($$PARM.thisFC + 8))
   886 |    *((unsigned long long *)((char *)$$PARM.thisFC + 40)) = *((unsigned long long *)((char *)$$PARM.thisFC + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6C = __21912;
   888 |  lab_44:
  1251 |    __21765 = &$$IRET6C->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1731.;
            rstr = __21765;
            return rstr;
  1252 |  lab_25:
  1254 |    __21766 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique(std::pair<DistanceVoxel* const, int> const&)(this,__v)->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,bool>).rns1732.;
            rstr = __21766.first@0;
            return rstr;
  1255 |  lab_20:
   171 |    __21767._M_node@0 = __position._M_node@0;
            rstr = __21767;
            return rstr;
  1260 |  } /* function */ 


          char * std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_Rb_tree_impl<std::less<DistanceVoxel*>, false>::~_Rb_tree_impl()(char * this)
   109 |  {
            $$PARM.this3BC = this;
    73 |    $$IRET1EF = $$PARM.this3BC;
   109 |    $$IRET1F0 = this;
            rstr = this;
            return rstr;
          } /* function */ 


   582 |  char * DistanceVoxel** std::__copy_move_backward_a<false, DistanceVoxel**, DistanceVoxel**>(DistanceVoxel**, DistanceVoxel**, DistanceVoxel**)(char * __first, char * __last, char * __result)
   588 |  {
   575 |    __builtin_memmove(((char *)__result  - ((__last - __first) / 8ll) * 8ll),__first,(unsigned long long) (((__last - __first) / 8ll) * 8ll));
   577 |    rstr = ((char *)__result  - ((__last - __first) / 8ll) * 8ll);
            return rstr;
   596 |  } /* function */ 


   458 |  char * DistanceVoxel** std::copy<DistanceVoxel**, DistanceVoxel**>(DistanceVoxel**, DistanceVoxel**, DistanceVoxel**)(char * __first, char * __last, char * __result)
   392 |  {
   378 |    __builtin_memmove(__result,__first,(unsigned long long) (((__last - __first) / 8ll) * 8ll));
   437 |    rstr = ((char *)__result  + ((__last - __first) / 8ll) * 8ll);
            return rstr;
   469 |  } /* function */ 


    78 |  int int MMSP::buffer_size<double>(MMSP::vector<double> const&)(vector<double> *v)
    97 |  {
            $$IRET1B3 = (int) ((unsigned long long) *((int *)((char *)v + 8)) * 8ull + 4ull);
            $$RET1CD = $$IRET1B3;
    79 |    rstr = $$RET1CD;
            return rstr;
    80 |  } /* function */ 


    81 |  int int MMSP::to_buffer<double>(MMSP::vector<double> const&, char*)(char * v, char * buffer)
          {
            $$PARM.this327 = v;
            $$PARM.buffer328 = buffer;
   102 |    __builtin_memcpy($$PARM.buffer328,($$PARM.this327 + 8),4ull);
   103 |    __builtin_memcpy(((char *)$$PARM.buffer328  + 4ll),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
   104 |    $$IRET1AB = (int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull);
            $$RET1CE = $$IRET1AB;
    82 |    rstr = $$RET1CE;
            return rstr;
    83 |  } /* function */ 


    84 |  int int MMSP::from_buffer<double>(MMSP::vector<double>&, char const*)(char * v, char * buffer)
          {
            $$PARM.this414 = v;
            $$PARM.buffer415 = buffer;
   109 |    if (!(*((char * *)$$PARM.this414) != NULL)) goto lab_1;
   110 |    operator delete[](void*)(*((char * *)$$PARM.this414))
   111 |    *((char * *)$$PARM.this414) = NULL;
   112 |  lab_1:
   113 |    __builtin_memcpy(($$PARM.this414 + 8),$$PARM.buffer415,4ull);
            $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |    *((char * *)$$PARM.this414) = $$RET1D0;
   115 |    __builtin_memcpy($$RET1D0,((char *)$$PARM.buffer415  + 4ll),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   116 |    $$IRET21B = (int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull);
            $$RET1CF = $$IRET21B;
    85 |    rstr = $$RET1CF;
            return rstr;
    86 |  } /* function */ 


   109 |  char * std::allocator<std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> > >::~allocator()(char * this)
          {
            $$PARM.this3BC = this;
    73 |    $$IRET1EF = $$PARM.this3BC;
   109 |    rstr = this;
            return rstr;
          } /* function */ 


    73 |  char * __gnu_cxx::new_allocator<DistanceVoxel*>::~new_allocator()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


   874 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<DistanceVoxel* const, int> const&)(_Rb_tree_impl<std::less<DistanceVoxel *>,0> *this, char * __x, char * *__p, char * *__v)
   877 |  {
            if (__x != NULL) goto lab_2;
            if (__p == (this + 8)) goto lab_2;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*__v < ((char * *)((char *)__p  + 32))->(DistanceVoxel *).rns1751.);
            if (__21930 != 0u) goto lab_2;
            __21958 = 0u;
   881 |    $$PARM.thisEE = this;
            $$PARM.__xEF = __v;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_9;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_9:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_11;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971 = *$$PARM.__xEF;
          lab_11:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,__p,(this + 8))
   886 |    *((unsigned long long *)((char *)this + 40)) = *((unsigned long long *)((char *)this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            rstr = __21912;
            return rstr;
   230 |  lab_2:
            __21958 = 1u;
   881 |    $$PARM.thisEC = this;
            $$PARM.__xED = __v;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_6;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_6:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_8;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967 = *$$PARM.__xED;
          lab_8:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,__p,(this + 8))
   886 |    *((unsigned long long *)((char *)this + 40)) = *((unsigned long long *)((char *)this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            rstr = __21912;
            return rstr;
   888 |  } /* function */ 


  1161 |  aggr16 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique(std::pair<DistanceVoxel* const, int> const&)(char * this, char * __v)
  1164 |  {
            __x = ((char * *)(this + 8))[8 / 8];
  1165 |    __y = (this + 8);
  1166 |    __comp = 1u;
  1167 |    if (!(((char * *)(this + 8))[8 / 8] != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 43 */
  1169 |      __y = __x;
   230 |      __memset(&__21959,0,1ull);
   505 |      __memset(&__21978,0,1ull);
   230 |      __comp = (char) (*((char * *)__v) < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1759.);
  1171 |      if (!(__comp != 0u)) goto lab_5;
   509 |      __22032 = *((char * *)(__x + 16));
              goto lab_6;
            lab_5:
   517 |      __22032 = *((char * *)(__x + 24));
            lab_6:
              __x = __22032;
  1167 |    } while (__22032 != NULL);    /* ~1 */
          lab_3:
   171 |    __j._M_node@0 = __y;
  1174 |    if (!(__comp != 0u)) goto lab_7;
   171 |    __22001._M_node@0 = ((char * *)(this + 16))[8 / 8];
   629 |    __21962 = __22001;
   213 |    __22008 = (char) (__y == &__21962->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1773.);
            if (!(__22008 != 0u)) goto lab_9;
   877 |    if (__x != NULL) goto lab_22;
            if (__y == (this + 8)) goto lab_22;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*((char * *)__v) < ((char * *)((char *)__y  + 32))->(DistanceVoxel *).rns1751.$$1977);
            if (__21930 != 0u) goto lab_22;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_23;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_23:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_25;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1977 = *((aggr16 *)__v);
          lab_25:
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(0u,__23645,__y,(this + 8))
   886 |    *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __23645;
            $$IRET6B = __21912;
            goto lab_26;
   230 |  lab_22:
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_27;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_27:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_29;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1977 = *((aggr16 *)__v);
          lab_29:
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(1u,__23645,__y,(this + 8))
   886 |    *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __23645;
            $$IRET6B = __21912;
   888 |  lab_26:
    84 |    __21965 = &$$IRET6B->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1765.;
  1177 |    __21964.first@0 = __21965;
    84 |    __21964.second@8 = 1u;
            rstr = __21964;
            return rstr;
          lab_9:
   199 |    __j._M_node@0 = std::_Rb_tree_decrement(std::_Rb_tree_node_base*)(__y);
  1180 |  lab_7:
   529 |    __memset(&__22012,0,1ull);
            __memset(&__21967,0,1ull);
   230 |    __22028 = (char) (((char * *)((char *)__j._M_node@0  + 32))->(DistanceVoxel *).rns1767. < *((char * *)__v));
            if (!(__22028 != 0u)) goto lab_12;
   877 |    if (__x != NULL) goto lab_14;
            if (__y == (this + 8)) goto lab_14;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*((char * *)__v) < ((char * *)((char *)__y  + 32))->(DistanceVoxel *).rns1751.$$1975);
            if (__21930 != 0u) goto lab_14;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_15;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_15:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_17;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1975 = *((aggr16 *)__v);
          lab_17:
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(0u,__23645,__y,(this + 8))
   886 |    *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __23645;
            $$IRET69 = __21912;
            goto lab_18;
   230 |  lab_14:
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_19;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_19:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_21;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1975 = *((aggr16 *)__v);
          lab_21:
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(1u,__23645,__y,(this + 8))
   886 |    *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __23645;
            $$IRET69 = __21912;
   888 |  lab_18:
    84 |    __21970 = &$$IRET69->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1768.;
  1182 |    __21969.first@0 = __21970;
    84 |    __21969.second@8 = 1u;
            rstr = __21969;
            return rstr;
          lab_12:
  1183 |    __21972.first@0 = __j;
    84 |    __21972.second@8 = 0u;
            rstr = __21972;
            return rstr;
  1184 |  } /* function */ 



Source        Source        Loop Id       Action / Information                                      
File          Line                                                                                  
----------    ----------    ----------    ----------------------------------------------------------
       312          1167             1    Loop was not SIMD vectorized because it contains 
                                          unsupported loop structure.
       312          1167             1    Loop was not SIMD vectorized because it contains 
                                          control flow.

    95 |  int MMSP::vector<double>::buffer_size() const(vector<double> *this)
    97 |  {
            rstr = (int) ((unsigned long long) *((int *)((char *)this + 8)) * 8ull + 4ull);
            return rstr;
    98 |  } /* function */ 


   100 |  int MMSP::vector<double>::to_buffer(char*) const(vector<double> *this, char * buffer)
   102 |  {
            __builtin_memcpy(buffer,(this + 8),4ull);
   103 |    __builtin_memcpy(((char *)buffer  + 4ll),*((char * *)this),(unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   104 |    rstr = (int) ((unsigned long long) *((int *)((char *)this + 8)) * 8ull + 4ull);
            return rstr;
   105 |  } /* function */ 


   107 |  int MMSP::vector<double>::from_buffer(char const*)(vector<double> *this, char * buffer)
   109 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   110 |    operator delete[](void*)(*((char * *)this))
   111 |    *((char * *)this) = NULL;
   112 |  lab_1:
   113 |    __builtin_memcpy((this + 8),buffer,4ull);
            $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   114 |    *((char * *)this) = $$RET1D0;
   115 |    __builtin_memcpy($$RET1D0,((char *)buffer  + 4ll),(unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   116 |    rstr = (int) ((unsigned long long) *((int *)((char *)this + 8)) * 8ull + 4ull);
            return rstr;
   117 |  } /* function */ 


    73 |  char * __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> > >::~new_allocator()(char * this)
          {
            rstr = this;
            return rstr;
          } /* function */ 


   367 |  char * std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_create_node(std::pair<DistanceVoxel* const, int> const&)(char * this, pair<DistanceVoxel * const,int> *__x)
   363 |  {
            if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_1;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_1:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_4;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790. = *__x;
          lab_4:
   377 |    rstr = __23645;
            return rstr;
   378 |  } /* function */ 


          void __sinit65535()()
    72 |  {
            std::ios_base::Init::Init()(&__ioinit);
            __cxa_atexit(&__srterm__0(),NULL,&__dso_handle);
     5 |    __init__0()()
     6 |    __init__1()()
            return;
          } /* function */ 


          void __srterm__0()()
    72 |  {
            std::ios_base::Init::~Init()(&__ioinit);
            return;
          } /* function */ 


          void __srterm__1()()
     5 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&PROGRAM);
            return;
          } /* function */ 


          void __srterm__2()()
     6 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&MESSAGE);
            return;
          } /* function */ 


   181 |  void MMSP::name(bool const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"bool",&__48);
   183 |    return;
          } /* function */ 


   184 |  void MMSP::name(char const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"char",&__54);
   186 |    return;
          } /* function */ 


   187 |  void MMSP::name(unsigned char const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"unsigned char",&__60);
   189 |    return;
          } /* function */ 


   190 |  void MMSP::name(int const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"int",&__66);
   192 |    return;
          } /* function */ 


   193 |  void MMSP::name(unsigned int const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"unsigned int",&__72);
   195 |    return;
          } /* function */ 


   196 |  void MMSP::name(long const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"long",&__78);
   198 |    return;
          } /* function */ 


   199 |  void MMSP::name(unsigned long const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"unsigned long",&__84);
   201 |    return;
          } /* function */ 


   202 |  void MMSP::name(short const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"short",&__90);
   204 |    return;
          } /* function */ 


   205 |  void MMSP::name(unsigned short const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"unsigned short",&__96);
   207 |    return;
          } /* function */ 


   208 |  void MMSP::name(float const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"float",&__102);
   210 |    return;
          } /* function */ 


   211 |  void MMSP::name(double const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"double",&__108);
   213 |    return;
          } /* function */ 


   214 |  void MMSP::name(__float128 const&)(char * __classReturn, char * value)
   101 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(__classReturn,"long double",&__114);
   216 |    return;
          } /* function */ 


    14 |  void MMSP::Init(int, char**)(int argc, char * argv)
          {
    19 |    return;
          } /* function */ 


    22 |  void MMSP::Finalize()()
          {
    27 |    return;
          } /* function */ 


    30 |  void MMSP::Abort(int)(int err)
    35 |  {
            exit(err)
            return;
    36 |  } /* function */ 


    42 |  void MMSP::check_boundary(int&, int, int, int, int)(int *x, int x0, int x1, int b0, int b1)
    44 |  {
            if (!(*x < x0)) goto lab_1;
    45 |    if (b0 == 1) goto lab_4;
            if (!(b0 == 4)) goto lab_3;
          lab_4:
            *x = x0;
            goto lab_12;
          lab_3:
    47 |    if (!(b0 == 2)) goto lab_7;
            *x = *x + (x1 - x0);
            goto lab_12;
          lab_7:
    49 |    if (!(b0 == 0)) goto lab_12;
            *x = x0 * 2 - *x;
    50 |    goto lab_12;
          lab_1:
            if (!(*x >= x1)) goto lab_13;
    51 |    if (b1 == 1) goto lab_16;
            if (!(b1 == 4)) goto lab_15;
          lab_16:
            *x = x1 - 1;
            goto lab_18;
          lab_15:
    53 |    if (!(b1 == 2)) goto lab_19;
            *x = *x + (x0 - x1);
            goto lab_21;
          lab_19:
    55 |    if (!(b1 == 0)) goto lab_22;
            *x = (x1 * 2 - *x) - 2;
          lab_22:
          lab_21:
          lab_18:
    56 |  lab_13:
          lab_12:
    57 |    return;
          } /* function */ 


   136 |  void MMSP::print_progress(int, int)(int step, int steps)
   137 |  {
            guard_iterations6 = 1;
   156 |    if (!(step == 0)) goto lab_2;
   157 |    iterations = iterations + 1;
   158 |    tstart = (unsigned long long) time(NULL);
   160 |    time(&rawtime);
   161 |    timeinfo = localtime(&rawtime);
   162 |    timestring = asctime(timeinfo);
            $$RET0 = __builtin_strlen(timestring);
   163 |    timestring[(long long) ($$RET0 + 18446744073709551615ull)] = 0u;
   548 |    $$RET1 = (long long) __builtin_strlen("No. ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"No. ",$$RET1);
   513 |    __260 = std::ostream::operator<<(int)(&std::cout,iterations);
   548 |    $$RET2 = (long long) __builtin_strlen(":.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__260,":.",$$RET2);
   507 |    if (timestring != NULL) goto lab_22;
   148 |    if (!(__260 == NULL)) goto lab_25;
            __311 = NULL;
            goto lab_26;
          lab_25:
   164 |    __311 = ((char *)__260  + ((long long *)(*((char * *)__260)))[-24ll / 8]);
            goto lab_28;
          lab_26:
   148 |    __312 = NULL;
            goto lab_29;
          lab_28:
   164 |    __312 = ((char *)__260  + ((long long *)(*((char * *)__260)))[-24ll / 8]);
          lab_29:
   507 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(__311,*((int *)((char *)__312 + 32)) | 1)
   548 |    goto lab_30;
          lab_22:
            $$RET3 = (long long) __builtin_strlen(timestring);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__260,timestring,$$RET3);
          lab_30:
   548 |    $$RET4 = (long long) __builtin_strlen(" [");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__260," [",$$RET4);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::flush<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns32.(__260);
   165 |    goto lab_40;
          lab_2:
            if (!(steps - step == 1)) goto lab_41;
            $$RET5 = (unsigned long long) time(NULL);
   167 |    printf("...] %2luh:%2lum:%2lus",($$RET5 - tstart) / 3600ull,(($$RET5 - tstart) % 3600ull) / 60ull,($$RET5 - tstart) % 60ull);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns34.(&std::cout);
   169 |    goto lab_43;
          lab_41:
            if (!(0 == (step * 20) % steps)) goto lab_44;
   548 |    $$RET6 = (long long) __builtin_strlen("... ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"... ",$$RET6);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::flush<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns35.(&std::cout);
   114 |  lab_44:
          lab_43:
          lab_40:
   171 |    return;
          } /* function */ 


          void __init__0()()
          {
            std::allocator<char>::allocator()(&__320);
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&PROGRAM,"gg",&__320);
            __cxa_atexit(&__srterm__1(),NULL,&__dso_handle);
            return;
          } /* function */ 


          void __init__1()()
          {
            std::allocator<char>::allocator()(&__324);
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&MESSAGE,"Grain growth hybrid code",&__324);
            __cxa_atexit(&__srterm__2(),NULL,&__dso_handle);
            return;
          } /* function */ 


    52 |  double radius(int, int, int, int, int, int)(int x0, int x1, int y0, int y1, int z0, int z1)
    54 |  {
            rstr = __sqrt@18((__pow@6((double) (x0 - x1), 2.0000000000000000E+000) + __pow@6((double) (y0 - y1), 2.0000000000000000E+000)) + __pow@6((double) (z0 - z1), 2.0000000000000000E+000));
            return rstr;
    55 |  } /* function */ 


   631 |  int MMSP::seeds_to_buffer(std::vector<Point<int>, std::allocator<Point<int> > > const&, int*&)(_Vector_base<Point<int>,std::allocator<Point<int> > > *vp, char * *q)
   635 |  {
            if (!(*q == NULL)) goto lab_1;
   548 |    $$RET7 = (long long) __builtin_strlen("/nError in seeds_to_buffer: send_buffer not initialized.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"/nError in seeds_to_buffer: send_buffer not initialized.",$$RET7);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns47.(&std::cerr);
   637 |    exit(1)
            return;
   638 |  lab_1:
   633 |    size = 0;
   640 |    if (!(0ull < (unsigned long long) ((*((char * *)((char *)vp + 8)) - *((char * *)vp)) / 12ll))) goto lab_14;
            $$CIV0 = 0ll;
            do {   /* id=1 guarded */ /* ~12 */ 
              /* region = 10 */
              /* bump-normalized */
   642 |      ((int *)*q)[($$CIV0 * 12ll) / 4] = *((int *)((char *)(*((char * *)vp)) + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV0)) * 12ull)));
   644 |      *((int *)((char *)*q + $$CIV0 * 12ll + 4ll)) = *((int *)((char *)(*((char * *)vp)) + 4 + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV0)) * 12ull)));
   646 |      *((int *)((char *)*q + $$CIV0 * 12ll + 8ll)) = *((int *)((char *)(*((char * *)vp)) + 8 + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV0)) * 12ull)));
   640 |      $$CIV0 = $$CIV0 + 1ll;
            } while ((unsigned long long) $$CIV0 < (unsigned long long) ((*((char * *)((char *)vp + 8)) - *((char * *)vp)) / 12ll));    /* ~12 */
            size = (int) ((unsigned long long) ((*((char * *)((char *)vp + 8)) - *((char * *)vp)) / 12ll)) * 3;
          lab_14:
   649 |    rstr = size;
            return rstr;
   650 |  } /* function */ 


   653 |  void MMSP::seeds_from_buffer(std::vector<Point<int>, std::allocator<Point<int> > >&, int*&, int const&)(_Vector_base<Point<int>,std::allocator<Point<int> > > *vp, char * *q, int *size)
   655 |  {
            if (!(0ll < (long long) *size * 4ll - 8ll)) goto lab_3;
            p = ((char *)*q  + 8ll);
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 13 */
   657 |      y = ((int *)((char *)p  - 4ll))->(int).rns59.;
   658 |      z = *p;
   659 |      __368.x@0 = ((int *)((char *)p  - 8ll))->(int).rns61.;
    11 |      __368.y@4 = y;
              __368.z@8 = z;
   735 |      $$csx0 = *((char * *)((char *)vp + 8));
              if (!($$csx0 != *((char * *)((char *)vp + 16)))) goto lab_4;
   101 |      if (!($$csx0 != NULL)) goto lab_13;
    12 |      *((int *)$$csx0) = &__368->(Point<int>).x@0.rns94.$$47;
              *((int *)($$csx0 + 4)) = &__368->(Point<int>).y@4.rns96.$$47;
              *((int *)($$csx0 + 8)) = &__368->(Point<int>).z@8.rns98.$$47;
   105 |    lab_13:
   738 |      *((char * *)((char *)vp + 8)) = ((char *)$$csx0  + 12ll);
   739 |      goto lab_6;
            lab_4:
   686 |      __392._M_current@0 = *((char * *)((char *)vp + 8));
   444 |      std::vector<Point<int>, std::allocator<Point<int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int> const&)(vp,__392,&__368)
            lab_6:
   655 |      p = ((char *)p  + 12ll);
            } while (p < ((char *)*q  + (long long) *size * 4ll));    /* ~1 */
          lab_3:
   661 |    return;
          } /* function */ 


    22 |  void MMSP::generate(int, char const*)(int dim, char * filename)
    23 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    27 |    number_of_fields = 318946;
    81 |    phases._M_start@0 = NULL;
            phases._M_finish@8 = NULL;
            phases._M_end_of_storage@10 = NULL;
   208 |    __es.__c4@3 = 1u;
    35 |    if (!1) goto lab_3;
            i = 0;
            do {   /* id=3 guarded */ /* ~1 */ 
              /* region = 56 */
              $$RET8 = rand();
   734 |      __398 = $$RET8 % 2;
   735 |      if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_4;
   169 |      if (!(phases._M_finish@8 != NULL)) goto lab_7;
   105 |      *phases._M_finish@8 = $$RET8 % 2;
            lab_7:
   738 |      phases._M_finish@8 = ((char *)phases._M_finish@8  + 4ll);
   739 |      goto lab_9;
            lab_4:
   686 |      __492._M_current@0 = phases._M_finish@8;
   444 |      std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)(&phases,__492,&__398)
            lab_9:
    35 |      i = i + 1;
            } while (i < number_of_fields);    /* ~1 */
          lab_3:
    39 |    $$VAMEMBERC = &grid;
            $$VAMEMBERD = 1;
            $$VAMEMBERE = 0;
            $$VAMEMBERF = 1001;
            $$VAMEMBER10 = 0;
            $$VAMEMBER11 = 1001;
    48 |    *((int *)((char *)$$VAMEMBERC + 16)) = $$VAMEMBERD;
            $$RET89 = (unsigned long long) __builtinParameterAddress(&$$VAMEMBERD);
    53 |    if (!1) goto lab_74;
    52 |    list = (char *) ($$RET89 + 11ull & 18446744073709551608ull);
    53 |    $$CIV3 = 0ll;
            do {   /* id=5 guarded */ /* ~75 */ 
              /* region = 55 */
              /* bump-normalized */
    54 |      ((int *)((char *)$$VAMEMBERC + 24))[$$CIV3] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)$$VAMEMBERC + 32))[$$CIV3] = (list + -4ll / 4)[0ll];
    53 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < 2ull);    /* ~75 */
          lab_74:
    61 |    *((int *)((char *)$$VAMEMBERC + 20)) = 0;
    68 |    MMSP::grid<2, unsigned long>::setup(bool)($$VAMEMBERC,0u)
    39 |    __es.__c4@3 = 2u;
    41 |    __400 = 16;
            unsigned long MMSP::tessellate<2, unsigned long>(MMSP::grid<2, unsigned long>&, int const&, int const&)(&grid,&number_of_fields,&__400);
    43 |    if (!(dim == 2)) goto lab_10;
    44 |    $$VAMEMBER0 = &initGrid;
            $$VAMEMBER1 = 3;
            $$VAMEMBER2 = 0;
            $$VAMEMBER3 = 1001;
            $$VAMEMBER4 = 0;
            $$VAMEMBER5 = 1001;
    48 |    *((int *)((char *)$$VAMEMBER0 + 16)) = $$VAMEMBER1;
            $$RET8A = (unsigned long long) __builtinParameterAddress(&$$VAMEMBER1);
    53 |    if (!1) goto lab_63;
    52 |    list = (char *) ($$RET8A + 11ull & 18446744073709551608ull);
    53 |    $$CIV4 = 0ll;
            do {   /* id=4 guarded */ /* ~64 */ 
              /* region = 54 */
              /* bump-normalized */
    54 |      ((int *)((char *)$$VAMEMBER0 + 24))[$$CIV4] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)$$VAMEMBER0 + 32))[$$CIV4] = (list + -4ll / 4)[0ll];
    53 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < 2ull);    /* ~64 */
          lab_63:
    61 |    *((int *)((char *)$$VAMEMBER0 + 20)) = 0;
    68 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)($$VAMEMBER0,0u)
    44 |    __es.__c4@3 = 3u;
    45 |    if (!(0 < dim)) goto lab_14;
            $$CIV1 = 0ll;
            do {   /* id=2 guarded */ /* ~12 */ 
              /* region = 52 */
              /* bump-normalized */
   333 |      (((double *)&initGrid) + 104ll / 8)[$$CIV1] =  2.5000000000000001E-002;
    45 |      $$CIV1 = $$CIV1 + 1ll;
            } while ((unsigned long long) $$CIV1 < (unsigned long long) ((long long) dim));    /* ~12 */
          lab_14:
    48 |    if (!(0 < initGrid.nodes@8)) goto lab_17;
            i = 0;
   611 |    $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30 = MMSP::vector<double>::operator[](int)::guard___func__3;
    48 |    do {   /* id=1 guarded */ /* ~15 */ 
              /* region = 53 */
    29 |      $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30 = 1;
    30 |      $$csx1 = *(((int *)((char *)&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65 + 8)) + (long long) i * 16ll / 4);
              if (2 < $$csx1) goto lab_45;
              MMSP::vector<double>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_45:
    49 |      $$csx2 = *(((char * *)(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns175.$$65)) + (long long) i * 16ll / 8);
              ((double *)$$csx2)[2ll] = (double) ((unsigned long long *)(&grid->(grid<2,unsigned long>).data@0.rns160.$$61))[(long long) i];
   611 |      if (!(*((int *)((char *)phases._M_start@0 + (long long) (((unsigned long long *)(&grid->(grid<2,unsigned long>).data@0.rns160.$$61))[(long long) i] * 4ull))) == 1)) goto lab_18;
    29 |      $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30 = 1;
    30 |      if (1 < $$csx1) goto lab_49;
              MMSP::vector<double>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_49:
    51 |      ((double *)$$csx2)[1ll] =  1.0000000000000000E+000;
    29 |      $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30 = 1;
    30 |      if (0 < $$csx1) goto lab_51;
              MMSP::vector<double>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_51:
    52 |      ((double *)$$csx2)[0ll] =  6.9999999999999995E-001;
    53 |      goto lab_20;
            lab_18:
    29 |      $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30 = 1;
    30 |      if (1 < $$csx1) goto lab_47;
              MMSP::vector<double>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_47:
    55 |      ((double *)$$csx2)[1ll] =  0.0000000000000000E+000;
    29 |      $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30 = 1;
    30 |      if (0 < $$csx1) goto lab_43;
              MMSP::vector<double>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
              return;
            lab_43:
    56 |      ((double *)$$csx2)[0ll] =  2.9999999999999998E-001;
    57 |    lab_20:
    48 |      i = i + 1;
            } while (i < initGrid.nodes@8);    /* ~15 */
            MMSP::vector<double>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIdEixEiE15guard___func__30;
          lab_17:
   567 |    MMSP::grid<2, MMSP::vector<double> >::output(char const*) const(&initGrid,filename)
    60 |    __es.__c4@3 = 2u;
   331 |    if (!(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns173.$$58 != NULL)) goto lab_60;
   332 |    __cxa_vec_delete3(&initGrid->(grid<2,MMSP::vector<double> >).data@0.rns173.$$58,16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |    &initGrid->(grid<2,MMSP::vector<double> >).data@0.rns173.$$58 = NULL;
   334 |  lab_60:
    60 |    goto lab_21;
          lab_10:
   548 |    $$RET14 = (long long) __builtin_strlen("Grain Growth code is only implemented for 2D.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"Grain Growth code is only implemented for 2D.",$$RET14);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns88.(&std::cerr);
    35 |    exit(-1)
            return;
    63 |  lab_21:
    64 |    __es.__c4@3 = 1u;
   331 |    if (!(&grid->(grid<2,unsigned long>).data@0.rns158.$$54 != NULL)) goto lab_72;
   332 |    operator delete[](void*)(&grid->(grid<2,unsigned long>).data@0.rns158.$$54)
   333 |    &grid->(grid<2,unsigned long>).data@0.rns158.$$54 = NULL;
   334 |  lab_72:
    64 |    __es.__c4@3 = 0u;
   145 |    if (!(phases._M_start@0 != NULL)) goto lab_66;
    95 |    operator delete(void*)(phases._M_start@0)
   110 |  lab_66:
    64 |    return;
          } /* function */ 


    51 |  int main(int argc, char * *argv)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    52 |    MMSP::Init(int, char**)(argc,argv)
    55 |    if (!(argc < 2)) goto lab_1;
  2503 |    __6287 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET15 = (long long) __builtin_strlen(": bad argument list.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6287,": bad argument list.  Use/n/n",$$RET15);
   548 |    $$RET16 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET16);
  2503 |    __6312 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET17 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6312," --help/n/n",$$RET17);
   548 |    $$RET18 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET18);
    59 |    MMSP::Abort(int)(-1)
    60 |  lab_1:
    64 |    $$RET19 = time(NULL);
    68 |    srand((unsigned int) $$RET19)
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__5852,argv[1ll],&__5854);
            __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__5855,"--help",&__5857);
            __es.__c4@3 = 2u;
  2241 |    if (!(*(((unsigned long long *)&__5852->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8) == *(((unsigned long long *)&__5855->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8))) goto lab_41;
   259 |    __6350 = __builtin_memcmp(&__5852->(_Alloc_hider)._M_p@0,&__5855->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__5852->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
  2255 |    if (!(__6350 != 0)) goto lab_42;
          lab_41:
            __9992 = 0u;
            goto lab_43;
          lab_42:
            __9992 = 1u;
          lab_43:
  2243 |    __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__5855);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__5852);
            if (!(__9992 != 0u)) goto lab_39;
  2503 |    __6411 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET1A = (long long) __builtin_strlen(": ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6411,": ",$$RET1A);
  2503 |    __6428 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6411,&MESSAGE->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&MESSAGE->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET1B = (long long) __builtin_strlen("/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6428,"/n/n",$$RET1B);
   548 |    $$RET1C = (long long) __builtin_strlen("Valid command lines have the form:/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"Valid command lines have the form:/n/n",$$RET1C);
   548 |    $$RET1D = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET1D);
  2503 |    __6461 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET1E = (long long) __builtin_strlen(" ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6461," ",$$RET1E);
   548 |    $$RET1F = (long long) __builtin_strlen("[--help] [--example dimension [outfile]] [infile [outfile] steps [increment]]/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"[--help] [--example dimension [outfile]] [infile [outfile] steps [increment]]/n/n",$$RET1F);
   548 |    $$RET20 = (long long) __builtin_strlen("A few examples of using the command line follow./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"A few examples of using the command line follow./n/n",$$RET20);
   548 |    $$RET21 = (long long) __builtin_strlen("The command/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The command/n/n",$$RET21);
   548 |    $$RET22 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET22);
  2503 |    __6510 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET23 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6510," --help/n/n",$$RET23);
   548 |    $$RET24 = (long long) __builtin_strlen("generates this help message and exits.  ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"generates this help message and exits.  ",$$RET24);
   548 |    $$RET25 = (long long) __builtin_strlen("The "--example" option can be used to gen-/nerate a relevant test grid, e.g./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The "--example" option can be used to gen-/nerate a relevant test grid, e.g./n/n",$$RET25);
   548 |    $$RET26 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET26);
  2503 |    __6551 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET27 = (long long) __builtin_strlen(" --example 3/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6551," --example 3/n/n",$$RET27);
   548 |    $$RET28 = (long long) __builtin_strlen("generates an example test problem on a grid of dimension 3 and writes this to the /n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"generates an example test problem on a grid of dimension 3 and writes this to the /n",$$RET28);
   548 |    $$RET29 = (long long) __builtin_strlen("file named "example", while/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"file named "example", while/n/n",$$RET29);
   548 |    $$RET2A = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET2A);
  2503 |    __6592 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET2B = (long long) __builtin_strlen(" --example 2 start/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6592," --example 2 start/n/n",$$RET2B);
   548 |    $$RET2C = (long long) __builtin_strlen("generates an example test problem on a grid of dimension 2 and writes this to the /n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"generates an example test problem on a grid of dimension 2 and writes this to the /n",$$RET2C);
   548 |    $$RET2D = (long long) __builtin_strlen("file named "start"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"file named "start"./n/n",$$RET2D);
   548 |    $$RET2E = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET2E);
  2503 |    __6633 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET2F = (long long) __builtin_strlen(" start 1000/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6633," start 1000/n/n",$$RET2F);
   548 |    $$RET30 = (long long) __builtin_strlen("reads the grid contained within "start" and runs a simulation for 1000 time steps./n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"reads the grid contained within "start" and runs a simulation for 1000 time steps./n",$$RET30);
   548 |    $$RET31 = (long long) __builtin_strlen("The final grid is written to a file named "start.1000"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The final grid is written to a file named "start.1000"./n/n",$$RET31);
   548 |    $$RET32 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET32);
  2503 |    __6674 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET33 = (long long) __builtin_strlen(" start final 1000/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6674," start final 1000/n/n",$$RET33);
   548 |    $$RET34 = (long long) __builtin_strlen("reads the grid contained within "start" and runs a simulation for 1000 time steps./n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"reads the grid contained within "start" and runs a simulation for 1000 time steps./n",$$RET34);
   548 |    $$RET35 = (long long) __builtin_strlen("The final grid is written to a file named "final.1000"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The final grid is written to a file named "final.1000"./n/n",$$RET35);
   548 |    $$RET36 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET36);
  2503 |    __6715 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET37 = (long long) __builtin_strlen(" start 1000 100/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6715," start 1000 100/n/n",$$RET37);
   548 |    $$RET38 = (long long) __builtin_strlen("reads the grid contained within "start" and runs a simulation for 1000 time steps./n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"reads the grid contained within "start" and runs a simulation for 1000 time steps./n",$$RET38);
   548 |    $$RET39 = (long long) __builtin_strlen("The grid is then written to a file every 100 time steps.  ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The grid is then written to a file every 100 time steps.  ",$$RET39);
   548 |    $$RET3A = (long long) __builtin_strlen("The resulting files are /nnamed "start.0100", "start.0200", ... "start.1000"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The resulting files are /nnamed "start.0100", "start.0200", ... "start.1000"./n/n",$$RET3A);
   548 |    $$RET3B = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET3B);
  2503 |    __6764 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET3C = (long long) __builtin_strlen(" start final 1000 100/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6764," start final 1000 100/n/n",$$RET3C);
   548 |    $$RET3D = (long long) __builtin_strlen("reads the grid contained within "start" and runs a simulation for 1000 time steps./n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"reads the grid contained within "start" and runs a simulation for 1000 time steps./n",$$RET3D);
   548 |    $$RET3E = (long long) __builtin_strlen("The grid is then written to a file every 100 time steps.  ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The grid is then written to a file every 100 time steps.  ",$$RET3E);
   548 |    $$RET3F = (long long) __builtin_strlen("The resulting files are /nnamed "final.0100", "final.0200", ... "final.1000"./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"The resulting files are /nnamed "final.0100", "final.0200", ... "final.1000"./n/n",$$RET3F);
   101 |    exit(0)
            return;
   102 |  lab_39:
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6115,argv[1ll],&__6117);
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6118,"--example",&__6120);
            __es.__c4@3 = 4u;
  2241 |    if (!(*(((unsigned long long *)&__6115->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8) == *(((unsigned long long *)&__6118->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8))) goto lab_390;
   259 |    __6818 = __builtin_memcmp(&__6115->(_Alloc_hider)._M_p@0,&__6118->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__6115->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
  2255 |    if (!(__6818 != 0)) goto lab_391;
          lab_390:
            __10069 = 0u;
            goto lab_392;
          lab_391:
            __10069 = 1u;
          lab_392:
  2243 |    __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6118);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6115);
            if (!(__10069 != 0u)) goto lab_388;
   107 |    if (argc < 3) goto lab_395;
            if (!(argc > 4)) goto lab_394;
          lab_395:
  2503 |    __6879 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET40 = (long long) __builtin_strlen(": bad argument list.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6879,": bad argument list.  Use/n/n",$$RET40);
   548 |    $$RET41 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET41);
  2503 |    __6904 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET42 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6904," --help/n/n",$$RET42);
   548 |    $$RET43 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET43);
   111 |    MMSP::Abort(int)(-1)
   112 |  lab_394:
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6123,argv[2ll],&__6125);
            __es.__c4@3 = 5u;
            $$RET44 = __builtin_strlen("0123456789");
  1913 |    __6926 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6123,"0123456789",0ull,$$RET44);
  1914 |    __6269 = (char) (__6926 != 18446744073709551615ull);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6123);
            if (!(__6269 != 0u)) goto lab_433;
  2503 |    __6959 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET45 = (long long) __builtin_strlen(": example grid must have integral dimension.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6959,": example grid must have integral dimension.  Use/n/n",$$RET45);
   548 |    $$RET46 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET46);
  2503 |    __6984 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET47 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__6984," --help/n/n",$$RET47);
   548 |    $$RET48 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET48);
   119 |    MMSP::Abort(int)(-1)
   120 |  lab_433:
   286 |    __7001 = (int) strtol(argv[2ll],NULL,10);
   260 |    outfile._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 6u;
   126 |    if (!(argc < 4)) goto lab_471;
   519 |    $$RET49 = __builtin_strlen("example");
   975 |    std::string::assign(char const*, unsigned long)(&outfile,"example",$$RET49);
   519 |    goto lab_473;
          lab_471:
            __7031 = argv[3ll];
            $$RET4A = __builtin_strlen(argv[3ll]);
   975 |    std::string::assign(char const*, unsigned long)(&outfile,__7031,$$RET4A);
   519 |  lab_473:
   129 |    filename = operator new[](unsigned long)(*(((unsigned long long *)outfile._M_p@0) + -1ll * 24ll / 8) + 1ull);
   130 |    i = 0u;
            if (!(0ull < *(((unsigned long long *)outfile._M_p@0) + -1ll * 24ll / 8))) goto lab_476;
            do {   /* id=14 guarded */ /* ~474 */ 
              /* region = 142 */
   184 |      if (*(((int *)(outfile._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_477;
   302 |      std::string::_M_leak_hard()(&outfile)
            lab_477:
   748 |      filename[(long long) i] = ((char *)outfile._M_p@0)[(long long) ((unsigned long long) i)];
   130 |      i = i + 1u;
            } while ((unsigned long long) i < *(((unsigned long long *)outfile._M_p@0) + -1ll * 24ll / 8));    /* ~474 */
          lab_476:
   132 |    filename[(long long) *(((unsigned long long *)outfile._M_p@0) + -1ll * 24ll / 8)] = 0u;
   135 |    MMSP::generate(int, char const*)(__7001,filename)
   137 |    operator delete[](void*)(filename)
   138 |    __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&outfile);
            goto lab_479;
          lab_388:
   143 |    if (argc < 3) goto lab_481;
            if (!(argc > 5)) goto lab_480;
          lab_481:
  2503 |    __7086 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET4B = (long long) __builtin_strlen(": bad argument list.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7086,": bad argument list.  Use/n/n",$$RET4B);
   548 |    $$RET4C = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET4C);
  2503 |    __7111 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET4D = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7111," --help/n/n",$$RET4D);
   548 |    $$RET4E = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET4E);
   147 |    MMSP::Abort(int)(-1)
   148 |  lab_480:
   260 |    outfile._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 7u;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6141,argv[2ll],&__6143);
            __es.__c4@3 = 8u;
            $$RET4F = __builtin_strlen("0123456789");
  1913 |    __7151 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6141,"0123456789",0ull,$$RET4F);
  1914 |    __6270 = (char) (__7151 == 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6141);
            if (!(__6270 != 0u)) goto lab_519;
   519 |    __7177 = argv[1ll];
            $$RET50 = __builtin_strlen(argv[1ll]);
   975 |    std::string::assign(char const*, unsigned long)(&outfile,__7177,$$RET50);
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6144,argv[2ll],&__6146);
            __es.__c4@3 = 9u;
            $$RET51 = __builtin_strlen("0123456789");
  1913 |    __7188 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6144,"0123456789",0ull,$$RET51);
  1914 |    __6271 = (char) (__7188 != 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6144);
            if (!(__6271 != 0u)) goto lab_521;
  2503 |    __7221 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET52 = (long long) __builtin_strlen(": number of time steps must have integral value.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7221,": number of time steps must have integral value.  Use/n/n",$$RET52);
   548 |    $$RET53 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET53);
  2503 |    __7246 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET54 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7246," --help/n/n",$$RET54);
   548 |    $$RET55 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET55);
   163 |    MMSP::Abort(int)(-1)
   164 |  lab_521:
   286 |    __7263 = (int) strtol(argv[2ll],NULL,10);
   285 |    steps = __7263;
   167 |    increment = __7263;
   169 |    if (!(argc > 3)) goto lab_637;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6160,argv[3ll],&__6162);
            __es.__c4@3 = 10u;
            $$RET56 = __builtin_strlen("0123456789");
  1913 |    __7272 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6160,"0123456789",0ull,$$RET56);
  1914 |    __6272 = (char) (__7272 != 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6160);
            if (!(__6272 != 0u)) goto lab_561;
  2503 |    __7305 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET57 = (long long) __builtin_strlen(": output increment must have integral value.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7305,": output increment must have integral value.  Use/n/n",$$RET57);
   548 |    $$RET58 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET58);
  2503 |    __7330 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET59 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7330," --help/n/n",$$RET59);
   548 |    $$RET5A = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET5A);
   175 |    MMSP::Abort(int)(-1)
   176 |  lab_561:
   286 |    __7347 = (int) strtol(argv[3ll],NULL,10);
   285 |    increment = __7347;
   181 |    if (!(__7347 > __7263)) goto lab_637;
  2503 |    __7359 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET5B = (long long) __builtin_strlen(": output increment must be smaller than number of time steps.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7359,": output increment must be smaller than number of time steps.  Use/n/n",$$RET5B);
   548 |    $$RET5C = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET5C);
  2503 |    __7384 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET5D = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7384," --help/n/n",$$RET5D);
   548 |    $$RET5E = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET5E);
   185 |    MMSP::Abort(int)(-1)
   188 |    goto lab_637;
          lab_519:
   519 |    __7402 = argv[2ll];
            $$RET5F = __builtin_strlen(argv[2ll]);
   975 |    std::string::assign(char const*, unsigned long)(&outfile,__7402,$$RET5F);
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6176,argv[3ll],&__6178);
            __es.__c4@3 = 11u;
            $$RET60 = __builtin_strlen("0123456789");
  1913 |    __7413 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6176,"0123456789",0ull,$$RET60);
  1914 |    __6273 = (char) (__7413 != 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6176);
            if (!(__6273 != 0u)) goto lab_638;
  2503 |    __7446 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET61 = (long long) __builtin_strlen(": number of time steps must have integral value.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7446,": number of time steps must have integral value.  Use/n/n",$$RET61);
   548 |    $$RET62 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET62);
  2503 |    __7471 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET63 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7471," --help/n/n",$$RET63);
   548 |    $$RET64 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET64);
   200 |    MMSP::Abort(int)(-1)
   201 |  lab_638:
   286 |    __7488 = (int) strtol(argv[3ll],NULL,10);
   285 |    steps = __7488;
   204 |    increment = __7488;
   206 |    if (!(argc > 4)) goto lab_676;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6179,argv[4ll],&__6181);
            __es.__c4@3 = 12u;
            $$RET65 = __builtin_strlen("0123456789");
  1913 |    __7497 = std::string::find_first_not_of(char const*, unsigned long, unsigned long) const(&__6179,"0123456789",0ull,$$RET65);
  1914 |    __6274 = (char) (__7497 != 18446744073709551615ull);
            __es.__c4@3 = 7u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6179);
            if (!(__6274 != 0u)) goto lab_678;
  2503 |    __7530 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET66 = (long long) __builtin_strlen(": output increment must have integral value.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7530,": output increment must have integral value.  Use/n/n",$$RET66);
   548 |    $$RET67 = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET67);
  2503 |    __7555 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET68 = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7555," --help/n/n",$$RET68);
   548 |    $$RET69 = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET69);
   212 |    MMSP::Abort(int)(-1)
   213 |  lab_678:
   286 |    __7572 = (int) strtol(argv[4ll],NULL,10);
   285 |    increment = __7572;
   218 |    if (!(__7572 > __7488)) goto lab_716;
  2503 |    __7584 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET6A = (long long) __builtin_strlen(": output increment must be smaller than number of time steps.  Use/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7584,": output increment must be smaller than number of time steps.  Use/n/n",$$RET6A);
   548 |    $$RET6B = (long long) __builtin_strlen("    ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"    ",$$RET6B);
  2503 |    __7609 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,&PROGRAM->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&PROGRAM->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET6C = (long long) __builtin_strlen(" --help/n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__7609," --help/n/n",$$RET6C);
   548 |    $$RET6D = (long long) __builtin_strlen("to generate help message./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cout,"to generate help message./n/n",$$RET6D);
   222 |    MMSP::Abort(int)(-1)
   223 |  lab_716:
   224 |  lab_676:
   225 |  lab_637:
   228 |    std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)(&input,argv[1ll],8);
            __es.__c4@3 = 13u;
   116 |    $$VOL0 = &input->(basic_ifstream<char,std::char_traits<char> >)[]@0;
   192 |    __7636 = (char) (0 != (*((int *)((char *)&input + 32 + $$VOL0[-24ll / 8])) & 5));
   116 |    if (!(__7636 != 0u)) goto lab_754;
   548 |    $$RET6E = (long long) __builtin_strlen("File input error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: could not open ",$$RET6E);
   513 |    __9804 = argv[1ll];
   507 |    if (argv[1ll] != NULL) goto lab_765;
   230 |    __10144 = ((char *)&std::cerr  + ((long long *)(&std::cerr->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8]);
            __10145 = ((char *)&std::cerr  + ((long long *)(&std::cerr->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8]);
   507 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(__10144,*((int *)((char *)__10145 + 32)) | 1)
   548 |    goto lab_773;
          lab_765:
            $$RET6F = (long long) __builtin_strlen(argv[1ll]);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,__9804,$$RET6F);
          lab_773:
   548 |    $$RET70 = (long long) __builtin_strlen("./n/n");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"./n/n",$$RET70);
   231 |    MMSP::Abort(int)(-1)
   232 |  lab_754:
   260 |    type._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 14u;
   236 |    std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)(&input,&type,10u);
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6221,&type,0ull,4ull);
  2003 |    __es.__c4@3 = 15u;
  2304 |    $$RET71 = std::string::compare(char const*) const(&__6221,"grid");
  2267 |    __7691 = (char) ($$RET71 == 0);
  2304 |    __6275 = (char) (0u == __7691);
            __es.__c4@3 = 14u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6221);
            if (!(__6275 != 0u)) goto lab_783;
   548 |    $$RET72 = (long long) __builtin_strlen("File input error: file does not contain grid data.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: file does not contain grid data.",$$RET72);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &))(&std::cerr);
   241 |    MMSP::Abort(int)(-1)
   242 |  lab_783:
   246 |    std::istream::operator>>(int&)(&input,&dim);
            $$RET73 = std::basic_filebuf<char, std::char_traits<char> >::close()(&input._M_filebuf@10);
   565 |    if ($$RET73 != NULL) goto lab_796;
   566 |    $$VOL1 = &input->(basic_ifstream<char,std::char_traits<char> >)[]@0;
            __10150 = ((char *)&input  + $$VOL1[-24ll / 8]);
            $$VOL2 = &input->(basic_ifstream<char,std::char_traits<char> >)[]@0;
            __10151 = ((char *)&input  + $$VOL2[-24ll / 8]);
   419 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(__10150,*((int *)((char *)__10151 + 32)) | 4)
   527 |  lab_796:
   251 |    iterations_start = 0;
            $$RET74 = __builtin_strlen(".");
  1790 |    __7740 = std::string::find_first_of(char const*, unsigned long, unsigned long) const(&outfile,".",0ull,$$RET74);
  1791 |    $$RET75 = __builtin_strlen(".");
  1851 |    __7743 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET75);
  1852 |    if (!(__7740 != __7743)) goto lab_804;
            $$RET76 = __builtin_strlen(".");
  1790 |    __7746 = std::string::find_first_of(char const*, unsigned long, unsigned long) const(&outfile,".",0ull,$$RET76);
  1791 |    $$RET77 = __builtin_strlen(".");
  1851 |    __7749 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET77);
   629 |    if (!(__7746 + 1ull > *(((unsigned long long *)(&outfile->(_Alloc_hider;basic_string<char,std::char_traits<char>,std::allocator<char> >)._M_p@0)) + -1ll * 24ll / 8))) goto lab_806;
   309 |    std::__throw_out_of_range(char const*)("basic_string::substr")
            return;
          lab_806:
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&number,&outfile,__7746 + 1ull,__7749 - 1ull);
  2003 |    __es.__c4@3 = 17u;
   286 |    __7761 = (int) strtol(number._M_p@0,NULL,10);
   285 |    iterations_start = __7761;
   255 |    __es.__c4@3 = 14u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&number);
          lab_804:
   260 |    base._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 18u;
            $$RET78 = __builtin_strlen(".");
  1790 |    __7809 = std::string::find_first_of(char const*, unsigned long, unsigned long) const(&outfile,".",0ull,$$RET78);
  1791 |    $$RET79 = __builtin_strlen(".");
  1674 |    __7813 = std::string::find(char const*, unsigned long, unsigned long) const(&outfile,".",__7809 + 1ull,$$RET79);
  1675 |    if (!(__7813 == 18446744073709551615ull)) goto lab_808;
   511 |    $$RET7A = __builtin_strlen(".");
  1851 |    __7816 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET7A);
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6224,&outfile,0ull,__7816);
  2003 |    __es.__c4@3 = 19u;
  2201 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)(&__6226,&__6224);
   258 |    __es.__c4@3 = 20u;
  2200 |    $$RET7B = __builtin_strlen(".");
   871 |    std::string::append(char const*, unsigned long)(&__6226,".",$$RET7B);
  2204 |    __es.__c4@3 = 21u;
            std::string::assign(std::string const&)(&base,&__6226);
   511 |    __es.__c4@3 = 19u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6226);
            __es.__c4@3 = 18u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6224);
            goto lab_812;
          lab_808:
            $$RET7C = __builtin_strlen(".");
  1851 |    __7882 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET7C);
   261 |    prev_dot = (int) std::string::rfind(char, unsigned long) const(&outfile,46u,(unsigned long long) ((int) __7882 - 1));
   629 |    if (!((unsigned long long) (prev_dot + 1) > *(((unsigned long long *)(&outfile->(_Alloc_hider;basic_string<char,std::char_traits<char>,std::allocator<char> >)._M_p@0)) + -1ll * 24ll / 8))) goto lab_813;
   309 |    std::__throw_out_of_range(char const*)("basic_string::substr")
            return;
          lab_813:
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&number,&outfile,(unsigned long long) (prev_dot + 1),(unsigned long long) ((int) __7882 + (-1 - prev_dot)));
  2003 |    __es.__c4@3 = 23u;
   263 |    isNumeric = 1u;
   264 |    i = 0u;
            if (!(0ull < *(((unsigned long long *)number._M_p@0) + -1ll * 24ll / 8))) goto lab_817;
            do {   /* id=13 guarded */ /* ~815 */ 
              /* region = 143 */
   184 |      if (*(((int *)(number._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_820;
   302 |      std::string::_M_leak_hard()(&number)
            lab_820:
   747 |      $$RET7D = isdigit((int) ((char *)number._M_p@0)[(long long) ((unsigned long long) i)]);
   265 |      isNumeric = ($$RET7D != 0 ? isNumeric : 0u);
   264 |      i = i + 1u;
            } while ((unsigned long long) i < *(((unsigned long long *)number._M_p@0) + -1ll * 24ll / 8));    /* ~815 */
          lab_817:
   267 |    if (!(isNumeric != 0u)) goto lab_822;
   511 |    $$RET7E = __builtin_strlen(".");
  1851 |    __7905 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET7E);
  1852 |    $$RET7F = __builtin_strlen(".");
  1732 |    __7909 = std::string::rfind(char const*, unsigned long, unsigned long) const(&outfile,".",__7905 - 1ull,$$RET7F);
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6229,&outfile,0ull,__7909);
  2003 |    __es.__c4@3 = 24u;
  2201 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)(&__6231,&__6229);
   268 |    __es.__c4@3 = 25u;
  2200 |    $$RET80 = __builtin_strlen(".");
   871 |    std::string::append(char const*, unsigned long)(&__6231,".",$$RET80);
  2204 |    __es.__c4@3 = 26u;
            std::string::assign(std::string const&)(&base,&__6231);
   511 |    __es.__c4@3 = 24u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6231);
            __es.__c4@3 = 23u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6229);
            goto lab_826;
          lab_822:
            $$RET81 = __builtin_strlen(".");
  1851 |    __7975 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET81);
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6233,&outfile,0ull,__7975);
  2003 |    __es.__c4@3 = 27u;
  2201 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)(&__6235,&__6233);
   269 |    __es.__c4@3 = 28u;
  2200 |    $$RET82 = __builtin_strlen(".");
   871 |    std::string::append(char const*, unsigned long)(&__6235,".",$$RET82);
  2204 |    __es.__c4@3 = 29u;
            std::string::assign(std::string const&)(&base,&__6235);
   511 |    __es.__c4@3 = 27u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6235);
            __es.__c4@3 = 23u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6233);
          lab_826:
   270 |    __es.__c4@3 = 18u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&number);
          lab_812:
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&suffix,"",&__6239);
            __es.__c4@3 = 30u;
            $$RET83 = __builtin_strlen(".");
  1851 |    __8067 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET83);
  1852 |    if (!(__8067 != 18446744073709551615ull)) goto lab_829;
   511 |    $$RET84 = __builtin_strlen(".");
  1851 |    __8070 = std::string::find_last_of(char const*, unsigned long, unsigned long) const(&outfile,".",18446744073709551615ull,$$RET84);
   629 |    if (!(__8070 > *(((unsigned long long *)(&outfile->(_Alloc_hider;basic_string<char,std::char_traits<char>,std::allocator<char> >)._M_p@0)) + -1ll * 24ll / 8))) goto lab_831;
   309 |    std::__throw_out_of_range(char const*)("basic_string::substr")
            return;
          lab_831:
   311 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)(&__6240,&outfile,__8070,18446744073709551615ull);
  2003 |    __es.__c4@3 = 31u;
            std::string::assign(std::string const&)(&suffix,&__6240);
   511 |    __es.__c4@3 = 30u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6240);
          lab_829:
   278 |    length = (int) (*(((unsigned long long *)suffix._M_p@0) + -1ll * 24ll / 8) + *(((unsigned long long *)base._M_p@0) + -1ll * 24ll / 8));
   280 |    std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&slength,24);
            __es.__c4@3 = 32u;
   281 |    std::ostream::operator<<(int)(((char *)&slength  + 16ll),steps);
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6242,&slength._M_stringbuf@18)
            __es.__c4@3 = 33u;
   635 |    length = (int) (*(((unsigned long long *)&__6242->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8) + (unsigned long long) length);
            __es.__c4@3 = 32u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6242);
   283 |    __es.__c4@3 = 30u;
            std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&slength);
   286 |    if (!(dim == 1)) goto lab_833;
   288 |    MMSP::grid<1, MMSP::vector<double> >::grid(char const*, int)(&grid,argv[1ll],1);
            __es.__c4@3 = 34u;
   291 |    i = iterations_start;
            if (!(iterations_start < steps)) goto lab_837;
            do {   /* id=9 guarded */ /* ~835 */ 
              /* region = 147 */
   292 |      void MMSP::update<1, double>(MMSP::grid<1, MMSP::vector<double> >&, int)(&grid,increment)
   295 |      std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
              __es.__c4@3 = 35u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6243,&outstr._M_stringbuf@18)
              __es.__c4@3 = 36u;
   635 |      n = (int) *(((unsigned long long *)&__6243->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
              __es.__c4@3 = 35u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6243);
   297 |      j = 0;
              if (!(n < length)) goto lab_840;
              do {   /* id=11 guarded */ /* ~838 */ 
                /* region = 145 */
   101 |        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6244,"",&__6246);
                __es.__c4@3 = 37u;
   147 |        std::string::assign(char const*, unsigned long)(&outstr._M_string@60,&__6244->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__6244->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   148 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_stringbuf_init(std::_Ios_Openmode)(&outstr._M_stringbuf@18,outstr._M_mode@58)
   567 |        __es.__c4@3 = 35u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6244);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),&base->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&base->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   300 |        k = 0;
                if (!(0 < j)) goto lab_843;
                do {   /* id=12 guarded */ /* ~841 */ 
                  /* region = 144 */
                  std::ostream::operator<<(int)(((char *)&outstr  + 16ll),0);
                  k = k + 1;
                } while (k < j);    /* ~841 */
              lab_843:
  2500 |        __8232 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),i + increment);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__8232,&suffix->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&suffix->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6248,&outstr._M_stringbuf@18)
                __es.__c4@3 = 38u;
   635 |        n = (int) *(((unsigned long long *)&__6248->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
                __es.__c4@3 = 35u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6248);
   297 |        j = j + 1;
              } while (n < length);    /* ~838 */
            lab_840:
   305 |      fill(&filename, 0);
   306 |      j = 0u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6249,&outstr._M_stringbuf@18)
              __es.__c4@3 = 39u;
   635 |      __6276 = (char) (0ull < *(((unsigned long long *)&__6249->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
              __es.__c4@3 = 35u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6249);
              if (!(__6276 != 0u)) goto lab_846;
              do {   /* id=10 guarded */ /* ~844 */ 
                /* region = 146 */
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6250,&outstr._M_stringbuf@18)
                __es.__c4@3 = 40u;
   184 |        if (*(((int *)((char *)&__6250->(_Alloc_hider)._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_847;
   302 |        std::string::_M_leak_hard()(&__6250)
              lab_847:
   748 |        filename[(long long) j] = ((char *)&__6250->(_Alloc_hider)._M_p@0)[(long long) ((unsigned long long) j)];
                __es.__c4@3 = 35u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6250);
   306 |        j = j + 1u;
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6249,&outstr._M_stringbuf@18)
                __es.__c4@3 = 39u;
   635 |        __6276 = (char) ((unsigned long long) j < *(((unsigned long long *)&__6249->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
                __es.__c4@3 = 35u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6249);
              } while (__6276 != 0u);    /* ~844 */
            lab_846:
   310 |      void MMSP::output<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, char const*)(&grid,&filename)
   311 |      __es.__c4@3 = 34u;
              std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
   291 |      i = i + increment;
            } while (i < steps);    /* ~835 */
          lab_837:
   312 |    __es.__c4@3 = 30u;
            MMSP::grid<1, MMSP::vector<double> >::~grid()(&grid);
            goto lab_849;
          lab_833:
            if (!(dim == 2)) goto lab_850;
   314 |    MMSP::grid<2, MMSP::vector<double> >::grid(char const*, int)(&grid,argv[1ll],1);
            __es.__c4@3 = 41u;
   343 |    MCFUNCx(&tmp,268,1,"r& i:","mfspr %0,%1",1,1)
            start_cycles = tmp;
   318 |    i = iterations_start;
            if (!(iterations_start < steps)) goto lab_854;
            do {   /* id=5 guarded */ /* ~852 */ 
              /* region = 151 */
   319 |      void MMSP::update<2, double>(MMSP::grid<2, MMSP::vector<double> >&, int)(&grid,increment)
   322 |      std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
              __es.__c4@3 = 42u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6251,&outstr._M_stringbuf@18)
              __es.__c4@3 = 43u;
   635 |      n = (int) *(((unsigned long long *)&__6251->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
              __es.__c4@3 = 42u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6251);
   324 |      j = 0;
              if (!(n < length)) goto lab_857;
              do {   /* id=7 guarded */ /* ~855 */ 
                /* region = 149 */
   101 |        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6252,"",&__6254);
                __es.__c4@3 = 44u;
   147 |        std::string::assign(char const*, unsigned long)(&outstr._M_string@60,&__6252->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__6252->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   148 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_stringbuf_init(std::_Ios_Openmode)(&outstr._M_stringbuf@18,outstr._M_mode@58)
   567 |        __es.__c4@3 = 42u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6252);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),&base->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&base->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   327 |        k = 0;
                if (!(0 < j)) goto lab_860;
                do {   /* id=8 guarded */ /* ~858 */ 
                  /* region = 148 */
                  std::ostream::operator<<(int)(((char *)&outstr  + 16ll),0);
                  k = k + 1;
                } while (k < j);    /* ~858 */
              lab_860:
  2500 |        __8423 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),i + increment);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__8423,&suffix->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&suffix->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6256,&outstr._M_stringbuf@18)
                __es.__c4@3 = 45u;
   635 |        n = (int) *(((unsigned long long *)&__6256->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
                __es.__c4@3 = 42u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6256);
   324 |        j = j + 1;
              } while (n < length);    /* ~855 */
            lab_857:
   343 |      MCFUNCx(&tmp,268,1,"r& i:","mfspr %0,%1",1,1)
              end_cycles = tmp;
   334 |      time_in_secs1 = (double) (tmp - start_cycles) / processor_frequency;
   351 |      ptrFileOut = fopen("time.dat","a");
   352 |      fprintf(ptrFileOut,"%d %f /n",0u,time_in_secs1);
   353 |      fclose(ptrFileOut);
   355 |      fill(&filename, 0);
   356 |      j = 0u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6257,&outstr._M_stringbuf@18)
              __es.__c4@3 = 46u;
   635 |      __6277 = (char) (0ull < *(((unsigned long long *)&__6257->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
              __es.__c4@3 = 42u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6257);
              if (!(__6277 != 0u)) goto lab_865;
              do {   /* id=6 guarded */ /* ~863 */ 
                /* region = 150 */
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6258,&outstr._M_stringbuf@18)
                __es.__c4@3 = 47u;
   184 |        if (*(((int *)((char *)&__6258->(_Alloc_hider)._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_866;
   302 |        std::string::_M_leak_hard()(&__6258)
              lab_866:
   748 |        filename[(long long) j] = ((char *)&__6258->(_Alloc_hider)._M_p@0)[(long long) ((unsigned long long) j)];
                __es.__c4@3 = 42u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6258);
   356 |        j = j + 1u;
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6257,&outstr._M_stringbuf@18)
                __es.__c4@3 = 46u;
   635 |        __6277 = (char) ((unsigned long long) j < *(((unsigned long long *)&__6257->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
                __es.__c4@3 = 42u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6257);
              } while (__6277 != 0u);    /* ~863 */
            lab_865:
   360 |      void MMSP::output<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, char const*)(&grid,&filename)
   361 |      __es.__c4@3 = 41u;
              std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
   318 |      i = i + increment;
            } while (i < steps);    /* ~852 */
          lab_854:
   362 |    __es.__c4@3 = 30u;
            MMSP::grid<2, MMSP::vector<double> >::~grid()(&grid);
            goto lab_868;
          lab_850:
            if (!(dim == 3)) goto lab_869;
   364 |    MMSP::grid<3, MMSP::vector<double> >::grid(char const*, int)(&grid,argv[1ll],1);
            __es.__c4@3 = 48u;
   367 |    i = iterations_start;
            if (!(iterations_start < steps)) goto lab_873;
            do {   /* id=1 guarded */ /* ~871 */ 
              /* region = 155 */
   368 |      void MMSP::update<3, double>(MMSP::grid<3, MMSP::vector<double> >&, int)(&grid,increment)
   371 |      std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
              __es.__c4@3 = 49u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6259,&outstr._M_stringbuf@18)
              __es.__c4@3 = 50u;
   635 |      n = (int) *(((unsigned long long *)&__6259->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
              __es.__c4@3 = 49u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6259);
   373 |      j = 0;
              if (!(n < length)) goto lab_876;
              do {   /* id=3 guarded */ /* ~874 */ 
                /* region = 153 */
   101 |        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__6260,"",&__6262);
                __es.__c4@3 = 51u;
   147 |        std::string::assign(char const*, unsigned long)(&outstr._M_string@60,&__6260->(_Alloc_hider)._M_p@0,*(((unsigned long long *)&__6260->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   148 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_stringbuf_init(std::_Ios_Openmode)(&outstr._M_stringbuf@18,outstr._M_mode@58)
   567 |        __es.__c4@3 = 49u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6260);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),&base->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&base->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   376 |        k = 0;
                if (!(0 < j)) goto lab_879;
                do {   /* id=4 guarded */ /* ~877 */ 
                  /* region = 152 */
                  std::ostream::operator<<(int)(((char *)&outstr  + 16ll),0);
                  k = k + 1;
                } while (k < j);    /* ~877 */
              lab_879:
  2500 |        __8614 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),i + increment);
  2503 |        std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__8614,&suffix->(_Alloc_hider)._M_p@0,(long long) *(((unsigned long long *)&suffix->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6264,&outstr._M_stringbuf@18)
                __es.__c4@3 = 52u;
   635 |        n = (int) *(((unsigned long long *)&__6264->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8);
                __es.__c4@3 = 49u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6264);
   373 |        j = j + 1;
              } while (n < length);    /* ~874 */
            lab_876:
   380 |      fill(&filename, 0);
   381 |      j = 0u;
   557 |      std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6265,&outstr._M_stringbuf@18)
              __es.__c4@3 = 53u;
   635 |      __6278 = (char) (0ull < *(((unsigned long long *)&__6265->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
              __es.__c4@3 = 49u;
              std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6265);
              if (!(__6278 != 0u)) goto lab_882;
              do {   /* id=2 guarded */ /* ~880 */ 
                /* region = 154 */
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6266,&outstr._M_stringbuf@18)
                __es.__c4@3 = 54u;
   184 |        if (*(((int *)((char *)&__6266->(_Alloc_hider)._M_p@0 + 16)) + -1ll * 24ll / 4) < 0) goto lab_883;
   302 |        std::string::_M_leak_hard()(&__6266)
              lab_883:
   748 |        filename[(long long) j] = ((char *)&__6266->(_Alloc_hider)._M_p@0)[(long long) ((unsigned long long) j)];
                __es.__c4@3 = 49u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6266);
   381 |        j = j + 1u;
   557 |        std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__6265,&outstr._M_stringbuf@18)
                __es.__c4@3 = 53u;
   635 |        __6278 = (char) ((unsigned long long) j < *(((unsigned long long *)&__6265->(_Alloc_hider)._M_p@0) + -1ll * 24ll / 8));
                __es.__c4@3 = 49u;
                std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__6265);
              } while (__6278 != 0u);    /* ~880 */
            lab_882:
   385 |      void MMSP::output<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, char const*)(&grid,&filename)
   386 |      __es.__c4@3 = 48u;
              std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
   367 |      i = i + increment;
            } while (i < steps);    /* ~871 */
          lab_873:
   387 |    __es.__c4@3 = 30u;
            MMSP::grid<3, MMSP::vector<double> >::~grid()(&grid);
          lab_869:
          lab_868:
          lab_849:
   388 |    __es.__c4@3 = 18u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&suffix);
            __es.__c4@3 = 14u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&base);
            __es.__c4@3 = 13u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 7u;
            std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()(&input);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&outfile);
          lab_479:
   390 |    MMSP::Finalize()()
   391 |    rstr = 0;
            return rstr;
          } /* function */ 


   295 |  void std::vector<Point<int>, std::allocator<Point<int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int> const&)(char * this, aggr8 __position, Point<int> *__x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    $$csx3 = *((char * *)(this + 8));
            if (!($$csx3 != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!($$csx3 != NULL)) goto lab_6;
    12 |    *((int *)$$csx3) = ((int *)((char *)$$csx3  - 12ll))->(Point<int>).x@0.rns116.;
            *((int *)($$csx3 + 4)) = ((int *)((char *)$$csx3  - 12ll))->(Point<int>).y@4.rns118.;
            *((int *)($$csx3 + 8)) = ((int *)((char *)$$csx3  - 12ll))->(Point<int>).z@8.rns120.;
    73 |  lab_6:
   304 |    $$csx4 = ((char *)$$csx3  + 12ll);
            *((char * *)(this + 8)) = $$csx4;
    12 |    __x_copy.x@0 = *((int *)__x);
            __x_copy.y@4 = *((int *)((char *)__x + 4));
            __x_copy.z@8 = *((int *)((char *)__x + 8));
   545 |    if (!((((char *)$$csx4  - 24ll) - __position._M_current@0) / 12ll > 0ll)) goto lab_10;
            $$CIV2 = 0ll;
            do {   /* id=1 guarded */ /* ~8 */ 
              /* region = 35 */
              /* bump-normalized */
   546 |      *((aggr12 *)($$csx4 + -24ll - $$CIV2 * 12ll)) = *((aggr12 *)($$csx4 + -36ll - $$CIV2 * 12ll));
   545 |      $$CIV2 = $$CIV2 + 1ll;
            } while ((unsigned long long) $$CIV2 < (unsigned long long) ((((char *)$$csx4  - 24ll) - __position._M_current@0) / 12ll));    /* ~8 */
          lab_10:
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_11;
          lab_3:
   319 |    $$PARM.__n382 = 1ull;
   538 |    $$csx5 = *((char * *)this);
            if (!((unsigned long long) (1537228672809129301ll - ($$csx3 - $$csx5) / 12ll) < 1ull)) goto lab_43;
  1137 |    std::__throw_length_error(char const*)("vector::_M_insert_aux")
            return;
          lab_43:
  1139 |    __12982 = (unsigned long long) (($$csx3 - $$csx5) / 12ll);
   216 |    $$csx6 = (unsigned long long) (($$csx3 - $$csx5) / 12ll) < 1ull ? &$$PARM.__n382 : &__12982->(unsigned long).rns249.$$496;
  1140 |    if ($$csx6 + (unsigned long long) (($$csx3 - $$csx5) / 12ll) < (unsigned long long) (($$csx3 - $$csx5) / 12ll)) goto lab_45;
   538 |    if (!($$csx6 + (unsigned long long) (($$csx3 - $$csx5) / 12ll) > 1537228672809129301ull)) goto lab_46;
          lab_45:
            __13007 = 1537228672809129301ull;
            goto lab_47;
          lab_46:
            __13007 = $$csx6 + (unsigned long long) (($$csx3 - $$csx5) / 12ll);
          lab_47:
   686 |    __10267._M_current@0 = *((char * *)this);
   426 |    __10183 = __10267;
   140 |    if (!(__13007 != 0ull)) goto lab_13;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__13007 > 1537228672809129301ull),0ll))) goto lab_15;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_15:
    89 |    __10280 = operator new(unsigned long)(__13007 * 12ull);
   107 |    __10478 = __10280;
            goto lab_14;
          lab_13:
            __10478 = NULL;
          lab_14:
   325 |    __es.__c4@3 = 1u;
    55 |    if (!(NULL != ((char *)__10478  + ((__position._M_current@0 - $$csx5) / 12ll) * 12ll))) goto lab_18;
    12 |    ((int *)__10478)[(((__position._M_current@0 - $$csx5) / 12ll) * 12ll) / 4] = *((int *)__x);
            ((int *)((char *)__10478 + 4))[(((__position._M_current@0 - $$csx5) / 12ll) * 12ll) / 4] = *((int *)((char *)__x + 4));
            ((int *)((char *)__10478 + 8))[(((__position._M_current@0 - $$csx5) / 12ll) * 12ll) / 4] = *((int *)((char *)__x + 8));
    73 |  lab_18:
   336 |    __new_finish = NULL;
   264 |    $$RET85 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(*((char * *)this),__position._M_current@0,__10478);
            goto __10473;
            goto __10474;
   342 |    __new_finish = ((char *)$$RET85  + 12ll);
   264 |    $$RET86 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET85  + 12ll));
            goto __10473;
            goto __10474;
   268 |    __new_finish = $$RET86;
   349 |    __es.__c4@3 = 0u;
            goto @10475;
   351 |  lab_33:
            /* GLAB  id_no=1651{__10473} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __10476 = __int_register_value(29u);
            __cxa_begin_catch((char *) __10476)
   145 |    if (!(__10478 != NULL)) goto lab_24;
    95 |    operator delete(void*)(__10478)
   110 |  lab_24:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @10475:
   141 |    $$csx7 = *((char * *)this);
   145 |    if (!($$csx7 != NULL)) goto lab_26;
    95 |    operator delete(void*)($$csx7)
   110 |  lab_26:
   364 |    *((char * *)this) = __10478;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__10478  + (long long) (__13007 * 12ull));
   367 |  lab_11:
   368 |    return;
   351 |    /* GLAB  id_no=1657{__10474} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __10477 = __int_register_value(29u);
            _Unwind_Resume((char *) __10477)
            goto lab_33;
   368 |  } /* function */ 


   312 |  char * std::vector<int, std::allocator<int> >::~vector()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this35E = this;
   109 |    $$PARM.this35C = $$PARM.this35E;
    73 |    $$IRET1BF = $$PARM.this35C;
   109 |    $$IRET1C0 = $$PARM.this35E;
   132 |    $$IRET1C1 = $$PARM.this35E;
   133 |    $$IRET1C2 = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   295 |  void std::vector<int, std::allocator<int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)(char * this, aggr8 __position, int *__x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    $$csx8 = *((char * *)(this + 8));
            if (!($$csx8 != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!($$csx8 != NULL)) goto lab_6;
   105 |    *((int *)$$csx8) = ((int *)((char *)$$csx8  - 4ll))->(int).rns132.;
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)$$csx8  + 4ll);
   306 |    __x_copy = *__x;
   638 |    $$PARM.__first22D = __position._M_current@0;
            $$PARM.__last22E = ((char *)*((char * *)(this + 8))  - 8ll);
            $$PARM.__result22F = ((char *)*((char * *)(this + 8))  - 4ll);
   575 |    __builtin_memmove(((char *)$$PARM.__result22F  - (($$PARM.__last22E - $$PARM.__first22D) / 4ll) * 4ll),$$PARM.__first22D,(unsigned long long) ((($$PARM.__last22E - $$PARM.__first22D) / 4ll) * 4ll));
   577 |    $$IRET12E = ((char *)$$PARM.__result22F  - (($$PARM.__last22E - $$PARM.__first22D) / 4ll) * 4ll);
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_8;
          lab_3:
   319 |    $$PARM.__n231 = 1ull;
            $$PARM.__s232 = "vector::_M_insert_aux";
   538 |    if (!((unsigned long long) (4611686018427387903ll - ($$csx8 - *((char * *)this)) / 4ll) < $$PARM.__n231)) goto lab_35;
  1137 |    std::__throw_length_error(char const*)($$PARM.__s232)
            return;
          lab_35:
  1139 |    __13009 = (unsigned long long) (($$csx8 - *((char * *)this)) / 4ll);
   215 |    __13020 = ((unsigned long long) (($$csx8 - *((char * *)this)) / 4ll) < $$PARM.__n231 ? &$$PARM.__n231 : &__13009);
   216 |    $$csx9 = *__13020;
  1140 |    if ($$csx9 + (unsigned long long) (($$csx8 - *((char * *)this)) / 4ll) < (unsigned long long) (($$csx8 - *((char * *)this)) / 4ll)) goto lab_37;
   538 |    if (!($$csx9 + (unsigned long long) (($$csx8 - *((char * *)this)) / 4ll) > 4611686018427387903ull)) goto lab_38;
          lab_37:
            __13034 = 4611686018427387903ull;
            goto lab_39;
          lab_38:
            __13034 = $$csx9 + (unsigned long long) (($$csx8 - *((char * *)this)) / 4ll);
          lab_39:
            $$IRET12F = __13034;
   319 |    __len = $$IRET12F;
   686 |    __10612._M_current@0 = *((char * *)this);
   426 |    __10534 = __10612;
   858 |    $$FSM1 = (__normal_iterator<int *,std::vector<int,std::allocator<int> > >)._M_current@0.rns149..mga.__10534;
   140 |    if (!(__len != 0ull)) goto lab_10;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__len > 4611686018427387903ull),0ll))) goto lab_12;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_12:
    89 |    __10625 = operator new(unsigned long)(__len * 4ull);
   107 |    __10825 = __10625;
            goto lab_11;
          lab_10:
            __10825 = NULL;
          lab_11:
   858 |    __elems_before = (unsigned long long) ((__position._M_current@0 - $$FSM1) / 4ll);
   325 |    __es.__c4@3 = 1u;
    55 |    if (!(NULL != ((char *)__10825  + (long long) (__elems_before * 4ull)))) goto lab_15;
   105 |    *((int *)((char *)__10825 + (long long) (__elems_before * 4ull))) = *__x;
          lab_15:
   336 |    __new_finish = NULL;
   264 |    $$RET87 = int* std::copy<int*, int*>(int*, int*, int*)(*((char * *)this),__position._M_current@0,__10825);
            goto __10820;
            goto __10821;
   342 |    __new_finish = ((char *)$$RET87  + 4ll);
   264 |    $$RET88 = int* std::copy<int*, int*>(int*, int*, int*)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET87  + 4ll));
            goto __10820;
            goto __10821;
   268 |    __new_finish = $$RET88;
   349 |    __es.__c4@3 = 0u;
            goto @10822;
   351 |  lab_30:
            /* GLAB  id_no=1810{__10820} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __10823 = __int_register_value(29u);
            __cxa_begin_catch((char *) __10823)
   145 |    if (!(__10825 != NULL)) goto lab_21;
    95 |    operator delete(void*)(__10825)
   110 |  lab_21:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @10822:
   141 |    $$csxA = *((char * *)this);
   145 |    if (!($$csxA != NULL)) goto lab_23;
    95 |    operator delete(void*)($$csxA)
   110 |  lab_23:
   364 |    *((char * *)this) = __10825;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__10825  + (long long) (__len * 4ull));
   367 |  lab_8:
   368 |    return;
   351 |    /* GLAB  id_no=1816{__10821} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __10824 = __int_register_value(29u);
            _Unwind_Resume((char *) __10824)
            goto lab_30;
   368 |  } /* function */ 


    45 |  char * MMSP::grid<2, unsigned long>::grid(int, ...)(grid<2,unsigned long> *this, int FIELDS)
    48 |  {
            *((int *)((char *)this + 16)) = FIELDS;
            $$RET89 = (unsigned long long) __builtinParameterAddress(&FIELDS);
    53 |    if (!1) goto lab_3;
    52 |    list = (char *) ($$RET89 + 11ull & 18446744073709551608ull);
    53 |    $$CIV3 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    54 |      ((int *)((char *)this + 24))[$$CIV3] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)this + 32))[$$CIV3] = (list + -4ll / 4)[0ll];
    53 |      $$CIV3 = $$CIV3 + 1ll;
            } while ((unsigned long long) $$CIV3 < 2ull);    /* ~1 */
          lab_3:
    61 |    *((int *)((char *)this + 20)) = 0;
    68 |    MMSP::grid<2, unsigned long>::setup(bool)(this,0u)
    69 |    rstr = this;
            return rstr;
          } /* function */ 


   329 |  char * MMSP::grid<2, unsigned long>::~grid()(grid<2,unsigned long> *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    operator delete[](void*)(*((char * *)this))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   384 |  char * MMSP::grid<2, unsigned long>::operator()(int) const(grid<2,unsigned long> *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (8ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


    45 |  char * MMSP::grid<2, MMSP::vector<double> >::grid(int, ...)(grid<2,MMSP::vector<double> > *this, int FIELDS)
    48 |  {
            *((int *)((char *)this + 16)) = FIELDS;
            $$RET8A = (unsigned long long) __builtinParameterAddress(&FIELDS);
    53 |    if (!1) goto lab_3;
    52 |    list = (char *) ($$RET8A + 11ull & 18446744073709551608ull);
    53 |    $$CIV4 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    54 |      ((int *)((char *)this + 24))[$$CIV4] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)this + 32))[$$CIV4] = (list + -4ll / 4)[0ll];
    53 |      $$CIV4 = $$CIV4 + 1ll;
            } while ((unsigned long long) $$CIV4 < 2ull);    /* ~1 */
          lab_3:
    61 |    *((int *)((char *)this + 20)) = 0;
    68 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)(this,0u)
    69 |    rstr = this;
            return rstr;
          } /* function */ 


   132 |  char * MMSP::grid<2, MMSP::vector<double> >::grid(char const*, int)(grid<2,MMSP::vector<double> > *this, char * filename, int GHOSTS)
   135 |  {
            *((char * *)this) = NULL;
   138 |    MMSP::grid<2, MMSP::vector<double> >::input(char const*, int, int)(this,filename,GHOSTS,0)
   139 |    rstr = this;
            return rstr;
          } /* function */ 


   329 |  char * MMSP::grid<2, MMSP::vector<double> >::~grid()(grid<2,MMSP::vector<double> > *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   384 |  char * MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(grid<2,MMSP::vector<double> > *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (16ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


  1162 |  unsigned long long unsigned long MMSP::tessellate<2, unsigned long>(MMSP::grid<2, unsigned long>&, int const&, int const&)(grid<2,unsigned long> *grid, int *nseeds, char * nthreads)
  1163 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
  1170 |    pseudorand_seed = (unsigned long long) time(NULL);
   176 |    &pseudorand_number->(unsigned long).rns237.$$534 = pseudorand_seed & 4294967295ull;
   177 |    if (!1) goto lab_87;
   175 |    $$CIV6 = 0ll;
   177 |    $$PRC0 = &pseudorand_number->(unsigned long).rns237.$$534;
            do {   /* id=13 guarded */ /* ~88 */ 
              /* region = 98 */
              /* bump-normalized */
   179 |      $$PRC1 = ($$PRC0 >> 30 ^ $$PRC0) * 1812433253ull + (unsigned long long) ((int) ($$CIV6 + 1ll)) & 4294967295ull;
              *((unsigned long long *)((char *)&pseudorand_number + $$CIV6 * 8ll + 8ll)) = $$PRC1;
              $$PRC0 = $$PRC1;
   177 |      $$CIV6 = $$CIV6 + 1ll;
            } while ((unsigned long long) $$CIV6 < 623ull);    /* ~88 */
          lab_87:
   188 |    MTRand::reload()::guard_MmN2 = 1;
   189 |    p = &pseudorand_number;
   191 |    if (!1) goto lab_48;
            i.rnn35 = 226;
            do {   /* id=6 guarded */ /* ~49 */ 
              /* region = 97 */
   136 |      *p = (p[1ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[397ll] ^ (0ull != (p[1ll] & 1ull) ? 2567483615ull : 0ull));
   191 |      p = ((char *)p  + 8ll);
              __12904 = (char) (i.rnn35 != 0);
              i.rnn35 = i.rnn35 + -1;
            } while (__12904 != 0u);    /* ~49 */
          lab_48:
   193 |    if (!1) goto lab_50;
            $$CIV7 = 0ll;
            do {   /* id=7 guarded */ /* ~51 */ 
              /* region = 96 */
              /* bump-normalized */
   136 |      p[$$CIV7] = (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 2147483647ull | ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[0ll] & 2147483648ull) >> 1 ^ ((0ull != (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 1ull) ? 2567483615ull : 0ull) ^ ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[-227ll]);
   193 |      $$CIV7 = $$CIV7 + 1ll;
            } while ((unsigned long long) $$CIV7 < 396ull);    /* ~51 */
            p = ((char *)p  + 3168ll);
          lab_50:
   129 |    if (!(0ull != (((unsigned long long *)&pseudorand_number)[0ll] & 1ull))) goto lab_52;
   136 |    *p = 2567483615ull ^ ((((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll]);
   197 |    &pseudorand_number->(MTRand).left@1388.rns240.$$535 = 624;
            &pseudorand_number->(MTRand).pNext@1380.rns241.$$535 = &pseudorand_number;
            goto lab_54;
   129 |  lab_52:
   136 |    *p = (((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll];
   197 |    &pseudorand_number->(MTRand).left@1388.rns240.$$535 = 624;
            &pseudorand_number->(MTRand).pNext@1380.rns241.$$535 = &pseudorand_number;
   198 |  lab_54:
    81 |    local_seeds._M_start@0 = NULL;
            local_seeds._M_finish@8 = NULL;
            local_seeds._M_end_of_storage@10 = NULL;
            seeds._M_start@0 = NULL;
            seeds._M_finish@8 = NULL;
            seeds._M_end_of_storage@10 = NULL;
   208 |    __es.__c4@3 = 2u;
  1180 |    if (!1) goto lab_3;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 95 */
   735 |      if (!(seeds._M_finish@8 != seeds._M_end_of_storage@10)) goto lab_4;
   101 |      if (!(seeds._M_finish@8 != NULL)) goto lab_39;
   105 |      std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(seeds._M_finish@8,&local_seeds);
            lab_39:
   738 |      seeds._M_finish@8 = ((char *)seeds._M_finish@8  + 24ll);
   739 |      goto lab_6;
            lab_4:
   686 |      __11183._M_current@0 = seeds._M_finish@8;
   444 |      std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > > >, std::vector<Point<int>, std::allocator<Point<int> > > const&)(&seeds,__11183,&local_seeds)
            lab_6:
  1180 |    } while ((unsigned long long) ((seeds._M_finish@8 - seeds._M_start@0) / 24ll) <= 1ull);    /* ~1 */
          lab_3:
  1186 |    if (!(0 < *nseeds)) goto lab_9;
            i = 0;
            do {   /* id=1 guarded */ /* ~7 */ 
              /* region = 93 */
   314 |      $$csxF = ((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1));
              $$csxE = $$csxF >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1;
              $$csxD = $$csxE | (((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1));
              $$csxC = $$csxD >> 8 | (((unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1));
              $$csxB = (($$csxE | $$csxC) >> 16 | $$csxE) | $$csxC;
   313 |      do {   /* id=4 */ /* ~10 */ 
                /* region = 92 */
   289 |        if (!(&pseudorand_number->(MTRand).left@1388.rns245.$$543 == 0)) goto lab_64;
   188 |        MTRand::reload()::guard_MmN2 = 1;
   189 |        p = &pseudorand_number;
   191 |        if (!1) goto lab_65;
                i.rnn35 = 226;
                do {   /* id=10 guarded */ /* ~66 */ 
                  /* region = 87 */
   136 |          *p = (p[1ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[397ll] ^ (0ull != (p[1ll] & 1ull) ? 2567483615ull : 0ull));
   191 |          p = ((char *)p  + 8ll);
                  __12904 = (char) (i.rnn35 != 0);
                  i.rnn35 = i.rnn35 + -1;
                } while (__12904 != 0u);    /* ~66 */
              lab_65:
   193 |        if (!1) goto lab_67;
                $$CIV7 = 0ll;
                do {   /* id=11 guarded */ /* ~68 */ 
                  /* region = 86 */
                  /* bump-normalized */
   136 |          p[$$CIV7] = (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 2147483647ull | ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[0ll] & 2147483648ull) >> 1 ^ ((0ull != (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 1ull) ? 2567483615ull : 0ull) ^ ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[-227ll]);
   193 |          $$CIV7 = $$CIV7 + 1ll;
                } while ((unsigned long long) $$CIV7 < 396ull);    /* ~68 */
                p = ((char *)p  + 3168ll);
              lab_67:
   129 |        if (!(0ull != (((unsigned long long *)&pseudorand_number)[0ll] & 1ull))) goto lab_69;
   136 |        *p = 2567483615ull ^ ((((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll]);
   197 |        &pseudorand_number->(MTRand).left@1388.rns240.$$1152$$542 = 624;
                &pseudorand_number->(MTRand).pNext@1380.rns241.$$1152$$542 = &pseudorand_number;
                goto lab_70;
   129 |      lab_69:
   136 |        *p = (((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll];
   197 |        &pseudorand_number->(MTRand).left@1388.rns240.$$1152$$542 = 624;
                &pseudorand_number->(MTRand).pNext@1380.rns241.$$1152$$542 = &pseudorand_number;
              lab_70:
   289 |      lab_64:
   290 |        &pseudorand_number->(MTRand).left@1388.rns245.$$543 = &pseudorand_number->(MTRand).left@1388.rns245.$$543 + -1;
   293 |        s1 = &pseudorand_number->(MTRand).pNext@1380.rns246.$$543->(unsigned long).rns244.$$542;
                &pseudorand_number->(MTRand).pNext@1380.rns246.$$543 = ((char *)&pseudorand_number->(MTRand).pNext@1380.rns246.$$543  + 8ll);
   296 |        s1.rnn38 = (s1 ^ (s1 >> 11 ^ s1) << 7 & 2636928640ull) ^ (((s1 >> 11 ^ s1) << 7 & 2636928640ull ^ (s1 >> 11 ^ s1)) << 15 & 4022730752ull ^ s1 >> 11);
   314 |        i = $$csxB & (s1.rnn38 >> 18 ^ s1.rnn38);
   315 |      } while (i > (unsigned long long) ((((int *)((char *)grid + 48))[0ll] - ((int *)((char *)grid + 40))[0ll]) - 1));    /* ~10 */
   314 |      $$csx14 = ((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | ((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1));
              $$csx13 = $$csx14 >> 4 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1;
              $$csx12 = $$csx13 | (((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1));
              $$csx11 = $$csx12 >> 8 | (((unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1) >> 1 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1)) >> 2 | (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1));
              $$csx10 = (($$csx13 | $$csx11) >> 16 | $$csx13) | $$csx11;
   313 |      do {   /* id=3 */ /* ~13 */ 
                /* region = 91 */
   289 |        if (!(&pseudorand_number->(MTRand).left@1388.rns245.$$543 == 0)) goto lab_55;
   188 |        MTRand::reload()::guard_MmN2 = 1;
   189 |        p = &pseudorand_number;
   191 |        if (!1) goto lab_56;
                i.rnn35 = 226;
                do {   /* id=8 guarded */ /* ~57 */ 
                  /* region = 89 */
   136 |          *p = (p[1ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ (p[397ll] ^ (0ull != (p[1ll] & 1ull) ? 2567483615ull : 0ull));
   191 |          p = ((char *)p  + 8ll);
                  __12904 = (char) (i.rnn35 != 0);
                  i.rnn35 = i.rnn35 + -1;
                } while (__12904 != 0u);    /* ~57 */
              lab_56:
   193 |        if (!1) goto lab_58;
                $$CIV7 = 0ll;
                do {   /* id=9 guarded */ /* ~59 */ 
                  /* region = 88 */
                  /* bump-normalized */
   136 |          p[$$CIV7] = (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 2147483647ull | ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[0ll] & 2147483648ull) >> 1 ^ ((0ull != (((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[1ll] & 1ull) ? 2567483615ull : 0ull) ^ ((unsigned long long *)(((char *)p  + $$CIV7 * 8ll)))[-227ll]);
   193 |          $$CIV7 = $$CIV7 + 1ll;
                } while ((unsigned long long) $$CIV7 < 396ull);    /* ~59 */
                p = ((char *)p  + 3168ll);
              lab_58:
   129 |        if (!(0ull != (((unsigned long long *)&pseudorand_number)[0ll] & 1ull))) goto lab_60;
   136 |        *p = 2567483615ull ^ ((((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll]);
   197 |        &pseudorand_number->(MTRand).left@1388.rns240.$$1152$$543 = 624;
                &pseudorand_number->(MTRand).pNext@1380.rns241.$$1152$$543 = &pseudorand_number;
                goto lab_61;
   129 |      lab_60:
   136 |        *p = (((unsigned long long *)&pseudorand_number)[0ll] & 2147483647ull | p[0ll] & 2147483648ull) >> 1 ^ p[-227ll];
   197 |        &pseudorand_number->(MTRand).left@1388.rns240.$$1152$$543 = 624;
                &pseudorand_number->(MTRand).pNext@1380.rns241.$$1152$$543 = &pseudorand_number;
              lab_61:
   289 |      lab_55:
   290 |        &pseudorand_number->(MTRand).left@1388.rns245.$$543 = &pseudorand_number->(MTRand).left@1388.rns245.$$543 + -1;
   293 |        s1 = &pseudorand_number->(MTRand).pNext@1380.rns246.$$543->(unsigned long).rns244.$$543;
                &pseudorand_number->(MTRand).pNext@1380.rns246.$$543 = ((char *)&pseudorand_number->(MTRand).pNext@1380.rns246.$$543  + 8ll);
   296 |        s1.rnn38 = (s1 ^ (s1 >> 11 ^ s1) << 7 & 2636928640ull) ^ (((s1 >> 11 ^ s1) << 7 & 2636928640ull ^ (s1 >> 11 ^ s1)) << 15 & 4022730752ull ^ s1 >> 11);
   314 |        i = $$csx10 & (s1.rnn38 >> 18 ^ s1.rnn38);
   315 |      } while (i > (unsigned long long) ((((int *)((char *)grid + 48))[1ll] - ((int *)((char *)grid + 40))[1ll]) - 1));    /* ~13 */
  1189 |      dupe = 0u;
   533 |      $$csx15 = *((char * *)((char *)seeds._M_start@0 + 8));
              $$csx16 = *((char * *)seeds._M_start@0);
              if (!(0ull < (unsigned long long) (($$csx15 - $$csx16) / 12ll))) goto lab_18;
  1190 |      $$CIVFINAL5 = (unsigned long long) (($$csx15 - $$csx16) / 12ll);
              $$CIV5 = 0ll;
   533 |      do {   /* id=2 guarded */ /* ~16 */ 
                /* region = 90 */
                /* bump-normalized */
   611 |        if (!(*((int *)($$csx16 + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV5)) * 12ull))) == (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[0ll]))) goto lab_19;
                if (!(*((int *)($$csx16 + 4 + (long long) ((unsigned long long) ((unsigned int) ((unsigned long long) $$CIV5)) * 12ull))) == (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[1ll]))) goto lab_19;
  1193 |        i = i + -1;
  1194 |        dupe = 1u;
  1196 |        if (dupe != 0u) goto lab_18;
                goto lab_35;
  1195 |      lab_19:
  1196 |        if (dupe != 0u) goto lab_18;
              lab_35:
   533 |        $$CIV5 = $$CIV5 + 1ll;
              } while ((unsigned long long) $$CIV5 < $$CIVFINAL5);    /* ~16 */
            lab_18:
  1198 |      if (dupe != 0u) goto lab_8;
  1199 |      __10830.x@0 = (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[0ll]);
    11 |      __10830.y@4 = (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[1ll]);
              __10830.z@8 = 0;
   735 |      if (!(local_seeds._M_finish@8 != local_seeds._M_end_of_storage@10)) goto lab_26;
   101 |      if (!(local_seeds._M_finish@8 != NULL)) goto lab_47;
    12 |      *((int *)local_seeds._M_finish@8) = (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[0ll]);
              *((int *)((char *)local_seeds._M_finish@8 + 4)) = (int) (i + (unsigned long long) ((int *)((char *)grid + 40))[1ll]);
              *((int *)((char *)local_seeds._M_finish@8 + 8)) = 0;
   105 |    lab_47:
   738 |      local_seeds._M_finish@8 = ((char *)local_seeds._M_finish@8  + 12ll);
   739 |      goto lab_28;
            lab_26:
   686 |      __11198._M_current@0 = local_seeds._M_finish@8;
   444 |      std::vector<Point<int>, std::allocator<Point<int> > >::_M_insert_aux(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int> const&)(&local_seeds,__11198,&__10830)
            lab_28:
  1200 |    lab_8:
  1186 |      i = i + 1;
            } while (i < *nseeds);    /* ~7 */
          lab_9:
   611 |    __11084 = seeds._M_start@0;
   686 |    __11064._M_current@0 = *((char * *)((char *)seeds._M_start@0 + 8));
            __11069._M_current@0 = local_seeds._M_start@0;
            __11073._M_current@0 = local_seeds._M_finish@8;
   874 |    __memset(&__11077,0,1ull);
  1102 |    __memset(&__11078,0,1ull);
            void std::vector<Point<int>, std::allocator<Point<int> > >::_M_range_insert<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > > >(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, std::forward_iterator_tag)(__11084,__11064,__11069,__11073,__11078)
  1269 |    timer.rnn21 = unsigned long MMSP::approximate_voronoi<2, unsigned long>(MMSP::grid<2, unsigned long>&, std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > > const&)(grid,&seeds);
  1280 |    __es.__c4@3 = 1u;
   141 |    if (!(seeds._M_start@0 != seeds._M_finish@8)) goto lab_73;
            $$CIVINIT26 = seeds._M_start@0;
            $$CIVFINAL26 = (unsigned long long) ((seeds._M_finish@8 - seeds._M_start@0) / 24ll);
            $$CIV26 = 0ll;
            do {   /* id=12 guarded */ /* ~74 */ 
              /* region = 94 */
              /* bump-normalized */
   145 |      if (!(((char * *)$$CIVINIT26)[($$CIV26 * 24ll) / 8] != NULL)) goto lab_75;
    95 |      operator delete(void*)(((char * *)$$CIVINIT26)[($$CIV26 * 24ll) / 8])
   110 |    lab_75:
    92 |      $$CIV26 = $$CIV26 + 1ll;
            } while ((unsigned long long) $$CIV26 < $$CIVFINAL26);    /* ~74 */
          lab_73:
   145 |    if (!(seeds._M_start@0 != NULL)) goto lab_81;
    95 |    operator delete(void*)(seeds._M_start@0)
   110 |  lab_81:
  1280 |    __es.__c4@3 = 0u;
   145 |    if (!(local_seeds._M_start@0 != NULL)) goto lab_40;
    95 |    operator delete(void*)(local_seeds._M_start@0)
   110 |  lab_40:
  1280 |    rstr = timer.rnn21;
            return rstr;
  1281 |  } /* function */ 


   565 |  void void MMSP::output<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, char const*)(char * GRID, char * filename)
   567 |  {
            MMSP::grid<2, MMSP::vector<double> >::output(char const*) const(GRID,filename)
   568 |    return;
          } /* function */ 


   132 |  char * MMSP::grid<1, MMSP::vector<double> >::grid(char const*, int)(grid<1,MMSP::vector<double> > *this, char * filename, int GHOSTS)
   135 |  {
            *((char * *)this) = NULL;
   138 |    MMSP::grid<1, MMSP::vector<double> >::input(char const*, int, int)(this,filename,GHOSTS,0)
   139 |    rstr = this;
            return rstr;
          } /* function */ 


   329 |  char * MMSP::grid<1, MMSP::vector<double> >::~grid()(grid<1,MMSP::vector<double> > *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   132 |  char * MMSP::grid<3, MMSP::vector<double> >::grid(char const*, int)(grid<3,MMSP::vector<double> > *this, char * filename, int GHOSTS)
   135 |  {
            *((char * *)this) = NULL;
   138 |    MMSP::grid<3, MMSP::vector<double> >::input(char const*, int, int)(this,filename,GHOSTS,0)
   139 |    rstr = this;
            return rstr;
          } /* function */ 


   329 |  char * MMSP::grid<3, MMSP::vector<double> >::~grid()(grid<3,MMSP::vector<double> > *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   102 |  void void MMSP::update<1, double>(MMSP::grid<1, MMSP::vector<double> >&, int)(grid<1,MMSP::vector<double> > *oldGrid, int steps)
   103 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   105 |    guard_iterations5 = 1;
   112 |    void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(oldGrid)
   114 |    MMSP::grid<1, MMSP::vector<double> >::grid(MMSP::grid<1, MMSP::vector<double> > const&)(&newGrid,oldGrid);
            __es.__c4@3 = 1u;
   637 |    *((long long *)((char *)&std::cout + 8 + ((long long *)(&std::cout->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8])) = 2ll;
   122 |    void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(oldGrid)
   126 |    step = 0;
            if (!(0 < steps)) goto lab_4;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 319 */
   128 |      MMSP::print_progress(int, int)(step,steps)
   130 |      MMSP::grid<1, MMSP::vector<double> >::grid(MMSP::grid<1, MMSP::vector<double> > const&)(&c_storage,oldGrid);
              __es.__c4@3 = 2u;
   132 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_9;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 313 */
   133 |        MMSP::vector<int> MMSP::position<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 3u;
   134 |        $$PARM.this1E0 = &__11223;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$695;
   134 |        $$RET13A = $$IRET104;
    17 |        &__11223->(vector<int>).size@8.rns397.$$695 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11223->(vector<int>).data@0.rns398.$$695 = $$RET13B;
    19 |        if (!(0 < &__11223->(vector<int>).size@8.rns397.$$695)) goto lab_222;
                i = 0;
                do {   /* id=9 guarded */ /* ~223 */ 
                  /* region = 309 */
    20 |          $$SFX1C = ((char *)&__11223->(vector<int>).data@0.rns398.$$695 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$695) goto lab_224;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_224:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$695 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11223->(vector<int>).size@8.rns397.$$695);    /* ~223 */
              lab_222:
    21 |        $$IRET10A = $$PARM.this1E0;
   134 |        __es.__c4@3 = 4u;
                $$RET8D = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11223);
                $$PARM.this253 = $$RET8D;
                $$PARM.i254 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i254 < *((int *)((char *)$$PARM.this253 + 8))) goto lab_267;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_267:
    31 |        $$IRET140 = ((char *)*((char * *)$$PARM.this253) + (8ll)*((long long) $$PARM.i254));
   134 |        center = $$IRET140;
                __es.__c4@3 = 3u;
                $$PARM.this163 = &__11223;
    47 |        if (!(&__11223->(vector<int>).data@0.rns401.$$698 != NULL)) goto lab_151;
    48 |        operator delete[](void*)(&__11223->(vector<int>).data@0.rns401.$$698)
    49 |        &__11223->(vector<int>).data@0.rns401.$$698 = NULL;
    50 |      lab_151:
    51 |        $$IRET96 = $$PARM.this163;
   135 |        $$SFX1 = *center;
                $$PARM.this1F0 = &__11224;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$699;
   135 |        $$RET13A = $$IRET104;
    17 |        &__11224->(vector<int>).size@8.rns397.$$699 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11224->(vector<int>).data@0.rns398.$$699 = $$RET13B;
    19 |        if (!(0 < &__11224->(vector<int>).size@8.rns397.$$699)) goto lab_234;
                i = 0;
                do {   /* id=11 guarded */ /* ~235 */ 
                  /* region = 310 */
    20 |          $$SFX1C = ((char *)&__11224->(vector<int>).data@0.rns398.$$699 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$699) goto lab_236;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_236:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$699 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11224->(vector<int>).size@8.rns397.$$699);    /* ~235 */
              lab_234:
    21 |        $$IRET112 = $$PARM.this1F0;
   135 |        __es.__c4@3 = 5u;
                $$RET8E = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11224);
                $$PARM.this247 = $$RET8E;
                $$PARM.i248 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i248 < *((int *)((char *)$$PARM.this247 + 8))) goto lab_259;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_259:
    31 |        $$IRET13A = ((char *)*((char * *)$$PARM.this247) + (8ll)*((long long) $$PARM.i248));
   135 |        $$RET8F = $$IRET13A;
                __11225 = double MMSP::f<double>(double, double)($$SFX1,*$$RET8F);
                __es.__c4@3 = 3u;
                $$PARM.this165 = &__11224;
    47 |        if (!(&__11224->(vector<int>).data@0.rns401.$$703 != NULL)) goto lab_155;
    48 |        operator delete[](void*)(&__11224->(vector<int>).data@0.rns401.$$703)
    49 |        &__11224->(vector<int>).data@0.rns401.$$703 = NULL;
    50 |      lab_155:
    51 |        $$IRET98 = $$PARM.this165;
   136 |        $$PARM.i79 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i79 < &x->(vector<int>).size@8.rns391.$$735) goto lab_105;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_105:
    31 |        $$IRET2D = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i79));
   136 |        __11742 = $$IRET2D;
                *__11742 = *__11742 + 1;
   137 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11226,&x);
                __es.__c4@3 = 6u;
                $$RET90 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11226);
                $$PARM.this245 = $$RET90;
                $$PARM.i246 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i246 < *((int *)((char *)$$PARM.this245 + 8))) goto lab_257;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_257:
    31 |        $$IRET139 = ((char *)*((char * *)$$PARM.this245) + (8ll)*((long long) $$PARM.i246));
   137 |        right = $$IRET139;
                __es.__c4@3 = 3u;
                $$PARM.this162 = &__11226;
    47 |        if (!(&__11226->(vector<int>).data@0.rns401.$$708 != NULL)) goto lab_149;
    48 |        operator delete[](void*)(&__11226->(vector<int>).data@0.rns401.$$708)
    49 |        &__11226->(vector<int>).data@0.rns401.$$708 = NULL;
    50 |      lab_149:
    51 |        $$IRET95 = $$PARM.this162;
   138 |        $$SFX2 = *right;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11227,&x);
                __es.__c4@3 = 7u;
                $$RET91 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11227);
                $$PARM.this23F = $$RET91;
                $$PARM.i240 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i240 < *((int *)((char *)$$PARM.this23F + 8))) goto lab_251;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_251:
    31 |        $$IRET136 = ((char *)*((char * *)$$PARM.this23F) + (8ll)*((long long) $$PARM.i240));
   138 |        $$RET92 = $$IRET136;
                __11228 = double MMSP::f<double>(double, double)($$SFX2,*$$RET92);
                __es.__c4@3 = 3u;
                $$PARM.this161 = &__11227;
    47 |        if (!(&__11227->(vector<int>).data@0.rns401.$$713 != NULL)) goto lab_147;
    48 |        operator delete[](void*)(&__11227->(vector<int>).data@0.rns401.$$713)
    49 |        &__11227->(vector<int>).data@0.rns401.$$713 = NULL;
    50 |      lab_147:
    51 |        $$IRET94 = $$PARM.this161;
   139 |        $$PARM.i7B = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i7B < &x->(vector<int>).size@8.rns391.$$735) goto lab_107;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_107:
    31 |        $$IRET2E = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i7B));
   139 |        __11744 = $$IRET2E;
                *__11744 = *__11744 - 2;
   140 |        $$PARM.this1D6 = &__11229;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$715;
   140 |        $$RET13A = $$IRET104;
    17 |        &__11229->(vector<int>).size@8.rns397.$$715 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11229->(vector<int>).data@0.rns398.$$715 = $$RET13B;
    19 |        if (!(0 < &__11229->(vector<int>).size@8.rns397.$$715)) goto lab_198;
                i = 0;
                do {   /* id=5 guarded */ /* ~199 */ 
                  /* region = 311 */
    20 |          $$SFX1C = ((char *)&__11229->(vector<int>).data@0.rns398.$$715 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$715) goto lab_200;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_200:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$715 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11229->(vector<int>).size@8.rns397.$$715);    /* ~199 */
              lab_198:
    21 |        $$IRET105 = $$PARM.this1D6;
   140 |        __es.__c4@3 = 8u;
                $$RET93 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11229);
                $$PARM.this241 = $$RET93;
                $$PARM.i242 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i242 < *((int *)((char *)$$PARM.this241 + 8))) goto lab_253;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_253:
    31 |        $$IRET137 = ((char *)*((char * *)$$PARM.this241) + (8ll)*((long long) $$PARM.i242));
   140 |        left = $$IRET137;
                __es.__c4@3 = 3u;
                $$PARM.this160 = &__11229;
    47 |        if (!(&__11229->(vector<int>).data@0.rns401.$$718 != NULL)) goto lab_145;
    48 |        operator delete[](void*)(&__11229->(vector<int>).data@0.rns401.$$718)
    49 |        &__11229->(vector<int>).data@0.rns401.$$718 = NULL;
    50 |      lab_145:
    51 |        $$IRET93 = $$PARM.this160;
   141 |        $$SFX3 = *left;
                $$PARM.this1DA = &__11230;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$719;
   141 |        $$RET13A = $$IRET104;
    17 |        &__11230->(vector<int>).size@8.rns397.$$719 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11230->(vector<int>).data@0.rns398.$$719 = $$RET13B;
    19 |        if (!(0 < &__11230->(vector<int>).size@8.rns397.$$719)) goto lab_204;
                i = 0;
                do {   /* id=6 guarded */ /* ~205 */ 
                  /* region = 312 */
    20 |          $$SFX1C = ((char *)&__11230->(vector<int>).data@0.rns398.$$719 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$719) goto lab_206;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_206:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$719 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11230->(vector<int>).size@8.rns397.$$719);    /* ~205 */
              lab_204:
    21 |        $$IRET107 = $$PARM.this1DA;
   141 |        __es.__c4@3 = 9u;
                $$RET94 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11230);
                $$PARM.this233 = $$RET94;
                $$PARM.i234 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i234 < *((int *)((char *)$$PARM.this233 + 8))) goto lab_239;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_239:
    31 |        $$IRET130 = ((char *)*((char * *)$$PARM.this233) + (8ll)*((long long) $$PARM.i234));
   141 |        $$RET95 = $$IRET130;
                __11231 = double MMSP::f<double>(double, double)($$SFX3,*$$RET95);
                __es.__c4@3 = 3u;
                $$PARM.this15F = &__11230;
    47 |        if (!(&__11230->(vector<int>).data@0.rns401.$$723 != NULL)) goto lab_143;
    48 |        operator delete[](void*)(&__11230->(vector<int>).data@0.rns401.$$723)
    49 |        &__11230->(vector<int>).data@0.rns401.$$723 = NULL;
    50 |      lab_143:
    51 |        $$IRET92 = $$PARM.this15F;
   142 |        $$PARM.i7D = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i7D < &x->(vector<int>).size@8.rns391.$$735) goto lab_109;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_109:
    31 |        $$IRET2F = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i7D));
   142 |        __11745 = $$IRET2F;
                *__11745 = *__11745 + 1;
   143 |        $$PARM.i75 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i75 < &x->(vector<int>).size@8.rns391.$$735) goto lab_101;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_101:
    31 |        $$IRET2B = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i75));
   143 |        __11747 = $$IRET2B;
                *__11747 = *__11747 + 1;
   144 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11232,&x);
                __es.__c4@3 = 10u;
                $$RET96 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11232);
                $$PARM.this249 = $$RET96;
                $$PARM.i24A = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i24A < *((int *)((char *)$$PARM.this249 + 8))) goto lab_261;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_261:
    31 |        $$IRET13B = ((char *)*((char * *)$$PARM.this249) + (8ll)*((long long) $$PARM.i24A));
   144 |        up = $$IRET13B;
                __es.__c4@3 = 3u;
                $$PARM.this158 = &__11232;
    47 |        if (!(&__11232->(vector<int>).data@0.rns401.$$729 != NULL)) goto lab_129;
    48 |        operator delete[](void*)(&__11232->(vector<int>).data@0.rns401.$$729)
    49 |        &__11232->(vector<int>).data@0.rns401.$$729 = NULL;
    50 |      lab_129:
    51 |        $$IRET8B = $$PARM.this158;
   145 |        $$SFX4 = *up;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11233,&x);
                __es.__c4@3 = 11u;
                $$RET97 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11233);
                $$PARM.this25D = $$RET97;
                $$PARM.i25E = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i25E < *((int *)((char *)$$PARM.this25D + 8))) goto lab_275;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_275:
    31 |        $$IRET145 = ((char *)*((char * *)$$PARM.this25D) + (8ll)*((long long) $$PARM.i25E));
   145 |        $$RET98 = $$IRET145;
                __11234 = double MMSP::f<double>(double, double)($$SFX4,*$$RET98);
                __es.__c4@3 = 3u;
                $$PARM.this15D = &__11233;
    47 |        if (!(&__11233->(vector<int>).data@0.rns401.$$734 != NULL)) goto lab_139;
    48 |        operator delete[](void*)(&__11233->(vector<int>).data@0.rns401.$$734)
    49 |        &__11233->(vector<int>).data@0.rns401.$$734 = NULL;
    50 |      lab_139:
    51 |        $$IRET90 = $$PARM.this15D;
   146 |        $$PARM.i69 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i69 < &x->(vector<int>).size@8.rns391.$$735) goto lab_91;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_91:
    31 |        $$IRET25 = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i69));
   146 |        __11749 = $$IRET25;
                *__11749 = *__11749 - 2;
   147 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11235,&x);
                __es.__c4@3 = 12u;
                $$RET99 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11235);
                $$PARM.this239 = $$RET99;
                $$PARM.i23A = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i23A < *((int *)((char *)$$PARM.this239 + 8))) goto lab_245;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_245:
    31 |        $$IRET133 = ((char *)*((char * *)$$PARM.this239) + (8ll)*((long long) $$PARM.i23A));
   147 |        down = $$IRET133;
                __es.__c4@3 = 3u;
                $$PARM.this15B = &__11235;
    47 |        if (!(&__11235->(vector<int>).data@0.rns401.$$739 != NULL)) goto lab_135;
    48 |        operator delete[](void*)(&__11235->(vector<int>).data@0.rns401.$$739)
    49 |        &__11235->(vector<int>).data@0.rns401.$$739 = NULL;
    50 |      lab_135:
    51 |        $$IRET8E = $$PARM.this15B;
   148 |        $$SFX5 = *down;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11236,&x);
                __es.__c4@3 = 13u;
                $$RET9A = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11236);
                $$PARM.this235 = $$RET9A;
                $$PARM.i236 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i236 < *((int *)((char *)$$PARM.this235 + 8))) goto lab_241;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_241:
    31 |        $$IRET131 = ((char *)*((char * *)$$PARM.this235) + (8ll)*((long long) $$PARM.i236));
   148 |        $$RET9B = $$IRET131;
                __11237 = double MMSP::f<double>(double, double)($$SFX5,*$$RET9B);
                __es.__c4@3 = 3u;
                $$PARM.this15A = &__11236;
    47 |        if (!(&__11236->(vector<int>).data@0.rns401.$$744 != NULL)) goto lab_133;
    48 |        operator delete[](void*)(&__11236->(vector<int>).data@0.rns401.$$744)
    49 |        &__11236->(vector<int>).data@0.rns401.$$744 = NULL;
    50 |      lab_133:
    51 |        $$IRET8D = $$PARM.this15A;
   149 |        $$PARM.i7F = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i7F < &x->(vector<int>).size@8.rns391.$$735) goto lab_111;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_111:
    31 |        $$IRET30 = ((char *)&x->(vector<int>).data@0.rns392.$$735 + (4ll)*((long long) $$PARM.i7F));
   149 |        __11750 = $$IRET30;
                *__11750 = *__11750 + 1;
                $$RET9C = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this237 = $$RET9C;
                $$PARM.i238 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i238 < *((int *)((char *)$$PARM.this237 + 8))) goto lab_243;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_243:
    31 |        $$IRET132 = ((char *)*((char * *)$$PARM.this237) + (8ll)*((long long) $$PARM.i238));
   149 |        $$RET9D = $$IRET132;
   150 |        *$$RET9D = _fnmsub@53( 4.0000000000000000E+000,*center,((*left + *right) + *up) + *down) / (((double *)((char *)oldGrid + 64))[0ll] * ((double *)((char *)oldGrid + 64))[0ll]);
                $$RET9E = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this257 = $$RET9E;
                $$PARM.i258 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i258 < *((int *)((char *)$$PARM.this257 + 8))) goto lab_271;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_271:
    31 |        $$IRET142 = ((char *)*((char * *)$$PARM.this257) + (8ll)*((long long) $$PARM.i258));
   150 |        $$RET9F = $$IRET142;
   151 |        *$$RET9F = _fnmsub@53( 4.0000000000000000E+000,&__11225->(double),((&__11231->(double) + &__11228->(double)) + &__11234->(double)) + &__11237->(double)) / (((double *)((char *)oldGrid + 64))[0ll] * ((double *)((char *)oldGrid + 64))[0ll]);
   153 |        __es.__c4@3 = 2u;
                $$PARM.this159 = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$750 != NULL)) goto lab_131;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$750)
    49 |        &x->(vector<int>).data@0.rns401.$$750 = NULL;
    50 |      lab_131:
    51 |        $$IRET8C = $$PARM.this159;
   132 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~7 */
            lab_9:
   156 |      void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(&c_storage)
   157 |      void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(oldGrid)
   159 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_12;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 317 */
   160 |        MMSP::vector<int> MMSP::position<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 14u;
   161 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11239,&x);
                __es.__c4@3 = 15u;
                oldX = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11239);
                __es.__c4@3 = 14u;
                $$PARM.this155 = &__11239;
    47 |        if (!(&__11239->(vector<int>).data@0.rns401.$$660 != NULL)) goto lab_127;
    48 |        operator delete[](void*)(&__11239->(vector<int>).data@0.rns401.$$660)
    49 |        &__11239->(vector<int>).data@0.rns401.$$660 = NULL;
    50 |      lab_127:
    51 |        $$IRET88 = $$PARM.this155;
   162 |        $$PARM.this1DE = &__11240;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$661;
   162 |        $$RET13A = $$IRET104;
    17 |        &__11240->(vector<int>).size@8.rns397.$$661 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11240->(vector<int>).data@0.rns398.$$661 = $$RET13B;
    19 |        if (!(0 < &__11240->(vector<int>).size@8.rns397.$$661)) goto lab_216;
                i = 0;
                do {   /* id=8 guarded */ /* ~217 */ 
                  /* region = 314 */
    20 |          $$SFX1C = ((char *)&__11240->(vector<int>).data@0.rns398.$$661 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$661) goto lab_218;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_218:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$661 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11240->(vector<int>).size@8.rns397.$$661);    /* ~217 */
              lab_216:
    21 |        $$IRET109 = $$PARM.this1DE;
   162 |        __es.__c4@3 = 16u;
                csX = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11240);
                __es.__c4@3 = 14u;
                $$PARM.this164 = &__11240;
    47 |        if (!(&__11240->(vector<int>).data@0.rns401.$$663 != NULL)) goto lab_153;
    48 |        operator delete[](void*)(&__11240->(vector<int>).data@0.rns401.$$663)
    49 |        &__11240->(vector<int>).data@0.rns401.$$663 = NULL;
    50 |      lab_153:
    51 |        $$IRET97 = $$PARM.this164;
   163 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11241,&x);
                __es.__c4@3 = 17u;
                newX = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11241);
                __es.__c4@3 = 14u;
                $$PARM.this15C = &__11241;
    47 |        if (!(&__11241->(vector<int>).data@0.rns401.$$666 != NULL)) goto lab_137;
    48 |        operator delete[](void*)(&__11241->(vector<int>).data@0.rns401.$$666)
    49 |        &__11241->(vector<int>).data@0.rns401.$$666 = NULL;
    50 |      lab_137:
    51 |        $$IRET8F = $$PARM.this15C;
   166 |        $$PARM.i6B = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i6B < &x->(vector<int>).size@8.rns391.$$667) goto lab_93;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_93:
    31 |        $$IRET26 = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i6B));
   166 |        __11753 = $$IRET26;
                *__11753 = *__11753 + 1;
   167 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11242,&x);
                __es.__c4@3 = 18u;
                $$RETA0 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11242);
                $$PARM.this255 = $$RETA0;
                $$PARM.i256 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i256 < *((int *)((char *)$$PARM.this255 + 8))) goto lab_269;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_269:
    31 |        $$IRET141 = ((char *)*((char * *)$$PARM.this255) + (8ll)*((long long) $$PARM.i256));
   167 |        right = $$IRET141;
                __es.__c4@3 = 14u;
                $$PARM.this15E = &__11242;
    47 |        if (!(&__11242->(vector<int>).data@0.rns401.$$671 != NULL)) goto lab_141;
    48 |        operator delete[](void*)(&__11242->(vector<int>).data@0.rns401.$$671)
    49 |        &__11242->(vector<int>).data@0.rns401.$$671 = NULL;
    50 |      lab_141:
    51 |        $$IRET91 = $$PARM.this15E;
   168 |        $$PARM.i6F = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i6F < &x->(vector<int>).size@8.rns391.$$667) goto lab_95;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_95:
    31 |        $$IRET28 = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i6F));
   168 |        __11755 = $$IRET28;
                *__11755 = *__11755 - 2;
   169 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11243,&x);
                __es.__c4@3 = 19u;
                $$RETA1 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11243);
                $$PARM.this25B = $$RETA1;
                $$PARM.i25C = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i25C < *((int *)((char *)$$PARM.this25B + 8))) goto lab_273;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_273:
    31 |        $$IRET144 = ((char *)*((char * *)$$PARM.this25B) + (8ll)*((long long) $$PARM.i25C));
   169 |        left = $$IRET144;
                __es.__c4@3 = 14u;
                $$PARM.this16A = &__11243;
    47 |        if (!(&__11243->(vector<int>).data@0.rns401.$$676 != NULL)) goto lab_163;
    48 |        operator delete[](void*)(&__11243->(vector<int>).data@0.rns401.$$676)
    49 |        &__11243->(vector<int>).data@0.rns401.$$676 = NULL;
    50 |      lab_163:
    51 |        $$IRET9D = $$PARM.this16A;
   170 |        $$PARM.i71 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i71 < &x->(vector<int>).size@8.rns391.$$667) goto lab_97;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_97:
    31 |        $$IRET29 = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i71));
   170 |        __11756 = $$IRET29;
                *__11756 = *__11756 + 1;
   171 |        $$PARM.i73 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i73 < &x->(vector<int>).size@8.rns391.$$667) goto lab_99;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_99:
    31 |        $$IRET2A = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i73));
   171 |        __11758 = $$IRET2A;
                *__11758 = *__11758 + 1;
   172 |        $$PARM.this1DC = &__11244;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$679;
   172 |        $$RET13A = $$IRET104;
    17 |        &__11244->(vector<int>).size@8.rns397.$$679 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11244->(vector<int>).data@0.rns398.$$679 = $$RET13B;
    19 |        if (!(0 < &__11244->(vector<int>).size@8.rns397.$$679)) goto lab_210;
                i = 0;
                do {   /* id=7 guarded */ /* ~211 */ 
                  /* region = 315 */
    20 |          $$SFX1C = ((char *)&__11244->(vector<int>).data@0.rns398.$$679 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$679) goto lab_212;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_212:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$679 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11244->(vector<int>).size@8.rns397.$$679);    /* ~211 */
              lab_210:
    21 |        $$IRET108 = $$PARM.this1DC;
   172 |        __es.__c4@3 = 20u;
                $$RETA2 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11244);
                $$PARM.this23B = $$RETA2;
                $$PARM.i23C = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i23C < *((int *)((char *)$$PARM.this23B + 8))) goto lab_247;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_247:
    31 |        $$IRET134 = ((char *)*((char * *)$$PARM.this23B) + (8ll)*((long long) $$PARM.i23C));
   172 |        up = $$IRET134;
                __es.__c4@3 = 14u;
                $$PARM.this169 = &__11244;
    47 |        if (!(&__11244->(vector<int>).data@0.rns401.$$682 != NULL)) goto lab_161;
    48 |        operator delete[](void*)(&__11244->(vector<int>).data@0.rns401.$$682)
    49 |        &__11244->(vector<int>).data@0.rns401.$$682 = NULL;
    50 |      lab_161:
    51 |        $$IRET9C = $$PARM.this169;
   173 |        $$PARM.i81 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i81 < &x->(vector<int>).size@8.rns391.$$667) goto lab_113;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_113:
    31 |        $$IRET31 = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i81));
   173 |        __11760 = $$IRET31;
                *__11760 = *__11760 - 2;
   174 |        $$PARM.this1E4 = &__11245;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$684;
   174 |        $$RET13A = $$IRET104;
    17 |        &__11245->(vector<int>).size@8.rns397.$$684 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11245->(vector<int>).data@0.rns398.$$684 = $$RET13B;
    19 |        if (!(0 < &__11245->(vector<int>).size@8.rns397.$$684)) goto lab_228;
                i = 0;
                do {   /* id=10 guarded */ /* ~229 */ 
                  /* region = 316 */
    20 |          $$SFX1C = ((char *)&__11245->(vector<int>).data@0.rns398.$$684 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$684) goto lab_230;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_230:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$684 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11245->(vector<int>).size@8.rns397.$$684);    /* ~229 */
              lab_228:
    21 |        $$IRET10C = $$PARM.this1E4;
   174 |        __es.__c4@3 = 21u;
                $$RETA3 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11245);
                $$PARM.this251 = $$RETA3;
                $$PARM.i252 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i252 < *((int *)((char *)$$PARM.this251 + 8))) goto lab_265;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_265:
    31 |        $$IRET13F = ((char *)*((char * *)$$PARM.this251) + (8ll)*((long long) $$PARM.i252));
   174 |        down = $$IRET13F;
                __es.__c4@3 = 14u;
                $$PARM.this168 = &__11245;
    47 |        if (!(&__11245->(vector<int>).data@0.rns401.$$687 != NULL)) goto lab_159;
    48 |        operator delete[](void*)(&__11245->(vector<int>).data@0.rns401.$$687)
    49 |        &__11245->(vector<int>).data@0.rns401.$$687 = NULL;
    50 |      lab_159:
    51 |        $$IRET9B = $$PARM.this168;
   175 |        $$PARM.i77 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i77 < &x->(vector<int>).size@8.rns391.$$667) goto lab_103;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_103:
    31 |        $$IRET2C = ((char *)&x->(vector<int>).data@0.rns392.$$667 + (4ll)*((long long) $$PARM.i77));
   175 |        __11761 = $$IRET2C;
                *__11761 = *__11761 + 1;
   177 |        $$SFX6 = ((*left + *right) + *up) + *down;
                $$PARM.this3E6 = csX;
                $$PARM.i3E7 = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3E7 < *((int *)((char *)$$PARM.this3E6 + 8))) goto lab_313;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_313:
    35 |        $$IRET200 = ((char *)*((char * *)$$PARM.this3E6) + (8ll)*((long long) $$PARM.i3E7));
   177 |        $$RETA4 = $$IRET200;
                Kg4C = ( 1.0000000000000000E-003 * _fnmsub@53( 4.0000000000000000E+000,*$$RETA4,$$SFX6)) / (((double *)((char *)oldGrid + 64))[0ll] * ((double *)((char *)oldGrid + 64))[0ll]);
                $$PARM.this3E4 = csX;
                $$PARM.i3E5 = 1;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3E5 < *((int *)((char *)$$PARM.this3E4 + 8))) goto lab_311;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_311:
    35 |        $$IRET1FF = ((char *)*((char * *)$$PARM.this3E4) + (8ll)*((long long) $$PARM.i3E5));
   177 |        $$RETA5 = $$IRET1FF;
   179 |        dCdt =  2.5000000000000001E-002 * (*$$RETA5 - Kg4C);
   180 |        $$PARM.this23D = newX;
                $$PARM.i23E = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i23E < *((int *)((char *)$$PARM.this23D + 8))) goto lab_249;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_249:
    31 |        $$IRET135 = ((char *)*((char * *)$$PARM.this23D) + (8ll)*((long long) $$PARM.i23E));
   180 |        $$SFX7 = $$IRET135;
                $$PARM.this3E8 = oldX;
                $$PARM.i3E9 = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3E9 < *((int *)((char *)$$PARM.this3E8 + 8))) goto lab_315;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_315:
    35 |        $$IRET201 = ((char *)*((char * *)$$PARM.this3E8) + (8ll)*((long long) $$PARM.i3E9));
   180 |        $$RETA6 = $$IRET201;
                *$$SFX7 = _fmadd@47( 5.0000000000000002E-005,dCdt,*$$RETA6);
   184 |        __es.__c4@3 = 2u;
                $$PARM.this166 = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$693 != NULL)) goto lab_157;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$693)
    49 |        &x->(vector<int>).data@0.rns401.$$693 = NULL;
    50 |      lab_157:
    51 |        $$IRET99 = $$PARM.this166;
   159 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~10 */
            lab_12:
   186 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_15;
              do {   /* id=2 guarded */ /* ~13 */ 
                /* region = 318 */
                $$RETA7 = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   187 |        $$PARM.this24D = $$RETA7;
                $$PARM.i24E = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i24E < *((int *)((char *)$$PARM.this24D + 8))) goto lab_263;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_263:
    31 |        $$IRET13D = ((char *)*((char * *)$$PARM.this24D) + (8ll)*((long long) $$PARM.i24E));
   187 |        $$SFX8 = $$IRET13D;
                $$RETA8 = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this261 = $$RETA8;
                $$PARM.i262 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i262 < *((int *)((char *)$$PARM.this261 + 8))) goto lab_279;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_279:
    31 |        $$IRET147 = ((char *)*((char * *)$$PARM.this261) + (8ll)*((long long) $$PARM.i262));
   187 |        $$RETA9 = $$IRET147;
                *$$SFX8 = *$$RETA9;
                $$RETAA = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   188 |        $$PARM.this25F = $$RETAA;
                $$PARM.i260 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i260 < *((int *)((char *)$$PARM.this25F + 8))) goto lab_277;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_277:
    31 |        $$IRET146 = ((char *)*((char * *)$$PARM.this25F) + (8ll)*((long long) $$PARM.i260));
   188 |        $$SFX9 = $$IRET146;
                $$RETAB = MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this243 = $$RETAB;
                $$PARM.i244 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i244 < *((int *)((char *)$$PARM.this243 + 8))) goto lab_255;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_255:
    31 |        $$IRET138 = ((char *)*((char * *)$$PARM.this243) + (8ll)*((long long) $$PARM.i244));
   188 |        $$RETAC = $$IRET138;
                *$$SFX9 = *$$RETAC;
   189 |        if (!(i % 2 == step % 2)) goto lab_16;
    81 |        &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
   208 |        __es.__c4@3 = 25u;
   192 |        MMSP::vector<int> MMSP::position<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 26u;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11247,&x);
                __es.__c4@3 = 27u;
                $$RETAD = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11247);
                $$PARM.this2C1 = $$RETAD;
                $$PARM.i2C2 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C2 < *((int *)((char *)$$PARM.this2C1 + 8))) goto lab_291;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_291:
    31 |        $$IRET177 = ((char *)*((char * *)$$PARM.this2C1) + (8ll)*((long long) $$PARM.i2C2));
   734 |        __11610 = $$IRET177;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_18;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_21;
   105 |        *grains._M_finish@8 = *__11610;
              lab_21:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_23;
              lab_18:
   686 |        __11606._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11606,__11610)
              lab_23:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this195 = &__11247;
    47 |        if (!(&__11247->(vector<int>).data@0.rns401.$$578 != NULL)) goto lab_187;
    48 |        operator delete[](void*)(&__11247->(vector<int>).data@0.rns401.$$578)
    49 |        &__11247->(vector<int>).data@0.rns401.$$578 = NULL;
    50 |      lab_187:
    51 |        $$IRETC8 = $$PARM.this195;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11248,&x);
                __es.__c4@3 = 28u;
                $$RETAE = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11248);
                $$PARM.this2C7 = $$RETAE;
                $$PARM.i2C8 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C8 < *((int *)((char *)$$PARM.this2C7 + 8))) goto lab_295;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_295:
    31 |        $$IRET17A = ((char *)*((char * *)$$PARM.this2C7) + (8ll)*((long long) $$PARM.i2C8));
   734 |        __11624 = $$IRET17A;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_24;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_27;
   105 |        *phases._M_finish@8 = *__11624;
              lab_27:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_29;
              lab_24:
   686 |        __11620._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11620,__11624)
              lab_29:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this191 = &__11248;
    47 |        if (!(&__11248->(vector<int>).data@0.rns401.$$583 != NULL)) goto lab_185;
    48 |        operator delete[](void*)(&__11248->(vector<int>).data@0.rns401.$$583)
    49 |        &__11248->(vector<int>).data@0.rns401.$$583 = NULL;
    50 |      lab_185:
    51 |        $$IRETC4 = $$PARM.this191;
   195 |        $$PARM.iAF = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iAF < &x->(vector<int>).size@8.rns391.$$606) goto lab_125;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_125:
    31 |        $$IRET48 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.iAF));
   195 |        __11764 = $$IRET48;
                *__11764 = *__11764 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11249,&x);
                __es.__c4@3 = 29u;
                $$RETAF = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11249);
                $$PARM.this2CD = $$RETAF;
                $$PARM.i2CE = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2CE < *((int *)((char *)$$PARM.this2CD + 8))) goto lab_301;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_301:
    31 |        $$IRET17D = ((char *)*((char * *)$$PARM.this2CD) + (8ll)*((long long) $$PARM.i2CE));
   734 |        __11638 = $$IRET17D;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_30;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_33;
   105 |        *grains._M_finish@8 = *__11638;
              lab_33:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_35;
              lab_30:
   686 |        __11634._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11634,__11638)
              lab_35:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this187 = &__11249;
    47 |        if (!(&__11249->(vector<int>).data@0.rns401.$$589 != NULL)) goto lab_175;
    48 |        operator delete[](void*)(&__11249->(vector<int>).data@0.rns401.$$589)
    49 |        &__11249->(vector<int>).data@0.rns401.$$589 = NULL;
    50 |      lab_175:
    51 |        $$IRETBA = $$PARM.this187;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11250,&x);
                __es.__c4@3 = 30u;
                $$RETB0 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11250);
                $$PARM.this2D1 = $$RETB0;
                $$PARM.i2D2 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D2 < *((int *)((char *)$$PARM.this2D1 + 8))) goto lab_303;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_303:
    31 |        $$IRET17F = ((char *)*((char * *)$$PARM.this2D1) + (8ll)*((long long) $$PARM.i2D2));
   734 |        __11652 = $$IRET17F;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_36;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_39;
   105 |        *phases._M_finish@8 = *__11652;
              lab_39:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_41;
              lab_36:
   686 |        __11648._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11648,__11652)
              lab_41:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this188 = &__11250;
    47 |        if (!(&__11250->(vector<int>).data@0.rns401.$$594 != NULL)) goto lab_177;
    48 |        operator delete[](void*)(&__11250->(vector<int>).data@0.rns401.$$594)
    49 |        &__11250->(vector<int>).data@0.rns401.$$594 = NULL;
    50 |      lab_177:
    51 |        $$IRETBB = $$PARM.this188;
   198 |        $$PARM.iAB = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iAB < &x->(vector<int>).size@8.rns391.$$606) goto lab_123;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_123:
    31 |        $$IRET46 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.iAB));
   198 |        __11766 = $$IRET46;
                *__11766 = *__11766 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11251,&x);
                __es.__c4@3 = 31u;
                $$RETB1 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11251);
                $$PARM.this2C9 = $$RETB1;
                $$PARM.i2CA = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2CA < *((int *)((char *)$$PARM.this2C9 + 8))) goto lab_297;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_297:
    31 |        $$IRET17B = ((char *)*((char * *)$$PARM.this2C9) + (8ll)*((long long) $$PARM.i2CA));
   734 |        __11666 = $$IRET17B;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_42;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_45;
   105 |        *grains._M_finish@8 = *__11666;
              lab_45:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_47;
              lab_42:
   686 |        __11662._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11662,__11666)
              lab_47:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this189 = &__11251;
    47 |        if (!(&__11251->(vector<int>).data@0.rns401.$$600 != NULL)) goto lab_179;
    48 |        operator delete[](void*)(&__11251->(vector<int>).data@0.rns401.$$600)
    49 |        &__11251->(vector<int>).data@0.rns401.$$600 = NULL;
    50 |      lab_179:
    51 |        $$IRETBC = $$PARM.this189;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11252,&x);
                __es.__c4@3 = 32u;
                $$RETB2 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11252);
                $$PARM.this2D3 = $$RETB2;
                $$PARM.i2D4 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D4 < *((int *)((char *)$$PARM.this2D3 + 8))) goto lab_305;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_305:
    31 |        $$IRET180 = ((char *)*((char * *)$$PARM.this2D3) + (8ll)*((long long) $$PARM.i2D4));
   734 |        __11680 = $$IRET180;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_48;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_51;
   105 |        *phases._M_finish@8 = *__11680;
              lab_51:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_53;
              lab_48:
   686 |        __11676._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11676,__11680)
              lab_53:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this180 = &__11252;
    47 |        if (!(&__11252->(vector<int>).data@0.rns401.$$605 != NULL)) goto lab_173;
    48 |        operator delete[](void*)(&__11252->(vector<int>).data@0.rns401.$$605)
    49 |        &__11252->(vector<int>).data@0.rns401.$$605 = NULL;
    50 |      lab_173:
    51 |        $$IRETB3 = $$PARM.this180;
   201 |        $$PARM.i87 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i87 < &x->(vector<int>).size@8.rns391.$$606) goto lab_115;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_115:
    31 |        $$IRET34 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.i87));
   201 |        __11767 = $$IRET34;
                *__11767 = *__11767 + 1;
   202 |        $$PARM.iA9 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA9 < &x->(vector<int>).size@8.rns391.$$606) goto lab_121;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_121:
    31 |        $$IRET45 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.iA9));
   202 |        __11769 = $$IRET45;
                *__11769 = *__11769 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11253,&x);
                __es.__c4@3 = 33u;
                $$RETB3 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11253);
                $$PARM.this2C5 = $$RETB3;
                $$PARM.i2C6 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C6 < *((int *)((char *)$$PARM.this2C5 + 8))) goto lab_293;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_293:
    31 |        $$IRET179 = ((char *)*((char * *)$$PARM.this2C5) + (8ll)*((long long) $$PARM.i2C6));
   734 |        __11694 = $$IRET179;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_54;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_57;
   105 |        *grains._M_finish@8 = *__11694;
              lab_57:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_59;
              lab_54:
   686 |        __11690._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11690,__11694)
              lab_59:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this17A = &__11253;
    47 |        if (!(&__11253->(vector<int>).data@0.rns401.$$612 != NULL)) goto lab_171;
    48 |        operator delete[](void*)(&__11253->(vector<int>).data@0.rns401.$$612)
    49 |        &__11253->(vector<int>).data@0.rns401.$$612 = NULL;
    50 |      lab_171:
    51 |        $$IRETAD = $$PARM.this17A;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11254,&x);
                __es.__c4@3 = 34u;
                $$RETB4 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11254);
                $$PARM.this2B5 = $$RETB4;
                $$PARM.i2B6 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B6 < *((int *)((char *)$$PARM.this2B5 + 8))) goto lab_285;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_285:
    31 |        $$IRET171 = ((char *)*((char * *)$$PARM.this2B5) + (8ll)*((long long) $$PARM.i2B6));
   734 |        __11708 = $$IRET171;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_60;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_63;
   105 |        *phases._M_finish@8 = *__11708;
              lab_63:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_65;
              lab_60:
   686 |        __11704._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11704,__11708)
              lab_65:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this18A = &__11254;
    47 |        if (!(&__11254->(vector<int>).data@0.rns401.$$617 != NULL)) goto lab_181;
    48 |        operator delete[](void*)(&__11254->(vector<int>).data@0.rns401.$$617)
    49 |        &__11254->(vector<int>).data@0.rns401.$$617 = NULL;
    50 |      lab_181:
    51 |        $$IRETBD = $$PARM.this18A;
   205 |        $$PARM.iA1 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA1 < &x->(vector<int>).size@8.rns391.$$606) goto lab_119;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_119:
    31 |        $$IRET41 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.iA1));
   205 |        __11771 = $$IRET41;
                *__11771 = *__11771 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11255,&x);
                __es.__c4@3 = 35u;
                $$RETB5 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11255);
                $$PARM.this2B3 = $$RETB5;
                $$PARM.i2B4 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B4 < *((int *)((char *)$$PARM.this2B3 + 8))) goto lab_283;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_283:
    31 |        $$IRET170 = ((char *)*((char * *)$$PARM.this2B3) + (8ll)*((long long) $$PARM.i2B4));
   734 |        __11722 = $$IRET170;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_66;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_69;
   105 |        *grains._M_finish@8 = *__11722;
              lab_69:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_71;
              lab_66:
   686 |        __11718._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__11718,__11722)
              lab_71:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this18C = &__11255;
    47 |        if (!(&__11255->(vector<int>).data@0.rns401.$$623 != NULL)) goto lab_183;
    48 |        operator delete[](void*)(&__11255->(vector<int>).data@0.rns401.$$623)
    49 |        &__11255->(vector<int>).data@0.rns401.$$623 = NULL;
    50 |      lab_183:
    51 |        $$IRETBF = $$PARM.this18C;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11256,&x);
                __es.__c4@3 = 36u;
                $$RETB6 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11256);
                $$PARM.this2B9 = $$RETB6;
                $$PARM.i2BA = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2BA < *((int *)((char *)$$PARM.this2B9 + 8))) goto lab_287;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_287:
    31 |        $$IRET173 = ((char *)*((char * *)$$PARM.this2B9) + (8ll)*((long long) $$PARM.i2BA));
   734 |        __11736 = $$IRET173;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_72;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_75;
   105 |        *phases._M_finish@8 = *__11736;
              lab_75:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_77;
              lab_72:
   686 |        __11732._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__11732,__11736)
              lab_77:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this16C = &__11256;
    47 |        if (!(&__11256->(vector<int>).data@0.rns401.$$628 != NULL)) goto lab_167;
    48 |        operator delete[](void*)(&__11256->(vector<int>).data@0.rns401.$$628)
    49 |        &__11256->(vector<int>).data@0.rns401.$$628 = NULL;
    50 |      lab_167:
    51 |        $$IRET9F = $$PARM.this16C;
   208 |        $$PARM.i91 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i91 < &x->(vector<int>).size@8.rns391.$$606) goto lab_117;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_117:
    31 |        $$IRET39 = ((char *)&x->(vector<int>).data@0.rns392.$$606 + (4ll)*((long long) $$PARM.i91));
   208 |        __11772 = $$IRET39;
                *__11772 = *__11772 + 1;
   209 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11257,&x);
                __es.__c4@3 = 37u;
                $$RETB7 = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11257);
                $$PARM.this2BD = $$RETB7;
                $$PARM.i2BE = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2BE < *((int *)((char *)$$PARM.this2BD + 8))) goto lab_289;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_289:
    31 |        $$IRET175 = ((char *)*((char * *)$$PARM.this2BD) + (8ll)*((long long) $$PARM.i2BE));
   209 |        $$RETB8 = $$IRET175;
                std::vector<double, std::allocator<double> > MMSP::dE<double>(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)(&deltas,*$$RETB8,&phases,&grains)
                __es.__c4@3 = 26u;
                $$PARM.this16B = &__11257;
    47 |        if (!(&__11257->(vector<int>).data@0.rns401.$$634 != NULL)) goto lab_165;
    48 |        operator delete[](void*)(&__11257->(vector<int>).data@0.rns401.$$634)
    49 |        &__11257->(vector<int>).data@0.rns401.$$634 = NULL;
    50 |      lab_165:
    51 |        $$IRET9E = $$PARM.this16B;
   209 |        __es.__c4@3 = 38u;
                $$RETB9 = rand();
   611 |        if (!(*((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull))) <  0.0000000000000000E+000)) goto lab_78;
   212 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11259,&x);
                __es.__c4@3 = 39u;
                $$RETBA = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11259);
                $$PARM.this2CB = $$RETBA;
                $$PARM.i2CC = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2CC < *((int *)((char *)$$PARM.this2CB + 8))) goto lab_299;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_299:
    31 |        $$IRET17C = ((char *)*((char * *)$$PARM.this2CB) + (8ll)*((long long) $$PARM.i2CC));
   212 |        $$BDC4 = $$IRET17C;
   611 |        *$$BDC4 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this19E = &__11259;
    47 |        if (!(&__11259->(vector<int>).data@0.rns401.$$652 != NULL)) goto lab_191;
    48 |        operator delete[](void*)(&__11259->(vector<int>).data@0.rns401.$$652)
    49 |        &__11259->(vector<int>).data@0.rns401.$$652 = NULL;
    50 |      lab_191:
    51 |        $$IRETD1 = $$PARM.this19E;
   213 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11260,&x);
                __es.__c4@3 = 40u;
                $$RETBB = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11260);
                $$PARM.this2B1 = $$RETBB;
                $$PARM.i2B2 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B2 < *((int *)((char *)$$PARM.this2B1 + 8))) goto lab_281;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_281:
    31 |        $$IRET16F = ((char *)*((char * *)$$PARM.this2B1) + (8ll)*((long long) $$PARM.i2B2));
   213 |        $$BDC5 = $$IRET16F;
   611 |        *$$BDC5 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this19D = &__11260;
    47 |        if (!(&__11260->(vector<int>).data@0.rns401.$$656 != NULL)) goto lab_189;
    48 |        operator delete[](void*)(&__11260->(vector<int>).data@0.rns401.$$656)
    49 |        &__11260->(vector<int>).data@0.rns401.$$656 = NULL;
    50 |      lab_189:
    51 |        $$IRETD0 = $$PARM.this19D;
   214 |        goto lab_80;
              lab_78:
                $$RETBC = (double) rand();
   611 |        if (!($$RETBC /  2.1474836470000000E+009 < __exp@1(- *((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)))))) goto lab_81;
   216 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11261,&x);
                __es.__c4@3 = 41u;
                $$RETBD = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11261);
                $$PARM.this2FF = $$RETBD;
                $$PARM.i300 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i300 < *((int *)((char *)$$PARM.this2FF + 8))) goto lab_307;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_307:
    31 |        $$IRET196 = ((char *)*((char * *)$$PARM.this2FF) + (8ll)*((long long) $$PARM.i300));
   216 |        $$BDC7 = $$IRET196;
   611 |        *$$BDC7 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1C0 = &__11261;
    47 |        if (!(&__11261->(vector<int>).data@0.rns401.$$644 != NULL)) goto lab_193;
    48 |        operator delete[](void*)(&__11261->(vector<int>).data@0.rns401.$$644)
    49 |        &__11261->(vector<int>).data@0.rns401.$$644 = NULL;
    50 |      lab_193:
    51 |        $$IRETF3 = $$PARM.this1C0;
   217 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11262,&x);
                __es.__c4@3 = 42u;
                $$RETBE = MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11262);
                $$PARM.this301 = $$RETBE;
                $$PARM.i302 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i302 < *((int *)((char *)$$PARM.this301 + 8))) goto lab_309;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_309:
    31 |        $$IRET197 = ((char *)*((char * *)$$PARM.this301) + (8ll)*((long long) $$PARM.i302));
   217 |        $$BDC8 = $$IRET197;
   611 |        *$$BDC8 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RETB9 % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1C1 = &__11262;
    47 |        if (!(&__11262->(vector<int>).data@0.rns401.$$648 != NULL)) goto lab_195;
    48 |        operator delete[](void*)(&__11262->(vector<int>).data@0.rns401.$$648)
    49 |        &__11262->(vector<int>).data@0.rns401.$$648 = NULL;
    50 |      lab_195:
    51 |        $$IRETF4 = $$PARM.this1C1;
   218 |      lab_81:
              lab_80:
   219 |        __es.__c4@3 = 26u;
                $$PARM.this3F8 = &deltas;
   145 |        if (!(deltas._M_start@0 != NULL)) goto lab_329;
    95 |        operator delete(void*)(deltas._M_start@0)
   110 |      lab_329:
   132 |        $$PARM.this226 = $$PARM.this3F8;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3F8;
   314 |        $$IRET20A = $$PARM.this3F8;
   219 |        __es.__c4@3 = 25u;
                $$PARM.this16D = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$638 != NULL)) goto lab_169;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$638)
    49 |        &x->(vector<int>).data@0.rns401.$$638 = NULL;
    50 |      lab_169:
    51 |        $$IRETA0 = $$PARM.this16D;
   219 |        __es.__c4@3 = 23u;
                $$PARM.this3F7 = &phases;
   145 |        if (!(phases._M_start@0 != NULL)) goto lab_323;
    95 |        operator delete(void*)(phases._M_start@0)
   110 |      lab_323:
   132 |        $$PARM.this226 = $$PARM.this3F7;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3F7;
   314 |        $$IRET209 = $$PARM.this3F7;
   219 |        __es.__c4@3 = 2u;
                $$PARM.this3F6 = &grains;
   145 |        if (!(grains._M_start@0 != NULL)) goto lab_317;
    95 |        operator delete(void*)(grains._M_start@0)
   110 |      lab_317:
   132 |        $$PARM.this226 = $$PARM.this3F6;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3F6;
   314 |        $$IRET208 = $$PARM.this3F6;
   219 |      lab_16:
   186 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~13 */
            lab_15:
   223 |      void MMSP::swap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&, MMSP::grid<1, MMSP::vector<double> >&)(oldGrid,&newGrid)
   224 |      void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(oldGrid)
   225 |      __es.__c4@3 = 1u;
              MMSP::grid<1, MMSP::vector<double> >::~grid()(&c_storage);
   126 |      step = step + 1;
            } while (step < steps);    /* ~2 */
          lab_4:
   227 |    iterations = iterations + 1;
   228 |    __es.__c4@3 = 0u;
            MMSP::grid<1, MMSP::vector<double> >::~grid()(&newGrid);
            return;
          } /* function */ 


   565 |  void void MMSP::output<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, char const*)(char * GRID, char * filename)
   567 |  {
            MMSP::grid<1, MMSP::vector<double> >::output(char const*) const(GRID,filename)
   568 |    return;
          } /* function */ 


   102 |  void void MMSP::update<2, double>(MMSP::grid<2, MMSP::vector<double> >&, int)(grid<2,MMSP::vector<double> > *oldGrid, int steps)
   103 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   105 |    guard_iterations5 = 1;
   112 |    void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(oldGrid)
   114 |    MMSP::grid<2, MMSP::vector<double> >::grid(MMSP::grid<2, MMSP::vector<double> > const&)(&newGrid,oldGrid);
            __es.__c4@3 = 1u;
   637 |    *((long long *)((char *)&std::cout + 8 + ((long long *)(&std::cout->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8])) = 2ll;
   122 |    void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(oldGrid)
   126 |    step = 0;
            if (!(0 < steps)) goto lab_4;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 319 */
   128 |      MMSP::print_progress(int, int)(step,steps)
   130 |      MMSP::grid<2, MMSP::vector<double> >::grid(MMSP::grid<2, MMSP::vector<double> > const&)(&c_storage,oldGrid);
              __es.__c4@3 = 2u;
   132 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_9;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 314 */
   133 |        MMSP::vector<int> MMSP::position<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 3u;
   134 |        $$PARM.this1FA = &__11775;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$893;
   134 |        $$RET13A = $$IRET104;
    17 |        &__11775->(vector<int>).size@8.rns397.$$893 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11775->(vector<int>).data@0.rns398.$$893 = $$RET13B;
    19 |        if (!(0 < &__11775->(vector<int>).size@8.rns397.$$893)) goto lab_222;
                i = 0;
                do {   /* id=9 guarded */ /* ~223 */ 
                  /* region = 309 */
    20 |          $$SFX1C = ((char *)&__11775->(vector<int>).data@0.rns398.$$893 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$893) goto lab_224;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_224:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$893 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11775->(vector<int>).size@8.rns397.$$893);    /* ~223 */
              lab_222:
    21 |        $$IRET117 = $$PARM.this1FA;
   134 |        __es.__c4@3 = 4u;
                $$RETBF = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11775);
                $$PARM.this279 = $$RETBF;
                $$PARM.i27A = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i27A < *((int *)((char *)$$PARM.this279 + 8))) goto lab_257;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_257:
    31 |        $$IRET153 = ((char *)*((char * *)$$PARM.this279) + (8ll)*((long long) $$PARM.i27A));
   134 |        center = $$IRET153;
                __es.__c4@3 = 3u;
                $$PARM.this192 = &__11775;
    47 |        if (!(&__11775->(vector<int>).data@0.rns401.$$896 != NULL)) goto lab_145;
    48 |        operator delete[](void*)(&__11775->(vector<int>).data@0.rns401.$$896)
    49 |        &__11775->(vector<int>).data@0.rns401.$$896 = NULL;
    50 |      lab_145:
    51 |        $$IRETC5 = $$PARM.this192;
   135 |        $$SFXA = *center;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11776,&x);
                __es.__c4@3 = 5u;
                $$RETC0 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11776);
                $$PARM.this27D = $$RETC0;
                $$PARM.i27E = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i27E < *((int *)((char *)$$PARM.this27D + 8))) goto lab_261;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_261:
    31 |        $$IRET155 = ((char *)*((char * *)$$PARM.this27D) + (8ll)*((long long) $$PARM.i27E));
   135 |        $$RETC1 = $$IRET155;
                __11777 = double MMSP::f<double>(double, double)($$SFXA,*$$RETC1);
                __es.__c4@3 = 3u;
                $$PARM.this193 = &__11776;
    47 |        if (!(&__11776->(vector<int>).data@0.rns401.$$901 != NULL)) goto lab_147;
    48 |        operator delete[](void*)(&__11776->(vector<int>).data@0.rns401.$$901)
    49 |        &__11776->(vector<int>).data@0.rns401.$$901 = NULL;
    50 |      lab_147:
    51 |        $$IRETC6 = $$PARM.this193;
   136 |        $$PARM.iB1 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB1 < &x->(vector<int>).size@8.rns391.$$923) goto lab_113;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_113:
    31 |        $$IRET49 = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.iB1));
   136 |        __12294 = $$IRET49;
                *__12294 = *__12294 + 1;
   137 |        $$PARM.this1EA = &__11778;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$903;
   137 |        $$RET13A = $$IRET104;
    17 |        &__11778->(vector<int>).size@8.rns397.$$903 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11778->(vector<int>).data@0.rns398.$$903 = $$RET13B;
    19 |        if (!(0 < &__11778->(vector<int>).size@8.rns397.$$903)) goto lab_204;
                i = 0;
                do {   /* id=6 guarded */ /* ~205 */ 
                  /* region = 310 */
    20 |          $$SFX1C = ((char *)&__11778->(vector<int>).data@0.rns398.$$903 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$903) goto lab_206;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_206:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$903 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11778->(vector<int>).size@8.rns397.$$903);    /* ~205 */
              lab_204:
    21 |        $$IRET10F = $$PARM.this1EA;
   137 |        __es.__c4@3 = 6u;
                $$RETC2 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11778);
                $$PARM.this28D = $$RETC2;
                $$PARM.i28E = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i28E < *((int *)((char *)$$PARM.this28D + 8))) goto lab_273;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_273:
    31 |        $$IRET15D = ((char *)*((char * *)$$PARM.this28D) + (8ll)*((long long) $$PARM.i28E));
   137 |        right = $$IRET15D;
                __es.__c4@3 = 3u;
                $$PARM.this194 = &__11778;
    47 |        if (!(&__11778->(vector<int>).data@0.rns401.$$906 != NULL)) goto lab_149;
    48 |        operator delete[](void*)(&__11778->(vector<int>).data@0.rns401.$$906)
    49 |        &__11778->(vector<int>).data@0.rns401.$$906 = NULL;
    50 |      lab_149:
    51 |        $$IRETC7 = $$PARM.this194;
   138 |        $$SFXB = *right;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11779,&x);
                __es.__c4@3 = 7u;
                $$RETC3 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11779);
                $$PARM.this285 = $$RETC3;
                $$PARM.i286 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i286 < *((int *)((char *)$$PARM.this285 + 8))) goto lab_267;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_267:
    31 |        $$IRET159 = ((char *)*((char * *)$$PARM.this285) + (8ll)*((long long) $$PARM.i286));
   138 |        $$RETC4 = $$IRET159;
                __11780 = double MMSP::f<double>(double, double)($$SFXB,*$$RETC4);
                __es.__c4@3 = 3u;
                $$PARM.this190 = &__11779;
    47 |        if (!(&__11779->(vector<int>).data@0.rns401.$$911 != NULL)) goto lab_143;
    48 |        operator delete[](void*)(&__11779->(vector<int>).data@0.rns401.$$911)
    49 |        &__11779->(vector<int>).data@0.rns401.$$911 = NULL;
    50 |      lab_143:
    51 |        $$IRETC3 = $$PARM.this190;
   139 |        $$PARM.i8D = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i8D < &x->(vector<int>).size@8.rns391.$$923) goto lab_97;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_97:
    31 |        $$IRET37 = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.i8D));
   139 |        __12296 = $$IRET37;
                *__12296 = *__12296 - 2;
   140 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11781,&x);
                __es.__c4@3 = 8u;
                $$RETC5 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11781);
                $$PARM.this283 = $$RETC5;
                $$PARM.i284 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i284 < *((int *)((char *)$$PARM.this283 + 8))) goto lab_265;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_265:
    31 |        $$IRET158 = ((char *)*((char * *)$$PARM.this283) + (8ll)*((long long) $$PARM.i284));
   140 |        left = $$IRET158;
                __es.__c4@3 = 3u;
                $$PARM.this196 = &__11781;
    47 |        if (!(&__11781->(vector<int>).data@0.rns401.$$916 != NULL)) goto lab_151;
    48 |        operator delete[](void*)(&__11781->(vector<int>).data@0.rns401.$$916)
    49 |        &__11781->(vector<int>).data@0.rns401.$$916 = NULL;
    50 |      lab_151:
    51 |        $$IRETC9 = $$PARM.this196;
   141 |        $$SFXC = *left;
                $$PARM.this1F6 = &__11782;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$917;
   141 |        $$RET13A = $$IRET104;
    17 |        &__11782->(vector<int>).size@8.rns397.$$917 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11782->(vector<int>).data@0.rns398.$$917 = $$RET13B;
    19 |        if (!(0 < &__11782->(vector<int>).size@8.rns397.$$917)) goto lab_210;
                i = 0;
                do {   /* id=7 guarded */ /* ~211 */ 
                  /* region = 311 */
    20 |          $$SFX1C = ((char *)&__11782->(vector<int>).data@0.rns398.$$917 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$917) goto lab_212;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_212:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$917 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11782->(vector<int>).size@8.rns397.$$917);    /* ~211 */
              lab_210:
    21 |        $$IRET115 = $$PARM.this1F6;
   141 |        __es.__c4@3 = 9u;
                $$RETC6 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11782);
                $$PARM.this27B = $$RETC6;
                $$PARM.i27C = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i27C < *((int *)((char *)$$PARM.this27B + 8))) goto lab_259;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_259:
    31 |        $$IRET154 = ((char *)*((char * *)$$PARM.this27B) + (8ll)*((long long) $$PARM.i27C));
   141 |        $$RETC7 = $$IRET154;
                __11783 = double MMSP::f<double>(double, double)($$SFXC,*$$RETC7);
                __es.__c4@3 = 3u;
                $$PARM.this197 = &__11782;
    47 |        if (!(&__11782->(vector<int>).data@0.rns401.$$921 != NULL)) goto lab_153;
    48 |        operator delete[](void*)(&__11782->(vector<int>).data@0.rns401.$$921)
    49 |        &__11782->(vector<int>).data@0.rns401.$$921 = NULL;
    50 |      lab_153:
    51 |        $$IRETCA = $$PARM.this197;
   142 |        $$PARM.i99 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i99 < &x->(vector<int>).size@8.rns391.$$923) goto lab_107;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_107:
    31 |        $$IRET3D = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.i99));
   142 |        __12297 = $$IRET3D;
                *__12297 = *__12297 + 1;
   143 |        $$PARM.i83 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i83 < &x->(vector<int>).size@8.rns391.$$923) goto lab_91;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_91:
    31 |        $$IRET32 = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.i83));
   143 |        __12299 = $$IRET32;
                *__12299 = *__12299 + 1;
   144 |        $$PARM.this1E8 = &__11784;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$924;
   144 |        $$RET13A = $$IRET104;
    17 |        &__11784->(vector<int>).size@8.rns397.$$924 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11784->(vector<int>).data@0.rns398.$$924 = $$RET13B;
    19 |        if (!(0 < &__11784->(vector<int>).size@8.rns397.$$924)) goto lab_198;
                i = 0;
                do {   /* id=5 guarded */ /* ~199 */ 
                  /* region = 312 */
    20 |          $$SFX1C = ((char *)&__11784->(vector<int>).data@0.rns398.$$924 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$924) goto lab_200;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_200:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$924 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11784->(vector<int>).size@8.rns397.$$924);    /* ~199 */
              lab_198:
    21 |        $$IRET10E = $$PARM.this1E8;
   144 |        __es.__c4@3 = 10u;
                $$RETC8 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11784);
                $$PARM.this265 = $$RETC8;
                $$PARM.i266 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i266 < *((int *)((char *)$$PARM.this265 + 8))) goto lab_241;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_241:
    31 |        $$IRET149 = ((char *)*((char * *)$$PARM.this265) + (8ll)*((long long) $$PARM.i266));
   144 |        up = $$IRET149;
                __es.__c4@3 = 3u;
                $$PARM.this198 = &__11784;
    47 |        if (!(&__11784->(vector<int>).data@0.rns401.$$927 != NULL)) goto lab_155;
    48 |        operator delete[](void*)(&__11784->(vector<int>).data@0.rns401.$$927)
    49 |        &__11784->(vector<int>).data@0.rns401.$$927 = NULL;
    50 |      lab_155:
    51 |        $$IRETCB = $$PARM.this198;
   145 |        $$SFXD = *up;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11785,&x);
                __es.__c4@3 = 11u;
                $$RETC9 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11785);
                $$PARM.this26B = $$RETC9;
                $$PARM.i26C = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i26C < *((int *)((char *)$$PARM.this26B + 8))) goto lab_247;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_247:
    31 |        $$IRET14C = ((char *)*((char * *)$$PARM.this26B) + (8ll)*((long long) $$PARM.i26C));
   145 |        $$RETCA = $$IRET14C;
                __11786 = double MMSP::f<double>(double, double)($$SFXD,*$$RETCA);
                __es.__c4@3 = 3u;
                $$PARM.this199 = &__11785;
    47 |        if (!(&__11785->(vector<int>).data@0.rns401.$$932 != NULL)) goto lab_157;
    48 |        operator delete[](void*)(&__11785->(vector<int>).data@0.rns401.$$932)
    49 |        &__11785->(vector<int>).data@0.rns401.$$932 = NULL;
    50 |      lab_157:
    51 |        $$IRETCC = $$PARM.this199;
   146 |        $$PARM.i93 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i93 < &x->(vector<int>).size@8.rns391.$$923) goto lab_101;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_101:
    31 |        $$IRET3A = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.i93));
   146 |        __12301 = $$IRET3A;
                *__12301 = *__12301 - 2;
   147 |        $$PARM.this1F8 = &__11787;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$934;
   147 |        $$RET13A = $$IRET104;
    17 |        &__11787->(vector<int>).size@8.rns397.$$934 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11787->(vector<int>).data@0.rns398.$$934 = $$RET13B;
    19 |        if (!(0 < &__11787->(vector<int>).size@8.rns397.$$934)) goto lab_216;
                i = 0;
                do {   /* id=8 guarded */ /* ~217 */ 
                  /* region = 313 */
    20 |          $$SFX1C = ((char *)&__11787->(vector<int>).data@0.rns398.$$934 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$934) goto lab_218;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_218:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$934 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11787->(vector<int>).size@8.rns397.$$934);    /* ~217 */
              lab_216:
    21 |        $$IRET116 = $$PARM.this1F8;
   147 |        __es.__c4@3 = 12u;
                $$RETCB = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11787);
                $$PARM.this267 = $$RETCB;
                $$PARM.i268 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i268 < *((int *)((char *)$$PARM.this267 + 8))) goto lab_243;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_243:
    31 |        $$IRET14A = ((char *)*((char * *)$$PARM.this267) + (8ll)*((long long) $$PARM.i268));
   147 |        down = $$IRET14A;
                __es.__c4@3 = 3u;
                $$PARM.this19A = &__11787;
    47 |        if (!(&__11787->(vector<int>).data@0.rns401.$$937 != NULL)) goto lab_159;
    48 |        operator delete[](void*)(&__11787->(vector<int>).data@0.rns401.$$937)
    49 |        &__11787->(vector<int>).data@0.rns401.$$937 = NULL;
    50 |      lab_159:
    51 |        $$IRETCD = $$PARM.this19A;
   148 |        $$SFXE = *down;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11788,&x);
                __es.__c4@3 = 13u;
                $$RETCC = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11788);
                $$PARM.this26F = $$RETCC;
                $$PARM.i270 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i270 < *((int *)((char *)$$PARM.this26F + 8))) goto lab_249;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_249:
    31 |        $$IRET14E = ((char *)*((char * *)$$PARM.this26F) + (8ll)*((long long) $$PARM.i270));
   148 |        $$RETCD = $$IRET14E;
                __11789 = double MMSP::f<double>(double, double)($$SFXE,*$$RETCD);
                __es.__c4@3 = 3u;
                $$PARM.this19B = &__11788;
    47 |        if (!(&__11788->(vector<int>).data@0.rns401.$$942 != NULL)) goto lab_161;
    48 |        operator delete[](void*)(&__11788->(vector<int>).data@0.rns401.$$942)
    49 |        &__11788->(vector<int>).data@0.rns401.$$942 = NULL;
    50 |      lab_161:
    51 |        $$IRETCE = $$PARM.this19B;
   149 |        $$PARM.iAD = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iAD < &x->(vector<int>).size@8.rns391.$$923) goto lab_111;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_111:
    31 |        $$IRET47 = ((char *)&x->(vector<int>).data@0.rns392.$$923 + (4ll)*((long long) $$PARM.iAD));
   149 |        __12302 = $$IRET47;
                *__12302 = *__12302 + 1;
                $$RETCE = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this28F = $$RETCE;
                $$PARM.i290 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i290 < *((int *)((char *)$$PARM.this28F + 8))) goto lab_275;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_275:
    31 |        $$IRET15E = ((char *)*((char * *)$$PARM.this28F) + (8ll)*((long long) $$PARM.i290));
   149 |        $$RETCF = $$IRET15E;
   150 |        *$$RETCF = _fnmsub@53( 4.0000000000000000E+000,*center,((*left + *right) + *up) + *down) / (((double *)((char *)oldGrid + 104))[0ll] * ((double *)((char *)oldGrid + 104))[0ll]);
                $$RETD0 = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this291 = $$RETD0;
                $$PARM.i292 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i292 < *((int *)((char *)$$PARM.this291 + 8))) goto lab_277;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_277:
    31 |        $$IRET15F = ((char *)*((char * *)$$PARM.this291) + (8ll)*((long long) $$PARM.i292));
   150 |        $$RETD1 = $$IRET15F;
   151 |        *$$RETD1 = _fnmsub@53( 4.0000000000000000E+000,&__11777->(double),((&__11783->(double) + &__11780->(double)) + &__11786->(double)) + &__11789->(double)) / (((double *)((char *)oldGrid + 104))[0ll] * ((double *)((char *)oldGrid + 104))[0ll]);
   153 |        __es.__c4@3 = 2u;
                $$PARM.this19C = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$948 != NULL)) goto lab_163;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$948)
    49 |        &x->(vector<int>).data@0.rns401.$$948 = NULL;
    50 |      lab_163:
    51 |        $$IRETCF = $$PARM.this19C;
   132 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~7 */
            lab_9:
   156 |      void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(&c_storage)
   157 |      void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(oldGrid)
   159 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_12;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 317 */
   160 |        MMSP::vector<int> MMSP::position<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 14u;
   161 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11791,&x);
                __es.__c4@3 = 15u;
                oldX = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11791);
                __es.__c4@3 = 14u;
                $$PARM.this17B = &__11791;
    47 |        if (!(&__11791->(vector<int>).data@0.rns401.$$858 != NULL)) goto lab_131;
    48 |        operator delete[](void*)(&__11791->(vector<int>).data@0.rns401.$$858)
    49 |        &__11791->(vector<int>).data@0.rns401.$$858 = NULL;
    50 |      lab_131:
    51 |        $$IRETAE = $$PARM.this17B;
   162 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11792,&x);
                __es.__c4@3 = 16u;
                csX = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11792);
                __es.__c4@3 = 14u;
                $$PARM.this18B = &__11792;
    47 |        if (!(&__11792->(vector<int>).data@0.rns401.$$861 != NULL)) goto lab_135;
    48 |        operator delete[](void*)(&__11792->(vector<int>).data@0.rns401.$$861)
    49 |        &__11792->(vector<int>).data@0.rns401.$$861 = NULL;
    50 |      lab_135:
    51 |        $$IRETBE = $$PARM.this18B;
   163 |        $$PARM.this1FE = &__11793;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$862;
   163 |        $$RET13A = $$IRET104;
    17 |        &__11793->(vector<int>).size@8.rns397.$$862 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11793->(vector<int>).data@0.rns398.$$862 = $$RET13B;
    19 |        if (!(0 < &__11793->(vector<int>).size@8.rns397.$$862)) goto lab_228;
                i = 0;
                do {   /* id=10 guarded */ /* ~229 */ 
                  /* region = 315 */
    20 |          $$SFX1C = ((char *)&__11793->(vector<int>).data@0.rns398.$$862 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$862) goto lab_230;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_230:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$862 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11793->(vector<int>).size@8.rns397.$$862);    /* ~229 */
              lab_228:
    21 |        $$IRET119 = $$PARM.this1FE;
   163 |        __es.__c4@3 = 17u;
                newX = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11793);
                __es.__c4@3 = 14u;
                $$PARM.this181 = &__11793;
    47 |        if (!(&__11793->(vector<int>).data@0.rns401.$$864 != NULL)) goto lab_133;
    48 |        operator delete[](void*)(&__11793->(vector<int>).data@0.rns401.$$864)
    49 |        &__11793->(vector<int>).data@0.rns401.$$864 = NULL;
    50 |      lab_133:
    51 |        $$IRETB4 = $$PARM.this181;
   166 |        $$PARM.i95 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i95 < &x->(vector<int>).size@8.rns391.$$886) goto lab_103;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_103:
    31 |        $$IRET3B = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i95));
   166 |        __12305 = $$IRET3B;
                *__12305 = *__12305 + 1;
   167 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11794,&x);
                __es.__c4@3 = 18u;
                $$RETD2 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11794);
                $$PARM.this293 = $$RETD2;
                $$PARM.i294 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i294 < *((int *)((char *)$$PARM.this293 + 8))) goto lab_279;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_279:
    31 |        $$IRET160 = ((char *)*((char * *)$$PARM.this293) + (8ll)*((long long) $$PARM.i294));
   167 |        right = $$IRET160;
                __es.__c4@3 = 14u;
                $$PARM.this16F = &__11794;
    47 |        if (!(&__11794->(vector<int>).data@0.rns401.$$869 != NULL)) goto lab_129;
    48 |        operator delete[](void*)(&__11794->(vector<int>).data@0.rns401.$$869)
    49 |        &__11794->(vector<int>).data@0.rns401.$$869 = NULL;
    50 |      lab_129:
    51 |        $$IRETA2 = $$PARM.this16F;
   168 |        $$PARM.i97 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i97 < &x->(vector<int>).size@8.rns391.$$886) goto lab_105;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_105:
    31 |        $$IRET3C = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i97));
   168 |        __12307 = $$IRET3C;
                *__12307 = *__12307 - 2;
   169 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11795,&x);
                __es.__c4@3 = 19u;
                $$RETD3 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11795);
                $$PARM.this27F = $$RETD3;
                $$PARM.i280 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i280 < *((int *)((char *)$$PARM.this27F + 8))) goto lab_263;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_263:
    31 |        $$IRET156 = ((char *)*((char * *)$$PARM.this27F) + (8ll)*((long long) $$PARM.i280));
   169 |        left = $$IRET156;
                __es.__c4@3 = 14u;
                $$PARM.this18E = &__11795;
    47 |        if (!(&__11795->(vector<int>).data@0.rns401.$$874 != NULL)) goto lab_139;
    48 |        operator delete[](void*)(&__11795->(vector<int>).data@0.rns401.$$874)
    49 |        &__11795->(vector<int>).data@0.rns401.$$874 = NULL;
    50 |      lab_139:
    51 |        $$IRETC1 = $$PARM.this18E;
   170 |        $$PARM.i8F = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i8F < &x->(vector<int>).size@8.rns391.$$886) goto lab_99;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_99:
    31 |        $$IRET38 = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i8F));
   170 |        __12308 = $$IRET38;
                *__12308 = *__12308 + 1;
   171 |        $$PARM.i9B = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i9B < &x->(vector<int>).size@8.rns391.$$886) goto lab_109;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_109:
    31 |        $$IRET3E = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i9B));
   171 |        __12310 = $$IRET3E;
                *__12310 = *__12310 + 1;
   172 |        $$PARM.this200 = &__11796;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$877;
   172 |        $$RET13A = $$IRET104;
    17 |        &__11796->(vector<int>).size@8.rns397.$$877 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__11796->(vector<int>).data@0.rns398.$$877 = $$RET13B;
    19 |        if (!(0 < &__11796->(vector<int>).size@8.rns397.$$877)) goto lab_234;
                i = 0;
                do {   /* id=11 guarded */ /* ~235 */ 
                  /* region = 316 */
    20 |          $$SFX1C = ((char *)&__11796->(vector<int>).data@0.rns398.$$877 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$877) goto lab_236;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_236:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$877 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__11796->(vector<int>).size@8.rns397.$$877);    /* ~235 */
              lab_234:
    21 |        $$IRET11A = $$PARM.this200;
   172 |        __es.__c4@3 = 20u;
                $$RETD4 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11796);
                $$PARM.this275 = $$RETD4;
                $$PARM.i276 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i276 < *((int *)((char *)$$PARM.this275 + 8))) goto lab_253;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_253:
    31 |        $$IRET151 = ((char *)*((char * *)$$PARM.this275) + (8ll)*((long long) $$PARM.i276));
   172 |        up = $$IRET151;
                __es.__c4@3 = 14u;
                $$PARM.this16E = &__11796;
    47 |        if (!(&__11796->(vector<int>).data@0.rns401.$$880 != NULL)) goto lab_127;
    48 |        operator delete[](void*)(&__11796->(vector<int>).data@0.rns401.$$880)
    49 |        &__11796->(vector<int>).data@0.rns401.$$880 = NULL;
    50 |      lab_127:
    51 |        $$IRETA1 = $$PARM.this16E;
   173 |        $$PARM.i8B = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i8B < &x->(vector<int>).size@8.rns391.$$886) goto lab_95;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_95:
    31 |        $$IRET36 = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i8B));
   173 |        __12312 = $$IRET36;
                *__12312 = *__12312 - 2;
   174 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11797,&x);
                __es.__c4@3 = 21u;
                $$RETD5 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__11797);
                $$PARM.this263 = $$RETD5;
                $$PARM.i264 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i264 < *((int *)((char *)$$PARM.this263 + 8))) goto lab_239;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_239:
    31 |        $$IRET148 = ((char *)*((char * *)$$PARM.this263) + (8ll)*((long long) $$PARM.i264));
   174 |        down = $$IRET148;
                __es.__c4@3 = 14u;
                $$PARM.this18F = &__11797;
    47 |        if (!(&__11797->(vector<int>).data@0.rns401.$$885 != NULL)) goto lab_141;
    48 |        operator delete[](void*)(&__11797->(vector<int>).data@0.rns401.$$885)
    49 |        &__11797->(vector<int>).data@0.rns401.$$885 = NULL;
    50 |      lab_141:
    51 |        $$IRETC2 = $$PARM.this18F;
   175 |        $$PARM.i89 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i89 < &x->(vector<int>).size@8.rns391.$$886) goto lab_93;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_93:
    31 |        $$IRET35 = ((char *)&x->(vector<int>).data@0.rns392.$$886 + (4ll)*((long long) $$PARM.i89));
   175 |        __12313 = $$IRET35;
                *__12313 = *__12313 + 1;
   177 |        $$SFXF = ((*left + *right) + *up) + *down;
                $$PARM.this3F4 = csX;
                $$PARM.i3F5 = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3F5 < *((int *)((char *)$$PARM.this3F4 + 8))) goto lab_315;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_315:
    35 |        $$IRET207 = ((char *)*((char * *)$$PARM.this3F4) + (8ll)*((long long) $$PARM.i3F5));
   177 |        $$RETD6 = $$IRET207;
                Kg4C = ( 1.0000000000000000E-003 * _fnmsub@53( 4.0000000000000000E+000,*$$RETD6,$$SFXF)) / (((double *)((char *)oldGrid + 104))[0ll] * ((double *)((char *)oldGrid + 104))[0ll]);
                $$PARM.this3EA = csX;
                $$PARM.i3EB = 1;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3EB < *((int *)((char *)$$PARM.this3EA + 8))) goto lab_311;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_311:
    35 |        $$IRET202 = ((char *)*((char * *)$$PARM.this3EA) + (8ll)*((long long) $$PARM.i3EB));
   177 |        $$RETD7 = $$IRET202;
   179 |        dCdt =  2.5000000000000001E-002 * (*$$RETD7 - Kg4C);
   180 |        $$PARM.this287 = newX;
                $$PARM.i288 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i288 < *((int *)((char *)$$PARM.this287 + 8))) goto lab_269;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_269:
    31 |        $$IRET15A = ((char *)*((char * *)$$PARM.this287) + (8ll)*((long long) $$PARM.i288));
   180 |        $$SFX10 = $$IRET15A;
                $$PARM.this3EC = oldX;
                $$PARM.i3ED = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3ED < *((int *)((char *)$$PARM.this3EC + 8))) goto lab_313;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_313:
    35 |        $$IRET203 = ((char *)*((char * *)$$PARM.this3EC) + (8ll)*((long long) $$PARM.i3ED));
   180 |        $$RETD8 = $$IRET203;
                *$$SFX10 = _fmadd@47( 5.0000000000000002E-005,dCdt,*$$RETD8);
   184 |        __es.__c4@3 = 2u;
                $$PARM.this18D = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$891 != NULL)) goto lab_137;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$891)
    49 |        &x->(vector<int>).data@0.rns401.$$891 = NULL;
    50 |      lab_137:
    51 |        $$IRETC0 = $$PARM.this18D;
   159 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~10 */
            lab_12:
   186 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_15;
              do {   /* id=2 guarded */ /* ~13 */ 
                /* region = 318 */
                $$RETD9 = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   187 |        $$PARM.this277 = $$RETD9;
                $$PARM.i278 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i278 < *((int *)((char *)$$PARM.this277 + 8))) goto lab_255;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_255:
    31 |        $$IRET152 = ((char *)*((char * *)$$PARM.this277) + (8ll)*((long long) $$PARM.i278));
   187 |        $$SFX11 = $$IRET152;
                $$RETDA = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this269 = $$RETDA;
                $$PARM.i26A = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i26A < *((int *)((char *)$$PARM.this269 + 8))) goto lab_245;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_245:
    31 |        $$IRET14B = ((char *)*((char * *)$$PARM.this269) + (8ll)*((long long) $$PARM.i26A));
   187 |        $$RETDB = $$IRET14B;
                *$$SFX11 = *$$RETDB;
                $$RETDC = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   188 |        $$PARM.this28B = $$RETDC;
                $$PARM.i28C = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i28C < *((int *)((char *)$$PARM.this28B + 8))) goto lab_271;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_271:
    31 |        $$IRET15C = ((char *)*((char * *)$$PARM.this28B) + (8ll)*((long long) $$PARM.i28C));
   188 |        $$SFX12 = $$IRET15C;
                $$RETDD = MMSP::grid<2, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this273 = $$RETDD;
                $$PARM.i274 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i274 < *((int *)((char *)$$PARM.this273 + 8))) goto lab_251;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_251:
    31 |        $$IRET150 = ((char *)*((char * *)$$PARM.this273) + (8ll)*((long long) $$PARM.i274));
   188 |        $$RETDE = $$IRET150;
                *$$SFX12 = *$$RETDE;
   189 |        if (!(i % 2 == step % 2)) goto lab_16;
    81 |        &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
   208 |        __es.__c4@3 = 25u;
   192 |        MMSP::vector<int> MMSP::position<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 26u;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11799,&x);
                __es.__c4@3 = 27u;
                $$RETDF = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11799);
                $$PARM.this2F7 = $$RETDF;
                $$PARM.i2F8 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F8 < *((int *)((char *)$$PARM.this2F7 + 8))) goto lab_303;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_303:
    31 |        $$IRET192 = ((char *)*((char * *)$$PARM.this2F7) + (8ll)*((long long) $$PARM.i2F8));
   734 |        __12162 = $$IRET192;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_18;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_21;
   105 |        *grains._M_finish@8 = *__12162;
              lab_21:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_23;
              lab_18:
   686 |        __12158._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12158,__12162)
              lab_23:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1AC = &__11799;
    47 |        if (!(&__11799->(vector<int>).data@0.rns401.$$776 != NULL)) goto lab_175;
    48 |        operator delete[](void*)(&__11799->(vector<int>).data@0.rns401.$$776)
    49 |        &__11799->(vector<int>).data@0.rns401.$$776 = NULL;
    50 |      lab_175:
    51 |        $$IRETDF = $$PARM.this1AC;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11800,&x);
                __es.__c4@3 = 28u;
                $$RETE0 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11800);
                $$PARM.this2FB = $$RETE0;
                $$PARM.i2FC = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2FC < *((int *)((char *)$$PARM.this2FB + 8))) goto lab_305;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_305:
    31 |        $$IRET194 = ((char *)*((char * *)$$PARM.this2FB) + (8ll)*((long long) $$PARM.i2FC));
   734 |        __12176 = $$IRET194;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_24;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_27;
   105 |        *phases._M_finish@8 = *__12176;
              lab_27:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_29;
              lab_24:
   686 |        __12172._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12172,__12176)
              lab_29:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1AA = &__11800;
    47 |        if (!(&__11800->(vector<int>).data@0.rns401.$$781 != NULL)) goto lab_173;
    48 |        operator delete[](void*)(&__11800->(vector<int>).data@0.rns401.$$781)
    49 |        &__11800->(vector<int>).data@0.rns401.$$781 = NULL;
    50 |      lab_173:
    51 |        $$IRETDD = $$PARM.this1AA;
   195 |        $$PARM.iBF = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iBF < &x->(vector<int>).size@8.rns391.$$827) goto lab_125;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_125:
    31 |        $$IRET50 = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iBF));
   195 |        __12316 = $$IRET50;
                *__12316 = *__12316 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11801,&x);
                __es.__c4@3 = 29u;
                $$RETE1 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11801);
                $$PARM.this2F5 = $$RETE1;
                $$PARM.i2F6 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F6 < *((int *)((char *)$$PARM.this2F5 + 8))) goto lab_301;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_301:
    31 |        $$IRET191 = ((char *)*((char * *)$$PARM.this2F5) + (8ll)*((long long) $$PARM.i2F6));
   734 |        __12190 = $$IRET191;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_30;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_33;
   105 |        *grains._M_finish@8 = *__12190;
              lab_33:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_35;
              lab_30:
   686 |        __12186._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12186,__12190)
              lab_35:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A6 = &__11801;
    47 |        if (!(&__11801->(vector<int>).data@0.rns401.$$787 != NULL)) goto lab_171;
    48 |        operator delete[](void*)(&__11801->(vector<int>).data@0.rns401.$$787)
    49 |        &__11801->(vector<int>).data@0.rns401.$$787 = NULL;
    50 |      lab_171:
    51 |        $$IRETD9 = $$PARM.this1A6;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11802,&x);
                __es.__c4@3 = 30u;
                $$RETE2 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11802);
                $$PARM.this2EF = $$RETE2;
                $$PARM.i2F0 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F0 < *((int *)((char *)$$PARM.this2EF + 8))) goto lab_295;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_295:
    31 |        $$IRET18E = ((char *)*((char * *)$$PARM.this2EF) + (8ll)*((long long) $$PARM.i2F0));
   734 |        __12204 = $$IRET18E;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_36;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_39;
   105 |        *phases._M_finish@8 = *__12204;
              lab_39:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_41;
              lab_36:
   686 |        __12200._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12200,__12204)
              lab_41:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1BA = &__11802;
    47 |        if (!(&__11802->(vector<int>).data@0.rns401.$$792 != NULL)) goto lab_191;
    48 |        operator delete[](void*)(&__11802->(vector<int>).data@0.rns401.$$792)
    49 |        &__11802->(vector<int>).data@0.rns401.$$792 = NULL;
    50 |      lab_191:
    51 |        $$IRETED = $$PARM.this1BA;
   198 |        $$PARM.iB5 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB5 < &x->(vector<int>).size@8.rns391.$$827) goto lab_117;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_117:
    31 |        $$IRET4B = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iB5));
   198 |        __12318 = $$IRET4B;
                *__12318 = *__12318 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11803,&x);
                __es.__c4@3 = 31u;
                $$RETE3 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11803);
                $$PARM.this2D9 = $$RETE3;
                $$PARM.i2DA = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2DA < *((int *)((char *)$$PARM.this2D9 + 8))) goto lab_283;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_283:
    31 |        $$IRET183 = ((char *)*((char * *)$$PARM.this2D9) + (8ll)*((long long) $$PARM.i2DA));
   734 |        __12218 = $$IRET183;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_42;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_45;
   105 |        *grains._M_finish@8 = *__12218;
              lab_45:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_47;
              lab_42:
   686 |        __12214._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12214,__12218)
              lab_47:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A1 = &__11803;
    47 |        if (!(&__11803->(vector<int>).data@0.rns401.$$798 != NULL)) goto lab_165;
    48 |        operator delete[](void*)(&__11803->(vector<int>).data@0.rns401.$$798)
    49 |        &__11803->(vector<int>).data@0.rns401.$$798 = NULL;
    50 |      lab_165:
    51 |        $$IRETD4 = $$PARM.this1A1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11804,&x);
                __es.__c4@3 = 32u;
                $$RETE4 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11804);
                $$PARM.this2E3 = $$RETE4;
                $$PARM.i2E4 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E4 < *((int *)((char *)$$PARM.this2E3 + 8))) goto lab_291;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_291:
    31 |        $$IRET188 = ((char *)*((char * *)$$PARM.this2E3) + (8ll)*((long long) $$PARM.i2E4));
   734 |        __12232 = $$IRET188;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_48;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_51;
   105 |        *phases._M_finish@8 = *__12232;
              lab_51:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_53;
              lab_48:
   686 |        __12228._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12228,__12232)
              lab_53:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B0 = &__11804;
    47 |        if (!(&__11804->(vector<int>).data@0.rns401.$$803 != NULL)) goto lab_179;
    48 |        operator delete[](void*)(&__11804->(vector<int>).data@0.rns401.$$803)
    49 |        &__11804->(vector<int>).data@0.rns401.$$803 = NULL;
    50 |      lab_179:
    51 |        $$IRETE3 = $$PARM.this1B0;
   201 |        $$PARM.iB7 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB7 < &x->(vector<int>).size@8.rns391.$$827) goto lab_119;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_119:
    31 |        $$IRET4C = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iB7));
   201 |        __12319 = $$IRET4C;
                *__12319 = *__12319 + 1;
   202 |        $$PARM.iBB = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iBB < &x->(vector<int>).size@8.rns391.$$827) goto lab_121;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_121:
    31 |        $$IRET4E = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iBB));
   202 |        __12321 = $$IRET4E;
                *__12321 = *__12321 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11805,&x);
                __es.__c4@3 = 33u;
                $$RETE5 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11805);
                $$PARM.this2D7 = $$RETE5;
                $$PARM.i2D8 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D8 < *((int *)((char *)$$PARM.this2D7 + 8))) goto lab_281;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_281:
    31 |        $$IRET182 = ((char *)*((char * *)$$PARM.this2D7) + (8ll)*((long long) $$PARM.i2D8));
   734 |        __12246 = $$IRET182;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_54;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_57;
   105 |        *grains._M_finish@8 = *__12246;
              lab_57:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_59;
              lab_54:
   686 |        __12242._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12242,__12246)
              lab_59:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B8 = &__11805;
    47 |        if (!(&__11805->(vector<int>).data@0.rns401.$$810 != NULL)) goto lab_187;
    48 |        operator delete[](void*)(&__11805->(vector<int>).data@0.rns401.$$810)
    49 |        &__11805->(vector<int>).data@0.rns401.$$810 = NULL;
    50 |      lab_187:
    51 |        $$IRETEB = $$PARM.this1B8;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11806,&x);
                __es.__c4@3 = 34u;
                $$RETE6 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11806);
                $$PARM.this2DB = $$RETE6;
                $$PARM.i2DC = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2DC < *((int *)((char *)$$PARM.this2DB + 8))) goto lab_285;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_285:
    31 |        $$IRET184 = ((char *)*((char * *)$$PARM.this2DB) + (8ll)*((long long) $$PARM.i2DC));
   734 |        __12260 = $$IRET184;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_60;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_63;
   105 |        *phases._M_finish@8 = *__12260;
              lab_63:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_65;
              lab_60:
   686 |        __12256._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12256,__12260)
              lab_65:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B6 = &__11806;
    47 |        if (!(&__11806->(vector<int>).data@0.rns401.$$815 != NULL)) goto lab_185;
    48 |        operator delete[](void*)(&__11806->(vector<int>).data@0.rns401.$$815)
    49 |        &__11806->(vector<int>).data@0.rns401.$$815 = NULL;
    50 |      lab_185:
    51 |        $$IRETE9 = $$PARM.this1B6;
   205 |        $$PARM.iBD = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iBD < &x->(vector<int>).size@8.rns391.$$827) goto lab_123;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_123:
    31 |        $$IRET4F = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iBD));
   205 |        __12323 = $$IRET4F;
                *__12323 = *__12323 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11807,&x);
                __es.__c4@3 = 35u;
                $$RETE7 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11807);
                $$PARM.this2DF = $$RETE7;
                $$PARM.i2E0 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E0 < *((int *)((char *)$$PARM.this2DF + 8))) goto lab_289;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_289:
    31 |        $$IRET186 = ((char *)*((char * *)$$PARM.this2DF) + (8ll)*((long long) $$PARM.i2E0));
   734 |        __12274 = $$IRET186;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_66;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_69;
   105 |        *grains._M_finish@8 = *__12274;
              lab_69:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_71;
              lab_66:
   686 |        __12270._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12270,__12274)
              lab_71:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1AD = &__11807;
    47 |        if (!(&__11807->(vector<int>).data@0.rns401.$$821 != NULL)) goto lab_177;
    48 |        operator delete[](void*)(&__11807->(vector<int>).data@0.rns401.$$821)
    49 |        &__11807->(vector<int>).data@0.rns401.$$821 = NULL;
    50 |      lab_177:
    51 |        $$IRETE0 = $$PARM.this1AD;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11808,&x);
                __es.__c4@3 = 36u;
                $$RETE8 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11808);
                $$PARM.this2ED = $$RETE8;
                $$PARM.i2EE = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2EE < *((int *)((char *)$$PARM.this2ED + 8))) goto lab_293;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_293:
    31 |        $$IRET18D = ((char *)*((char * *)$$PARM.this2ED) + (8ll)*((long long) $$PARM.i2EE));
   734 |        __12288 = $$IRET18D;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_72;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_75;
   105 |        *phases._M_finish@8 = *__12288;
              lab_75:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_77;
              lab_72:
   686 |        __12284._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12284,__12288)
              lab_77:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A2 = &__11808;
    47 |        if (!(&__11808->(vector<int>).data@0.rns401.$$826 != NULL)) goto lab_167;
    48 |        operator delete[](void*)(&__11808->(vector<int>).data@0.rns401.$$826)
    49 |        &__11808->(vector<int>).data@0.rns401.$$826 = NULL;
    50 |      lab_167:
    51 |        $$IRETD5 = $$PARM.this1A2;
   208 |        $$PARM.iB3 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB3 < &x->(vector<int>).size@8.rns391.$$827) goto lab_115;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_115:
    31 |        $$IRET4A = ((char *)&x->(vector<int>).data@0.rns392.$$827 + (4ll)*((long long) $$PARM.iB3));
   208 |        __12324 = $$IRET4A;
                *__12324 = *__12324 + 1;
   209 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11809,&x);
                __es.__c4@3 = 37u;
                $$RETE9 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__11809);
                $$PARM.this2DD = $$RETE9;
                $$PARM.i2DE = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2DE < *((int *)((char *)$$PARM.this2DD + 8))) goto lab_287;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_287:
    31 |        $$IRET185 = ((char *)*((char * *)$$PARM.this2DD) + (8ll)*((long long) $$PARM.i2DE));
   209 |        $$RETEA = $$IRET185;
                std::vector<double, std::allocator<double> > MMSP::dE<double>(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)(&deltas,*$$RETEA,&phases,&grains)
                __es.__c4@3 = 26u;
                $$PARM.this1B2 = &__11809;
    47 |        if (!(&__11809->(vector<int>).data@0.rns401.$$832 != NULL)) goto lab_183;
    48 |        operator delete[](void*)(&__11809->(vector<int>).data@0.rns401.$$832)
    49 |        &__11809->(vector<int>).data@0.rns401.$$832 = NULL;
    50 |      lab_183:
    51 |        $$IRETE5 = $$PARM.this1B2;
   209 |        __es.__c4@3 = 38u;
                $$RETEB = rand();
   611 |        if (!(*((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull))) <  0.0000000000000000E+000)) goto lab_78;
   212 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11811,&x);
                __es.__c4@3 = 39u;
                $$RETEC = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11811);
                $$PARM.this2F3 = $$RETEC;
                $$PARM.i2F4 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F4 < *((int *)((char *)$$PARM.this2F3 + 8))) goto lab_299;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_299:
    31 |        $$IRET190 = ((char *)*((char * *)$$PARM.this2F3) + (8ll)*((long long) $$PARM.i2F4));
   212 |        $$BDD3 = $$IRET190;
   611 |        *$$BDD3 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1B9 = &__11811;
    47 |        if (!(&__11811->(vector<int>).data@0.rns401.$$850 != NULL)) goto lab_189;
    48 |        operator delete[](void*)(&__11811->(vector<int>).data@0.rns401.$$850)
    49 |        &__11811->(vector<int>).data@0.rns401.$$850 = NULL;
    50 |      lab_189:
    51 |        $$IRETEC = $$PARM.this1B9;
   213 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11812,&x);
                __es.__c4@3 = 40u;
                $$RETED = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11812);
                $$PARM.this2F1 = $$RETED;
                $$PARM.i2F2 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2F2 < *((int *)((char *)$$PARM.this2F1 + 8))) goto lab_297;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_297:
    31 |        $$IRET18F = ((char *)*((char * *)$$PARM.this2F1) + (8ll)*((long long) $$PARM.i2F2));
   213 |        $$BDD4 = $$IRET18F;
   611 |        *$$BDD4 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1A5 = &__11812;
    47 |        if (!(&__11812->(vector<int>).data@0.rns401.$$854 != NULL)) goto lab_169;
    48 |        operator delete[](void*)(&__11812->(vector<int>).data@0.rns401.$$854)
    49 |        &__11812->(vector<int>).data@0.rns401.$$854 = NULL;
    50 |      lab_169:
    51 |        $$IRETD8 = $$PARM.this1A5;
   214 |        goto lab_80;
              lab_78:
                $$RETEE = (double) rand();
   611 |        if (!($$RETEE /  2.1474836470000000E+009 < __exp@1(- *((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)))))) goto lab_81;
   216 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11813,&x);
                __es.__c4@3 = 41u;
                $$RETEF = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11813);
                $$PARM.this305 = $$RETEF;
                $$PARM.i306 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i306 < *((int *)((char *)$$PARM.this305 + 8))) goto lab_309;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_309:
    31 |        $$IRET199 = ((char *)*((char * *)$$PARM.this305) + (8ll)*((long long) $$PARM.i306));
   216 |        $$BDD6 = $$IRET199;
   611 |        *$$BDD6 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1C3 = &__11813;
    47 |        if (!(&__11813->(vector<int>).data@0.rns401.$$842 != NULL)) goto lab_195;
    48 |        operator delete[](void*)(&__11813->(vector<int>).data@0.rns401.$$842)
    49 |        &__11813->(vector<int>).data@0.rns401.$$842 = NULL;
    50 |      lab_195:
    51 |        $$IRETF6 = $$PARM.this1C3;
   217 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__11814,&x);
                __es.__c4@3 = 42u;
                $$RETF0 = MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__11814);
                $$PARM.this303 = $$RETF0;
                $$PARM.i304 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i304 < *((int *)((char *)$$PARM.this303 + 8))) goto lab_307;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_307:
    31 |        $$IRET198 = ((char *)*((char * *)$$PARM.this303) + (8ll)*((long long) $$PARM.i304));
   217 |        $$BDD7 = $$IRET198;
   611 |        *$$BDD7 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RETEB % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1C2 = &__11814;
    47 |        if (!(&__11814->(vector<int>).data@0.rns401.$$846 != NULL)) goto lab_193;
    48 |        operator delete[](void*)(&__11814->(vector<int>).data@0.rns401.$$846)
    49 |        &__11814->(vector<int>).data@0.rns401.$$846 = NULL;
    50 |      lab_193:
    51 |        $$IRETF5 = $$PARM.this1C2;
   218 |      lab_81:
              lab_80:
   219 |        __es.__c4@3 = 26u;
                $$PARM.this3FC = &deltas;
   145 |        if (!(deltas._M_start@0 != NULL)) goto lab_323;
    95 |        operator delete(void*)(deltas._M_start@0)
   110 |      lab_323:
   132 |        $$PARM.this226 = $$PARM.this3FC;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FC;
   314 |        $$IRET20E = $$PARM.this3FC;
   219 |        __es.__c4@3 = 25u;
                $$PARM.this1B1 = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$836 != NULL)) goto lab_181;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$836)
    49 |        &x->(vector<int>).data@0.rns401.$$836 = NULL;
    50 |      lab_181:
    51 |        $$IRETE4 = $$PARM.this1B1;
   219 |        __es.__c4@3 = 23u;
                $$PARM.this3FD = &phases;
   145 |        if (!(phases._M_start@0 != NULL)) goto lab_329;
    95 |        operator delete(void*)(phases._M_start@0)
   110 |      lab_329:
   132 |        $$PARM.this226 = $$PARM.this3FD;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FD;
   314 |        $$IRET20F = $$PARM.this3FD;
   219 |        __es.__c4@3 = 2u;
                $$PARM.this3F9 = &grains;
   145 |        if (!(grains._M_start@0 != NULL)) goto lab_317;
    95 |        operator delete(void*)(grains._M_start@0)
   110 |      lab_317:
   132 |        $$PARM.this226 = $$PARM.this3F9;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3F9;
   314 |        $$IRET20B = $$PARM.this3F9;
   219 |      lab_16:
   186 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~13 */
            lab_15:
   223 |      void MMSP::swap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&, MMSP::grid<2, MMSP::vector<double> >&)(oldGrid,&newGrid)
   224 |      void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(oldGrid)
   225 |      __es.__c4@3 = 1u;
              MMSP::grid<2, MMSP::vector<double> >::~grid()(&c_storage);
   126 |      step = step + 1;
            } while (step < steps);    /* ~2 */
          lab_4:
   227 |    iterations = iterations + 1;
   228 |    __es.__c4@3 = 0u;
            MMSP::grid<2, MMSP::vector<double> >::~grid()(&newGrid);
            return;
          } /* function */ 


   102 |  void void MMSP::update<3, double>(MMSP::grid<3, MMSP::vector<double> >&, int)(grid<3,MMSP::vector<double> > *oldGrid, int steps)
   103 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   105 |    guard_iterations5 = 1;
   112 |    void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(oldGrid)
   114 |    MMSP::grid<3, MMSP::vector<double> >::grid(MMSP::grid<3, MMSP::vector<double> > const&)(&newGrid,oldGrid);
            __es.__c4@3 = 1u;
   637 |    *((long long *)((char *)&std::cout + 8 + ((long long *)(&std::cout->(basic_ostream<char,std::char_traits<char> >)[]@0))[-24ll / 8])) = 2ll;
   122 |    void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(oldGrid)
   126 |    step = 0;
            if (!(0 < steps)) goto lab_4;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 319 */
   128 |      MMSP::print_progress(int, int)(step,steps)
   130 |      MMSP::grid<3, MMSP::vector<double> >::grid(MMSP::grid<3, MMSP::vector<double> > const&)(&c_storage,oldGrid);
              __es.__c4@3 = 2u;
   132 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_9;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 311 */
   133 |        MMSP::vector<int> MMSP::position<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 3u;
   134 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12327,&x);
                __es.__c4@3 = 4u;
                $$RETF1 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12327);
                $$PARM.this2AF = $$RETF1;
                $$PARM.i2B0 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B0 < *((int *)((char *)$$PARM.this2AF + 8))) goto lab_279;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_279:
    31 |        $$IRET16E = ((char *)*((char * *)$$PARM.this2AF) + (8ll)*((long long) $$PARM.i2B0));
   134 |        center = $$IRET16E;
                __es.__c4@3 = 3u;
                $$PARM.this178 = &__12327;
    47 |        if (!(&__12327->(vector<int>).data@0.rns401.$$1093 != NULL)) goto lab_143;
    48 |        operator delete[](void*)(&__12327->(vector<int>).data@0.rns401.$$1093)
    49 |        &__12327->(vector<int>).data@0.rns401.$$1093 = NULL;
    50 |      lab_143:
    51 |        $$IRETAB = $$PARM.this178;
   135 |        $$SFX13 = *center;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12328,&x);
                __es.__c4@3 = 5u;
                $$RETF2 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12328);
                $$PARM.this2A9 = $$RETF2;
                $$PARM.i2AA = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2AA < *((int *)((char *)$$PARM.this2A9 + 8))) goto lab_273;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_273:
    31 |        $$IRET16B = ((char *)*((char * *)$$PARM.this2A9) + (8ll)*((long long) $$PARM.i2AA));
   135 |        $$RETF3 = $$IRET16B;
                __12329 = double MMSP::f<double>(double, double)($$SFX13,*$$RETF3);
                __es.__c4@3 = 3u;
                $$PARM.this176 = &__12328;
    47 |        if (!(&__12328->(vector<int>).data@0.rns401.$$1098 != NULL)) goto lab_139;
    48 |        operator delete[](void*)(&__12328->(vector<int>).data@0.rns401.$$1098)
    49 |        &__12328->(vector<int>).data@0.rns401.$$1098 = NULL;
    50 |      lab_139:
    51 |        $$IRETA9 = $$PARM.this176;
   136 |        $$PARM.i67 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i67 < &x->(vector<int>).size@8.rns391.$$1120) goto lab_113;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_113:
    31 |        $$IRET24 = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i67));
   136 |        __12846 = $$IRET24;
                *__12846 = *__12846 + 1;
   137 |        $$PARM.this1EE = &__12330;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1100;
   137 |        $$RET13A = $$IRET104;
    17 |        &__12330->(vector<int>).size@8.rns397.$$1100 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12330->(vector<int>).data@0.rns398.$$1100 = $$RET13B;
    19 |        if (!(0 < &__12330->(vector<int>).size@8.rns397.$$1100)) goto lab_222;
                i = 0;
                do {   /* id=9 guarded */ /* ~223 */ 
                  /* region = 309 */
    20 |          $$SFX1C = ((char *)&__12330->(vector<int>).data@0.rns398.$$1100 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1100) goto lab_224;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_224:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1100 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12330->(vector<int>).size@8.rns397.$$1100);    /* ~223 */
              lab_222:
    21 |        $$IRET111 = $$PARM.this1EE;
   137 |        __es.__c4@3 = 6u;
                $$RETF4 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12330);
                $$PARM.this29F = $$RETF4;
                $$PARM.i2A0 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A0 < *((int *)((char *)$$PARM.this29F + 8))) goto lab_263;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_263:
    31 |        $$IRET166 = ((char *)*((char * *)$$PARM.this29F) + (8ll)*((long long) $$PARM.i2A0));
   137 |        right = $$IRET166;
                __es.__c4@3 = 3u;
                $$PARM.this172 = &__12330;
    47 |        if (!(&__12330->(vector<int>).data@0.rns401.$$1103 != NULL)) goto lab_131;
    48 |        operator delete[](void*)(&__12330->(vector<int>).data@0.rns401.$$1103)
    49 |        &__12330->(vector<int>).data@0.rns401.$$1103 = NULL;
    50 |      lab_131:
    51 |        $$IRETA5 = $$PARM.this172;
   138 |        $$SFX14 = *right;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12331,&x);
                __es.__c4@3 = 7u;
                $$RETF5 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12331);
                $$PARM.this297 = $$RETF5;
                $$PARM.i298 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i298 < *((int *)((char *)$$PARM.this297 + 8))) goto lab_255;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_255:
    31 |        $$IRET162 = ((char *)*((char * *)$$PARM.this297) + (8ll)*((long long) $$PARM.i298));
   138 |        $$RETF6 = $$IRET162;
                __12332 = double MMSP::f<double>(double, double)($$SFX14,*$$RETF6);
                __es.__c4@3 = 3u;
                $$PARM.this175 = &__12331;
    47 |        if (!(&__12331->(vector<int>).data@0.rns401.$$1108 != NULL)) goto lab_137;
    48 |        operator delete[](void*)(&__12331->(vector<int>).data@0.rns401.$$1108)
    49 |        &__12331->(vector<int>).data@0.rns401.$$1108 = NULL;
    50 |      lab_137:
    51 |        $$IRETA8 = $$PARM.this175;
   139 |        $$PARM.i5F = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i5F < &x->(vector<int>).size@8.rns391.$$1120) goto lab_105;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_105:
    31 |        $$IRET20 = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i5F));
   139 |        __12848 = $$IRET20;
                *__12848 = *__12848 - 2;
   140 |        $$PARM.this1E2 = &__12333;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1110;
   140 |        $$RET13A = $$IRET104;
    17 |        &__12333->(vector<int>).size@8.rns397.$$1110 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12333->(vector<int>).data@0.rns398.$$1110 = $$RET13B;
    19 |        if (!(0 < &__12333->(vector<int>).size@8.rns397.$$1110)) goto lab_204;
                i = 0;
                do {   /* id=6 guarded */ /* ~205 */ 
                  /* region = 310 */
    20 |          $$SFX1C = ((char *)&__12333->(vector<int>).data@0.rns398.$$1110 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1110) goto lab_206;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_206:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1110 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12333->(vector<int>).size@8.rns397.$$1110);    /* ~205 */
              lab_204:
    21 |        $$IRET10B = $$PARM.this1E2;
   140 |        __es.__c4@3 = 8u;
                $$RETF7 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12333);
                $$PARM.this289 = $$RETF7;
                $$PARM.i28A = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i28A < *((int *)((char *)$$PARM.this289 + 8))) goto lab_251;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_251:
    31 |        $$IRET15B = ((char *)*((char * *)$$PARM.this289) + (8ll)*((long long) $$PARM.i28A));
   140 |        left = $$IRET15B;
                __es.__c4@3 = 3u;
                $$PARM.this171 = &__12333;
    47 |        if (!(&__12333->(vector<int>).data@0.rns401.$$1113 != NULL)) goto lab_129;
    48 |        operator delete[](void*)(&__12333->(vector<int>).data@0.rns401.$$1113)
    49 |        &__12333->(vector<int>).data@0.rns401.$$1113 = NULL;
    50 |      lab_129:
    51 |        $$IRETA4 = $$PARM.this171;
   141 |        $$SFX15 = *left;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12334,&x);
                __es.__c4@3 = 9u;
                $$RETF8 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12334);
                $$PARM.this281 = $$RETF8;
                $$PARM.i282 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i282 < *((int *)((char *)$$PARM.this281 + 8))) goto lab_249;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_249:
    31 |        $$IRET157 = ((char *)*((char * *)$$PARM.this281) + (8ll)*((long long) $$PARM.i282));
   141 |        $$RETF9 = $$IRET157;
                __12335 = double MMSP::f<double>(double, double)($$SFX15,*$$RETF9);
                __es.__c4@3 = 3u;
                $$PARM.this173 = &__12334;
    47 |        if (!(&__12334->(vector<int>).data@0.rns401.$$1118 != NULL)) goto lab_133;
    48 |        operator delete[](void*)(&__12334->(vector<int>).data@0.rns401.$$1118)
    49 |        &__12334->(vector<int>).data@0.rns401.$$1118 = NULL;
    50 |      lab_133:
    51 |        $$IRETA6 = $$PARM.this173;
   142 |        $$PARM.i5D = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i5D < &x->(vector<int>).size@8.rns391.$$1120) goto lab_103;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_103:
    31 |        $$IRET1F = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i5D));
   142 |        __12849 = $$IRET1F;
                *__12849 = *__12849 + 1;
   143 |        $$PARM.i5B = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i5B < &x->(vector<int>).size@8.rns391.$$1120) goto lab_101;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_101:
    31 |        $$IRET1E = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i5B));
   143 |        __12851 = $$IRET1E;
                *__12851 = *__12851 + 1;
   144 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12336,&x);
                __es.__c4@3 = 10u;
                $$RETFA = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12336);
                $$PARM.this295 = $$RETFA;
                $$PARM.i296 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i296 < *((int *)((char *)$$PARM.this295 + 8))) goto lab_253;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_253:
    31 |        $$IRET161 = ((char *)*((char * *)$$PARM.this295) + (8ll)*((long long) $$PARM.i296));
   144 |        up = $$IRET161;
                __es.__c4@3 = 3u;
                $$PARM.this174 = &__12336;
    47 |        if (!(&__12336->(vector<int>).data@0.rns401.$$1124 != NULL)) goto lab_135;
    48 |        operator delete[](void*)(&__12336->(vector<int>).data@0.rns401.$$1124)
    49 |        &__12336->(vector<int>).data@0.rns401.$$1124 = NULL;
    50 |      lab_135:
    51 |        $$IRETA7 = $$PARM.this174;
   145 |        $$SFX16 = *up;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12337,&x);
                __es.__c4@3 = 11u;
                $$RETFB = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12337);
                $$PARM.this26D = $$RETFB;
                $$PARM.i26E = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i26E < *((int *)((char *)$$PARM.this26D + 8))) goto lab_245;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_245:
    31 |        $$IRET14D = ((char *)*((char * *)$$PARM.this26D) + (8ll)*((long long) $$PARM.i26E));
   145 |        $$RETFC = $$IRET14D;
                __12338 = double MMSP::f<double>(double, double)($$SFX16,*$$RETFC);
                __es.__c4@3 = 3u;
                $$PARM.this177 = &__12337;
    47 |        if (!(&__12337->(vector<int>).data@0.rns401.$$1129 != NULL)) goto lab_141;
    48 |        operator delete[](void*)(&__12337->(vector<int>).data@0.rns401.$$1129)
    49 |        &__12337->(vector<int>).data@0.rns401.$$1129 = NULL;
    50 |      lab_141:
    51 |        $$IRETAA = $$PARM.this177;
   146 |        $$PARM.i65 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i65 < &x->(vector<int>).size@8.rns391.$$1120) goto lab_111;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_111:
    31 |        $$IRET23 = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i65));
   146 |        __12853 = $$IRET23;
                *__12853 = *__12853 - 2;
   147 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12339,&x);
                __es.__c4@3 = 12u;
                $$RETFD = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12339);
                $$PARM.this271 = $$RETFD;
                $$PARM.i272 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i272 < *((int *)((char *)$$PARM.this271 + 8))) goto lab_247;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_247:
    31 |        $$IRET14F = ((char *)*((char * *)$$PARM.this271) + (8ll)*((long long) $$PARM.i272));
   147 |        down = $$IRET14F;
                __es.__c4@3 = 3u;
                $$PARM.this179 = &__12339;
    47 |        if (!(&__12339->(vector<int>).data@0.rns401.$$1134 != NULL)) goto lab_145;
    48 |        operator delete[](void*)(&__12339->(vector<int>).data@0.rns401.$$1134)
    49 |        &__12339->(vector<int>).data@0.rns401.$$1134 = NULL;
    50 |      lab_145:
    51 |        $$IRETAC = $$PARM.this179;
   148 |        $$SFX17 = *down;
                MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12340,&x);
                __es.__c4@3 = 13u;
                $$RETFE = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12340);
                $$PARM.this259 = $$RETFE;
                $$PARM.i25A = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i25A < *((int *)((char *)$$PARM.this259 + 8))) goto lab_243;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_243:
    31 |        $$IRET143 = ((char *)*((char * *)$$PARM.this259) + (8ll)*((long long) $$PARM.i25A));
   148 |        $$RETFF = $$IRET143;
                __12341 = double MMSP::f<double>(double, double)($$SFX17,*$$RETFF);
                __es.__c4@3 = 3u;
                $$PARM.this17D = &__12340;
    47 |        if (!(&__12340->(vector<int>).data@0.rns401.$$1139 != NULL)) goto lab_149;
    48 |        operator delete[](void*)(&__12340->(vector<int>).data@0.rns401.$$1139)
    49 |        &__12340->(vector<int>).data@0.rns401.$$1139 = NULL;
    50 |      lab_149:
    51 |        $$IRETB0 = $$PARM.this17D;
   149 |        $$PARM.i63 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i63 < &x->(vector<int>).size@8.rns391.$$1120) goto lab_109;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_109:
    31 |        $$IRET22 = ((char *)&x->(vector<int>).data@0.rns392.$$1120 + (4ll)*((long long) $$PARM.i63));
   149 |        __12854 = $$IRET22;
                *__12854 = *__12854 + 1;
                $$RET100 = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this24F = $$RET100;
                $$PARM.i250 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i250 < *((int *)((char *)$$PARM.this24F + 8))) goto lab_241;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_241:
    31 |        $$IRET13E = ((char *)*((char * *)$$PARM.this24F) + (8ll)*((long long) $$PARM.i250));
   149 |        $$RET101 = $$IRET13E;
   150 |        *$$RET101 = _fnmsub@53( 4.0000000000000000E+000,*center,((*left + *right) + *up) + *down) / (((double *)((char *)oldGrid + 144))[0ll] * ((double *)((char *)oldGrid + 144))[0ll]);
                $$RET102 = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(&c_storage,i);
                $$PARM.this24B = $$RET102;
                $$PARM.i24C = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i24C < *((int *)((char *)$$PARM.this24B + 8))) goto lab_239;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_239:
    31 |        $$IRET13C = ((char *)*((char * *)$$PARM.this24B) + (8ll)*((long long) $$PARM.i24C));
   150 |        $$RET103 = $$IRET13C;
   151 |        *$$RET103 = _fnmsub@53( 4.0000000000000000E+000,&__12329->(double),((&__12335->(double) + &__12332->(double)) + &__12338->(double)) + &__12341->(double)) / (((double *)((char *)oldGrid + 144))[0ll] * ((double *)((char *)oldGrid + 144))[0ll]);
   153 |        __es.__c4@3 = 2u;
                $$PARM.this17F = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$1145 != NULL)) goto lab_153;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$1145)
    49 |        &x->(vector<int>).data@0.rns401.$$1145 = NULL;
    50 |      lab_153:
    51 |        $$IRETB2 = $$PARM.this17F;
   132 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~7 */
            lab_9:
   156 |      void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(&c_storage)
   157 |      void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(oldGrid)
   159 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_12;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 317 */
   160 |        MMSP::vector<int> MMSP::position<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 14u;
   161 |        $$PARM.this1D8 = &__12343;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1053;
   161 |        $$RET13A = $$IRET104;
    17 |        &__12343->(vector<int>).size@8.rns397.$$1053 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12343->(vector<int>).data@0.rns398.$$1053 = $$RET13B;
    19 |        if (!(0 < &__12343->(vector<int>).size@8.rns397.$$1053)) goto lab_198;
                i = 0;
                do {   /* id=5 guarded */ /* ~199 */ 
                  /* region = 312 */
    20 |          $$SFX1C = ((char *)&__12343->(vector<int>).data@0.rns398.$$1053 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1053) goto lab_200;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_200:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1053 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12343->(vector<int>).size@8.rns397.$$1053);    /* ~199 */
              lab_198:
    21 |        $$IRET106 = $$PARM.this1D8;
   161 |        __es.__c4@3 = 15u;
                oldX = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12343);
                __es.__c4@3 = 14u;
                $$PARM.this186 = &__12343;
    47 |        if (!(&__12343->(vector<int>).data@0.rns401.$$1055 != NULL)) goto lab_163;
    48 |        operator delete[](void*)(&__12343->(vector<int>).data@0.rns401.$$1055)
    49 |        &__12343->(vector<int>).data@0.rns401.$$1055 = NULL;
    50 |      lab_163:
    51 |        $$IRETB9 = $$PARM.this186;
   162 |        $$PARM.this1E6 = &__12344;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1056;
   162 |        $$RET13A = $$IRET104;
    17 |        &__12344->(vector<int>).size@8.rns397.$$1056 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12344->(vector<int>).data@0.rns398.$$1056 = $$RET13B;
    19 |        if (!(0 < &__12344->(vector<int>).size@8.rns397.$$1056)) goto lab_210;
                i = 0;
                do {   /* id=7 guarded */ /* ~211 */ 
                  /* region = 313 */
    20 |          $$SFX1C = ((char *)&__12344->(vector<int>).data@0.rns398.$$1056 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1056) goto lab_212;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_212:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1056 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12344->(vector<int>).size@8.rns397.$$1056);    /* ~211 */
              lab_210:
    21 |        $$IRET10D = $$PARM.this1E6;
   162 |        __es.__c4@3 = 16u;
                csX = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12344);
                __es.__c4@3 = 14u;
                $$PARM.this170 = &__12344;
    47 |        if (!(&__12344->(vector<int>).data@0.rns401.$$1058 != NULL)) goto lab_127;
    48 |        operator delete[](void*)(&__12344->(vector<int>).data@0.rns401.$$1058)
    49 |        &__12344->(vector<int>).data@0.rns401.$$1058 = NULL;
    50 |      lab_127:
    51 |        $$IRETA3 = $$PARM.this170;
   163 |        $$PARM.this1EC = &__12345;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1059;
   163 |        $$RET13A = $$IRET104;
    17 |        &__12345->(vector<int>).size@8.rns397.$$1059 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12345->(vector<int>).data@0.rns398.$$1059 = $$RET13B;
    19 |        if (!(0 < &__12345->(vector<int>).size@8.rns397.$$1059)) goto lab_216;
                i = 0;
                do {   /* id=8 guarded */ /* ~217 */ 
                  /* region = 314 */
    20 |          $$SFX1C = ((char *)&__12345->(vector<int>).data@0.rns398.$$1059 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1059) goto lab_218;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_218:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1059 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12345->(vector<int>).size@8.rns397.$$1059);    /* ~217 */
              lab_216:
    21 |        $$IRET110 = $$PARM.this1EC;
   163 |        __es.__c4@3 = 17u;
                newX = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12345);
                __es.__c4@3 = 14u;
                $$PARM.this185 = &__12345;
    47 |        if (!(&__12345->(vector<int>).data@0.rns401.$$1061 != NULL)) goto lab_161;
    48 |        operator delete[](void*)(&__12345->(vector<int>).data@0.rns401.$$1061)
    49 |        &__12345->(vector<int>).data@0.rns401.$$1061 = NULL;
    50 |      lab_161:
    51 |        $$IRETB8 = $$PARM.this185;
   166 |        $$PARM.i61 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i61 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_107;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_107:
    31 |        $$IRET21 = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i61));
   166 |        __12857 = $$IRET21;
                *__12857 = *__12857 + 1;
   167 |        $$PARM.this1F2 = &__12346;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1063;
   167 |        $$RET13A = $$IRET104;
    17 |        &__12346->(vector<int>).size@8.rns397.$$1063 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12346->(vector<int>).data@0.rns398.$$1063 = $$RET13B;
    19 |        if (!(0 < &__12346->(vector<int>).size@8.rns397.$$1063)) goto lab_228;
                i = 0;
                do {   /* id=10 guarded */ /* ~229 */ 
                  /* region = 315 */
    20 |          $$SFX1C = ((char *)&__12346->(vector<int>).data@0.rns398.$$1063 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1063) goto lab_230;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_230:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1063 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12346->(vector<int>).size@8.rns397.$$1063);    /* ~229 */
              lab_228:
    21 |        $$IRET113 = $$PARM.this1F2;
   167 |        __es.__c4@3 = 18u;
                $$RET104 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12346);
                $$PARM.this29B = $$RET104;
                $$PARM.i29C = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i29C < *((int *)((char *)$$PARM.this29B + 8))) goto lab_259;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_259:
    31 |        $$IRET164 = ((char *)*((char * *)$$PARM.this29B) + (8ll)*((long long) $$PARM.i29C));
   167 |        right = $$IRET164;
                __es.__c4@3 = 14u;
                $$PARM.this184 = &__12346;
    47 |        if (!(&__12346->(vector<int>).data@0.rns401.$$1066 != NULL)) goto lab_159;
    48 |        operator delete[](void*)(&__12346->(vector<int>).data@0.rns401.$$1066)
    49 |        &__12346->(vector<int>).data@0.rns401.$$1066 = NULL;
    50 |      lab_159:
    51 |        $$IRETB7 = $$PARM.this184;
   168 |        $$PARM.i51 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i51 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_91;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_91:
    31 |        $$IRET19 = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i51));
   168 |        __12859 = $$IRET19;
                *__12859 = *__12859 - 2;
   169 |        $$PARM.this1F4 = &__12347;
   133 |        $$IRET104 = &x->(vector<int>).size@8.rns899.$$1250$$1068;
   169 |        $$RET13A = $$IRET104;
    17 |        &__12347->(vector<int>).size@8.rns397.$$1068 = $$RET13A;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__12347->(vector<int>).data@0.rns398.$$1068 = $$RET13B;
    19 |        if (!(0 < &__12347->(vector<int>).size@8.rns397.$$1068)) goto lab_234;
                i = 0;
                do {   /* id=11 guarded */ /* ~235 */ 
                  /* region = 316 */
    20 |          $$SFX1C = ((char *)&__12347->(vector<int>).data@0.rns398.$$1068 + (4ll)*((long long) i));
                  $$PARM.i1D4 = i;
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if ($$PARM.i1D4 < &x->(vector<int>).size@8.rns896.$$1252$$1068) goto lab_236;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_236:
    35 |          $$IRET103 = ((char *)&x->(vector<int>).data@0.rns897.$$1252$$1068 + (4ll)*((long long) $$PARM.i1D4));
    20 |          $$RET13C = $$IRET103;
                  *$$SFX1C = *$$RET13C;
    19 |          i = i + 1;
                } while (i < &__12347->(vector<int>).size@8.rns397.$$1068);    /* ~235 */
              lab_234:
    21 |        $$IRET114 = $$PARM.this1F4;
   169 |        __es.__c4@3 = 19u;
                $$RET105 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12347);
                $$PARM.this2AD = $$RET105;
                $$PARM.i2AE = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2AE < *((int *)((char *)$$PARM.this2AD + 8))) goto lab_277;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_277:
    31 |        $$IRET16D = ((char *)*((char * *)$$PARM.this2AD) + (8ll)*((long long) $$PARM.i2AE));
   169 |        left = $$IRET16D;
                __es.__c4@3 = 14u;
                $$PARM.this183 = &__12347;
    47 |        if (!(&__12347->(vector<int>).data@0.rns401.$$1071 != NULL)) goto lab_157;
    48 |        operator delete[](void*)(&__12347->(vector<int>).data@0.rns401.$$1071)
    49 |        &__12347->(vector<int>).data@0.rns401.$$1071 = NULL;
    50 |      lab_157:
    51 |        $$IRETB6 = $$PARM.this183;
   170 |        $$PARM.i53 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i53 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_93;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_93:
    31 |        $$IRET1A = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i53));
   170 |        __12860 = $$IRET1A;
                *__12860 = *__12860 + 1;
   171 |        $$PARM.i55 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i55 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_95;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_95:
    31 |        $$IRET1B = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i55));
   171 |        __12862 = $$IRET1B;
                *__12862 = *__12862 + 1;
   172 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12348,&x);
                __es.__c4@3 = 20u;
                $$RET106 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12348);
                $$PARM.this2A3 = $$RET106;
                $$PARM.i2A4 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A4 < *((int *)((char *)$$PARM.this2A3 + 8))) goto lab_267;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_267:
    31 |        $$IRET168 = ((char *)*((char * *)$$PARM.this2A3) + (8ll)*((long long) $$PARM.i2A4));
   172 |        up = $$IRET168;
                __es.__c4@3 = 14u;
                $$PARM.this182 = &__12348;
    47 |        if (!(&__12348->(vector<int>).data@0.rns401.$$1077 != NULL)) goto lab_155;
    48 |        operator delete[](void*)(&__12348->(vector<int>).data@0.rns401.$$1077)
    49 |        &__12348->(vector<int>).data@0.rns401.$$1077 = NULL;
    50 |      lab_155:
    51 |        $$IRETB5 = $$PARM.this182;
   173 |        $$PARM.i57 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i57 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_97;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_97:
    31 |        $$IRET1C = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i57));
   173 |        __12864 = $$IRET1C;
                *__12864 = *__12864 - 2;
   174 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12349,&x);
                __es.__c4@3 = 21u;
                $$RET107 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&c_storage,&__12349);
                $$PARM.this2AB = $$RET107;
                $$PARM.i2AC = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2AC < *((int *)((char *)$$PARM.this2AB + 8))) goto lab_275;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_275:
    31 |        $$IRET16C = ((char *)*((char * *)$$PARM.this2AB) + (8ll)*((long long) $$PARM.i2AC));
   174 |        down = $$IRET16C;
                __es.__c4@3 = 14u;
                $$PARM.this17E = &__12349;
    47 |        if (!(&__12349->(vector<int>).data@0.rns401.$$1082 != NULL)) goto lab_151;
    48 |        operator delete[](void*)(&__12349->(vector<int>).data@0.rns401.$$1082)
    49 |        &__12349->(vector<int>).data@0.rns401.$$1082 = NULL;
    50 |      lab_151:
    51 |        $$IRETB1 = $$PARM.this17E;
   175 |        $$PARM.i59 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i59 < &x->(vector<int>).size@8.rns391.$$1067) goto lab_99;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_99:
    31 |        $$IRET1D = ((char *)&x->(vector<int>).data@0.rns392.$$1067 + (4ll)*((long long) $$PARM.i59));
   175 |        __12865 = $$IRET1D;
                *__12865 = *__12865 + 1;
   177 |        $$SFX18 = ((*left + *right) + *up) + *down;
                $$PARM.this3EE = csX;
                $$PARM.i3EF = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3EF < *((int *)((char *)$$PARM.this3EE + 8))) goto lab_311;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_311:
    35 |        $$IRET204 = ((char *)*((char * *)$$PARM.this3EE) + (8ll)*((long long) $$PARM.i3EF));
   177 |        $$RET108 = $$IRET204;
                Kg4C = ( 1.0000000000000000E-003 * _fnmsub@53( 4.0000000000000000E+000,*$$RET108,$$SFX18)) / (((double *)((char *)oldGrid + 144))[0ll] * ((double *)((char *)oldGrid + 144))[0ll]);
                $$PARM.this3F0 = csX;
                $$PARM.i3F1 = 1;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3F1 < *((int *)((char *)$$PARM.this3F0 + 8))) goto lab_313;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_313:
    35 |        $$IRET205 = ((char *)*((char * *)$$PARM.this3F0) + (8ll)*((long long) $$PARM.i3F1));
   177 |        $$RET109 = $$IRET205;
   179 |        dCdt =  2.5000000000000001E-002 * (*$$RET109 - Kg4C);
   180 |        $$PARM.this29D = newX;
                $$PARM.i29E = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i29E < *((int *)((char *)$$PARM.this29D + 8))) goto lab_261;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_261:
    31 |        $$IRET165 = ((char *)*((char * *)$$PARM.this29D) + (8ll)*((long long) $$PARM.i29E));
   180 |        $$SFX19 = $$IRET165;
                $$PARM.this3F2 = oldX;
                $$PARM.i3F3 = 0;
    33 |        MMSP::vector<double>::operator[](int) const::guard___func__3 = 1;
    34 |        if ($$PARM.i3F3 < *((int *)((char *)$$PARM.this3F2 + 8))) goto lab_315;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<double>::operator[](int) const::__func__)
                return;
              lab_315:
    35 |        $$IRET206 = ((char *)*((char * *)$$PARM.this3F2) + (8ll)*((long long) $$PARM.i3F3));
   180 |        $$RET10A = $$IRET206;
                *$$SFX19 = _fmadd@47( 5.0000000000000002E-005,dCdt,*$$RET10A);
   184 |        __es.__c4@3 = 2u;
                $$PARM.this17C = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$1088 != NULL)) goto lab_147;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$1088)
    49 |        &x->(vector<int>).data@0.rns401.$$1088 = NULL;
    50 |      lab_147:
    51 |        $$IRETAF = $$PARM.this17C;
   159 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~10 */
            lab_12:
   186 |      i = 0;
              if (!(0 < *((int *)((char *)oldGrid + 8)))) goto lab_15;
              do {   /* id=2 guarded */ /* ~13 */ 
                /* region = 318 */
                $$RET10B = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   187 |        $$PARM.this2A1 = $$RET10B;
                $$PARM.i2A2 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A2 < *((int *)((char *)$$PARM.this2A1 + 8))) goto lab_265;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_265:
    31 |        $$IRET167 = ((char *)*((char * *)$$PARM.this2A1) + (8ll)*((long long) $$PARM.i2A2));
   187 |        $$SFX1A = $$IRET167;
                $$RET10C = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this299 = $$RET10C;
                $$PARM.i29A = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i29A < *((int *)((char *)$$PARM.this299 + 8))) goto lab_257;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_257:
    31 |        $$IRET163 = ((char *)*((char * *)$$PARM.this299) + (8ll)*((long long) $$PARM.i29A));
   187 |        $$RET10D = $$IRET163;
                *$$SFX1A = *$$RET10D;
                $$RET10E = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(&newGrid,i);
   188 |        $$PARM.this2A5 = $$RET10E;
                $$PARM.i2A6 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A6 < *((int *)((char *)$$PARM.this2A5 + 8))) goto lab_269;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_269:
    31 |        $$IRET169 = ((char *)*((char * *)$$PARM.this2A5) + (8ll)*((long long) $$PARM.i2A6));
   188 |        $$SFX1B = $$IRET169;
                $$RET10F = MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(oldGrid,i);
                $$PARM.this2A7 = $$RET10F;
                $$PARM.i2A8 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2A8 < *((int *)((char *)$$PARM.this2A7 + 8))) goto lab_271;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_271:
    31 |        $$IRET16A = ((char *)*((char * *)$$PARM.this2A7) + (8ll)*((long long) $$PARM.i2A8));
   188 |        $$RET110 = $$IRET16A;
                *$$SFX1B = *$$RET110;
   189 |        if (!(i % 2 == step % 2)) goto lab_16;
    81 |        &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &grains->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_start@0 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_finish@8 = NULL;
                &phases->(_Vector_impl;vector<double,std::allocator<double> >)._M_end_of_storage@10 = NULL;
   208 |        __es.__c4@3 = 25u;
   192 |        MMSP::vector<int> MMSP::position<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(&x,oldGrid,i)
                __es.__c4@3 = 26u;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12351,&x);
                __es.__c4@3 = 27u;
                $$RET111 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12351);
                $$PARM.this2E1 = $$RET111;
                $$PARM.i2E2 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E2 < *((int *)((char *)$$PARM.this2E1 + 8))) goto lab_293;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_293:
    31 |        $$IRET187 = ((char *)*((char * *)$$PARM.this2E1) + (8ll)*((long long) $$PARM.i2E2));
   734 |        __12714 = $$IRET187;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_18;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_21;
   105 |        *grains._M_finish@8 = *__12714;
              lab_21:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_23;
              lab_18:
   686 |        __12710._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12710,__12714)
              lab_23:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B3 = &__12351;
    47 |        if (!(&__12351->(vector<int>).data@0.rns401.$$973 != NULL)) goto lab_183;
    48 |        operator delete[](void*)(&__12351->(vector<int>).data@0.rns401.$$973)
    49 |        &__12351->(vector<int>).data@0.rns401.$$973 = NULL;
    50 |      lab_183:
    51 |        $$IRETE6 = $$PARM.this1B3;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12352,&x);
                __es.__c4@3 = 28u;
                $$RET112 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12352);
                $$PARM.this2C3 = $$RET112;
                $$PARM.i2C4 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C4 < *((int *)((char *)$$PARM.this2C3 + 8))) goto lab_287;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_287:
    31 |        $$IRET178 = ((char *)*((char * *)$$PARM.this2C3) + (8ll)*((long long) $$PARM.i2C4));
   734 |        __12728 = $$IRET178;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_24;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_27;
   105 |        *phases._M_finish@8 = *__12728;
              lab_27:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_29;
              lab_24:
   686 |        __12724._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12724,__12728)
              lab_29:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A7 = &__12352;
    47 |        if (!(&__12352->(vector<int>).data@0.rns401.$$978 != NULL)) goto lab_171;
    48 |        operator delete[](void*)(&__12352->(vector<int>).data@0.rns401.$$978)
    49 |        &__12352->(vector<int>).data@0.rns401.$$978 = NULL;
    50 |      lab_171:
    51 |        $$IRETDA = $$PARM.this1A7;
   195 |        $$PARM.iA7 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA7 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_123;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_123:
    31 |        $$IRET44 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.iA7));
   195 |        __12868 = $$IRET44;
                *__12868 = *__12868 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12353,&x);
                __es.__c4@3 = 29u;
                $$RET113 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12353);
                $$PARM.this2EB = $$RET113;
                $$PARM.i2EC = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2EC < *((int *)((char *)$$PARM.this2EB + 8))) goto lab_301;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_301:
    31 |        $$IRET18C = ((char *)*((char * *)$$PARM.this2EB) + (8ll)*((long long) $$PARM.i2EC));
   734 |        __12742 = $$IRET18C;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_30;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_33;
   105 |        *grains._M_finish@8 = *__12742;
              lab_33:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_35;
              lab_30:
   686 |        __12738._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12738,__12742)
              lab_35:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A4 = &__12353;
    47 |        if (!(&__12353->(vector<int>).data@0.rns401.$$984 != NULL)) goto lab_169;
    48 |        operator delete[](void*)(&__12353->(vector<int>).data@0.rns401.$$984)
    49 |        &__12353->(vector<int>).data@0.rns401.$$984 = NULL;
    50 |      lab_169:
    51 |        $$IRETD7 = $$PARM.this1A4;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12354,&x);
                __es.__c4@3 = 30u;
                $$RET114 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12354);
                $$PARM.this2E7 = $$RET114;
                $$PARM.i2E8 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E8 < *((int *)((char *)$$PARM.this2E7 + 8))) goto lab_297;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_297:
    31 |        $$IRET18A = ((char *)*((char * *)$$PARM.this2E7) + (8ll)*((long long) $$PARM.i2E8));
   734 |        __12756 = $$IRET18A;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_36;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_39;
   105 |        *phases._M_finish@8 = *__12756;
              lab_39:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_41;
              lab_36:
   686 |        __12752._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12752,__12756)
              lab_41:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A3 = &__12354;
    47 |        if (!(&__12354->(vector<int>).data@0.rns401.$$989 != NULL)) goto lab_167;
    48 |        operator delete[](void*)(&__12354->(vector<int>).data@0.rns401.$$989)
    49 |        &__12354->(vector<int>).data@0.rns401.$$989 = NULL;
    50 |      lab_167:
    51 |        $$IRETD6 = $$PARM.this1A3;
   198 |        $$PARM.i9F = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i9F < &x->(vector<int>).size@8.rns391.$$1002) goto lab_117;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_117:
    31 |        $$IRET40 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.i9F));
   198 |        __12870 = $$IRET40;
                *__12870 = *__12870 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12355,&x);
                __es.__c4@3 = 31u;
                $$RET115 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12355);
                $$PARM.this2E9 = $$RET115;
                $$PARM.i2EA = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2EA < *((int *)((char *)$$PARM.this2E9 + 8))) goto lab_299;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_299:
    31 |        $$IRET18B = ((char *)*((char * *)$$PARM.this2E9) + (8ll)*((long long) $$PARM.i2EA));
   734 |        __12770 = $$IRET18B;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_42;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_45;
   105 |        *grains._M_finish@8 = *__12770;
              lab_45:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_47;
              lab_42:
   686 |        __12766._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12766,__12770)
              lab_47:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A0 = &__12355;
    47 |        if (!(&__12355->(vector<int>).data@0.rns401.$$995 != NULL)) goto lab_165;
    48 |        operator delete[](void*)(&__12355->(vector<int>).data@0.rns401.$$995)
    49 |        &__12355->(vector<int>).data@0.rns401.$$995 = NULL;
    50 |      lab_165:
    51 |        $$IRETD3 = $$PARM.this1A0;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12356,&x);
                __es.__c4@3 = 32u;
                $$RET116 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12356);
                $$PARM.this2E5 = $$RET116;
                $$PARM.i2E6 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2E6 < *((int *)((char *)$$PARM.this2E5 + 8))) goto lab_295;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_295:
    31 |        $$IRET189 = ((char *)*((char * *)$$PARM.this2E5) + (8ll)*((long long) $$PARM.i2E6));
   734 |        __12784 = $$IRET189;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_48;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_51;
   105 |        *phases._M_finish@8 = *__12784;
              lab_51:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_53;
              lab_48:
   686 |        __12780._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12780,__12784)
              lab_53:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1AE = &__12356;
    47 |        if (!(&__12356->(vector<int>).data@0.rns401.$$1000 != NULL)) goto lab_179;
    48 |        operator delete[](void*)(&__12356->(vector<int>).data@0.rns401.$$1000)
    49 |        &__12356->(vector<int>).data@0.rns401.$$1000 = NULL;
    50 |      lab_179:
    51 |        $$IRETE1 = $$PARM.this1AE;
   201 |        $$PARM.iA3 = 0;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA3 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_119;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_119:
    31 |        $$IRET42 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.iA3));
   201 |        __12871 = $$IRET42;
                *__12871 = *__12871 + 1;
   202 |        $$PARM.i85 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i85 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_115;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_115:
    31 |        $$IRET33 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.i85));
   202 |        __12873 = $$IRET33;
                *__12873 = *__12873 + 1;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12357,&x);
                __es.__c4@3 = 33u;
                $$RET117 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12357);
                $$PARM.this2D5 = $$RET117;
                $$PARM.i2D6 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D6 < *((int *)((char *)$$PARM.this2D5 + 8))) goto lab_291;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_291:
    31 |        $$IRET181 = ((char *)*((char * *)$$PARM.this2D5) + (8ll)*((long long) $$PARM.i2D6));
   734 |        __12798 = $$IRET181;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_54;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_57;
   105 |        *grains._M_finish@8 = *__12798;
              lab_57:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_59;
              lab_54:
   686 |        __12794._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12794,__12798)
              lab_59:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B4 = &__12357;
    47 |        if (!(&__12357->(vector<int>).data@0.rns401.$$1007 != NULL)) goto lab_185;
    48 |        operator delete[](void*)(&__12357->(vector<int>).data@0.rns401.$$1007)
    49 |        &__12357->(vector<int>).data@0.rns401.$$1007 = NULL;
    50 |      lab_185:
    51 |        $$IRETE7 = $$PARM.this1B4;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12358,&x);
                __es.__c4@3 = 34u;
                $$RET118 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12358);
                $$PARM.this2BF = $$RET118;
                $$PARM.i2C0 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2C0 < *((int *)((char *)$$PARM.this2BF + 8))) goto lab_285;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_285:
    31 |        $$IRET176 = ((char *)*((char * *)$$PARM.this2BF) + (8ll)*((long long) $$PARM.i2C0));
   734 |        __12812 = $$IRET176;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_60;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_63;
   105 |        *phases._M_finish@8 = *__12812;
              lab_63:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_65;
              lab_60:
   686 |        __12808._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12808,__12812)
              lab_65:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A9 = &__12358;
    47 |        if (!(&__12358->(vector<int>).data@0.rns401.$$1012 != NULL)) goto lab_175;
    48 |        operator delete[](void*)(&__12358->(vector<int>).data@0.rns401.$$1012)
    49 |        &__12358->(vector<int>).data@0.rns401.$$1012 = NULL;
    50 |      lab_175:
    51 |        $$IRETDC = $$PARM.this1A9;
   205 |        $$PARM.iB9 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iB9 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_125;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_125:
    31 |        $$IRET4D = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.iB9));
   205 |        __12875 = $$IRET4D;
                *__12875 = *__12875 - 2;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12359,&x);
                __es.__c4@3 = 35u;
                $$RET119 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12359);
                $$PARM.this2BB = $$RET119;
                $$PARM.i2BC = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2BC < *((int *)((char *)$$PARM.this2BB + 8))) goto lab_283;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_283:
    31 |        $$IRET174 = ((char *)*((char * *)$$PARM.this2BB) + (8ll)*((long long) $$PARM.i2BC));
   734 |        __12826 = $$IRET174;
   735 |        if (!(grains._M_finish@8 != grains._M_end_of_storage@10)) goto lab_66;
   169 |        if (!(grains._M_finish@8 != NULL)) goto lab_69;
   105 |        *grains._M_finish@8 = *__12826;
              lab_69:
   738 |        grains._M_finish@8 = ((char *)grains._M_finish@8  + 8ll);
   739 |        goto lab_71;
              lab_66:
   686 |        __12822._M_current@0 = grains._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&grains,__12822,__12826)
              lab_71:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1A8 = &__12359;
    47 |        if (!(&__12359->(vector<int>).data@0.rns401.$$1018 != NULL)) goto lab_173;
    48 |        operator delete[](void*)(&__12359->(vector<int>).data@0.rns401.$$1018)
    49 |        &__12359->(vector<int>).data@0.rns401.$$1018 = NULL;
    50 |      lab_173:
    51 |        $$IRETDB = $$PARM.this1A8;
   734 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12360,&x);
                __es.__c4@3 = 36u;
                $$RET11A = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12360);
                $$PARM.this2B7 = $$RET11A;
                $$PARM.i2B8 = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2B8 < *((int *)((char *)$$PARM.this2B7 + 8))) goto lab_281;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_281:
    31 |        $$IRET172 = ((char *)*((char * *)$$PARM.this2B7) + (8ll)*((long long) $$PARM.i2B8));
   734 |        __12840 = $$IRET172;
   735 |        if (!(phases._M_finish@8 != phases._M_end_of_storage@10)) goto lab_72;
   169 |        if (!(phases._M_finish@8 != NULL)) goto lab_75;
   105 |        *phases._M_finish@8 = *__12840;
              lab_75:
   738 |        phases._M_finish@8 = ((char *)phases._M_finish@8  + 8ll);
   739 |        goto lab_77;
              lab_72:
   686 |        __12836._M_current@0 = phases._M_finish@8;
   444 |        std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(&phases,__12836,__12840)
              lab_77:
   742 |        __es.__c4@3 = 26u;
                $$PARM.this1B7 = &__12360;
    47 |        if (!(&__12360->(vector<int>).data@0.rns401.$$1023 != NULL)) goto lab_189;
    48 |        operator delete[](void*)(&__12360->(vector<int>).data@0.rns401.$$1023)
    49 |        &__12360->(vector<int>).data@0.rns401.$$1023 = NULL;
    50 |      lab_189:
    51 |        $$IRETEA = $$PARM.this1B7;
   208 |        $$PARM.iA5 = 1;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.iA5 < &x->(vector<int>).size@8.rns391.$$1002) goto lab_121;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_121:
    31 |        $$IRET43 = ((char *)&x->(vector<int>).data@0.rns392.$$1002 + (4ll)*((long long) $$PARM.iA5));
   208 |        __12876 = $$IRET43;
                *__12876 = *__12876 + 1;
   209 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12361,&x);
                __es.__c4@3 = 37u;
                $$RET11B = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(oldGrid,&__12361);
                $$PARM.this2CF = $$RET11B;
                $$PARM.i2D0 = 0;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2D0 < *((int *)((char *)$$PARM.this2CF + 8))) goto lab_289;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_289:
    31 |        $$IRET17E = ((char *)*((char * *)$$PARM.this2CF) + (8ll)*((long long) $$PARM.i2D0));
   209 |        $$RET11C = $$IRET17E;
                std::vector<double, std::allocator<double> > MMSP::dE<double>(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)(&deltas,*$$RET11C,&phases,&grains)
                __es.__c4@3 = 26u;
                $$PARM.this1B5 = &__12361;
    47 |        if (!(&__12361->(vector<int>).data@0.rns401.$$1029 != NULL)) goto lab_187;
    48 |        operator delete[](void*)(&__12361->(vector<int>).data@0.rns401.$$1029)
    49 |        &__12361->(vector<int>).data@0.rns401.$$1029 = NULL;
    50 |      lab_187:
    51 |        $$IRETE8 = $$PARM.this1B5;
   209 |        __es.__c4@3 = 38u;
                $$RET11D = rand();
   611 |        if (!(*((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull))) <  0.0000000000000000E+000)) goto lab_78;
   212 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12363,&x);
                __es.__c4@3 = 39u;
                $$RET11E = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12363);
                $$PARM.this2F9 = $$RET11E;
                $$PARM.i2FA = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2FA < *((int *)((char *)$$PARM.this2F9 + 8))) goto lab_303;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_303:
    31 |        $$IRET193 = ((char *)*((char * *)$$PARM.this2F9) + (8ll)*((long long) $$PARM.i2FA));
   212 |        $$BDE2 = $$IRET193;
   611 |        *$$BDE2 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1BB = &__12363;
    47 |        if (!(&__12363->(vector<int>).data@0.rns401.$$1047 != NULL)) goto lab_191;
    48 |        operator delete[](void*)(&__12363->(vector<int>).data@0.rns401.$$1047)
    49 |        &__12363->(vector<int>).data@0.rns401.$$1047 = NULL;
    50 |      lab_191:
    51 |        $$IRETEE = $$PARM.this1BB;
   213 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12364,&x);
                __es.__c4@3 = 40u;
                $$RET11F = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12364);
                $$PARM.this2FD = $$RET11F;
                $$PARM.i2FE = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i2FE < *((int *)((char *)$$PARM.this2FD + 8))) goto lab_305;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_305:
    31 |        $$IRET195 = ((char *)*((char * *)$$PARM.this2FD) + (8ll)*((long long) $$PARM.i2FE));
   213 |        $$BDE3 = $$IRET195;
   611 |        *$$BDE3 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1AB = &__12364;
    47 |        if (!(&__12364->(vector<int>).data@0.rns401.$$1051 != NULL)) goto lab_177;
    48 |        operator delete[](void*)(&__12364->(vector<int>).data@0.rns401.$$1051)
    49 |        &__12364->(vector<int>).data@0.rns401.$$1051 = NULL;
    50 |      lab_177:
    51 |        $$IRETDE = $$PARM.this1AB;
   214 |        goto lab_80;
              lab_78:
                $$RET120 = (double) rand();
   611 |        if (!($$RET120 /  2.1474836470000000E+009 < __exp@1(- *((double *)((char *)deltas._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)))))) goto lab_81;
   216 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12365,&x);
                __es.__c4@3 = 41u;
                $$RET121 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12365);
                $$PARM.this309 = $$RET121;
                $$PARM.i30A = 1;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i30A < *((int *)((char *)$$PARM.this309 + 8))) goto lab_309;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_309:
    31 |        $$IRET19B = ((char *)*((char * *)$$PARM.this309) + (8ll)*((long long) $$PARM.i30A));
   216 |        $$BDE5 = $$IRET19B;
   611 |        *$$BDE5 = *((double *)((char *)phases._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1BE = &__12365;
    47 |        if (!(&__12365->(vector<int>).data@0.rns401.$$1039 != NULL)) goto lab_193;
    48 |        operator delete[](void*)(&__12365->(vector<int>).data@0.rns401.$$1039)
    49 |        &__12365->(vector<int>).data@0.rns401.$$1039 = NULL;
    50 |      lab_193:
    51 |        $$IRETF1 = $$PARM.this1BE;
   217 |        MMSP::vector<int>::vector(MMSP::vector<int> const&)(&__12366,&x);
                __es.__c4@3 = 42u;
                $$RET122 = MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(&newGrid,&__12366);
                $$PARM.this307 = $$RET122;
                $$PARM.i308 = 2;
    29 |        MMSP::vector<double>::operator[](int)::guard___func__3 = 1;
    30 |        if ($$PARM.i308 < *((int *)((char *)$$PARM.this307 + 8))) goto lab_307;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<double>::operator[](int)::__func__)
                return;
              lab_307:
    31 |        $$IRET19A = ((char *)*((char * *)$$PARM.this307) + (8ll)*((long long) $$PARM.i308));
   217 |        $$BDE6 = $$IRET19A;
   611 |        *$$BDE6 = *((double *)((char *)grains._M_start@0 + (long long) ((unsigned long long) ($$RET11D % 4 + 1) * 8ull)));
                __es.__c4@3 = 38u;
                $$PARM.this1BF = &__12366;
    47 |        if (!(&__12366->(vector<int>).data@0.rns401.$$1043 != NULL)) goto lab_195;
    48 |        operator delete[](void*)(&__12366->(vector<int>).data@0.rns401.$$1043)
    49 |        &__12366->(vector<int>).data@0.rns401.$$1043 = NULL;
    50 |      lab_195:
    51 |        $$IRETF2 = $$PARM.this1BF;
   218 |      lab_81:
              lab_80:
   219 |        __es.__c4@3 = 26u;
                $$PARM.this3FB = &deltas;
   145 |        if (!(deltas._M_start@0 != NULL)) goto lab_323;
    95 |        operator delete(void*)(deltas._M_start@0)
   110 |      lab_323:
   132 |        $$PARM.this226 = $$PARM.this3FB;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FB;
   314 |        $$IRET20D = $$PARM.this3FB;
   219 |        __es.__c4@3 = 25u;
                $$PARM.this1AF = &x;
    47 |        if (!(&x->(vector<int>).data@0.rns401.$$1033 != NULL)) goto lab_181;
    48 |        operator delete[](void*)(&x->(vector<int>).data@0.rns401.$$1033)
    49 |        &x->(vector<int>).data@0.rns401.$$1033 = NULL;
    50 |      lab_181:
    51 |        $$IRETE2 = $$PARM.this1AF;
   219 |        __es.__c4@3 = 23u;
                $$PARM.this3FA = &phases;
   145 |        if (!(phases._M_start@0 != NULL)) goto lab_317;
    95 |        operator delete(void*)(phases._M_start@0)
   110 |      lab_317:
   132 |        $$PARM.this226 = $$PARM.this3FA;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FA;
   314 |        $$IRET20C = $$PARM.this3FA;
   219 |        __es.__c4@3 = 2u;
                $$PARM.this3FE = &grains;
   145 |        if (!(grains._M_start@0 != NULL)) goto lab_329;
    95 |        operator delete(void*)(grains._M_start@0)
   110 |      lab_329:
   132 |        $$PARM.this226 = $$PARM.this3FE;
   109 |        $$PARM.this224 = $$PARM.this226;
    73 |        $$IRET129 = $$PARM.this224;
   109 |        $$IRET12A = $$PARM.this226;
   132 |        $$IRET12B = $$PARM.this226;
   133 |        $$IRET12C = $$PARM.this3FE;
   314 |        $$IRET210 = $$PARM.this3FE;
   219 |      lab_16:
   186 |        i = i + 1;
              } while (i < *((int *)((char *)oldGrid + 8)));    /* ~13 */
            lab_15:
   223 |      void MMSP::swap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&, MMSP::grid<3, MMSP::vector<double> >&)(oldGrid,&newGrid)
   224 |      void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(oldGrid)
   225 |      __es.__c4@3 = 1u;
              MMSP::grid<3, MMSP::vector<double> >::~grid()(&c_storage);
   126 |      step = step + 1;
            } while (step < steps);    /* ~2 */
          lab_4:
   227 |    iterations = iterations + 1;
   228 |    __es.__c4@3 = 0u;
            MMSP::grid<3, MMSP::vector<double> >::~grid()(&newGrid);
            return;
          } /* function */ 


   565 |  void void MMSP::output<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, char const*)(char * GRID, char * filename)
   567 |  {
            MMSP::grid<3, MMSP::vector<double> >::output(char const*) const(GRID,filename)
   568 |    return;
          } /* function */ 


   228 |  char * std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&)(_Alloc_hider *this, char * __beg, char * __end, char * __a)
  1557 |  {
            __memset(&__12878,0,1ull);
  1543 |    __memset(&__12879,0,1ull);
            __12885 = char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)(__beg,__end,__a,__12879);
   260 |    *((char * *)this) = __12885;
   231 |    rstr = this;
            return rstr;
          } /* function */ 


   312 |  char * std::vector<Point<int>, std::allocator<Point<int> > >::~vector()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this2 = this;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET3 = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   142 |  void MMSP::grid<2, unsigned long>::setup(bool)(grid<2,unsigned long> *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIV8 = 0ll;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 33 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 40))[$$CIV8] = ((int *)((char *)this + 24))[$$CIV8];
   147 |      ((int *)((char *)this + 48))[$$CIV8] = ((int *)((char *)this + 32))[$$CIV8];
   149 |      ((int *)((char *)this + 88))[$$CIV8] = 2;
   150 |      ((int *)((char *)this + 96))[$$CIV8] = 2;
   152 |      ((double *)((char *)this + 104))[$$CIV8] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 120))[$$CIV8] = 0;
   155 |      ((int *)((char *)this + 128))[$$CIV8] = 1;
   156 |      ((int *)((char *)this + 136))[$$CIV8] = 1;
   158 |      ((int *)((char *)this + 144))[$$CIV8] = 0;
   159 |      ((int *)((char *)this + 152))[$$CIV8] = 0;
   145 |      $$CIV8 = $$CIV8 + 1ll;
            } while ((unsigned long long) $$CIV8 < 2ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIV9 = 0ll;
            do {   /* id=4 guarded */ /* ~4 */ 
              /* region = 32 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 64))[$$CIV9] = ((int *)((char *)this + 40))[$$CIV9] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 72))[$$CIV9] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 48))[$$CIV9];
   301 |      $$CIV9 = $$CIV9 + 1ll;
            } while ((unsigned long long) $$CIV9 < 2ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_29;
            $$DCIV0 = 0ll;
            do {   /* id=6 guarded */ /* ~30 */ 
              /* region = 31 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 56))[$$DCIV0] = 1;
   306 |      ((int *)((char *)this + 80))[$$DCIV0] = 1;
   305 |      $$DCIV0 = $$DCIV0 + 1ll;
            } while ((unsigned long long) $$DCIV0 < 2ull);    /* ~30 */
          lab_29:
            if (!1) goto lab_31;
            $$DCIV1 = 0ll;
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 30 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIV1 + 1 < 2)) goto lab_33;
              $$DCIV2 = 0ll;
              $$SCREP0 = ((int *)((char *)this + 56))[$$DCIV1];
              $$SCREP1 = ((int *)((char *)this + 80))[$$DCIV1];
              do {   /* id=8 guarded */ /* ~34 */ 
                /* region = 28 */
                /* bump-normalized */
   310 |        $$SCREP0 = $$SCREP0 * (((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIV2 + $$DCIV1)))] - ((int *)((char *)this + 40))[(long long) ((int) (1ll + ($$DCIV2 + $$DCIV1)))]);
   309 |        $$SCREP1 = $$SCREP1 * (((int *)((char *)this + 72))[(long long) ((int) (1ll + ($$DCIV2 + $$DCIV1)))] - ((int *)((char *)this + 64))[(long long) ((int) (1ll + ($$DCIV2 + $$DCIV1)))]);
   308 |        $$DCIV2 = $$DCIV2 + 1ll;
              } while ((unsigned long long) $$DCIV2 < (unsigned long long) (1ll - $$DCIV1));    /* ~34 */
              ((int *)((char *)this + 80))[$$DCIV1] = $$SCREP1;
              ((int *)((char *)this + 56))[$$DCIV1] = $$SCREP0;
            lab_33:
   305 |      $$DCIV1 = $$DCIV1 + 1ll;
            } while ((unsigned long long) $$DCIV1 < 2ull);    /* ~32 */
          lab_31:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 40))[0ll]) * ((int *)((char *)this + 56))[0ll];
            $$RET123 = operator new[](unsigned long)((unsigned long long) ((((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]) * 8ull);
   319 |    *((char * *)this) = $$RET123;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_15;
            i = 0;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 29 */
              i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~13 */
          lab_15:
   326 |    return;
          } /* function */ 


    72 |  char * MMSP::grid<2, MMSP::vector<double> >::grid(MMSP::grid<2, MMSP::vector<double> > const&)(grid<2,MMSP::vector<double> > *this, grid<2,MMSP::vector<double> > *GRID)
          {
            $$RET124 = int MMSP::fields<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(GRID);
    75 |    *((int *)((char *)this + 16)) = $$RET124;
    78 |    if (!1) goto lab_3;
            $$CIVC = 0ll;
            do {   /* id=2 guarded */ /* ~1 */ 
              /* region = 13 */
              /* bump-normalized */
    79 |      ((int *)((char *)this + 24))[$$CIVC] = ((int *)((char *)GRID + 24))[$$CIVC];
    80 |      ((int *)((char *)this + 32))[$$CIVC] = ((int *)((char *)GRID + 32))[$$CIVC];
    78 |      $$CIVC = $$CIVC + 1ll;
            } while ((unsigned long long) $$CIVC < 2ull);    /* ~1 */
          lab_3:
    84 |    *((int *)((char *)this + 20)) = 0;
    91 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)(this,0u)
    94 |    if (!1) goto lab_6;
            $$CIVD = 0ll;
            do {   /* id=1 guarded */ /* ~4 */ 
              /* region = 12 */
              /* bump-normalized */
    95 |      ((int *)((char *)this + 88))[$$CIVD] = ((int *)((char *)GRID + 88))[$$CIVD];
    96 |      ((int *)((char *)this + 96))[$$CIVD] = ((int *)((char *)GRID + 96))[$$CIVD];
    97 |      ((double *)((char *)this + 104))[$$CIVD] = ((double *)((char *)GRID + 104))[$$CIVD];
    94 |      $$CIVD = $$CIVD + 1ll;
            } while ((unsigned long long) $$CIVD < 2ull);    /* ~4 */
          lab_6:
    99 |    rstr = this;
            return rstr;
          } /* function */ 


   142 |  void MMSP::grid<2, MMSP::vector<double> >::setup(bool)(grid<2,MMSP::vector<double> > *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIVE = 0ll;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 33 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 40))[$$CIVE] = ((int *)((char *)this + 24))[$$CIVE];
   147 |      ((int *)((char *)this + 48))[$$CIVE] = ((int *)((char *)this + 32))[$$CIVE];
   149 |      ((int *)((char *)this + 88))[$$CIVE] = 2;
   150 |      ((int *)((char *)this + 96))[$$CIVE] = 2;
   152 |      ((double *)((char *)this + 104))[$$CIVE] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 120))[$$CIVE] = 0;
   155 |      ((int *)((char *)this + 128))[$$CIVE] = 1;
   156 |      ((int *)((char *)this + 136))[$$CIVE] = 1;
   158 |      ((int *)((char *)this + 144))[$$CIVE] = 0;
   159 |      ((int *)((char *)this + 152))[$$CIVE] = 0;
   145 |      $$CIVE = $$CIVE + 1ll;
            } while ((unsigned long long) $$CIVE < 2ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIVF = 0ll;
            do {   /* id=4 guarded */ /* ~4 */ 
              /* region = 32 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 64))[$$CIVF] = ((int *)((char *)this + 40))[$$CIVF] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 72))[$$CIVF] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 48))[$$CIVF];
   301 |      $$CIVF = $$CIVF + 1ll;
            } while ((unsigned long long) $$CIVF < 2ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_29;
            $$DCIV3 = 0ll;
            do {   /* id=6 guarded */ /* ~30 */ 
              /* region = 31 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 56))[$$DCIV3] = 1;
   306 |      ((int *)((char *)this + 80))[$$DCIV3] = 1;
   305 |      $$DCIV3 = $$DCIV3 + 1ll;
            } while ((unsigned long long) $$DCIV3 < 2ull);    /* ~30 */
          lab_29:
            if (!1) goto lab_31;
            $$DCIV4 = 0ll;
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 30 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIV4 + 1 < 2)) goto lab_33;
              $$DCIV5 = 0ll;
              $$SCREP2 = ((int *)((char *)this + 56))[$$DCIV4];
              $$SCREP3 = ((int *)((char *)this + 80))[$$DCIV4];
              do {   /* id=8 guarded */ /* ~34 */ 
                /* region = 28 */
                /* bump-normalized */
   310 |        $$SCREP2 = $$SCREP2 * (((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIV5 + $$DCIV4)))] - ((int *)((char *)this + 40))[(long long) ((int) (1ll + ($$DCIV5 + $$DCIV4)))]);
   309 |        $$SCREP3 = $$SCREP3 * (((int *)((char *)this + 72))[(long long) ((int) (1ll + ($$DCIV5 + $$DCIV4)))] - ((int *)((char *)this + 64))[(long long) ((int) (1ll + ($$DCIV5 + $$DCIV4)))]);
   308 |        $$DCIV5 = $$DCIV5 + 1ll;
              } while ((unsigned long long) $$DCIV5 < (unsigned long long) (1ll - $$DCIV4));    /* ~34 */
              ((int *)((char *)this + 80))[$$DCIV4] = $$SCREP3;
              ((int *)((char *)this + 56))[$$DCIV4] = $$SCREP2;
            lab_33:
   305 |      $$DCIV4 = $$DCIV4 + 1ll;
            } while ((unsigned long long) $$DCIV4 < 2ull);    /* ~32 */
          lab_31:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 40))[0ll]) * ((int *)((char *)this + 56))[0ll];
            $$RET12A = __cxa_vec_new3((unsigned long long) ((((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]),16ll,8ll,&MMSP::vector<double>::__dftct(),&MMSP::vector<double>::~vector(),&operator new[](unsigned long),&operator delete[](void*));
   319 |    *((char * *)this) = $$RET12A;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_15;
            i = 0;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 29 */
   101 |      MMSP::vector<double>::resize(int)(((char *)*((char * *)this) + (16ll)*((long long) i)),*((int *)((char *)this + 16)))
   320 |      i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~13 */
          lab_15:
   326 |    return;
          } /* function */ 


   374 |  char * MMSP::grid<2, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(grid<2,MMSP::vector<double> > *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV12 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__31 = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.i35 = (int) $$CIV12;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__31 = 1;
    30 |      if ($$PARM.i35 < *((int *)((char *)x + 8))) goto lab_17;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__31;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$csx17 = (long long) $$PARM.i35;
              $$IRETB = ((char *)*((char * *)x) + (4ll)*($$csx17));
   377 |      $$RET12B = $$IRETB;
   378 |      $$PARM.xF = $$RET12B;
              $$PARM.x010 = ((int *)((char *)this + 40))[$$CIV12];
              $$PARM.x111 = ((int *)((char *)this + 48))[$$CIV12];
              $$PARM.b012 = ((int *)((char *)this + 88))[$$CIV12];
              $$PARM.b113 = ((int *)((char *)this + 96))[$$CIV12];
    44 |      if (!(*$$PARM.xF < $$PARM.x010)) goto lab_4;
    45 |      if ($$PARM.b012 == 1) goto lab_5;
              if (!($$PARM.b012 == 4)) goto lab_6;
            lab_5:
              *$$PARM.xF = $$PARM.x010;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b012 == 2)) goto lab_8;
              *$$PARM.xF = *$$PARM.xF + ($$PARM.x111 - $$PARM.x010);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b012 == 0)) goto lab_16;
              *$$PARM.xF = $$PARM.x010 * 2 - *$$PARM.xF;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.xF >= $$PARM.x111)) goto lab_16;
    51 |      if ($$PARM.b113 == 1) goto lab_10;
              if (!($$PARM.b113 == 4)) goto lab_11;
            lab_10:
              *$$PARM.xF = $$PARM.x111 - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b113 == 2)) goto lab_13;
              *$$PARM.xF = *$$PARM.xF + ($$PARM.x010 - $$PARM.x111);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b113 == 0)) goto lab_16;
              *$$PARM.xF = ($$PARM.x111 * 2 - *$$PARM.xF) - 2;
    57 |    lab_16:
   378 |      $$PARM.i39 = (int) $$CIV12;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__31 = 1;
    30 |      if ($$PARM.i39 < *((int *)((char *)x + 8))) goto lab_19;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__31;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$IRETD = ((char *)*((char * *)x) + (4ll)*($$csx17));
   378 |      $$RET12C = $$IRETD;
   379 |      p = ((char *)p  + (long long) ((*$$RET12C - ((int *)((char *)this + 64))[$$CIV12]) * ((int *)((char *)this + 80))[$$CIV12]) * 16ll);
   377 |      $$CIV12 = ($$CIV12 + 1);
            } while ((unsigned long long) $$CIV12 < 2ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__31;
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


  1173 |  void MMSP::grid<2, MMSP::vector<double> >::input(char const*, int, int)(grid<2,MMSP::vector<double> > *this, char * filename, int GHOSTS, int SINGLE)
  1174 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1176 |    std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)(&input,filename,8);
            __es.__c4@3 = 1u;
   116 |    $$VOL3 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns346..mga.input;
   192 |    __13134 = (char) (0 != (*((int *)((char *)&input + 32 + $$VOL3[-24ll / 8])) & 5));
   116 |    if (!(__13134 != 0u)) goto lab_1;
   548 |    $$RET12D = (long long) __builtin_strlen("File input error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: could not open ",$$RET12D);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET12E = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET12E);
          lab_20:
   548 |    $$RET12F = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET12F);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns328.(&std::cerr);
  1180 |    exit(-1)
            return;
  1181 |  lab_1:
   260 |    type._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 2u;
  1185 |    std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)(&input,&type,10u);
  2280 |    std::string MMSP::name<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(&__13094,this)
            __es.__c4@3 = 3u;
  2241 |    $$csx18 = *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8);
            if (!($$csx18 == *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns350..mga.__13094) + -1ll * 24ll / 8))) goto lab_32;
   259 |    __13204.rnn51 = 0 == __builtin_memcmp(type._M_p@0,(_Alloc_hider)._M_p@0.rns350..mga.__13094,$$csx18);
  2303 |    if (!(__13204.rnn51 == 0)) goto lab_33;
          lab_32:
            __13436 = 0u;
            goto lab_34;
          lab_33:
            __13436 = 1u;
          lab_34:
  2280 |    __13123 = (char) (0u == __13436);
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__13094);
            if (!(__13123 != 0u)) goto lab_30;
   548 |    $$RET130 = (long long) __builtin_strlen("File read error: wrong data type (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong data type (",$$RET130);
  2503 |    __13252 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,type._M_p@0,(long long) *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET131 = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13252,").",$$RET131);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns334.(__13252);
  1188 |    exit(-2)
            return;
  1189 |  lab_30:
  1193 |    std::istream::operator>>(int&)(&input,&dimen);
  1194 |    if (!(dimen != 2)) goto lab_54;
   548 |    $$RET132 = (long long) __builtin_strlen("File read error: wrong dimension (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong dimension (",$$RET132);
   513 |    __13352 = std::ostream::operator<<(int)(&std::cerr,dimen);
   548 |    $$RET133 = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13352,").",$$RET133);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns336.(__13352);
  1196 |    exit(-3)
            return;
  1197 |  lab_54:
  1200 |    std::istream::operator>>(int&)(&input,(this + 16));
  1203 |    if (!1) goto lab_76;
            $$CIV13 = 0ll;
            do {   /* id=2 guarded */ /* ~74 */ 
              /* region = 31 */
              /* bump-normalized */
              $$RET134 = std::istream::operator>>(int&)(&input,((char *)this  + 24ll + (4ll)*($$CIV13)));
  1204 |      std::istream::operator>>(int&)($$RET134,((char *)this  + 32ll + (4ll)*($$CIV13)));
  1203 |      $$CIV13 = $$CIV13 + 1ll;
            } while ((unsigned long long) $$CIV13 < 2ull);    /* ~74 */
          lab_76:
  1209 |    *((int *)((char *)this + 20)) = 0;
  1213 |    if (!(*((char * *)this) != NULL)) goto lab_77;
  1214 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
  1215 |    *((char * *)this) = NULL;
  1216 |  lab_77:
  1217 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)(this,(char) (SINGLE != 0))
  1220 |    if (!1) goto lab_84;
            $$CIV14 = 0ll;
            do {   /* id=1 guarded */ /* ~82 */ 
              /* region = 30 */
              /* bump-normalized */
   207 |      std::istream& std::istream::_M_extract<double>(double&)(&input,((char *)this  + 104ll + (8ll)*($$CIV14)));
  1220 |      $$CIV14 = $$CIV14 + 1ll;
            } while ((unsigned long long) $$CIV14 < 2ull);    /* ~82 */
          lab_84:
  1224 |    std::istream::ignore(long, int)(&input,10ll,10);
  1227 |    MMSP::grid<2, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(this,&input,GHOSTS)
  1230 |    $$RET135 = std::basic_filebuf<char, std::char_traits<char> >::close()(&input._M_filebuf@10);
   565 |    if ($$RET135 != NULL) goto lab_87;
   566 |    $$VOL4 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns346..mga.input;
            $$VOL5 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns346..mga.input;
   419 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&input  + $$VOL4[-24ll / 8]),*((int *)((char *)&input + 32 + $$VOL5[-24ll / 8])) | 4)
   527 |  lab_87:
  1232 |    __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 0u;
            std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()(&input);
            return;
          } /* function */ 


  1344 |  void MMSP::grid<2, MMSP::vector<double> >::output(char const*) const(grid<2,MMSP::vector<double> > *this, char * filename)
  1345 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1347 |    np = 1u;
  1349 |    std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(char const*, std::_Ios_Openmode)(&output,filename,48);
            __es.__c4@3 = 1u;
   116 |    $$VOL6 = (basic_ofstream<char,std::char_traits<char> >)[]@0.rns377..mga.output;
   192 |    __13568 = (char) (0 != (*((int *)((char *)&output + 32 + $$VOL6[-24ll / 8])) & 5));
   116 |    if (!(__13568 != 0u)) goto lab_1;
   548 |    $$RET136 = (long long) __builtin_strlen("File output error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File output error: could not open ",$$RET136);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET137 = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET137);
          lab_20:
   548 |    $$RET138 = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET138);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns363.(&std::cerr);
    35 |    exit(-1)
            return;
  1354 |  lab_1:
  1356 |    std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
            __es.__c4@3 = 2u;
  1359 |    std::string MMSP::name<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(&type,this)
            __es.__c4@3 = 3u;
  2503 |    $$csx19 = (_Alloc_hider)._M_p@0.rns381..mga.type;
            __13604 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),$$csx19,(long long) *(((unsigned long long *)$$csx19) + -1ll * 24ll / 8));
  2504 |    __13606 = 10u;
   458 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13604,&__13606,1ll);
            __13608 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),2);
            __13609 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13608,&__13609,1ll);
            __13611 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),*((int *)((char *)this + 16)));
            __13612 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13611,&__13612,1ll);
  1369 |    if (!1) goto lab_32;
            $$CIV15 = 0ll;
            do {   /* id=2 guarded */ /* ~30 */ 
              /* region = 19 */
              /* bump-normalized */
   506 |      __13722 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),((int *)((char *)this + 24))[$$CIV15]);
   548 |      $$RET139 = (long long) __builtin_strlen(" ");
   510 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13722," ",$$RET139);
   513 |      __13622 = std::ostream::operator<<(int)(__13722,((int *)((char *)this + 32))[$$CIV15]);
              __13623 = 10u;
   458 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13622,&__13623,1ll);
  1369 |      $$CIV15 = $$CIV15 + 1ll;
            } while ((unsigned long long) $$CIV15 < 2ull);    /* ~30 */
          lab_32:
  1373 |    if (!1) goto lab_44;
            $$CIV16 = 0ll;
            do {   /* id=1 guarded */ /* ~42 */ 
              /* region = 18 */
              /* bump-normalized */
   458 |      __13626 = std::ostream& std::ostream::_M_insert<double>(double)(((char *)&outstr  + 16ll),((double *)((char *)this + 104))[$$CIV16]);
              __13627 = 10u;
              std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13626,&__13627,1ll);
  1373 |      $$CIV16 = $$CIV16 + 1ll;
            } while ((unsigned long long) $$CIV16 < 2ull);    /* ~42 */
          lab_44:
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__13555,&outstr._M_stringbuf@18)
            __es.__c4@3 = 4u;
   278 |    $$BD105 = (_Alloc_hider)._M_p@0.rns387..mga.__13555;
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__13556,&outstr._M_stringbuf@18)
            __es.__c4@3 = 5u;
   629 |    std::ostream::write(char const*, long)(&output,$$BD105,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns388..mga.__13556) + -1ll * 24ll / 8));
            __es.__c4@3 = 4u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__13556);
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__13555);
  1379 |    std::ostream::write(char const*, long)(&output,&np,4ll);
  1383 |    size_of_buffer = MMSP::grid<2, MMSP::vector<double> >::write_buffer(char*&) const(this,&buffer);
  1385 |    std::ostream::write(char const*, long)(&output,buffer,(long long) size_of_buffer);
  1386 |    operator delete[](void*)(buffer)
  1387 |    buffer = NULL;
  1799 |    __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 1u;
            std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
            __es.__c4@3 = 0u;
            std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()(&output);
            return;
          } /* function */ 


    15 |  char * MMSP::vector<int>::vector(MMSP::vector<int> const&)(vector<int> *this, vector<int> *v)
          {
            $$RET13A = *((int *)((char *)v + 8));
    17 |    *((int *)((char *)this + 8)) = *((int *)((char *)v + 8));
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    *((char * *)this) = $$RET13B;
    19 |    if (!(0 < *((int *)((char *)this + 8)))) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
    33 |      $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__32 = 1;
    34 |      if (i < *((int *)((char *)v + 8))) goto lab_4;
              MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__32;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_4:
    20 |      $$RET13B[(long long) i] = ((int *)(*((char * *)v)))[(long long) i];
    19 |      i = i + 1;
            } while (i < *((int *)((char *)this + 8)));    /* ~1 */
            MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__32;
          lab_3:
    21 |    rstr = this;
            return rstr;
          } /* function */ 


    45 |  char * MMSP::vector<int>::~vector()(vector<int> *this)
    47 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    48 |    operator delete[](void*)(*((char * *)this))
    49 |    *((char * *)this) = NULL;
    50 |  lab_1:
    51 |    rstr = this;
            return rstr;
          } /* function */ 


    45 |  char * MMSP::vector<double>::~vector()(vector<double> *this)
    47 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    48 |    operator delete[](void*)(*((char * *)this))
    49 |    *((char * *)this) = NULL;
    50 |  lab_1:
    51 |    rstr = this;
            return rstr;
          } /* function */ 


    72 |  char * MMSP::grid<1, MMSP::vector<double> >::grid(MMSP::grid<1, MMSP::vector<double> > const&)(grid<1,MMSP::vector<double> > *this, grid<1,MMSP::vector<double> > *GRID)
    75 |  {
            *((int *)((char *)this + 16)) = *((int *)((char *)GRID + 16));
    78 |    if (!1) goto lab_3;
            $$CIV17 = 0ll;
            do {   /* id=2 guarded */ /* ~1 */ 
              /* region = 13 */
              /* bump-normalized */
    79 |      ((int *)((char *)this + 24))[$$CIV17] = ((int *)((char *)GRID + 24))[$$CIV17];
    80 |      ((int *)((char *)this + 28))[$$CIV17] = ((int *)((char *)GRID + 28))[$$CIV17];
    78 |      $$CIV17 = $$CIV17 + 1ll;
            } while ((unsigned long long) $$CIV17 < 1ull);    /* ~1 */
          lab_3:
    84 |    *((int *)((char *)this + 20)) = 0;
    91 |    MMSP::grid<1, MMSP::vector<double> >::setup(bool)(this,0u)
    94 |    if (!1) goto lab_6;
            $$CIV18 = 0ll;
            do {   /* id=1 guarded */ /* ~4 */ 
              /* region = 12 */
              /* bump-normalized */
    95 |      ((int *)((char *)this + 56))[$$CIV18] = ((int *)((char *)GRID + 56))[$$CIV18];
    96 |      ((int *)((char *)this + 60))[$$CIV18] = ((int *)((char *)GRID + 60))[$$CIV18];
    97 |      ((double *)((char *)this + 64))[$$CIV18] = ((double *)((char *)GRID + 64))[$$CIV18];
    94 |      $$CIV18 = $$CIV18 + 1ll;
            } while ((unsigned long long) $$CIV18 < 1ull);    /* ~4 */
          lab_6:
    99 |    rstr = this;
            return rstr;
          } /* function */ 


   374 |  char * MMSP::grid<1, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(grid<1,MMSP::vector<double> > *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV19 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__33 = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.i31 = (int) $$CIV19;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__33 = 1;
    30 |      if ($$PARM.i31 < *((int *)((char *)x + 8))) goto lab_17;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__33;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$csx1A = (long long) $$PARM.i31;
              $$IRET9 = ((char *)*((char * *)x) + (4ll)*($$csx1A));
   377 |      $$RET143 = $$IRET9;
   378 |      $$PARM.x14 = $$RET143;
              $$PARM.x015 = ((int *)((char *)this + 32))[$$CIV19];
              $$PARM.x116 = ((int *)((char *)this + 36))[$$CIV19];
              $$PARM.b017 = ((int *)((char *)this + 56))[$$CIV19];
              $$PARM.b118 = ((int *)((char *)this + 60))[$$CIV19];
    44 |      if (!(*$$PARM.x14 < $$PARM.x015)) goto lab_4;
    45 |      if ($$PARM.b017 == 1) goto lab_5;
              if (!($$PARM.b017 == 4)) goto lab_6;
            lab_5:
              *$$PARM.x14 = $$PARM.x015;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b017 == 2)) goto lab_8;
              *$$PARM.x14 = *$$PARM.x14 + ($$PARM.x116 - $$PARM.x015);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b017 == 0)) goto lab_16;
              *$$PARM.x14 = $$PARM.x015 * 2 - *$$PARM.x14;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.x14 >= $$PARM.x116)) goto lab_16;
    51 |      if ($$PARM.b118 == 1) goto lab_10;
              if (!($$PARM.b118 == 4)) goto lab_11;
            lab_10:
              *$$PARM.x14 = $$PARM.x116 - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b118 == 2)) goto lab_13;
              *$$PARM.x14 = *$$PARM.x14 + ($$PARM.x015 - $$PARM.x116);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b118 == 0)) goto lab_16;
              *$$PARM.x14 = ($$PARM.x116 * 2 - *$$PARM.x14) - 2;
    57 |    lab_16:
   378 |      $$PARM.i37 = (int) $$CIV19;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__33 = 1;
    30 |      if ($$PARM.i37 < *((int *)((char *)x + 8))) goto lab_19;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__33;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$IRETC = ((char *)*((char * *)x) + (4ll)*($$csx1A));
   378 |      $$RET144 = $$IRETC;
   379 |      p = ((char *)p  + (long long) ((*$$RET144 - ((int *)((char *)this + 44))[$$CIV19]) * ((int *)((char *)this + 52))[$$CIV19]) * 16ll);
   377 |      $$CIV19 = ($$CIV19 + 1);
            } while ((unsigned long long) $$CIV19 < 1ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__33;
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


   384 |  char * MMSP::grid<1, MMSP::vector<double> >::operator()(int) const(grid<1,MMSP::vector<double> > *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (16ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


  1173 |  void MMSP::grid<1, MMSP::vector<double> >::input(char const*, int, int)(grid<1,MMSP::vector<double> > *this, char * filename, int GHOSTS, int SINGLE)
  1174 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1176 |    std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)(&input,filename,8);
            __es.__c4@3 = 1u;
   116 |    $$VOL7 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns454..mga.input;
   192 |    __13864 = (char) (0 != (*((int *)((char *)&input + 32 + $$VOL7[-24ll / 8])) & 5));
   116 |    if (!(__13864 != 0u)) goto lab_1;
   548 |    $$RET145 = (long long) __builtin_strlen("File input error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: could not open ",$$RET145);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET146 = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET146);
          lab_20:
   548 |    $$RET147 = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET147);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns436.(&std::cerr);
  1180 |    exit(-1)
            return;
  1181 |  lab_1:
   260 |    type._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 2u;
  1185 |    std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)(&input,&type,10u);
  2280 |    std::string MMSP::name<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&)(&__13824,this)
            __es.__c4@3 = 3u;
  2241 |    $$csx1B = *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8);
            if (!($$csx1B == *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns458..mga.__13824) + -1ll * 24ll / 8))) goto lab_32;
   259 |    __13934.rnn60 = 0 == __builtin_memcmp(type._M_p@0,(_Alloc_hider)._M_p@0.rns458..mga.__13824,$$csx1B);
  2303 |    if (!(__13934.rnn60 == 0)) goto lab_33;
          lab_32:
            __14166 = 0u;
            goto lab_34;
          lab_33:
            __14166 = 1u;
          lab_34:
  2280 |    __13853 = (char) (0u == __14166);
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__13824);
            if (!(__13853 != 0u)) goto lab_30;
   548 |    $$RET148 = (long long) __builtin_strlen("File read error: wrong data type (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong data type (",$$RET148);
  2503 |    __13982 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,type._M_p@0,(long long) *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET149 = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__13982,").",$$RET149);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns442.(__13982);
  1188 |    exit(-2)
            return;
  1189 |  lab_30:
  1193 |    std::istream::operator>>(int&)(&input,&dimen);
  1194 |    if (!(dimen != 1)) goto lab_54;
   548 |    $$RET14A = (long long) __builtin_strlen("File read error: wrong dimension (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong dimension (",$$RET14A);
   513 |    __14082 = std::ostream::operator<<(int)(&std::cerr,dimen);
   548 |    $$RET14B = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14082,").",$$RET14B);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns444.(__14082);
  1196 |    exit(-3)
            return;
  1197 |  lab_54:
  1200 |    std::istream::operator>>(int&)(&input,(this + 16));
  1203 |    if (!1) goto lab_76;
            $$CIV1A = 0ll;
            do {   /* id=2 guarded */ /* ~74 */ 
              /* region = 31 */
              /* bump-normalized */
              $$RET14C = std::istream::operator>>(int&)(&input,((char *)this  + 24ll + (4ll)*($$CIV1A)));
  1204 |      std::istream::operator>>(int&)($$RET14C,((char *)this  + 28ll + (4ll)*($$CIV1A)));
  1203 |      $$CIV1A = $$CIV1A + 1ll;
            } while ((unsigned long long) $$CIV1A < 1ull);    /* ~74 */
          lab_76:
  1209 |    *((int *)((char *)this + 20)) = 0;
  1213 |    if (!(*((char * *)this) != NULL)) goto lab_77;
  1214 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
  1215 |    *((char * *)this) = NULL;
  1216 |  lab_77:
  1217 |    MMSP::grid<1, MMSP::vector<double> >::setup(bool)(this,(char) (SINGLE != 0))
  1220 |    if (!1) goto lab_84;
            $$CIV1B = 0ll;
            do {   /* id=1 guarded */ /* ~82 */ 
              /* region = 30 */
              /* bump-normalized */
   207 |      std::istream& std::istream::_M_extract<double>(double&)(&input,((char *)this  + 64ll + (8ll)*($$CIV1B)));
  1220 |      $$CIV1B = $$CIV1B + 1ll;
            } while ((unsigned long long) $$CIV1B < 1ull);    /* ~82 */
          lab_84:
  1224 |    std::istream::ignore(long, int)(&input,10ll,10);
  1227 |    MMSP::grid<1, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(this,&input,GHOSTS)
  1230 |    $$RET14D = std::basic_filebuf<char, std::char_traits<char> >::close()(&input._M_filebuf@10);
   565 |    if ($$RET14D != NULL) goto lab_87;
   566 |    $$VOL8 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns454..mga.input;
            $$VOL9 = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns454..mga.input;
   419 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&input  + $$VOL8[-24ll / 8]),*((int *)((char *)&input + 32 + $$VOL9[-24ll / 8])) | 4)
   527 |  lab_87:
  1232 |    __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 0u;
            std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()(&input);
            return;
          } /* function */ 


  1344 |  void MMSP::grid<1, MMSP::vector<double> >::output(char const*) const(grid<1,MMSP::vector<double> > *this, char * filename)
  1345 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1347 |    np = 1u;
  1349 |    std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(char const*, std::_Ios_Openmode)(&output,filename,48);
            __es.__c4@3 = 1u;
   116 |    $$VOLA = (basic_ofstream<char,std::char_traits<char> >)[]@0.rns485..mga.output;
   192 |    __14243 = (char) (0 != (*((int *)((char *)&output + 32 + $$VOLA[-24ll / 8])) & 5));
   116 |    if (!(__14243 != 0u)) goto lab_1;
   548 |    $$RET14E = (long long) __builtin_strlen("File output error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File output error: could not open ",$$RET14E);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET14F = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET14F);
          lab_20:
   548 |    $$RET150 = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET150);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns471.(&std::cerr);
    35 |    exit(-1)
            return;
  1354 |  lab_1:
  1356 |    std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
            __es.__c4@3 = 2u;
  1359 |    std::string MMSP::name<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&)(&type,this)
            __es.__c4@3 = 3u;
  2503 |    $$csx1C = (_Alloc_hider)._M_p@0.rns489..mga.type;
            __14279 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),$$csx1C,(long long) *(((unsigned long long *)$$csx1C) + -1ll * 24ll / 8));
  2504 |    __14281 = 10u;
   458 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14279,&__14281,1ll);
            __14283 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),1);
            __14284 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14283,&__14284,1ll);
            __14286 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),*((int *)((char *)this + 16)));
            __14287 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14286,&__14287,1ll);
  1369 |    if (!1) goto lab_32;
            $$CIV1C = 0ll;
            do {   /* id=2 guarded */ /* ~30 */ 
              /* region = 19 */
              /* bump-normalized */
   506 |      __14397 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),((int *)((char *)this + 24))[$$CIV1C]);
   548 |      $$RET151 = (long long) __builtin_strlen(" ");
   510 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14397," ",$$RET151);
   513 |      __14297 = std::ostream::operator<<(int)(__14397,((int *)((char *)this + 28))[$$CIV1C]);
              __14298 = 10u;
   458 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14297,&__14298,1ll);
  1369 |      $$CIV1C = $$CIV1C + 1ll;
            } while ((unsigned long long) $$CIV1C < 1ull);    /* ~30 */
          lab_32:
  1373 |    if (!1) goto lab_44;
            $$CIV1D = 0ll;
            do {   /* id=1 guarded */ /* ~42 */ 
              /* region = 18 */
              /* bump-normalized */
   458 |      __14301 = std::ostream& std::ostream::_M_insert<double>(double)(((char *)&outstr  + 16ll),((double *)((char *)this + 64))[$$CIV1D]);
              __14302 = 10u;
              std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14301,&__14302,1ll);
  1373 |      $$CIV1D = $$CIV1D + 1ll;
            } while ((unsigned long long) $$CIV1D < 1ull);    /* ~42 */
          lab_44:
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__14230,&outstr._M_stringbuf@18)
            __es.__c4@3 = 4u;
   278 |    $$BD114 = (_Alloc_hider)._M_p@0.rns495..mga.__14230;
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__14231,&outstr._M_stringbuf@18)
            __es.__c4@3 = 5u;
   629 |    std::ostream::write(char const*, long)(&output,$$BD114,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns496..mga.__14231) + -1ll * 24ll / 8));
            __es.__c4@3 = 4u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14231);
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14230);
  1379 |    std::ostream::write(char const*, long)(&output,&np,4ll);
  1383 |    size_of_buffer = MMSP::grid<1, MMSP::vector<double> >::write_buffer(char*&) const(this,&buffer);
  1385 |    std::ostream::write(char const*, long)(&output,buffer,(long long) size_of_buffer);
  1386 |    operator delete[](void*)(buffer)
  1387 |    buffer = NULL;
  1799 |    __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 1u;
            std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
            __es.__c4@3 = 0u;
            std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()(&output);
            return;
          } /* function */ 


    72 |  char * MMSP::grid<3, MMSP::vector<double> >::grid(MMSP::grid<3, MMSP::vector<double> > const&)(grid<3,MMSP::vector<double> > *this, char * GRID)
          {
            $$RET152 = int MMSP::fields<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(GRID);
    75 |    *((int *)((char *)this + 16)) = $$RET152;
    78 |    if (!1) goto lab_3;
            $$CIV1E = 0ll;
            do {   /* id=2 guarded */ /* ~1 */ 
              /* region = 13 */
              /* bump-normalized */
              $$RET153 = int MMSP::g0<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1E);
    79 |      ((int *)((char *)this + 24))[$$CIV1E] = $$RET153;
              $$RET154 = int MMSP::g1<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1E);
    80 |      ((int *)((char *)this + 36))[$$CIV1E] = $$RET154;
    78 |      $$CIV1E = $$CIV1E + 1ll;
            } while ((unsigned long long) $$CIV1E < 3ull);    /* ~1 */
          lab_3:
    84 |    *((int *)((char *)this + 20)) = 0;
    91 |    MMSP::grid<3, MMSP::vector<double> >::setup(bool)(this,0u)
    94 |    if (!1) goto lab_6;
            $$CIV1F = 0ll;
            do {   /* id=1 guarded */ /* ~4 */ 
              /* region = 12 */
              /* bump-normalized */
              $$RET155 = int MMSP::b0<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1F);
    95 |      ((int *)((char *)this + 120))[$$CIV1F] = $$RET155;
              $$RET156 = int MMSP::b1<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1F);
    96 |      ((int *)((char *)this + 132))[$$CIV1F] = $$RET156;
              $$RET157 = double MMSP::dx<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(GRID,(int) $$CIV1F);
    97 |      ((double *)((char *)this + 144))[$$CIV1F] = $$RET157;
    94 |      $$CIV1F = $$CIV1F + 1ll;
            } while ((unsigned long long) $$CIV1F < 3ull);    /* ~4 */
          lab_6:
    99 |    rstr = this;
            return rstr;
          } /* function */ 


   374 |  char * MMSP::grid<3, MMSP::vector<double> >::operator()(MMSP::vector<int>) const(grid<3,MMSP::vector<double> > *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV20 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__34 = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.i2B = (int) $$CIV20;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__34 = 1;
    30 |      if ($$PARM.i2B < *((int *)((char *)x + 8))) goto lab_17;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__34;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$csx1D = (long long) $$PARM.i2B;
              $$IRET6 = ((char *)*((char * *)x) + (4ll)*($$csx1D));
   377 |      $$RET158 = $$IRET6;
   378 |      $$PARM.xA = $$RET158;
              $$PARM.x0B = ((int *)((char *)this + 48))[$$CIV20];
              $$PARM.x1C = ((int *)((char *)this + 60))[$$CIV20];
              $$PARM.b0D = ((int *)((char *)this + 120))[$$CIV20];
              $$PARM.b1E = ((int *)((char *)this + 132))[$$CIV20];
    44 |      if (!(*$$PARM.xA < $$PARM.x0B)) goto lab_4;
    45 |      if ($$PARM.b0D == 1) goto lab_5;
              if (!($$PARM.b0D == 4)) goto lab_6;
            lab_5:
              *$$PARM.xA = $$PARM.x0B;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b0D == 2)) goto lab_8;
              *$$PARM.xA = *$$PARM.xA + ($$PARM.x1C - $$PARM.x0B);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b0D == 0)) goto lab_16;
              *$$PARM.xA = $$PARM.x0B * 2 - *$$PARM.xA;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.xA >= $$PARM.x1C)) goto lab_16;
    51 |      if ($$PARM.b1E == 1) goto lab_10;
              if (!($$PARM.b1E == 4)) goto lab_11;
            lab_10:
              *$$PARM.xA = $$PARM.x1C - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b1E == 2)) goto lab_13;
              *$$PARM.xA = *$$PARM.xA + ($$PARM.x0B - $$PARM.x1C);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b1E == 0)) goto lab_16;
              *$$PARM.xA = ($$PARM.x1C * 2 - *$$PARM.xA) - 2;
    57 |    lab_16:
   378 |      $$PARM.i2F = (int) $$CIV20;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__34 = 1;
    30 |      if ($$PARM.i2F < *((int *)((char *)x + 8))) goto lab_19;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__34;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$IRET8 = ((char *)*((char * *)x) + (4ll)*($$csx1D));
   378 |      $$RET159 = $$IRET8;
   379 |      p = ((char *)p  + (long long) ((*$$RET159 - ((int *)((char *)this + 84))[$$CIV20]) * ((int *)((char *)this + 108))[$$CIV20]) * 16ll);
   377 |      $$CIV20 = ($$CIV20 + 1);
            } while ((unsigned long long) $$CIV20 < 3ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__34;
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


   384 |  char * MMSP::grid<3, MMSP::vector<double> >::operator()(int) const(grid<3,MMSP::vector<double> > *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (16ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


  1173 |  void MMSP::grid<3, MMSP::vector<double> >::input(char const*, int, int)(grid<3,MMSP::vector<double> > *this, char * filename, int GHOSTS, int SINGLE)
  1174 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1176 |    std::basic_ifstream<char, std::char_traits<char> >::basic_ifstream(char const*, std::_Ios_Openmode)(&input,filename,8);
            __es.__c4@3 = 1u;
   116 |    $$VOLB = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns542..mga.input;
   192 |    __14536 = (char) (0 != (*((int *)((char *)&input + 32 + $$VOLB[-24ll / 8])) & 5));
   116 |    if (!(__14536 != 0u)) goto lab_1;
   548 |    $$RET15A = (long long) __builtin_strlen("File input error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File input error: could not open ",$$RET15A);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET15B = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET15B);
          lab_20:
   548 |    $$RET15C = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET15C);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns524.(&std::cerr);
  1180 |    exit(-1)
            return;
  1181 |  lab_1:
   260 |    type._M_p@0 = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
  2147 |    __es.__c4@3 = 2u;
  1185 |    std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)(&input,&type,10u);
  2280 |    std::string MMSP::name<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(&__14496,this)
            __es.__c4@3 = 3u;
  2241 |    $$csx1E = *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8);
            if (!($$csx1E == *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns546..mga.__14496) + -1ll * 24ll / 8))) goto lab_32;
   259 |    __14606.rnn6F = 0 == __builtin_memcmp(type._M_p@0,(_Alloc_hider)._M_p@0.rns546..mga.__14496,$$csx1E);
  2303 |    if (!(__14606.rnn6F == 0)) goto lab_33;
          lab_32:
            __14838 = 0u;
            goto lab_34;
          lab_33:
            __14838 = 1u;
          lab_34:
  2280 |    __14525 = (char) (0u == __14838);
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14496);
            if (!(__14525 != 0u)) goto lab_30;
   548 |    $$RET15D = (long long) __builtin_strlen("File read error: wrong data type (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong data type (",$$RET15D);
  2503 |    __14654 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,type._M_p@0,(long long) *(((unsigned long long *)type._M_p@0) + -1ll * 24ll / 8));
   548 |    $$RET15E = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14654,").",$$RET15E);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns530.(__14654);
  1188 |    exit(-2)
            return;
  1189 |  lab_30:
  1193 |    std::istream::operator>>(int&)(&input,&dimen);
  1194 |    if (!(dimen != 3)) goto lab_54;
   548 |    $$RET15F = (long long) __builtin_strlen("File read error: wrong dimension (");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File read error: wrong dimension (",$$RET15F);
   513 |    __14754 = std::ostream::operator<<(int)(&std::cerr,dimen);
   548 |    $$RET160 = (long long) __builtin_strlen(").");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14754,").",$$RET160);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns532.(__14754);
  1196 |    exit(-3)
            return;
  1197 |  lab_54:
  1200 |    std::istream::operator>>(int&)(&input,(this + 16));
  1203 |    if (!1) goto lab_76;
            $$CIV21 = 0ll;
            do {   /* id=2 guarded */ /* ~74 */ 
              /* region = 33 */
              /* bump-normalized */
              $$RET161 = std::istream::operator>>(int&)(&input,((char *)this  + 24ll + (4ll)*($$CIV21)));
  1204 |      std::istream::operator>>(int&)($$RET161,((char *)this  + 36ll + (4ll)*($$CIV21)));
  1203 |      $$CIV21 = $$CIV21 + 1ll;
            } while ((unsigned long long) $$CIV21 < 3ull);    /* ~74 */
          lab_76:
  1209 |    *((int *)((char *)this + 20)) = 0;
  1213 |    if (!(*((char * *)this) != NULL)) goto lab_77;
  1214 |    __cxa_vec_delete3(*((char * *)this),16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
  1215 |    *((char * *)this) = NULL;
  1216 |  lab_77:
  1217 |    MMSP::grid<3, MMSP::vector<double> >::setup(bool)(this,(char) (SINGLE != 0))
  1220 |    if (!1) goto lab_84;
            $$CIV22 = 0ll;
            do {   /* id=1 guarded */ /* ~82 */ 
              /* region = 32 */
              /* bump-normalized */
   207 |      std::istream& std::istream::_M_extract<double>(double&)(&input,((char *)this  + 144ll + (8ll)*($$CIV22)));
  1220 |      $$CIV22 = $$CIV22 + 1ll;
            } while ((unsigned long long) $$CIV22 < 3ull);    /* ~82 */
          lab_84:
  1224 |    std::istream::ignore(long, int)(&input,10ll,10);
  1227 |    MMSP::grid<3, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(this,&input,GHOSTS)
  1230 |    if (SINGLE != 0) goto lab_85;
            MMSP::grid<3, MMSP::vector<double> >::ghostswap()(this)
          lab_85:
            $$RET162 = std::basic_filebuf<char, std::char_traits<char> >::close()(&input._M_filebuf@10);
   565 |    if ($$RET162 != NULL) goto lab_87;
   566 |    $$VOLC = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns542..mga.input;
            $$VOLD = (basic_ifstream<char,std::char_traits<char> >)[]@0.rns542..mga.input;
   419 |    std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&input  + $$VOLC[-24ll / 8]),*((int *)((char *)&input + 32 + $$VOLD[-24ll / 8])) | 4)
   527 |  lab_87:
  1232 |    __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 0u;
            std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()(&input);
            return;
          } /* function */ 


  1344 |  void MMSP::grid<3, MMSP::vector<double> >::output(char const*) const(grid<3,MMSP::vector<double> > *this, char * filename)
  1345 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1347 |    np = 1u;
  1349 |    std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream(char const*, std::_Ios_Openmode)(&output,filename,48);
            __es.__c4@3 = 1u;
   116 |    $$VOLE = (basic_ofstream<char,std::char_traits<char> >)[]@0.rns573..mga.output;
   192 |    __14915 = (char) (0 != (*((int *)((char *)&output + 32 + $$VOLE[-24ll / 8])) & 5));
   116 |    if (!(__14915 != 0u)) goto lab_1;
   548 |    $$RET163 = (long long) __builtin_strlen("File output error: could not open ");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"File output error: could not open ",$$RET163);
   507 |    if (filename != NULL) goto lab_12;
            std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)(((char *)&std::cerr  + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8]),*((int *)((char *)&std::cerr + 32 + (basic_ostream<char,std::char_traits<char> >)[]@0.rns348..mga._ZSt4cerr[-24ll / 8])) | 1)
   548 |    goto lab_20;
          lab_12:
            $$RET164 = (long long) __builtin_strlen(filename);
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,filename,$$RET164);
          lab_20:
   548 |    $$RET165 = (long long) __builtin_strlen(".");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,".",$$RET165);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns559.(&std::cerr);
    35 |    exit(-1)
            return;
  1354 |  lab_1:
  1356 |    std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)(&outstr,24);
            __es.__c4@3 = 2u;
  1359 |    std::string MMSP::name<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(&type,this)
            __es.__c4@3 = 3u;
  2503 |    $$csx1F = (_Alloc_hider)._M_p@0.rns577..mga.type;
            __14951 = std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(((char *)&outstr  + 16ll),$$csx1F,(long long) *(((unsigned long long *)$$csx1F) + -1ll * 24ll / 8));
  2504 |    __14953 = 10u;
   458 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14951,&__14953,1ll);
            __14955 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),3);
            __14956 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14955,&__14956,1ll);
            __14958 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),*((int *)((char *)this + 16)));
            __14959 = 10u;
            std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14958,&__14959,1ll);
  1369 |    if (!1) goto lab_32;
            $$CIV23 = 0ll;
            do {   /* id=2 guarded */ /* ~30 */ 
              /* region = 19 */
              /* bump-normalized */
   506 |      __15069 = std::ostream::operator<<(int)(((char *)&outstr  + 16ll),((int *)((char *)this + 24))[$$CIV23]);
   548 |      $$RET166 = (long long) __builtin_strlen(" ");
   510 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__15069," ",$$RET166);
   513 |      __14969 = std::ostream::operator<<(int)(__15069,((int *)((char *)this + 36))[$$CIV23]);
              __14970 = 10u;
   458 |      std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14969,&__14970,1ll);
  1369 |      $$CIV23 = $$CIV23 + 1ll;
            } while ((unsigned long long) $$CIV23 < 3ull);    /* ~30 */
          lab_32:
  1373 |    if (!1) goto lab_44;
            $$CIV24 = 0ll;
            do {   /* id=1 guarded */ /* ~42 */ 
              /* region = 18 */
              /* bump-normalized */
   458 |      __14973 = std::ostream& std::ostream::_M_insert<double>(double)(((char *)&outstr  + 16ll),((double *)((char *)this + 144))[$$CIV24]);
              __14974 = 10u;
              std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(__14973,&__14974,1ll);
  1373 |      $$CIV24 = $$CIV24 + 1ll;
            } while ((unsigned long long) $$CIV24 < 3ull);    /* ~42 */
          lab_44:
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__14902,&outstr._M_stringbuf@18)
            __es.__c4@3 = 4u;
   278 |    $$BD123 = (_Alloc_hider)._M_p@0.rns583..mga.__14902;
   557 |    std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const(&__14903,&outstr._M_stringbuf@18)
            __es.__c4@3 = 5u;
   629 |    std::ostream::write(char const*, long)(&output,$$BD123,(long long) *(((unsigned long long *)(_Alloc_hider)._M_p@0.rns584..mga.__14903) + -1ll * 24ll / 8));
            __es.__c4@3 = 4u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14903);
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__14902);
  1379 |    std::ostream::write(char const*, long)(&output,&np,4ll);
  1383 |    size_of_buffer = MMSP::grid<3, MMSP::vector<double> >::write_buffer(char*&) const(this,&buffer);
  1385 |    std::ostream::write(char const*, long)(&output,buffer,(long long) size_of_buffer);
  1386 |    operator delete[](void*)(buffer)
  1387 |    buffer = NULL;
  1799 |    __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&type);
            __es.__c4@3 = 1u;
            std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()(&outstr);
            __es.__c4@3 = 0u;
            std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()(&output);
            return;
          } /* function */ 


          void std::vector<double, std::allocator<double> >::__dftbdt(std::_Vector_base<double, std::allocator<double> >*)(_Vector_impl *__15124)
   145 |  {
            if (!(*((char * *)__15124) != NULL)) goto lab_4;
    95 |    operator delete(void*)(*((char * *)__15124))
   110 |  lab_4:
   132 |    $$PARM.this226 = __15124;
   109 |    $$PARM.this224 = $$PARM.this226;
    73 |    $$IRET129 = $$PARM.this224;
   109 |    $$IRET12A = $$PARM.this226;
   132 |    $$IRET12B = $$PARM.this226;
   133 |    $$IRET12D = __15124;
            return;
          } /* function */ 


    67 |  char * Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(Point<int> *__first, char * __last, Point<int> *__result)
    70 |  {
            __cur = __result;
    73 |    if (!(__first != __last)) goto lab_3;
            $$CIV25 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV25 * 12ll))) goto lab_5;
    12 |      ((int *)__result)[($$CIV25 * 12ll) / 4] = ((int *)__first)[($$CIV25 * 12ll) / 4];
              ((int *)((char *)__result + 4))[($$CIV25 * 12ll) / 4] = ((int *)((char *)__first + 4))[($$CIV25 * 12ll) / 4];
              ((int *)((char *)__result + 8))[($$CIV25 * 12ll) / 4] = ((int *)((char *)__first + 8))[($$CIV25 * 12ll) / 4];
            lab_5:
    73 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) ((__last - __first) / 12ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last - __first) / 12ll) * 12ll);
          lab_3:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 


   458 |  char * int* std::copy<int*, int*>(int*, int*, int*)(char * __first, char * __last, char * __result)
   392 |  {
   378 |    __builtin_memmove(__result,__first,(unsigned long long) (((__last - __first) / 4ll) * 4ll));
   437 |    rstr = ((char *)__result  + ((__last - __first) / 4ll) * 4ll);
            return rstr;
   469 |  } /* function */ 


   312 |  char * std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::~vector()(char * this)
   141 |  {
            if (!(*((char * *)this) != *((char * *)(this + 8)))) goto lab_3;
            $$CIVINIT26 = *((char * *)this);
            $$CIVFINAL26 = (unsigned long long) ((*((char * *)(this + 8)) - *((char * *)this)) / 24ll);
            $$CIV26 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 12 */
              /* bump-normalized */
   145 |      $$csx20 = ((char * *)$$CIVINIT26)[($$CIV26 * 24ll) / 8];
              if (!($$csx20 != NULL)) goto lab_4;
    95 |      operator delete(void*)($$csx20)
   110 |    lab_4:
    92 |      $$CIV26 = $$CIV26 + 1ll;
            } while ((unsigned long long) $$CIV26 < $$CIVFINAL26);    /* ~1 */
          lab_3:
   145 |    $$csx21 = *((char * *)this);
            if (!($$csx21 != NULL)) goto lab_10;
    95 |    operator delete(void*)($$csx21)
   110 |  lab_10:
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   295 |  void std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > > >, std::vector<Point<int>, std::allocator<Point<int> > > const&)(char * this, aggr8 __position, char * __x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    $$csx22 = *((char * *)(this + 8));
            if (!($$csx22 != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!($$csx22 != NULL)) goto lab_6;
   105 |    std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)($$csx22,((char *)$$csx22  - 24ll));
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)*((char * *)(this + 8))  + 24ll);
   306 |    std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(&__x_copy,__x);
            __es.__c4@3 = 1u;
   545 |    if (!((((char *)*((char * *)(this + 8))  - 48ll) - __position._M_current@0) / 24ll > 0ll)) goto lab_10;
            $$CIVFINAL27 = (unsigned long long) ((((char *)*((char * *)(this + 8))  - 48ll) - __position._M_current@0) / 24ll);
            $$CIV27 = 0ll;
            $$CIVSTART8 = ((char *)*((char * *)(this + 8))  - 48ll);
            $$CIVSTART9 = ((char *)*((char * *)(this + 8))  - 24ll);
            do {   /* id=3 guarded */ /* ~8 */ 
              /* region = 53 */
              /* bump-normalized */
   546 |      std::vector<Point<int>, std::allocator<Point<int> > >::operator=(std::vector<Point<int>, std::allocator<Point<int> > > const&)(((char *)$$CIVSTART9  + (-24ll - $$CIV27 * 24ll)),((char *)$$CIVSTART8  + (-24ll - $$CIV27 * 24ll)));
   545 |      $$CIV27 = $$CIV27 + 1ll;
            } while ((unsigned long long) $$CIV27 < $$CIVFINAL27);    /* ~8 */
          lab_10:
   312 |    std::vector<Point<int>, std::allocator<Point<int> > >::operator=(std::vector<Point<int>, std::allocator<Point<int> > > const&)(__position._M_current@0,&__x_copy);
   316 |    __es.__c4@3 = 0u;
   145 |    $$csx23 = &__x_copy->(_Vector_impl)._M_start@0.rns758.$$1153$$1460;
            if (!($$csx23 != NULL)) goto lab_61;
    95 |    operator delete(void*)($$csx23)
   110 |  lab_61:
   316 |    goto lab_11;
          lab_3:
   319 |    $$PARM.__n379 = 1ull;
   538 |    $$csx24 = *((char * *)this);
            if (!((unsigned long long) (768614336404564650ll - ($$csx22 - $$csx24) / 24ll) < 1ull)) goto lab_73;
  1137 |    std::__throw_length_error(char const*)("vector::_M_insert_aux")
            return;
          lab_73:
  1139 |    __19700 = (unsigned long long) (($$csx22 - $$csx24) / 24ll);
   216 |    $$csx25 = (unsigned long long) (($$csx22 - $$csx24) / 24ll) < 1ull ? &$$PARM.__n379 : &__19700->(unsigned long).rns1098.$$1440;
  1140 |    if ($$csx25 + (unsigned long long) (($$csx22 - $$csx24) / 24ll) < (unsigned long long) (($$csx22 - $$csx24) / 24ll)) goto lab_75;
   538 |    if (!($$csx25 + (unsigned long long) (($$csx22 - $$csx24) / 24ll) > 768614336404564650ull)) goto lab_76;
          lab_75:
            __19725 = 768614336404564650ull;
            goto lab_77;
          lab_76:
            __19725 = $$csx25 + (unsigned long long) (($$csx22 - $$csx24) / 24ll);
          lab_77:
   686 |    __15378._M_current@0 = *((char * *)this);
   426 |    __15270 = __15378;
   140 |    if (!(__19725 != 0ull)) goto lab_13;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__19725 > 768614336404564650ull),0ll))) goto lab_15;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_15:
    89 |    __15391 = operator new(unsigned long)(__19725 * 24ull);
   107 |    __15721 = __15391;
            goto lab_14;
          lab_13:
            __15721 = NULL;
          lab_14:
   325 |    __es.__c4@3 = 2u;
    55 |    if (!(NULL != ((char *)__15721  + ((__position._M_current@0 - $$csx24) / 24ll) * 24ll))) goto lab_18;
   323 |    __new_finish = __15721;
   105 |    std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(((char *)__15721  + ((__position._M_current@0 - $$csx24) / 24ll) * 24ll),__x);
            goto __15716;
            goto __15717;
          lab_18:
   336 |    __new_finish = NULL;
   264 |    $$RET167 = std::vector<Point<int>, std::allocator<Point<int> > >* std::__uninitialized_copy<false>::uninitialized_copy<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*>(std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*)(*((char * *)this),__position._M_current@0,__15721);
            goto __15716;
            goto __15717;
   342 |    __new_finish = ((char *)$$RET167  + 24ll);
   264 |    $$RET168 = std::vector<Point<int>, std::allocator<Point<int> > >* std::__uninitialized_copy<false>::uninitialized_copy<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*>(std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET167  + 24ll));
            goto __15716;
            goto __15717;
   268 |    __new_finish = $$RET168;
   349 |    __es.__c4@3 = 0u;
            goto @15718;
   351 |  lab_39:
            /* GLAB  id_no=3960{__15716} labtype=USR_LAB          */
            __es.__c4@3 = 3u;
            __15719 = __int_register_value(29u);
            __cxa_begin_catch((char *) __15719)
   352 |    if (__new_finish != NULL) goto lab_21;
   145 |    if (!(((char * *)__15721)[(((__position._M_current@0 - $$csx24) / 24ll) * 24ll) / 8] != NULL)) goto lab_67;
    95 |    operator delete(void*)(((char * *)__15721)[(((__position._M_current@0 - $$csx24) / 24ll) * 24ll) / 8])
   110 |  lab_67:
   115 |    goto lab_23;
          lab_21:
   141 |    if (!(__15721 != __new_finish)) goto lab_26;
            $$CIV28 = 0ll;
            do {   /* id=2 guarded */ /* ~24 */ 
              /* region = 54 */
              /* bump-normalized */
   145 |      if (!(((char * *)__15721)[($$CIV28 * 24ll) / 8] != NULL)) goto lab_55;
    95 |      operator delete(void*)(((char * *)__15721)[($$CIV28 * 24ll) / 8])
   110 |    lab_55:
    92 |      $$CIV28 = $$CIV28 + 1ll;
            } while ((unsigned long long) $$CIV28 < (unsigned long long) ((__new_finish - __15721) / 24ll));    /* ~24 */
          lab_26:
   143 |  lab_23:
   145 |    if (!(__15721 != NULL)) goto lab_27;
    95 |    operator delete(void*)(__15721)
   110 |  lab_27:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @15718:
   141 |    $$csx26 = *((char * *)this);
            $$csx27 = *((char * *)(this + 8));
            if (!($$csx26 != $$csx27)) goto lab_31;
            $$CIVINIT29 = *((char * *)this);
            $$CIVFINAL29 = (unsigned long long) (($$csx27 - $$csx26) / 24ll);
            $$CIV29 = 0ll;
            do {   /* id=1 guarded */ /* ~29 */ 
              /* region = 55 */
              /* bump-normalized */
   145 |      if (!(((char * *)$$CIVINIT29)[($$CIV29 * 24ll) / 8] != NULL)) goto lab_49;
    95 |      operator delete(void*)(((char * *)$$CIVINIT29)[($$CIV29 * 24ll) / 8])
   110 |    lab_49:
    92 |      $$CIV29 = $$CIV29 + 1ll;
            } while ((unsigned long long) $$CIV29 < $$CIVFINAL29);    /* ~29 */
          lab_31:
   145 |    if (!(*((char * *)this) != NULL)) goto lab_32;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_32:
   364 |    *((char * *)this) = __15721;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__15721  + (long long) (__19725 * 24ull));
   367 |  lab_11:
   368 |    return;
   351 |    /* GLAB  id_no=3961{__15717} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __15720 = __int_register_value(29u);
            _Unwind_Resume((char *) __15720)
            goto lab_39;
   368 |  } /* function */ 


   912 |  unsigned long long unsigned long MMSP::approximate_voronoi<2, unsigned long>(MMSP::grid<2, unsigned long>&, std::vector<std::vector<Point<int>, std::allocator<Point<int> > >, std::allocator<std::vector<Point<int>, std::allocator<Point<int> > > > > const&)(grid<2,unsigned long> *grid, _Vector_base<std::vector<Point<int>,std::allocator<Point<int> > >,std::allocator<std::vector<Point<int>,std::allocator<Point<int> > > > > *seeds)
   913 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
            guard___func__43 = 1;
   931 |    $$VAMEMBER6 = &distance_grid;
            $$VAMEMBER7 = 1;
            $$VAMEMBER8 = ((int *)((char *)grid + 24))[0ll];
            $$VAMEMBER9 = ((int *)((char *)grid + 32))[0ll];
            $$VAMEMBERA = ((int *)((char *)grid + 24))[1ll];
            $$VAMEMBERB = ((int *)((char *)grid + 32))[1ll];
    48 |    *((int *)((char *)$$VAMEMBER6 + 16)) = $$VAMEMBER7;
            $$RET182 = (unsigned long long) __builtinParameterAddress(&$$VAMEMBER7);
    53 |    if (!1) goto lab_141;
    52 |    list = (char *) ($$RET182 + 11ull & 18446744073709551608ull);
    53 |    $$CIV5F = 0ll;
            do {   /* id=16 guarded */ /* ~142 */ 
              /* region = 170 */
              /* bump-normalized */
    54 |      ((int *)((char *)$$VAMEMBER6 + 24))[$$CIV5F] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)$$VAMEMBER6 + 32))[$$CIV5F] = (list + -4ll / 4)[0ll];
    53 |      $$CIV5F = $$CIV5F + 1ll;
            } while ((unsigned long long) $$CIV5F < 2ull);    /* ~142 */
          lab_141:
    61 |    *((int *)((char *)$$VAMEMBER6 + 20)) = 0;
    68 |    MMSP::grid<2, DistanceVoxel>::setup(bool)($$VAMEMBER6,0u)
   931 |    __es.__c4@3 = 1u;
   937 |    if (!(0 < distance_grid.nodes@8)) goto lab_7;
    81 |    value.distance@10 =  1.7976931348623157E+308;
    82 |    value.id@c = 0u;
   937 |    i = 0;
            do {   /* id=7 guarded */ /* ~5 */ 
              /* region = 156 */
   938 |      MMSP::grid<2, unsigned long>::position(int) const(&pos,grid,i)
              __es.__c4@3 = 2u;
   939 |      if (!1) goto lab_10;
              $$CIV2B = 0ll;
              do {   /* id=8 guarded */ /* ~8 */ 
                /* region = 155 */
                /* bump-normalized */
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        $$csx28 = &pos->(vector<int>).size@8.rns391.$$1492;
                if ((int) $$CIV2B < $$csx28) goto lab_47;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_47:
   309 |        $$csx29 = ((int *)&pos->(vector<int>).data@0.rns392.$$1492)[$$CIV2B];
                if (!($$csx29 >= ((int *)((char *)&distance_grid + 40))[$$CIV2B])) goto lab_12;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV2B < $$csx28) goto lab_45;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_45:
   313 |        if (!($$csx29 < ((int *)((char *)&distance_grid + 48))[$$CIV2B])) goto lab_15;
   939 |        $$CIV2B = $$CIV2B + 1ll;
              } while ((unsigned long long) $$CIV2B < 2ull);    /* ~8 */
            lab_10:
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      $$csx2A = &pos->(vector<int>).size@8.rns391.$$1492;
              if (0 < $$csx2A) goto lab_53;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_53:
    78 |      $$csx2B = &pos->(vector<int>).data@0.rns392.$$1492;
              value.x@0 = ((int *)$$csx2B)[0ll];
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if (1 < $$csx2A) goto lab_49;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_49:
    79 |      value.y@4 = ((int *)$$csx2B)[1ll];
    29 |      MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |      if (2 < $$csx2A) goto lab_51;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_51:
    80 |      value.z@8 = ((int *)$$csx2B)[2ll];
   946 |      ((aggr24 *)&distance_grid->(grid<2,DistanceVoxel>).data@0.rns1189.$$1488)[(long long) i] = value;
   947 |      __es.__c4@3 = 1u;
    47 |      if (!($$csx2B != NULL)) goto lab_59;
    48 |      operator delete[](void*)($$csx2B)
    49 |      &pos->(vector<int>).data@0.rns401.$$1489 = NULL;
    50 |    lab_59:
   937 |      i = i + 1;
            } while (i < distance_grid.nodes@8);    /* ~5 */
          lab_7:
    81 |    (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue = NULL;
            (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue = NULL;
            (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_end_of_storage@10.rns645..mga.queue = NULL;
    55 |    __es.__c4@3 = 3u;
   428 |    __memset(&queue._M_t@18,0,1ull);
   429 |    __memset((&queue._M_t@18 + 8),0,32ull);
   434 |    &queue._M_t@18->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns783.$$1464 = 0ull;
   446 |    ((int *)&queue._M_t@18)[8 / 4] = 0;
   447 |    ((char * *)((char *)&queue._M_t@18 + 8))[8 / 8] = NULL;
   448 |    ((char * *)((char *)&queue._M_t@18 + 16))[8 / 8] = (&queue._M_t@18 + 8);
   449 |    ((char * *)((char *)&queue._M_t@18 + 24))[8 / 8] = (&queue._M_t@18 + 8);
    22 |    __es.__c4@3 = 4u;
   533 |    if (!(0ull < (unsigned long long) ((*((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_finish@8.rns648. - *((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_start@0.rns647.) / 12ll))) goto lab_22;
   956 |    i = 0;
   533 |    do {   /* id=4 guarded */ /* ~20 */ 
              /* region = 160 */
   626 |      MMSP::vector<int> getPosition<2, int>(Point<int> const&)(&pos,((char *)*((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_start@0.rns649.  + (long long) ((unsigned long long) i * 12ull)))
              __es.__c4@3 = 5u;
   958 |      $$RET13A = &pos->(vector<int>).size@8.rns899.$$1250$$1476;
    17 |      &__15744->(vector<int>).size@8.rns397.$$1476 = &pos->(vector<int>).size@8.rns899.$$1250$$1476;
              $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |      &__15744->(vector<int>).data@0.rns398.$$1476 = $$RET13B;
    19 |      if (!(0 < &__15744->(vector<int>).size@8.rns397.$$1476)) goto lab_66;
              i = 0;
              do {   /* id=9 guarded */ /* ~67 */ 
                /* region = 157 */
    33 |        MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |        if (i < &pos->(vector<int>).size@8.rns896.$$1252$$1476) goto lab_68;
                __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                return;
              lab_68:
    20 |        $$RET13B[(long long) i] = ((int *)&pos->(vector<int>).data@0.rns897.$$1252$$1476)[(long long) i];
    19 |        i = i + 1;
              } while (i < &__15744->(vector<int>).size@8.rns397.$$1476);    /* ~67 */
            lab_66:
   958 |      __es.__c4@3 = 6u;
              $$PARM.x39F = copyin((pali((vector<int>).rns633.UDd,&__15744)), (pali((x{vector<int>})$$1477UDd,$$PARM.x39F#)))UDb;;
   376 |      p = &distance_grid->(grid<2,DistanceVoxel>).data@0.rns1181.$$1477;
   377 |      if (!1) goto lab_74;
              $$CIV60 = 0ll;
              do {   /* id=6 guarded */ /* ~75 */ 
                /* region = 159 */
                /* bump-normalized */
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV60 < *((int *)((char *)$$PARM.x39F + 8))) goto lab_76;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_76:
    44 |        if (!(((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] < ((int *)((char *)&distance_grid + 40))[$$CIV60])) goto lab_78;
    45 |        if (((int *)((char *)&distance_grid + 88))[$$CIV60] == 1) goto lab_79;
                if (!(((int *)((char *)&distance_grid + 88))[$$CIV60] == 4)) goto lab_80;
              lab_79:
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)((char *)&distance_grid + 40))[$$CIV60];
                goto lab_90;
              lab_80:
    47 |        if (!(((int *)((char *)&distance_grid + 88))[$$CIV60] == 2)) goto lab_82;
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] + (((int *)((char *)&distance_grid + 48))[$$CIV60] - ((int *)((char *)&distance_grid + 40))[$$CIV60]);
                goto lab_90;
              lab_82:
    49 |        if (!(((int *)((char *)&distance_grid + 88))[$$CIV60] == 0)) goto lab_90;
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)((char *)&distance_grid + 40))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60];
    50 |        goto lab_90;
              lab_78:
                if (!(((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] >= ((int *)((char *)&distance_grid + 48))[$$CIV60])) goto lab_90;
    51 |        if (((int *)((char *)&distance_grid + 96))[$$CIV60] == 1) goto lab_84;
                if (!(((int *)((char *)&distance_grid + 96))[$$CIV60] == 4)) goto lab_85;
              lab_84:
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)((char *)&distance_grid + 48))[$$CIV60] - 1;
                goto lab_90;
              lab_85:
    53 |        if (!(((int *)((char *)&distance_grid + 96))[$$CIV60] == 2)) goto lab_87;
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] + (((int *)((char *)&distance_grid + 40))[$$CIV60] - ((int *)((char *)&distance_grid + 48))[$$CIV60]);
                goto lab_90;
              lab_87:
    55 |        if (!(((int *)((char *)&distance_grid + 96))[$$CIV60] == 0)) goto lab_90;
                ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] = (((int *)((char *)&distance_grid + 48))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x39F)))[$$CIV60]) - 2;
    57 |      lab_90:
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV60 < *((int *)((char *)$$PARM.x39F + 8))) goto lab_91;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_91:
   379 |        p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x39F)))[$$CIV60] - ((int *)((char *)&distance_grid + 64))[$$CIV60]) * ((int *)((char *)&distance_grid + 80))[$$CIV60]) * 24ll);
   377 |        $$CIV60 = $$CIV60 + 1ll;
              } while ((unsigned long long) $$CIV60 < 2ull);    /* ~75 */
            lab_74:
   382 |      copyout((pali((vector<int>).rns633.UDd,&__15744)), (pali((x{vector<int>})$$1477UDd,$$PARM.x39F)))UDb;
   958 |      __es.__c4@3 = 5u;
    47 |      if (!(&__15744->(vector<int>).data@0.rns401.$$1478 != NULL)) goto lab_63;
    48 |      operator delete[](void*)(&__15744->(vector<int>).data@0.rns401.$$1478)
    49 |      &__15744->(vector<int>).data@0.rns401.$$1478 = NULL;
    50 |    lab_63:
   959 |      if (!1) goto lab_25;
              $$CIV2C = 0ll;
              do {   /* id=5 guarded */ /* ~23 */ 
                /* region = 158 */
                /* bump-normalized */
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV2C < &pos->(vector<int>).size@8.rns391.$$1481) goto lab_55;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_55:
   313 |        $$csx2C = ((int *)&pos->(vector<int>).data@0.rns392.$$1481)[$$CIV2C];
                if (!($$csx2C < ((int *)((char *)grid + 48))[$$CIV2C])) goto lab_27;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if ((int) $$CIV2C < &pos->(vector<int>).size@8.rns391.$$1481) goto lab_57;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_57:
   309 |        if (!($$csx2C >= ((int *)((char *)grid + 40))[$$CIV2C])) goto lab_27;
   959 |        $$CIV2C = $$CIV2C + 1ll;
              } while ((unsigned long long) $$CIV2C < 2ull);    /* ~23 */
            lab_25:
    81 |      *((double *)((char *)p + 16)) =  0.0000000000000000E+000;
    82 |      *((unsigned int *)((char *)p + 12)) = (unsigned int) i;
   963 |      void MMSP::propagate_distance<2>(DistanceVoxel const*, MMSP::grid<2, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(p,&distance_grid,&queue)
   964 |      __es.__c4@3 = 4u;
    47 |      if (!(&pos->(vector<int>).data@0.rns401.$$1480 != NULL)) goto lab_61;
    48 |      operator delete[](void*)(&pos->(vector<int>).data@0.rns401.$$1480)
    49 |      &pos->(vector<int>).data@0.rns401.$$1480 = NULL;
    50 |    lab_61:
   956 |      i = i + 1;
   533 |    } while ((unsigned long long) i < (unsigned long long) ((*((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_finish@8.rns655. - *((char * *)seeds)->(_Vector_base<Point<int>,std::allocator<Point<int> > >)._M_start@0.rns654.) / 12ll));    /* ~20 */
          lab_22:
    31 |    MCFUNCx(&tmp,&lower,&upper,1,"r r r:","0:                  /n.mftbu   %0           /n.mftb    %1           /n.mftbu   %2           /n.cmpw    %2,%0        /n.bne     0b         /n",3,0)
   435 |    __15863._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue;
    93 |    __15861 = __15863;
   453 |    __15868._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue;
   100 |    __15862 = __15868;
   129 |    __15882 = (char) ((_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue == (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue);
    42 |    if (__15882 != 0u) goto lab_32;
            do {   /* id=3 guarded */ /* ~30 */ 
              /* region = 164 */
    74 |      DistanceVoxel_PriorityQueue::top() const::guard___func__2 = 1;
   435 |      __17464._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns761.$$1469;
              __17462 = __17464;
   453 |      __17469._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns762.$$1469;
              __17463 = __17469;
   178 |      $$csx2D = __17464._M_current@0 == __17469._M_current@0;
              __17481 = (char) $$csx2D;
   575 |      $$csx2E = __17481 != 0u;
              if (!$$csx2E) goto lab_136;
              __assert_fail("!m_heap.empty()","priority_queue.h",75u,&DistanceVoxel_PriorityQueue::top() const::__func__)
              return;
            lab_136:
   969 |      p = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns761.$$1469->(DistanceVoxel *).rns760.$$1472;
   107 |      DistanceVoxel_PriorityQueue::pop()::guard___func__3 = 1;
   435 |      __17497._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1473;
              __17495 = __17497;
   453 |      __17502._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1473;
              __17496 = __17502;
   178 |      __17514 = (char) $$csx2D;
   575 |      if (!$$csx2E) goto lab_94;
              __assert_fail("!m_heap.empty()","priority_queue.h",108u,&DistanceVoxel_PriorityQueue::pop()::__func__)
              return;
            lab_94:
   109 |      $$PARM.__x3B1 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1473;
  1372 |      $$csx2F = ((char * *)((char *)&queue + 24 + 8))[8 / 8];
  1051 |      __y = ((&queue + 24) + 8);
  1052 |      if (!($$csx2F != NULL)) goto lab_96;
  1050 |      __x = ((char * *)((char *)&queue + 24 + 8))[8 / 8];
  1052 |      do {   /* id=10 guarded */ /* ~97 */ 
                /* region = 163 */
   505 |        __memset(&__21476,0,1ull);
   230 |        __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553$$1473 < *$$PARM.__x3B1);
                if (!(__21489 != 0u)) goto lab_98;
   517 |        __x = *((char * *)(__x + 24));
                goto lab_99;
              lab_98:
   505 |        __memset(&__21493,0,1ull);
   230 |        __21506 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553$$1473);
                if (!(__21506 != 0u)) goto lab_100;
  1057 |        __y = __x;
   509 |        __x = *((char * *)(__x + 16));
  1066 |      lab_99:
  1052 |      } while (__x != NULL);    /* ~97 */
            lab_96:
   171 |      __21472._M_node@0 = __y;
              __21473._M_node@0 = __y;
              __21471.first@0 = __21472;
    84 |      __21471.second@8 = __21473;
              $$IRET1E5 = __21471;
              goto lab_101;
   509 |    lab_100:
   517 |      __xu.rnn170 = *((char * *)(__x + 24));
    84 |      $$PARM.__x11D = *((char * *)(__x + 16));
              $$PARM.__y11E = __x;
   985 |      if (!(*((char * *)(__x + 16)) != NULL)) goto lab_102;
              do {   /* id=11 guarded */ /* ~103 */ 
                /* region = 161 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906$$1795$$1553$$1473 < *$$PARM.__x3B1);
                if (__21720 != 0u) goto lab_104;
   987 |        $$PARM.__y11E = $$PARM.__x11D;
   509 |        $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
                goto lab_105;
              lab_104:
   517 |        $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
              lab_105:
   985 |      } while ($$PARM.__x11D != NULL);    /* ~103 */
            lab_102:
   171 |      __21706._M_node@0 = $$PARM.__y11E;
              $$IRET74 = __21706;
    84 |      __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.$$1795$$1553$$1473;
              $$PARM.__x3AB = __xu.rnn170;
              $$PARM.__y3AC = __y;
  1017 |      if (!(__xu.rnn170 != NULL)) goto lab_107;
              do {   /* id=12 guarded */ /* ~108 */ 
                /* region = 162 */
   505 |        __memset(&__21730,0,1ull);
   230 |        __21743 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907$$1795$$1553$$1473);
                if (!(__21743 != 0u)) goto lab_109;
  1019 |        $$PARM.__y3AC = $$PARM.__x3AB;
   509 |        $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
                goto lab_110;
              lab_109:
   517 |        $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
              lab_110:
  1017 |      } while ($$PARM.__x3AB != NULL);    /* ~108 */
            lab_107:
   171 |      __21729._M_node@0 = $$PARM.__y3AC;
              $$IRET1E4 = __21729;
    84 |      __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.$$1795$$1553$$1473;
              __21466.first@0 = __21467;
              __21466.second@8 = __21468;
              $$IRET1E5 = __21466;
  1070 |    lab_101:
  1372 |      __p = &$$IRET1E5->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> > >).rns1304.$$1553$$1473;
  1373 |      __old_size = ((unsigned long long *)((char *)&queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns1307.$$1553$$1473;
  1374 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)((&queue + 24),__p.first@0,__p.second@8)
   110 |      if (1 == (int) (__old_size - ((unsigned long long *)((char *)&queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns1307.$$1553$$1473)) goto lab_113;
              __assert_fail("success == 1","priority_queue.h",110u,&DistanceVoxel_PriorityQueue::pop()::__func__)
              return;
            lab_113:
   686 |      __17521._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1473;
   444 |      __17518 = __17521;
   747 |      __17525._M_current@0 = ((char *)__17521._M_current@0  - 8ll);
   298 |      __17520 = __17525;
   696 |      &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1473->(DistanceVoxel *).rns769.$$1473 = *__17525._M_current@0;
   766 |      &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1473 = ((char *)&queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1473  - 8ll);
   113 |      DistanceVoxel_PriorityQueue::percolate_down(int)(&queue,0)
   971 |      void MMSP::propagate_distance<2>(DistanceVoxel const*, MMSP::grid<2, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(p,&distance_grid,&queue)
   435 |      __15863._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue;
    93 |      __15861 = __15863;
   453 |      __15868._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue;
   100 |      __15862 = __15868;
   129 |      __15882.rnn99 = (char) ((_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue == (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue);
    42 |    } while (!(__15882.rnn99 != 0u));   /* ~30 */
          lab_32:
    31 |    MCFUNCx(&tmp,&lower,&upper,1,"r r r:","0:                  /n.mftbu   %0           /n.mftb    %1           /n.mftbu   %2           /n.cmpw    %2,%0        /n.bne     0b         /n",3,0)
            MCFUNCx(&tmp,&lower,&upper,1,"r r r:","0:                  /n.mftbu   %0           /n.mftb    %1           /n.mftbu   %2           /n.cmpw    %2,%0        /n.bne     0b         /n",3,0)
   435 |    __16078._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue;
    93 |    __16076 = __16078;
   453 |    __16083._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue;
   100 |    __16077 = __16083;
   129 |    __16097 = (char) ((_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue == (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue);
    42 |    if (__16097 != 0u) goto lab_35;
            do {   /* id=2 guarded */ /* ~33 */ 
              /* region = 168 */
    74 |      DistanceVoxel_PriorityQueue::top() const::guard___func__2 = 1;
   435 |      __17464._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns761.$$1469;
              __17462 = __17464;
   453 |      __17469._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns762.$$1469;
              __17463 = __17469;
   178 |      $$csx30 = __17464._M_current@0 == __17469._M_current@0;
              __17481 = (char) $$csx30;
   575 |      $$csx31 = __17481 != 0u;
              if (!$$csx31) goto lab_134;
              __assert_fail("!m_heap.empty()","priority_queue.h",75u,&DistanceVoxel_PriorityQueue::top() const::__func__)
              return;
            lab_134:
  1027 |      p = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns761.$$1469->(DistanceVoxel *).rns760.$$1469;
   107 |      DistanceVoxel_PriorityQueue::pop()::guard___func__3 = 1;
   435 |      __17497._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1470;
              __17495 = __17497;
   453 |      __17502._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1470;
              __17496 = __17502;
   178 |      __17514 = (char) $$csx30;
   575 |      if (!$$csx31) goto lab_114;
              __assert_fail("!m_heap.empty()","priority_queue.h",108u,&DistanceVoxel_PriorityQueue::pop()::__func__)
              return;
            lab_114:
   109 |      $$PARM.__x3B1 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1470;
  1372 |      $$csx32 = ((char * *)((char *)&queue + 24 + 8))[8 / 8];
  1051 |      __y = ((&queue + 24) + 8);
  1052 |      if (!($$csx32 != NULL)) goto lab_116;
  1050 |      __x = ((char * *)((char *)&queue + 24 + 8))[8 / 8];
  1052 |      do {   /* id=13 guarded */ /* ~117 */ 
                /* region = 167 */
   505 |        __memset(&__21476,0,1ull);
   230 |        __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553$$1470 < *$$PARM.__x3B1);
                if (!(__21489 != 0u)) goto lab_118;
   517 |        __x = *((char * *)(__x + 24));
                goto lab_119;
              lab_118:
   505 |        __memset(&__21493,0,1ull);
   230 |        __21506 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795$$1553$$1470);
                if (!(__21506 != 0u)) goto lab_120;
  1057 |        __y = __x;
   509 |        __x = *((char * *)(__x + 16));
  1066 |      lab_119:
  1052 |      } while (__x != NULL);    /* ~117 */
            lab_116:
   171 |      __21472._M_node@0 = __y;
              __21473._M_node@0 = __y;
              __21471.first@0 = __21472;
    84 |      __21471.second@8 = __21473;
              $$IRET1E5 = __21471;
              goto lab_121;
   509 |    lab_120:
   517 |      __xu.rnn170 = *((char * *)(__x + 24));
    84 |      $$PARM.__x11D = *((char * *)(__x + 16));
              $$PARM.__y11E = __x;
   985 |      if (!(*((char * *)(__x + 16)) != NULL)) goto lab_122;
              do {   /* id=14 guarded */ /* ~123 */ 
                /* region = 165 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906$$1795$$1553$$1470 < *$$PARM.__x3B1);
                if (__21720 != 0u) goto lab_124;
   987 |        $$PARM.__y11E = $$PARM.__x11D;
   509 |        $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
                goto lab_125;
              lab_124:
   517 |        $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
              lab_125:
   985 |      } while ($$PARM.__x11D != NULL);    /* ~123 */
            lab_122:
   171 |      __21706._M_node@0 = $$PARM.__y11E;
              $$IRET74 = __21706;
    84 |      __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.$$1795$$1553$$1470;
              $$PARM.__x3AB = __xu.rnn170;
              $$PARM.__y3AC = __y;
  1017 |      if (!(__xu.rnn170 != NULL)) goto lab_127;
              do {   /* id=15 guarded */ /* ~128 */ 
                /* region = 166 */
   505 |        __memset(&__21730,0,1ull);
   230 |        __21743 = (char) (*$$PARM.__x3B1 < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907$$1795$$1553$$1470);
                if (!(__21743 != 0u)) goto lab_129;
  1019 |        $$PARM.__y3AC = $$PARM.__x3AB;
   509 |        $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
                goto lab_130;
              lab_129:
   517 |        $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
              lab_130:
  1017 |      } while ($$PARM.__x3AB != NULL);    /* ~128 */
            lab_127:
   171 |      __21729._M_node@0 = $$PARM.__y3AC;
              $$IRET1E4 = __21729;
    84 |      __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.$$1795$$1553$$1470;
              __21466.first@0 = __21467;
              __21466.second@8 = __21468;
              $$IRET1E5 = __21466;
  1070 |    lab_121:
  1372 |      __p = &$$IRET1E5->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> > >).rns1304.$$1553$$1470;
  1373 |      __old_size = ((unsigned long long *)((char *)&queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns1307.$$1553$$1470;
  1374 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)((&queue + 24),__p.first@0,__p.second@8)
   110 |      if (1 == (int) (__old_size - ((unsigned long long *)((char *)&queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_node_count@28.rns1307.$$1553$$1470)) goto lab_133;
              __assert_fail("success == 1","priority_queue.h",110u,&DistanceVoxel_PriorityQueue::pop()::__func__)
              return;
            lab_133:
   686 |      __17521._M_current@0 = &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1470;
   444 |      __17518 = __17521;
   747 |      __17525._M_current@0 = ((char *)__17521._M_current@0  - 8ll);
   298 |      __17520 = __17525;
   696 |      &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns772.$$1470->(DistanceVoxel *).rns769.$$1470 = *__17525._M_current@0;
   766 |      &queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1470 = ((char *)&queue->(_Vector_base<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns773.$$1470  - 8ll);
   113 |      DistanceVoxel_PriorityQueue::percolate_down(int)(&queue,0)
  1029 |      void MMSP::propagate_distance<2>(DistanceVoxel const*, MMSP::grid<2, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(p,&distance_grid,&queue)
   435 |      __16078._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue;
    93 |      __16076 = __16078;
   453 |      __16083._M_current@0 = (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue;
   100 |      __16077 = __16083;
   129 |      __16097.rnn98 = (char) ((_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_start@0.rns643..mga.queue == (_Vector_impl;vector<DistanceVoxel *,std::allocator<DistanceVoxel *> >)._M_finish@8.rns644..mga.queue);
    42 |    } while (!(__16097.rnn98 != 0u));   /* ~33 */
          lab_35:
    31 |    MCFUNCx(&tmp,&lower,&upper,1,"r r r:","0:                  /n.mftbu   %0           /n.mftb    %1           /n.mftbu   %2           /n.cmpw    %2,%0        /n.bne     0b         /n",3,0)
  1034 |    $$csx33 = distance_grid.nodes@8;
            if (!(0 < $$csx33)) goto lab_38;
            i = 0;
    76 |    $$csx34 = &distance_grid->(grid<2,DistanceVoxel>).data@0.rns1189.$$1488;
  1034 |    do {   /* id=1 guarded */ /* ~36 */ 
              /* region = 169 */
    76 |      ((unsigned long long *)(*((char * *)grid)))[(long long) i] = (unsigned long long) *(((unsigned int *)($$csx34 + 12)) + (long long) i * 24ll / 4);
  1034 |      i = i + 1;
            } while (i < $$csx33);    /* ~36 */
          lab_38:
  1037 |    __es.__c4@3 = 1u;
            DistanceVoxel_PriorityQueue::~DistanceVoxel_PriorityQueue()(&queue);
            __es.__c4@3 = 0u;
   331 |    if (!(&distance_grid->(grid<2,DistanceVoxel>).data@0.rns1177.$$1466 != NULL)) goto lab_138;
   332 |    operator delete[](void*)(&distance_grid->(grid<2,DistanceVoxel>).data@0.rns1177.$$1466)
   333 |    &distance_grid->(grid<2,DistanceVoxel>).data@0.rns1177.$$1466 = NULL;
   334 |  lab_138:
  1157 |    rstr = ((lower | upper << 32) - (lower | upper << 32)) + ((lower | upper << 32) - (lower | upper << 32));
            return rstr;
   309 |  lab_27:
            __assert_fail("(pos[j] < x1(grid, j)) && (pos[j] >= x0(grid, j))","tessellate.hpp",959u,&__func__)
            return rstr;
          lab_12:
            __assert_fail("pos[d] >= x0(distance_grid, d)","tessellate.hpp",940u,&__func__)
            return rstr;
   313 |  lab_15:
            __assert_fail("pos[d] < x1(distance_grid, d)","tessellate.hpp",941u,&__func__)
            return rstr;
  1158 |  } /* function */ 


   478 |  void void std::vector<Point<int>, std::allocator<Point<int> > >::_M_range_insert<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > > >(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, std::forward_iterator_tag)(char * this, aggr8 __position, aggr8 __first, aggr8 __last, aggr1 NONAME_4236)
   481 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   482 |    if (!(__first._M_current@0 != __last._M_current@0)) goto lab_3;
   161 |    __memset(&__16294,0,1ull);
   485 |    $$csx35 = *((char * *)(this + 8));
            if (!((unsigned long long) ((*((char * *)(this + 16)) - $$csx35) / 12ll) >= (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll))) goto lab_5;
   686 |    __16315._M_current@0 = *((char * *)(this + 8));
   444 |    __16247 = __16315;
   489 |    __old_finish = *((char * *)(this + 8));
   490 |    $$csx37 = ($$csx35 - __position._M_current@0) / 12ll;
            $$csx36 = (unsigned long long) $$csx37;
            if (!($$csx36 > (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll))) goto lab_7;
    70 |    __cur = *((char * *)(this + 8));
    73 |    if (!(((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll != 0ll)) goto lab_45;
            $$CIVINIT25 = ((char *)$$csx35  - ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
            $$CIV25 = 0ll;
            do {   /* id=4 guarded */ /* ~46 */ 
              /* region = 55 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)$$csx35  + $$CIV25 * 12ll))) goto lab_47;
    12 |      ((int *)$$csx35)[($$CIV25 * 12ll) / 4] = ((int *)$$CIVINIT25)[($$CIV25 * 12ll) / 4];
              ((int *)($$csx35 + 4))[($$CIV25 * 12ll) / 4] = ((int *)((char *)$$CIVINIT25 + 4))[($$CIV25 * 12ll) / 4];
              ((int *)($$csx35 + 8))[($$CIV25 * 12ll) / 4] = ((int *)((char *)$$CIVINIT25 + 8))[($$CIV25 * 12ll) / 4];
            lab_47:
    73 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) ((((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll) / 12ll));    /* ~46 */
            __cur = ((char *)$$csx35  + ((((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll) / 12ll) * 12ll);
          lab_45:
   496 |    *((char * *)(this + 8)) = ((char *)$$csx35  + ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
   545 |    if (!((((char *)__old_finish  - ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll) - __position._M_current@0) / 12ll > 0ll)) goto lab_11;
            $$CIV2D = 0ll;
            do {   /* id=3 guarded */ /* ~9 */ 
              /* region = 56 */
              /* bump-normalized */
   546 |      *((aggr12 *)((char *)__old_finish + -12ll - $$CIV2D * 12ll)) = *((aggr12 *)((char *)__old_finish + - ((1ll + ($$CIV2D + (__last._M_current@0 - __first._M_current@0) / 12ll)) * 12ll)));
   545 |      $$CIV2D = $$CIV2D + 1ll;
            } while ((unsigned long long) $$CIV2D < (unsigned long long) ((((char *)__old_finish  - ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll) - __position._M_current@0) / 12ll));    /* ~9 */
          lab_11:
   459 |    __16785 = __position._M_current@0;
   341 |    if (!((__last._M_current@0 - __first._M_current@0) / 12ll > 0ll)) goto lab_14;
            $$CIV2E = 0ll;
            do {   /* id=2 guarded */ /* ~12 */ 
              /* region = 57 */
              /* bump-normalized */
   343 |      __position._M_current@0[$$CIV2E] = __first._M_current@0[$$CIV2E];
   341 |      $$CIV2E = $$CIV2E + 1ll;
            } while ((unsigned long long) $$CIV2E < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll));    /* ~12 */
            __16785 = ((char *)__position._M_current@0  + ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
          lab_14:
   518 |    __16773 = __16785;
   500 |    goto lab_19;
          lab_7:
   503 |    __mid = __first;
   161 |    __memset(&__16434,0,1ull);
   735 |    __16832._M_current@0.off0 = ((char *)__16832._M_current@0.off0  + $$csx37 * 12ll);
   115 |    Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(__mid,__last,*((char * *)(this + 8)));
   508 |    $$csx38 = ((char *)*((char * *)(this + 8))  + (((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll - $$csx37 * 12ll));
            *((char * *)(this + 8)) = $$csx38;
    70 |    __cur = *((char * *)(this + 8));
    73 |    if (!(__position._M_current@0 != __old_finish)) goto lab_49;
            $$CIV25 = 0ll;
            do {   /* id=5 guarded */ /* ~50 */ 
              /* region = 58 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)$$csx38  + $$CIV25 * 12ll))) goto lab_51;
    12 |      ((int *)$$csx38)[($$CIV25 * 12ll) / 4] = ((int *)__position._M_current@0)[($$CIV25 * 12ll) / 4];
              ((int *)($$csx38 + 4))[($$CIV25 * 12ll) / 4] = ((int *)((char *)__position._M_current@0 + 4))[($$CIV25 * 12ll) / 4];
              ((int *)($$csx38 + 8))[($$CIV25 * 12ll) / 4] = ((int *)((char *)__position._M_current@0 + 8))[($$CIV25 * 12ll) / 4];
            lab_51:
    73 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < $$csx36);    /* ~50 */
            __cur = ((char *)$$csx38  + $$csx37 * 12ll);
          lab_49:
   513 |    *((char * *)(this + 8)) = ((char *)$$csx38  + $$csx37 * 12ll);
   459 |    __16821 = __position._M_current@0;
   341 |    if (!((__16832._M_current@0.off0 - __first._M_current@0) / 12ll > 0ll)) goto lab_18;
            $$CIV2F = 0ll;
            do {   /* id=1 guarded */ /* ~16 */ 
              /* region = 59 */
              /* bump-normalized */
   343 |      __position._M_current@0[$$CIV2F] = __first._M_current@0[$$CIV2F];
   341 |      $$CIV2F = $$CIV2F + 1ll;
            } while ((unsigned long long) $$CIV2F < (unsigned long long) ((__16832._M_current@0.off0 - __first._M_current@0) / 12ll));    /* ~16 */
            __16821 = ((char *)__position._M_current@0  + ((__16832._M_current@0.off0 - __first._M_current@0) / 12ll) * 12ll);
          lab_18:
   518 |    __16809 = __16821;
   516 |    goto lab_19;
          lab_5:
   519 |    $$PARM.__n385 = (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll);
   538 |    if (!((unsigned long long) (1537228672809129301ll - ($$csx35 - *((char * *)this)) / 12ll) < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll))) goto lab_53;
  1137 |    std::__throw_length_error(char const*)("vector::_M_range_insert")
            return;
          lab_53:
  1139 |    __12982 = (unsigned long long) (($$csx35 - *((char * *)this)) / 12ll);
   216 |    $$csx39 = (unsigned long long) (($$csx35 - *((char * *)this)) / 12ll) < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll) ? &$$PARM.__n385 : &__12982->(unsigned long).rns249.$$1495;
  1140 |    if ($$csx39 + (unsigned long long) (($$csx35 - *((char * *)this)) / 12ll) < (unsigned long long) (($$csx35 - *((char * *)this)) / 12ll)) goto lab_55;
   538 |    if (!($$csx39 + (unsigned long long) (($$csx35 - *((char * *)this)) / 12ll) > 1537228672809129301ull)) goto lab_56;
          lab_55:
            __13007 = 1537228672809129301ull;
            goto lab_57;
          lab_56:
            __13007 = $$csx39 + (unsigned long long) (($$csx35 - *((char * *)this)) / 12ll);
          lab_57:
   140 |    if (!(__13007 != 0ull)) goto lab_21;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__13007 > 1537228672809129301ull),0ll))) goto lab_23;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_23:
    89 |    __16565 = operator new(unsigned long)(__13007 * 12ull);
   107 |    __16844 = __16565;
            goto lab_22;
          lab_21:
            __16844 = NULL;
          lab_22:
   522 |    __new_finish = __16844;
   524 |    __es.__c4@3 = 1u;
   264 |    $$RET171 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(*((char * *)this),__position._M_current@0,__16844);
            goto __16839;
            goto __16840;
   268 |    __new_finish = $$RET171;
   257 |    $$RET172 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(__first,__last,$$RET171);
            goto __16839;
            goto __16840;
            __new_finish = $$RET172;
   264 |    $$RET173 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<Point<int>*, Point<int>*>(Point<int>*, Point<int>*, Point<int>*)(__position._M_current@0,*((char * *)(this + 8)),$$RET172);
            goto __16839;
            goto __16840;
   268 |    __new_finish = $$RET173;
   539 |    __es.__c4@3 = 0u;
            goto @16841;
   541 |  lab_35:
            /* GLAB  id_no=4243{__16839} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __16842 = __int_register_value(29u);
            __cxa_begin_catch((char *) __16842)
   145 |    if (!(__16844 != NULL)) goto lab_26;
    95 |    operator delete(void*)(__16844)
   110 |  lab_26:
   545 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @16841:
   141 |    $$csx3A = *((char * *)this);
   145 |    if (!($$csx3A != NULL)) goto lab_28;
    95 |    operator delete(void*)($$csx3A)
   110 |  lab_28:
   552 |    *((char * *)this) = __16844;
   553 |    *((char * *)(this + 8)) = __new_finish;
   554 |    *((char * *)(this + 16)) = ((char *)__16844  + (long long) (__13007 * 12ull));
   555 |  lab_19:
   556 |  lab_3:
   557 |    return;
   541 |    /* GLAB  id_no=4249{__16840} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __16843 = __int_register_value(29u);
            _Unwind_Resume((char *) __16843)
            goto lab_35;
   557 |  } /* function */ 


   312 |  char * std::vector<double, std::allocator<double> >::~vector()(_Vector_impl *this)
   145 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_1:
   132 |    $$PARM.this226 = this;
   109 |    $$PARM.this224 = $$PARM.this226;
    73 |    $$IRET129 = $$PARM.this224;
   109 |    $$IRET12A = $$PARM.this226;
   132 |    $$IRET12B = $$PARM.this226;
   133 |    $$IRET12C = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   295 |  void std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(char * this, aggr8 __position, long long *__x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    $$csx3B = *((char * *)(this + 8));
            if (!($$csx3B != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!($$csx3B != NULL)) goto lab_6;
   105 |    *((double *)$$csx3B) = ((double *)((char *)$$csx3B  - 8ll))->(double).rns691.;
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)$$csx3B  + 8ll);
   306 |    __x_copy = *__x;
   638 |    $$PARM.__first3FF = __position._M_current@0;
            $$PARM.__last400 = ((char *)*((char * *)(this + 8))  - 16ll);
            $$PARM.__result401 = ((char *)*((char * *)(this + 8))  - 8ll);
   575 |    __builtin_memmove(((char *)$$PARM.__result401  - (($$PARM.__last400 - $$PARM.__first3FF) / 8ll) * 8ll),$$PARM.__first3FF,(unsigned long long) ((($$PARM.__last400 - $$PARM.__first3FF) / 8ll) * 8ll));
   577 |    $$IRET211 = ((char *)$$PARM.__result401  - (($$PARM.__last400 - $$PARM.__first3FF) / 8ll) * 8ll);
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_8;
          lab_3:
   319 |    $$PARM.__n403 = 1ull;
            $$PARM.__s404 = "vector::_M_insert_aux";
   538 |    if (!((unsigned long long) (2305843009213693951ll - ($$csx3B - *((char * *)this)) / 8ll) < $$PARM.__n403)) goto lab_35;
  1137 |    std::__throw_length_error(char const*)($$PARM.__s404)
            return;
          lab_35:
  1139 |    __19763 = (unsigned long long) (($$csx3B - *((char * *)this)) / 8ll);
   215 |    __19774 = ((unsigned long long) (($$csx3B - *((char * *)this)) / 8ll) < $$PARM.__n403 ? &$$PARM.__n403 : &__19763);
   216 |    $$csx3C = *__19774;
  1140 |    if ($$csx3C + (unsigned long long) (($$csx3B - *((char * *)this)) / 8ll) < (unsigned long long) (($$csx3B - *((char * *)this)) / 8ll)) goto lab_37;
   538 |    if (!($$csx3C + (unsigned long long) (($$csx3B - *((char * *)this)) / 8ll) > 2305843009213693951ull)) goto lab_38;
          lab_37:
            __19788 = 2305843009213693951ull;
            goto lab_39;
          lab_38:
            __19788 = $$csx3C + (unsigned long long) (($$csx3B - *((char * *)this)) / 8ll);
          lab_39:
            $$IRET212 = __19788;
   319 |    __len = $$IRET212;
   686 |    __16991._M_current@0 = *((char * *)this);
   426 |    __16913 = __16991;
   858 |    $$FSM3 = (__normal_iterator<double *,std::vector<double,std::allocator<double> > >)._M_current@0.rns708..mga.__16913;
   140 |    if (!(__len != 0ull)) goto lab_10;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__len > 2305843009213693951ull),0ll))) goto lab_12;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_12:
    89 |    __17004 = operator new(unsigned long)(__len * 8ull);
   107 |    __17204 = __17004;
            goto lab_11;
          lab_10:
            __17204 = NULL;
          lab_11:
   858 |    __elems_before = (unsigned long long) ((__position._M_current@0 - $$FSM3) / 8ll);
   325 |    __es.__c4@3 = 1u;
    55 |    if (!(NULL != ((char *)__17204  + (long long) (__elems_before * 8ull)))) goto lab_15;
   105 |    *((double *)((char *)__17204 + (long long) (__elems_before * 8ull))) = *__x;
          lab_15:
   336 |    __new_finish = NULL;
   264 |    $$RET174 = double* std::copy<double*, double*>(double*, double*, double*)(*((char * *)this),__position._M_current@0,__17204);
            goto __17199;
            goto __17200;
   342 |    __new_finish = ((char *)$$RET174  + 8ll);
   264 |    $$RET175 = double* std::copy<double*, double*>(double*, double*, double*)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET174  + 8ll));
            goto __17199;
            goto __17200;
   268 |    __new_finish = $$RET175;
   349 |    __es.__c4@3 = 0u;
            goto @17201;
   351 |  lab_30:
            /* GLAB  id_no=4480{__17199} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __17202 = __int_register_value(29u);
            __cxa_begin_catch((char *) __17202)
   145 |    if (!(__17204 != NULL)) goto lab_21;
    95 |    operator delete(void*)(__17204)
   110 |  lab_21:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @17201:
   141 |    $$csx3D = *((char * *)this);
   145 |    if (!($$csx3D != NULL)) goto lab_23;
    95 |    operator delete(void*)($$csx3D)
   110 |  lab_23:
   364 |    *((char * *)this) = __17204;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__17204  + (long long) (__len * 8ull));
   367 |  lab_8:
   368 |    return;
   351 |    /* GLAB  id_no=4486{__17200} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __17203 = __int_register_value(29u);
            _Unwind_Resume((char *) __17203)
            goto lab_30;
   368 |  } /* function */ 


   529 |  void void MMSP::ghostswap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&)(char * GRID)
   531 |  {
            $$PARM.this407 = GRID;
   532 |    return;
          } /* function */ 


   523 |  void MMSP::vector<int> MMSP::position<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(char * __classReturn, char * GRID, int index)
   525 |  {
            MMSP::grid<1, MMSP::vector<double> >::position(int) const(__classReturn,GRID,index)
   526 |    return;
          } /* function */ 


    66 |  double double MMSP::f<double>(double, double)(double c, double phi)
    74 |  {
            rstr = _fmadd@47( 5.0000000000000000E-001 * _fmsub@49( 2.0000000000000000E+000,c, 1.8999999999999999E+000),phi,_fmadd@47( 2.9999999999999998E-001,_fnmsub@53( 2.0000000000000000E+000, 7.5000000000000000E-001,_fmsub@49( 4.0000000000000000E+000,c, 5.0000000000000000E-001)),( 5.0000000000000000E-001 * _fmsub@49( 2.0000000000000000E+000,c, 1.0000000000000000E-001)) * ( 1.0000000000000000E+000 - phi)));
            return rstr;
    75 |  } /* function */ 


    77 |  void std::vector<double, std::allocator<double> > MMSP::dE<double>(double, std::vector<double, std::allocator<double> > const&, std::vector<double, std::allocator<double> > const&)(char * deltas, double c, _Vector_base<double,std::allocator<double> > *phases, _Vector_base<double,std::allocator<double> > *grains)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    81 |    *((char * *)deltas) = NULL;
            *((char * *)(deltas + 8)) = NULL;
            *((char * *)(deltas + 16)) = NULL;
    85 |    __es.__c4@3 = 1u;
   734 |    __17207 =  0.0000000000000000E+000;
   735 |    $$csx3F = *((char * *)(deltas + 16));
            $$csx3E = $$csx3F != $$csx3F;
            if (!$$csx3E) goto lab_1;
   169 |    if (!$$csx3E) goto lab_4;
   105 |    *((double *)$$csx3F) =  0.0000000000000000E+000;
          lab_4:
   738 |    *((char * *)(deltas + 8)) = ((char *)$$csx3F  + 8ll);
   739 |    goto lab_6;
          lab_1:
   686 |    __17268._M_current@0 = *((char * *)(deltas + 8));
   444 |    std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(deltas,__17268,&__17207)
          lab_6:
    87 |    $$csx40 = *((char * *)phases)->(double).rns715.;
            $$csx41 = _fmadd@47(c -  2.5000000000000000E-001,c -  2.5000000000000000E-001,(c -  7.5000000000000000E-001) * (c -  7.5000000000000000E-001));
            original = _fmadd@47( 5.0000000000000000E-001 * ((c -  9.4999999999999995E-001) * (c -  9.4999999999999995E-001)),$$csx40,_fmadd@47( 2.9999999999999998E-001,$$csx41,( 5.0000000000000000E-001 * ((c -  5.0000000000000002E-002) * (c -  5.0000000000000002E-002))) * ( 1.0000000000000000E+000 - $$csx40)));
    88 |    if (!1) goto lab_9;
            $$CIV30 = 0ll;
    89 |    $$csx42 = *((char * *)grains)->(double).rns716.;
    88 |    do {   /* id=3 guarded */ /* ~7 */ 
              /* region = 28 */
              /* bump-normalized */
    89 |      original = original + (double) ((char) (*((double *)((char *)(*((char * *)grains)) + (long long) ((unsigned long long) ((int) ($$CIV30 + 1ll)) * 8ull))) != $$csx42));
    88 |      $$CIV30 = $$CIV30 + 1ll;
            } while ((unsigned long long) $$CIV30 < 4ull);    /* ~7 */
          lab_9:
    91 |    if (!1) goto lab_12;
            $$CIV32 = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 27 */
              /* bump-normalized */
    92 |      $$csx43 = *((double *)((char *)(*((char * *)phases)) + (long long) ((unsigned long long) ((int) ($$CIV32 + 1ll)) * 8ull)));
              changed = _fmadd@47( 5.0000000000000000E-001 * ((c -  9.4999999999999995E-001) * (c -  9.4999999999999995E-001)),$$csx43,_fmadd@47( 2.9999999999999998E-001,$$csx41,( 5.0000000000000000E-001 * ((c -  5.0000000000000002E-002) * (c -  5.0000000000000002E-002))) * ( 1.0000000000000000E+000 - $$csx43)));
    93 |      if (!1) goto lab_15;
              $$CIV31 = 0ll;
    94 |      $$csx45 = *((char * *)grains);
              $$csx44 = *((double *)($$csx45 + (long long) ((unsigned long long) ((int) ($$CIV32 + 1ll)) * 8ull)));
    93 |      do {   /* id=2 guarded */ /* ~13 */ 
                /* region = 26 */
                /* bump-normalized */
    94 |        changed = changed + (double) ((char) ($$csx44 != *((double *)($$csx45 + (long long) ((unsigned long long) ((int) ($$CIV31 + 1ll)) * 8ull)))));
    93 |        $$CIV31 = $$CIV31 + 1ll;
              } while ((unsigned long long) $$CIV31 < 4ull);    /* ~13 */
            lab_15:
   734 |      __17208 = changed - original;
   735 |      $$csx46 = *((char * *)(deltas + 8));
              if (!($$csx46 != *((char * *)(deltas + 16)))) goto lab_16;
   169 |      if (!($$csx46 != NULL)) goto lab_19;
   105 |      *((double *)$$csx46) = changed - original;
            lab_19:
   738 |      *((char * *)(deltas + 8)) = ((char *)$$csx46  + 8ll);
   739 |      goto lab_21;
            lab_16:
   686 |      __17254._M_current@0 = *((char * *)(deltas + 8));
   444 |      std::vector<double, std::allocator<double> >::_M_insert_aux(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)(deltas,__17254,&__17208)
            lab_21:
    91 |      $$CIV32 = $$CIV32 + 1ll;
            } while ((unsigned long long) $$CIV32 < 4ull);    /* ~10 */
          lab_12:
    99 |    return;
          } /* function */ 


   580 |  void void MMSP::swap<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> >&, MMSP::grid<1, MMSP::vector<double> >&)(char * GRID1, char * GRID2)
   582 |  {
            MMSP::grid<1, MMSP::vector<double> >::swap(MMSP::grid<1, MMSP::vector<double> >&)(GRID1,GRID2)
   583 |    return;
          } /* function */ 


   529 |  void void MMSP::ghostswap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&)(char * GRID)
   531 |  {
            $$PARM.this432 = GRID;
   532 |    return;
          } /* function */ 


   523 |  void MMSP::vector<int> MMSP::position<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(char * __classReturn, char * GRID, int index)
   525 |  {
            MMSP::grid<2, MMSP::vector<double> >::position(int) const(__classReturn,GRID,index)
   526 |    return;
          } /* function */ 


   580 |  void void MMSP::swap<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> >&, MMSP::grid<2, MMSP::vector<double> >&)(char * GRID1, char * GRID2)
   582 |  {
            MMSP::grid<2, MMSP::vector<double> >::swap(MMSP::grid<2, MMSP::vector<double> >&)(GRID1,GRID2)
   583 |    return;
          } /* function */ 


   529 |  void void MMSP::ghostswap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&)(char * GRID)
   531 |  {
            MMSP::grid<3, MMSP::vector<double> >::ghostswap()(GRID)
   532 |    return;
          } /* function */ 


   523 |  void MMSP::vector<int> MMSP::position<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(char * __classReturn, char * GRID, int index)
   525 |  {
            MMSP::grid<3, MMSP::vector<double> >::position(int) const(__classReturn,GRID,index)
   526 |    return;
          } /* function */ 


   580 |  void void MMSP::swap<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> >&, MMSP::grid<3, MMSP::vector<double> >&)(char * GRID1, char * GRID2)
   582 |  {
            MMSP::grid<3, MMSP::vector<double> >::swap(MMSP::grid<3, MMSP::vector<double> >&)(GRID1,GRID2)
   583 |    return;
          } /* function */ 


   123 |  char * char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)(char *__beg, char * __end, char * __a, aggr1 NONAME_4684)
   128 |  {
            if (!(__beg == __end)) goto lab_3;
   122 |    goto lab_4;
          lab_3:
            __17430 = 0u;
            goto lab_5;
          lab_4:
            __17430 = 1u;
          lab_5:
            if (!(__17430 != 0u)) goto lab_1;
   215 |    rstr = ((char *)&std::string::_Rep::_S_empty_rep_storage  + 24ll);
            return rstr;
          lab_1:
   149 |    __17374 = (char) (__beg == NULL);
            if (!(__17374 != 0u)) goto lab_9;
   133 |    if (!(__beg == __end)) goto lab_10;
          lab_9:
            __17431 = 0u;
            goto lab_11;
          lab_10:
            __17431 = 1u;
          lab_11:
            if (!(0ll != __builtin_expect@34((long long) __17431,0ll))) goto lab_7;
   134 |    std::__throw_logic_error(char const*)("basic_string::_S_construct NULL not valid")
            return rstr;
          lab_7:
   161 |    __memset(&__17376,0,1ull);
   139 |    __r = std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)((unsigned long long) (__end - __beg),0ull,__a);
   341 |    if (!(0ull == (unsigned long long) ((__end - __beg) - 1ll))) goto lab_13;
   247 |    ((char *)__r)[24ll / 1] = *__beg;
   113 |    goto lab_15;
          lab_13:
   275 |    __builtin_memcpy(((char *)__r  + 24ll),__beg,(unsigned long long) (__end - __beg));
   196 |  lab_15:
   180 |    if (!(0ll != __builtin_expect@34((long long) (__r != &std::string::_Rep::_S_empty_rep_storage),0ll))) goto lab_16;
   196 |    *((int *)(__r + 16)) = 0;
   206 |    *((unsigned long long *)__r) = (unsigned long long) (__end - __beg);
   247 |    ((char *)(((char *)__r  + 24ll)))[__end - __beg] = std::string::_Rep::_S_terminal;
   210 |  lab_16:
   215 |    rstr = ((char *)__r  + 24ll);
            return rstr;
   149 |  } /* function */ 


   312 |  char * std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::~vector()(char * this)
          {
            $$csx47 = *((char * *)this);
   141 |    if (!($$csx47 != *((char * *)(this + 8)))) goto lab_3;
    92 |  lab_3:
   145 |    if (!($$csx47 != NULL)) goto lab_4;
    95 |    operator delete(void*)($$csx47)
   110 |  lab_4:
   132 |    $$PARM.this3B9 = this;
   109 |    $$PARM.this3B7 = $$PARM.this3B9;
    73 |    $$IRET1EA = $$PARM.this3B7;
   109 |    $$IRET1EB = $$PARM.this3B9;
   132 |    $$IRET1EC = $$PARM.this3B9;
   133 |    $$IRET1ED = this;
   314 |    rstr = this;
            return rstr;
          } /* function */ 


   241 |  char * std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(char * this, _Vector_base<Point<int>,std::allocator<Point<int> > > *__x)
   242 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            $$PARM.__n363 = (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll);
            $$PARM.__a364 = __x;
    85 |    *((char * *)this) = NULL;
            *((char * *)(this + 8)) = NULL;
            *((char * *)(this + 16)) = NULL;
   140 |    if (!($$PARM.__n363 != 0ull)) goto lab_1;
   111 |    if (!(0ll != __builtin_expect@34((long long) ($$PARM.__n363 > 1537228672809129301ull),0ll))) goto lab_2;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_2:
    89 |    __20562 = operator new(unsigned long)($$PARM.__n363 * 12ull);
   107 |    __20566 = __20562;
            goto lab_4;
          lab_1:
            __20566 = NULL;
          lab_4:
   140 |    *((char * *)this) = __20566;
   114 |    *((char * *)(this + 8)) = *((char * *)this);
   115 |    *((char * *)(this + 16)) = ((char *)*((char * *)this)  + (long long) ($$PARM.__n363 * 12ull));
   116 |    $$IRET1C5 = this;
   242 |    __es.__c4@3 = 1u;
   435 |    __17585._M_current@0 = *((char * *)__x);
   453 |    __17590._M_current@0 = *((char * *)((char *)__x + 8));
   115 |    __17629 = Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(__17585,__17590,*((char * *)this));
   257 |    *((char * *)(this + 8)) = __17629;
   247 |    __es.__c4@3 = 0u;
            rstr = this;
            return rstr;
          } /* function */ 


   156 |  char * std::vector<Point<int>, std::allocator<Point<int> > >::operator=(std::vector<Point<int>, std::allocator<Point<int> > > const&)(vector<Point<int>,std::allocator<Point<int> > > *this, _Vector_base<Point<int>,std::allocator<Point<int> > > *__x)
   159 |  {
            if (!(__x != this)) goto lab_1;
   161 |    __xlen = (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll);
   162 |    if (!((unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll) > (unsigned long long) ((*((char * *)((char *)this + 16)) - *((char * *)this)) / 12ll))) goto lab_3;
   435 |    __17673._M_current@0 = *((char * *)__x);
   453 |    __17678._M_current@0 = *((char * *)((char *)__x + 8));
            __tmp = Point<int>* std::vector<Point<int>, std::allocator<Point<int> > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > > >(unsigned long, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >)(this,(unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll),__17673,__17678);
   145 |    if (!(*((char * *)this) != NULL)) goto lab_5;
    95 |    operator delete(void*)(*((char * *)this))
   110 |  lab_5:
   171 |    *((char * *)this) = __tmp;
   172 |    *((char * *)((char *)this + 16)) = ((char *)__tmp  + (long long) (__xlen * 12ull));
   173 |    goto lab_7;
          lab_3:
   174 |    if (!((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) >= (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll))) goto lab_8;
   459 |    __17935 = *((char * *)this);
   341 |    if (!((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll > 0ll)) goto lab_12;
            $$CIV34 = 0ll;
            do {   /* id=2 guarded */ /* ~10 */ 
              /* region = 27 */
              /* bump-normalized */
   343 |      ((aggr12 *)(*((char * *)this)))[$$CIV34] = ((aggr12 *)(*((char * *)__x)))[$$CIV34];
   341 |      $$CIV34 = $$CIV34 + 1ll;
            } while ((unsigned long long) $$CIV34 < (unsigned long long) ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll));    /* ~10 */
            __17935 = ((char *)*((char * *)this)  + ((*((char * *)((char *)__x + 8)) - *((char * *)__x)) / 12ll) * 12ll);
          lab_12:
   518 |    __17923 = __17935;
   178 |    goto lab_13;
          lab_8:
   341 |    if (!((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll) / 12ll > 0ll)) goto lab_16;
            $$CIV35 = 0ll;
            do {   /* id=1 guarded */ /* ~14 */ 
              /* region = 28 */
              /* bump-normalized */
   343 |      ((aggr12 *)(*((char * *)this)))[$$CIV35] = ((aggr12 *)(*((char * *)__x)))[$$CIV35];
   341 |      $$CIV35 = $$CIV35 + 1ll;
            } while ((unsigned long long) $$CIV35 < (unsigned long long) ((((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll) / 12ll));    /* ~14 */
          lab_16:
    70 |    __cur = *((char * *)((char *)this + 8));
    73 |    if (!(*((char * *)((char *)__x + 8)) != ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll))) goto lab_17;
            $$CIVINIT25 = ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll);
            $$CIV25 = 0ll;
            do {   /* id=3 guarded */ /* ~18 */ 
              /* region = 29 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)*((char * *)((char *)this + 8))  + $$CIV25 * 12ll))) goto lab_19;
    12 |      ((int *)(*((char * *)((char *)this + 8))))[($$CIV25 * 12ll) / 4] = ((int *)$$CIVINIT25)[($$CIV25 * 12ll) / 4];
              ((int *)((char *)*((char * *)((char *)this + 8)) + 4))[($$CIV25 * 12ll) / 4] = ((int *)((char *)$$CIVINIT25 + 4))[($$CIV25 * 12ll) / 4];
              ((int *)((char *)*((char * *)((char *)this + 8)) + 8))[($$CIV25 * 12ll) / 4] = ((int *)((char *)$$CIVINIT25 + 8))[($$CIV25 * 12ll) / 4];
            lab_19:
    73 |      $$CIV25 = $$CIV25 + 1ll;
            } while ((unsigned long long) $$CIV25 < (unsigned long long) ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll)) / 12ll));    /* ~18 */
            __cur = ((char *)*((char * *)((char *)this + 8))  + ((*((char * *)((char *)__x + 8)) - ((char *)*((char * *)__x)  + ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 12ll) * 12ll)) / 12ll) * 12ll);
          lab_17:
   187 |  lab_13:
          lab_7:
   188 |    *((char * *)((char *)this + 8)) = ((char *)*((char * *)this)  + (long long) (__xlen * 12ull));
   189 |  lab_1:
   190 |    rstr = this;
            return rstr;
   191 |  } /* function */ 


   401 |  void MMSP::grid<2, unsigned long>::position(int) const(vector<int> *x, grid<2,unsigned long> *this, int i)
   402 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   403 |    $$PARM.this39A = x;
    33 |    *((int *)((char *)x + 8)) = 2;
            $$RET1A0 = operator new[](unsigned long)(8ull);
    34 |    *((char * *)$$PARM.this39A) = $$RET1A0;
   403 |    __es.__c4@3 = 1u;
   404 |    if (!1) goto lab_3;
            $$CIV36 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   405 |      n = i / ((int *)((char *)this + 56))[$$CIV36];
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__35 = 1;
    30 |      if ((int) $$CIV36 < *((int *)((char *)x + 8))) goto lab_15;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__35;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_15:
   406 |      ((int *)(*((char * *)x)))[$$CIV36] = ((int *)((char *)this + 40))[$$CIV36] + i / ((int *)((char *)this + 56))[$$CIV36];
   407 |      i = i + - (((int *)((char *)this + 56))[$$CIV36] * n);
   404 |      $$CIV36 = $$CIV36 + 1ll;
            } while ((unsigned long long) $$CIV36 < 2ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__35;
          lab_3:
   410 |    return;
          } /* function */ 


          void MMSP::vector<double>::__dftct()(vector<double> *this)
    11 |  {
            *((int *)((char *)this + 8)) = 0;
    12 |    *((char * *)this) = NULL;
    13 |    $$IRET128 = this;
            return;
          } /* function */ 


   401 |  void MMSP::grid<2, MMSP::vector<double> >::position(int) const(vector<int> *x, grid<2,MMSP::vector<double> > *this, int i)
   402 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   403 |    $$PARM.this394 = x;
    33 |    *((int *)((char *)x + 8)) = 2;
            $$RET1A0 = operator new[](unsigned long)(8ull);
    34 |    *((char * *)$$PARM.this394) = $$RET1A0;
   403 |    __es.__c4@3 = 1u;
   404 |    if (!1) goto lab_3;
            $$CIV37 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   405 |      n = i / ((int *)((char *)this + 56))[$$CIV37];
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__36 = 1;
    30 |      if ((int) $$CIV37 < *((int *)((char *)x + 8))) goto lab_15;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__36;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_15:
   406 |      ((int *)(*((char * *)x)))[$$CIV37] = ((int *)((char *)this + 40))[$$CIV37] + i / ((int *)((char *)this + 56))[$$CIV37];
   407 |      i = i + - (((int *)((char *)this + 56))[$$CIV37] * n);
   404 |      $$CIV37 = $$CIV37 + 1ll;
            } while ((unsigned long long) $$CIV37 < 2ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__36;
          lab_3:
   410 |    return;
          } /* function */ 


   413 |  void MMSP::grid<2, MMSP::vector<double> >::ghostswap()(char * this)
          {
   510 |    return;
          } /* function */ 


  1234 |  void MMSP::grid<2, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(grid<2,MMSP::vector<double> > *this, char * file, int GHOSTS)
  1235 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1245 |    std::istream::read(char*, long)(file,&blocks,4ll);
  1253 |    if (!(0 < blocks)) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 68 */
  1257 |      if (!1) goto lab_6;
              $$CIV38 = 0ll;
              do {   /* id=5 guarded */ /* ~4 */ 
                /* region = 67 */
                /* bump-normalized */
  1258 |        std::istream::read(char*, long)(file,((char *)&lmin + (4ll)*($$CIV38)),4ll);
  1259 |        std::istream::read(char*, long)(file,((char *)&lmax + (4ll)*($$CIV38)),4ll);
  1257 |        $$CIV38 = ($$CIV38 + 1);
              } while ((unsigned long long) $$CIV38 < 2ull);    /* ~4 */
            lab_6:
  1264 |      if (!1) goto lab_9;
              $$CIV39 = 0ll;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 66 */
                /* bump-normalized */
  1265 |        std::istream::read(char*, long)(file,((char *)&blo + (4ll)*($$CIV39)),4ll);
  1266 |        std::istream::read(char*, long)(file,((char *)&bhi + (4ll)*($$CIV39)),4ll);
  1264 |        $$CIV39 = ($$CIV39 + 1);
              } while ((unsigned long long) $$CIV39 < 2ull);    /* ~7 */
            lab_9:
  1271 |      std::istream::read(char*, long)(file,&size_in_mem,8ll);
  1272 |      std::istream::read(char*, long)(file,&size_on_disk,8ll);
  1277 |      overlap = 1u;
  1278 |      if (!1) goto lab_12;
              $$CIV3A = 0ll;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 65 */
                /* bump-normalized */
  1279 |        min[$$CIV3A] = max(((int *)((char *)this + 40))[$$CIV3A],lmin[$$CIV3A]);
  1280 |        max[$$CIV3A] = min(((int *)((char *)this + 48))[$$CIV3A],lmax[$$CIV3A]);
  1281 |        overlap = (max(((int *)((char *)this + 40))[$$CIV3A],lmin[$$CIV3A]) >= min(((int *)((char *)this + 48))[$$CIV3A],lmax[$$CIV3A]) ? 0u : overlap);
  1278 |        $$CIV3A = ($$CIV3A + 1);
              } while ((unsigned long long) $$CIV3A < 2ull);    /* ~10 */
            lab_12:
  1284 |      if (!(overlap != 0u)) goto lab_21;
  1289 |      buffer.rnnCD = operator new[](unsigned long)(size_on_disk);
  1290 |      std::istream::read(char*, long)(file,buffer.rnnCD,(long long) size_on_disk);
  1291 |      MMSP::grid<2, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(&GRID,*((int *)((char *)this + 16)),&lmin,&lmax,0,1u);
              __es.__c4@3 = 1u;
  1292 |      if (size_in_mem != size_on_disk) goto lab_45;
  1316 |      MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*)(&GRID,buffer.rnnCD);
  1317 |      operator delete[](void*)(buffer.rnnCD)
  1321 |      $$PARM.this348 = &GRID;
              $$PARM.min349 = &min;
              $$PARM.max34A = &max;
              $$PARM.p344 = &GRID->(grid<2,MMSP::vector<double> >).data@0.rns1345.$$1584;
              $$PARM.i345 = 0;
  1103 |      size = 0ull;
  1104 |      $$csx48 = $$PARM.i345 == 1;
              if (!$$csx48) goto lab_61;
  1105 |      if (!(min[(long long) $$PARM.i345] < max[(long long) $$PARM.i345])) goto lab_62;
              x = min[(long long) $$PARM.i345];
              $$csx49 = ((int *)((char *)$$PARM.this348 + 80))[(long long) $$PARM.i345];
              $$csx4A = ((int *)((char *)$$PARM.this348 + 64))[(long long) $$PARM.i345];
              do {   /* id=8 guarded */ /* ~63 */ 
                /* region = 60 */
                $$PARM.v340 = ((char *)$$PARM.p344  + (long long) ((x - $$csx4A) * $$csx49) * 16ll);
    97 |        $$IRET1B3 = (int) ((unsigned long long) *((int *)((char *)$$PARM.v340 + 8)) * 8ull + 4ull);
  1105 |        $$RET1CD = $$IRET1B3;
    79 |        $$IRET1B4 = $$RET1CD;
  1105 |        $$RET1BB = (unsigned long long) $$IRET1B4;
  1106 |        size = size + $$RET1BB;
  1105 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i345]);    /* ~63 */
            lab_62:
  1107 |      goto lab_66;
            lab_61:
              if (!($$PARM.i345 >= 0)) goto lab_67;
              if (!($$PARM.i345 < 2)) goto lab_67;
  1108 |      if (!(min[(long long) $$PARM.i345] < max[(long long) $$PARM.i345])) goto lab_68;
              x = min[(long long) $$PARM.i345];
              do {   /* id=9 guarded */ /* ~69 */ 
                /* region = 61 */
                $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const($$PARM.this348,((char *)$$PARM.p344  + (long long) ((x - ((int *)((char *)$$PARM.this348 + 64))[(long long) $$PARM.i345]) * ((int *)((char *)$$PARM.this348 + 80))[(long long) $$PARM.i345]) * 16ll),$$PARM.i345 + 1,$$PARM.min349,$$PARM.max34A);
  1109 |        size = size + $$RET1BC;
  1108 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i345]);    /* ~69 */
            lab_68:
  1110 |    lab_67:
            lab_66:
  1111 |      $$IRET1B7 = size;
  1321 |      $$RET19B = $$IRET1B7;
  1121 |      $$IRET1B8 = $$RET19B;
  1321 |      size = $$IRET1B8;
  1322 |      buffer.rnnCB = operator new[](unsigned long)(size);
  1323 |      $$PARM.this335 = &GRID;
              $$PARM.buffer336 = buffer.rnnCB;
              $$PARM.min337 = &min;
              $$PARM.max338 = &max;
              $$PARM.p331 = &GRID->(grid<2,MMSP::vector<double> >).data@0.rns1355.$$1586;
              $$PARM.i332 = 0;
  1138 |      size = 0ull;
  1139 |      if (!$$csx48) goto lab_50;
  1140 |      if (!(min[(long long) $$PARM.i332] < max[(long long) $$PARM.i332])) goto lab_51;
              x = min[(long long) $$PARM.i332];
              do {   /* id=6 guarded */ /* ~52 */ 
                /* region = 62 */
                $$PARM.v32B = ((char *)$$PARM.p331  + (long long) ((x - ((int *)((char *)$$PARM.this335 + 64))[(long long) $$PARM.i332]) * ((int *)((char *)$$PARM.this335 + 80))[(long long) $$PARM.i332]) * 16ll);
                $$PARM.buffer32C = ((char *)$$PARM.buffer336  + (long long) size);
                $$PARM.this327 = $$PARM.v32B;
                $$PARM.buffer328 = $$PARM.buffer32C;
   102 |        __builtin_memcpy($$PARM.buffer328,($$PARM.this327 + 8),4ull);
   103 |        __builtin_memcpy(((char *)$$PARM.buffer328  + 4ll),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
   104 |        $$IRET1AB = (int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull);
  1140 |        $$RET1CE = $$IRET1AB;
    82 |        $$IRET1AD = $$RET1CE;
  1140 |        $$RET1BD = (unsigned long long) $$IRET1AD;
  1141 |        size = size + $$RET1BD;
  1140 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i332]);    /* ~52 */
            lab_51:
  1142 |      goto lab_55;
            lab_50:
              if (!($$PARM.i332 >= 0)) goto lab_56;
              if (!($$PARM.i332 < 2)) goto lab_56;
  1143 |      if (!(min[(long long) $$PARM.i332] < max[(long long) $$PARM.i332])) goto lab_57;
              x = min[(long long) $$PARM.i332];
              do {   /* id=7 guarded */ /* ~58 */ 
                /* region = 63 */
                $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const($$PARM.this335,((char *)$$PARM.buffer336  + (long long) size),((char *)$$PARM.p331  + (long long) ((x - ((int *)((char *)$$PARM.this335 + 64))[(long long) $$PARM.i332]) * ((int *)((char *)$$PARM.this335 + 80))[(long long) $$PARM.i332]) * 16ll),$$PARM.i332 + 1,$$PARM.min337,$$PARM.max338);
  1144 |        size = size + $$RET1BE;
  1143 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i332]);    /* ~58 */
            lab_57:
  1145 |    lab_56:
            lab_55:
  1146 |      $$IRET1AF = size;
  1323 |      $$RET19D = $$IRET1AF;
  1133 |      $$IRET1B0 = $$RET19D;
  1324 |      MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(this,buffer.rnnCB,&min,&max);
  1325 |      operator delete[](void*)(buffer.rnnCB)
  1329 |      if (!1) goto lab_37;
              $$CIV3B = 0ll;
              do {   /* id=2 guarded */ /* ~35 */ 
                /* region = 64 */
                /* bump-normalized */
  1330 |        if (!(((int *)((char *)this + 40))[$$CIV3B] == lmin[$$CIV3B])) goto lab_38;
                ((int *)((char *)this + 88))[$$CIV3B] = blo[$$CIV3B];
              lab_38:
  1331 |        if (!(((int *)((char *)this + 48))[$$CIV3B] == lmax[$$CIV3B])) goto lab_40;
                ((int *)((char *)this + 96))[$$CIV3B] = bhi[$$CIV3B];
              lab_40:
  1329 |        $$CIV3B = ($$CIV3B + 1);
              } while ((unsigned long long) $$CIV3B < 2ull);    /* ~35 */
            lab_37:
  1333 |      __es.__c4@3 = 0u;
              $$PARM.this325 = &GRID;
   331 |      $$csx4B = &GRID->(grid<2,MMSP::vector<double> >).data@0.rns173.$$1589;
              if (!($$csx4B != NULL)) goto lab_48;
   332 |      __cxa_vec_delete3($$csx4B,16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |      &GRID->(grid<2,MMSP::vector<double> >).data@0.rns173.$$1589 = NULL;
   334 |    lab_48:
   335 |      $$IRET1A9 = $$PARM.this325;
  1333 |      goto lab_42;
            lab_21:
  1335 |      std::istream::seekg(long, std::_Ios_Seekdir)(file,(long long) size_on_disk,1);
  1336 |    lab_42:
  1253 |      i = i + 1;
            } while (i < blocks);    /* ~1 */
          lab_3:
  1342 |    goto lab_47;
  1292 |  lab_45:
   548 |    $$RET178 = (long long) __builtin_strlen("Unable to uncompress data: compiled without zlib.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"Unable to uncompress data: compiled without zlib.",$$RET178);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns835.(&std::cerr);
  1295 |    exit(1)
            return;
          lab_47:
            return;
  1342 |  } /* function */ 


  1801 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::write_buffer(char*&) const(char * this, char * *buf)
  1804 |  {
            $$PARM.p344 = *((char * *)this);
  1103 |    size = 0ull;
  1108 |    if (!(((int *)(this + 40))[0ll] < ((int *)(this + 48))[0ll])) goto lab_31;
            x = ((int *)(this + 40))[0ll];
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 24 */
              $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)$$PARM.p344  + (long long) ((x - ((int *)(this + 64))[0ll]) * ((int *)(this + 80))[0ll]) * 16ll),1,(this + 40),(this + 48));
  1109 |      size = size + $$RET1BC;
  1108 |      x = x + 1;
            } while (x < ((int *)(this + 48))[0ll]);    /* ~32 */
          lab_31:
  1804 |    size_in_mem = size;
  1807 |    size_on_disk = size;
  1811 |    header_size = 0ull;
  1812 |    if (!1) goto lab_3;
            $$CIV3D = 0ll;
            do {   /* id=3 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              header_size = header_size + 16ull;
              $$CIV3D = $$CIV3D + 1ll;
            } while ((unsigned long long) $$CIV3D < 2ull);    /* ~1 */
          lab_3:
  1819 |    $$RET179 = operator new[](unsigned long)(16ull + (header_size + size));
  1821 |    *buf = $$RET179;
  1822 |    dst = $$RET179;
  1826 |    if (!1) goto lab_6;
            $$CIV3E = 0ll;
            do {   /* id=2 guarded */ /* ~4 */ 
              /* region = 27 */
              /* bump-normalized */
  1828 |      __builtin_memcpy(((char *)$$RET179  + $$CIV3E * 8ll),((char *)this  + 40ll + (4ll)*($$CIV3E)),4ull);
  1831 |      __builtin_memcpy(((char *)$$RET179  + ($$CIV3E * 8ll + 4ll)),((char *)this  + 48ll + (4ll)*($$CIV3E)),4ull);
  1826 |      $$CIV3E = $$CIV3E + 1ll;
            } while ((unsigned long long) $$CIV3E < 2ull);    /* ~4 */
            dst = ((char *)$$RET179  + 16ll);
          lab_6:
  1836 |    if (!1) goto lab_9;
            $$CIV3F = 0ll;
            do {   /* id=1 guarded */ /* ~7 */ 
              /* region = 26 */
              /* bump-normalized */
  1838 |      __builtin_memcpy(((char *)dst  + $$CIV3F * 8ll),((char *)this  + 88ll + (4ll)*($$CIV3F)),4ull);
  1841 |      __builtin_memcpy(((char *)dst  + ($$CIV3F * 8ll + 4ll)),((char *)this  + 96ll + (4ll)*($$CIV3F)),4ull);
  1836 |      $$CIV3F = $$CIV3F + 1ll;
            } while ((unsigned long long) $$CIV3F < 2ull);    /* ~7 */
            dst = ((char *)dst  + 16ll);
          lab_9:
  1847 |    __builtin_memcpy(dst,&size_in_mem,8ull);
  1855 |    __builtin_memcpy(((char *)dst  + 8ll),&size_on_disk,8ull);
  1860 |    $$PARM.p331 = *((char * *)this);
  1138 |    size = 0ull;
  1143 |    if (!(((int *)(this + 40))[0ll] < ((int *)(this + 48))[0ll])) goto lab_19;
            x = ((int *)(this + 40))[0ll];
            do {   /* id=5 guarded */ /* ~20 */ 
              /* region = 25 */
              $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)dst  + (long long) (size + 16ull)),((char *)$$PARM.p331  + (long long) ((x - ((int *)(this + 64))[0ll]) * ((int *)(this + 80))[0ll]) * 16ll),1,(this + 40),(this + 48));
  1144 |      size = size + $$RET1BE;
  1143 |      x = x + 1;
            } while (x < ((int *)(this + 48))[0ll]);    /* ~20 */
          lab_19:
  1860 |    size_on_disk = size;
  1891 |    rstr = 16ull + (size + header_size);
            return rstr;
  1892 |  } /* function */ 


  1896 |  void MMSP::grid<2, MMSP::vector<double> >::swap(MMSP::grid<2, MMSP::vector<double> >&)(grid<2,MMSP::vector<double> > *this, grid<2,MMSP::vector<double> > *GRID)
  1899 |  {
            DATA = *((char * *)this);
  1900 |    *((char * *)this) = *((char * *)GRID);
  1901 |    *((char * *)GRID) = DATA;
  1904 |    NODES = *((int *)((char *)this + 8));
  1905 |    *((int *)((char *)this + 8)) = *((int *)((char *)GRID + 8));
  1906 |    *((int *)((char *)GRID + 8)) = NODES;
  1909 |    CELLS = *((int *)((char *)this + 12));
  1910 |    *((int *)((char *)this + 12)) = *((int *)((char *)GRID + 12));
  1911 |    *((int *)((char *)GRID + 12)) = CELLS;
  1914 |    FIELDS = *((int *)((char *)this + 16));
  1915 |    *((int *)((char *)this + 16)) = *((int *)((char *)GRID + 16));
  1916 |    *((int *)((char *)GRID + 16)) = FIELDS;
  1919 |    GHOSTS = *((int *)((char *)this + 20));
  1920 |    *((int *)((char *)this + 20)) = *((int *)((char *)GRID + 20));
  1921 |    *((int *)((char *)GRID + 20)) = GHOSTS;
  1924 |    if (!1) goto lab_3;
            $$CIV40 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
  1925 |      G0 = ((int *)((char *)this + 24))[$$CIV40];
  1926 |      ((int *)((char *)this + 24))[$$CIV40] = ((int *)((char *)GRID + 24))[$$CIV40];
  1927 |      ((int *)((char *)GRID + 24))[$$CIV40] = G0;
  1928 |      G1 = ((int *)((char *)this + 32))[$$CIV40];
  1929 |      ((int *)((char *)this + 32))[$$CIV40] = ((int *)((char *)GRID + 32))[$$CIV40];
  1930 |      ((int *)((char *)GRID + 32))[$$CIV40] = G1;
  1931 |      X0 = ((int *)((char *)this + 40))[$$CIV40];
  1932 |      ((int *)((char *)this + 40))[$$CIV40] = ((int *)((char *)GRID + 40))[$$CIV40];
  1933 |      ((int *)((char *)GRID + 40))[$$CIV40] = X0;
  1934 |      X1 = ((int *)((char *)this + 48))[$$CIV40];
  1935 |      ((int *)((char *)this + 48))[$$CIV40] = ((int *)((char *)GRID + 48))[$$CIV40];
  1936 |      ((int *)((char *)GRID + 48))[$$CIV40] = X1;
  1937 |      XX = ((int *)((char *)this + 56))[$$CIV40];
  1938 |      ((int *)((char *)this + 56))[$$CIV40] = ((int *)((char *)GRID + 56))[$$CIV40];
  1939 |      ((int *)((char *)GRID + 56))[$$CIV40] = XX;
  1940 |      S0 = ((int *)((char *)this + 64))[$$CIV40];
  1941 |      ((int *)((char *)this + 64))[$$CIV40] = ((int *)((char *)GRID + 64))[$$CIV40];
  1942 |      ((int *)((char *)GRID + 64))[$$CIV40] = S0;
  1943 |      S1 = ((int *)((char *)this + 72))[$$CIV40];
  1944 |      ((int *)((char *)this + 72))[$$CIV40] = ((int *)((char *)GRID + 72))[$$CIV40];
  1945 |      ((int *)((char *)GRID + 72))[$$CIV40] = S1;
  1946 |      SX = ((int *)((char *)this + 80))[$$CIV40];
  1947 |      ((int *)((char *)this + 80))[$$CIV40] = ((int *)((char *)GRID + 80))[$$CIV40];
  1948 |      ((int *)((char *)GRID + 80))[$$CIV40] = SX;
  1949 |      B0 = ((int *)((char *)this + 88))[$$CIV40];
  1950 |      ((int *)((char *)this + 88))[$$CIV40] = ((int *)((char *)GRID + 88))[$$CIV40];
  1951 |      ((int *)((char *)GRID + 88))[$$CIV40] = B0;
  1952 |      B1 = ((int *)((char *)this + 96))[$$CIV40];
  1953 |      ((int *)((char *)this + 96))[$$CIV40] = ((int *)((char *)GRID + 96))[$$CIV40];
  1954 |      ((int *)((char *)GRID + 96))[$$CIV40] = B1;
  1955 |      DX = ((double *)((char *)this + 104))[$$CIV40];
  1956 |      ((double *)((char *)this + 104))[$$CIV40] = ((double *)((char *)GRID + 104))[$$CIV40];
  1957 |      ((double *)((char *)GRID + 104))[$$CIV40] = DX;
  1958 |      P0 = ((int *)((char *)this + 120))[$$CIV40];
  1959 |      ((int *)((char *)this + 120))[$$CIV40] = ((int *)((char *)GRID + 120))[$$CIV40];
  1960 |      ((int *)((char *)GRID + 120))[$$CIV40] = P0;
  1961 |      P1 = ((int *)((char *)this + 128))[$$CIV40];
  1962 |      ((int *)((char *)this + 128))[$$CIV40] = ((int *)((char *)GRID + 128))[$$CIV40];
  1963 |      ((int *)((char *)GRID + 128))[$$CIV40] = P1;
  1964 |      SP = ((int *)((char *)this + 136))[$$CIV40];
  1965 |      ((int *)((char *)this + 136))[$$CIV40] = ((int *)((char *)GRID + 136))[$$CIV40];
  1966 |      ((int *)((char *)GRID + 136))[$$CIV40] = SP;
  1967 |      N0 = ((int *)((char *)this + 144))[$$CIV40];
  1968 |      ((int *)((char *)this + 144))[$$CIV40] = ((int *)((char *)GRID + 144))[$$CIV40];
  1969 |      ((int *)((char *)GRID + 144))[$$CIV40] = N0;
  1970 |      N1 = ((int *)((char *)this + 152))[$$CIV40];
  1971 |      ((int *)((char *)this + 152))[$$CIV40] = ((int *)((char *)GRID + 152))[$$CIV40];
  1972 |      ((int *)((char *)GRID + 152))[$$CIV40] = N1;
  1924 |      $$CIV40 = ($$CIV40 + 1);
            } while ((unsigned long long) $$CIV40 < 2ull);    /* ~1 */
          lab_3:
  1974 |    return;
          } /* function */ 


   131 |  int MMSP::vector<int>::length() const(vector<int> *this)
   133 |  {
            rstr = *((int *)((char *)this + 8));
            return rstr;
   134 |  } /* function */ 


   142 |  void MMSP::grid<1, MMSP::vector<double> >::setup(bool)(grid<1,MMSP::vector<double> > *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIV41 = 0ll;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 33 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 32))[$$CIV41] = ((int *)((char *)this + 24))[$$CIV41];
   147 |      ((int *)((char *)this + 36))[$$CIV41] = ((int *)((char *)this + 28))[$$CIV41];
   149 |      ((int *)((char *)this + 56))[$$CIV41] = 2;
   150 |      ((int *)((char *)this + 60))[$$CIV41] = 2;
   152 |      ((double *)((char *)this + 64))[$$CIV41] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 72))[$$CIV41] = 0;
   155 |      ((int *)((char *)this + 76))[$$CIV41] = 1;
   156 |      ((int *)((char *)this + 80))[$$CIV41] = 1;
   158 |      ((int *)((char *)this + 84))[$$CIV41] = 0;
   159 |      ((int *)((char *)this + 88))[$$CIV41] = 0;
   145 |      $$CIV41 = $$CIV41 + 1ll;
            } while ((unsigned long long) $$CIV41 < 1ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIV42 = 0ll;
            do {   /* id=4 guarded */ /* ~4 */ 
              /* region = 32 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 44))[$$CIV42] = ((int *)((char *)this + 32))[$$CIV42] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 48))[$$CIV42] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 36))[$$CIV42];
   301 |      $$CIV42 = $$CIV42 + 1ll;
            } while ((unsigned long long) $$CIV42 < 1ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_29;
            $$DCIV6 = 0ll;
            do {   /* id=6 guarded */ /* ~30 */ 
              /* region = 31 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 40))[$$DCIV6] = 1;
   306 |      ((int *)((char *)this + 52))[$$DCIV6] = 1;
   305 |      $$DCIV6 = $$DCIV6 + 1ll;
            } while ((unsigned long long) $$DCIV6 < 1ull);    /* ~30 */
          lab_29:
            if (!1) goto lab_31;
            $$DCIV7 = 0ll;
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 30 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIV7 + 1 < 1)) goto lab_33;
              $$DCIV8 = 0ll;
              $$SCREP4 = ((int *)((char *)this + 40))[$$DCIV7];
              $$SCREP5 = ((int *)((char *)this + 52))[$$DCIV7];
              do {   /* id=8 guarded */ /* ~34 */ 
                /* region = 28 */
                /* bump-normalized */
   310 |        $$SCREP4 = $$SCREP4 * (((int *)((char *)this + 36))[(long long) ((int) (1ll + ($$DCIV8 + $$DCIV7)))] - ((int *)((char *)this + 32))[(long long) ((int) (1ll + ($$DCIV8 + $$DCIV7)))]);
   309 |        $$SCREP5 = $$SCREP5 * (((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIV8 + $$DCIV7)))] - ((int *)((char *)this + 44))[(long long) ((int) (1ll + ($$DCIV8 + $$DCIV7)))]);
   308 |        $$DCIV8 = $$DCIV8 + 1ll;
              } while ((unsigned long long) $$DCIV8 < (unsigned long long) (- $$DCIV7));    /* ~34 */
              ((int *)((char *)this + 52))[$$DCIV7] = $$SCREP5;
              ((int *)((char *)this + 40))[$$DCIV7] = $$SCREP4;
            lab_33:
   305 |      $$DCIV7 = $$DCIV7 + 1ll;
            } while ((unsigned long long) $$DCIV7 < 1ull);    /* ~32 */
          lab_31:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 36))[0ll] - ((int *)((char *)this + 32))[0ll]) * ((int *)((char *)this + 40))[0ll];
            $$RET17A = __cxa_vec_new3((unsigned long long) ((((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]),16ll,8ll,&MMSP::vector<double>::__dftct(),&MMSP::vector<double>::~vector(),&operator new[](unsigned long),&operator delete[](void*));
   319 |    *((char * *)this) = $$RET17A;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_15;
            i = 0;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 29 */
   101 |      MMSP::vector<double>::resize(int)(((char *)*((char * *)this) + (16ll)*((long long) i)),*((int *)((char *)this + 16)))
   320 |      i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~13 */
          lab_15:
   326 |    return;
          } /* function */ 


   401 |  void MMSP::grid<1, MMSP::vector<double> >::position(int) const(vector<int> *x, grid<1,MMSP::vector<double> > *this, int i)
   402 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   403 |    $$PARM.this398 = x;
    33 |    *((int *)((char *)x + 8)) = 1;
            $$RET1A0 = operator new[](unsigned long)(4ull);
    34 |    *((char * *)$$PARM.this398) = $$RET1A0;
   403 |    __es.__c4@3 = 1u;
   404 |    if (!1) goto lab_3;
            $$CIV45 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   405 |      n = i / ((int *)((char *)this + 40))[$$CIV45];
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__37 = 1;
    30 |      if ((int) $$CIV45 < *((int *)((char *)x + 8))) goto lab_15;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__37;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_15:
   406 |      ((int *)(*((char * *)x)))[$$CIV45] = ((int *)((char *)this + 32))[$$CIV45] + i / ((int *)((char *)this + 40))[$$CIV45];
   407 |      i = i + - (((int *)((char *)this + 40))[$$CIV45] * n);
   404 |      $$CIV45 = $$CIV45 + 1ll;
            } while ((unsigned long long) $$CIV45 < 1ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__37;
          lab_3:
   410 |    return;
          } /* function */ 


   413 |  void MMSP::grid<1, MMSP::vector<double> >::ghostswap()(char * this)
          {
   510 |    return;
          } /* function */ 


  1234 |  void MMSP::grid<1, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(grid<1,MMSP::vector<double> > *this, char * file, int GHOSTS)
  1235 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1245 |    std::istream::read(char*, long)(file,&blocks,4ll);
  1253 |    if (!(0 < blocks)) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 105 */
  1257 |      if (!1) goto lab_6;
              $$CIV46 = 0ll;
              do {   /* id=5 guarded */ /* ~4 */ 
                /* region = 104 */
                /* bump-normalized */
  1258 |        std::istream::read(char*, long)(file,((char *)&lmin + (4ll)*($$CIV46)),4ll);
  1259 |        std::istream::read(char*, long)(file,((char *)&lmax + (4ll)*($$CIV46)),4ll);
  1257 |        $$CIV46 = ($$CIV46 + 1);
              } while ((unsigned long long) $$CIV46 < 1ull);    /* ~4 */
            lab_6:
  1264 |      if (!1) goto lab_9;
              $$CIV47 = 0ll;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 103 */
                /* bump-normalized */
  1265 |        std::istream::read(char*, long)(file,((char *)&blo + (4ll)*($$CIV47)),4ll);
  1266 |        std::istream::read(char*, long)(file,((char *)&bhi + (4ll)*($$CIV47)),4ll);
  1264 |        $$CIV47 = ($$CIV47 + 1);
              } while ((unsigned long long) $$CIV47 < 1ull);    /* ~7 */
            lab_9:
  1271 |      std::istream::read(char*, long)(file,&size_in_mem,8ll);
  1272 |      std::istream::read(char*, long)(file,&size_on_disk,8ll);
  1277 |      overlap = 1u;
  1278 |      if (!1) goto lab_12;
              $$CIV48 = 0ll;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 102 */
                /* bump-normalized */
  1279 |        min[$$CIV48] = max(((int *)((char *)this + 32))[$$CIV48],lmin[$$CIV48]);
  1280 |        max[$$CIV48] = min(((int *)((char *)this + 36))[$$CIV48],lmax[$$CIV48]);
  1281 |        overlap = (max(((int *)((char *)this + 32))[$$CIV48],lmin[$$CIV48]) >= min(((int *)((char *)this + 36))[$$CIV48],lmax[$$CIV48]) ? 0u : overlap);
  1278 |        $$CIV48 = ($$CIV48 + 1);
              } while ((unsigned long long) $$CIV48 < 1ull);    /* ~10 */
            lab_12:
  1284 |      if (!(overlap != 0u)) goto lab_21;
  1289 |      buffer.rnnF5 = operator new[](unsigned long)(size_on_disk);
  1290 |      std::istream::read(char*, long)(file,buffer.rnnF5,(long long) size_on_disk);
  1291 |      $$PARM.this42C = &GRID;
              $$PARM.FIELDS42D = *((int *)((char *)this + 16));
              $$PARM.GHOSTS430 = 0;
              $$PARM.SINGLE431 = 1u;
    25 |      &GRID->(grid<1,MMSP::vector<double> >).fields@10.rns1389.$$1614 = $$PARM.FIELDS42D;
    28 |      if (!1) goto lab_97;
              $$CIV6A = 0ll;
              do {   /* id=14 guarded */ /* ~98 */ 
                /* region = 101 */
                /* bump-normalized */
    29 |        ((int *)((char *)$$PARM.this42C + 24))[$$CIV6A] = lmin[$$CIV6A];
    30 |        ((int *)((char *)$$PARM.this42C + 28))[$$CIV6A] = lmax[$$CIV6A];
    28 |        $$CIV6A = ($$CIV6A + 1);
              } while ((unsigned long long) $$CIV6A < 1ull);    /* ~98 */
            lab_97:
    34 |      &GRID->(grid<1,MMSP::vector<double> >).ghosts@14.rns1392.$$1614 = 0;
    41 |      MMSP::grid<1, MMSP::vector<double> >::setup(bool)($$PARM.this42C,$$PARM.SINGLE431)
    42 |      $$IRET223 = $$PARM.this42C;
  1291 |      __es.__c4@3 = 1u;
  1292 |      if (size_in_mem != size_on_disk) goto lab_45;
  1316 |      $$PARM.this42A = &GRID;
              $$PARM.buffer42B = buffer.rnnF5;
              $$PARM.this426 = $$PARM.this42A;
              $$PARM.min428 = ($$PARM.this42A + 32);
              $$PARM.max429 = ($$PARM.this42A + 36);
              $$PARM.p41E = *((char * *)$$PARM.this426);
              $$PARM.i41F = 0;
  1161 |      size = 0ull;
  1162 |      $$csx4C = $$PARM.i41F == 0;
              if (!$$csx4C) goto lab_84;
  1163 |      if (!($$PARM.min428[(long long) $$PARM.i41F] < $$PARM.max429[(long long) $$PARM.i41F])) goto lab_85;
              x = $$PARM.min428[(long long) $$PARM.i41F];
              do {   /* id=12 guarded */ /* ~86 */ 
                /* region = 92 */
                $$PARM.v41A = ((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)$$PARM.this426 + 44))[(long long) $$PARM.i41F]) * ((int *)((char *)$$PARM.this426 + 52))[(long long) $$PARM.i41F]) * 16ll);
                $$PARM.buffer41B = ((char *)$$PARM.buffer42B  + (long long) size);
                $$PARM.this414 = $$PARM.v41A;
                $$PARM.buffer415 = $$PARM.buffer41B;
   109 |        $$csx4D = *((char * *)$$PARM.this414);
                if (!($$csx4D != NULL)) goto lab_87;
   110 |        operator delete[](void*)($$csx4D)
   111 |        *((char * *)$$PARM.this414) = NULL;
   112 |      lab_87:
   113 |        __builtin_memcpy(($$PARM.this414 + 8),$$PARM.buffer415,4ull);
                $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |        *((char * *)$$PARM.this414) = $$RET1D0;
   115 |        __builtin_memcpy($$RET1D0,((char *)$$PARM.buffer415  + 4ll),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   116 |        $$IRET21B = (int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull);
  1163 |        $$RET1CF = $$IRET21B;
    85 |        $$IRET21E = $$RET1CF;
  1163 |        $$RET1C5 = (unsigned long long) $$IRET21E;
  1164 |        size = size + $$RET1C5;
  1163 |        x = x + 1;
              } while (x < $$PARM.max429[(long long) $$PARM.i41F]);    /* ~86 */
            lab_85:
  1165 |      goto lab_90;
            lab_84:
              if (!($$PARM.i41F >= 0)) goto lab_91;
              if (!($$PARM.i41F < 1)) goto lab_91;
  1166 |      if (!($$PARM.min428[(long long) $$PARM.i41F] < $$PARM.max429[(long long) $$PARM.i41F])) goto lab_92;
              x = $$PARM.min428[(long long) $$PARM.i41F];
              do {   /* id=13 guarded */ /* ~93 */ 
                /* region = 93 */
                $$RET1C6 = MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)($$PARM.this426,((char *)$$PARM.buffer42B  + (long long) size),((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)$$PARM.this426 + 44))[(long long) $$PARM.i41F]) * ((int *)((char *)$$PARM.this426 + 52))[(long long) $$PARM.i41F]) * 16ll),$$PARM.i41F + 1,$$PARM.min428,$$PARM.max429);
  1167 |        size = size + $$RET1C6;
  1166 |        x = x + 1;
              } while (x < $$PARM.max429[(long long) $$PARM.i41F]);    /* ~93 */
            lab_92:
  1168 |    lab_91:
            lab_90:
  1169 |      $$IRET21F = size;
  1170 |      $$RET1A9 = $$IRET21F;
  1156 |      $$IRET221 = $$RET1A9;
  1316 |      $$RET1A8 = $$IRET221;
  1151 |      $$IRET222 = $$RET1A8;
  1317 |      operator delete[](void*)(buffer.rnnF5)
  1321 |      $$PARM.this3DD = &GRID;
              $$PARM.min3DE = &min;
              $$PARM.max3DF = &max;
              $$PARM.p3D9 = &GRID->(grid<1,MMSP::vector<double> >).data@0.rns1400.$$1621;
              $$PARM.i3DA = 0;
  1103 |      size = 0ull;
  1104 |      if (!$$csx4C) goto lab_59;
  1105 |      if (!(min[(long long) $$PARM.i3DA] < max[(long long) $$PARM.i3DA])) goto lab_60;
              x = min[(long long) $$PARM.i3DA];
              $$csx4E = ((int *)((char *)$$PARM.this3DD + 52))[(long long) $$PARM.i3DA];
              $$csx4F = ((int *)((char *)$$PARM.this3DD + 44))[(long long) $$PARM.i3DA];
              do {   /* id=8 guarded */ /* ~61 */ 
                /* region = 94 */
                $$PARM.v341 = ((char *)$$PARM.p3D9  + (long long) ((x - $$csx4F) * $$csx4E) * 16ll);
    97 |        $$IRET1B3 = (int) ((unsigned long long) *((int *)((char *)$$PARM.v341 + 8)) * 8ull + 4ull);
  1105 |        $$RET1CD = $$IRET1B3;
    79 |        $$IRET1B5 = $$RET1CD;
  1105 |        $$RET1C1 = (unsigned long long) $$IRET1B5;
  1106 |        size = size + $$RET1C1;
  1105 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i3DA]);    /* ~61 */
            lab_60:
  1107 |      goto lab_64;
            lab_59:
              if (!($$PARM.i3DA >= 0)) goto lab_65;
              if (!($$PARM.i3DA < 1)) goto lab_65;
  1108 |      if (!(min[(long long) $$PARM.i3DA] < max[(long long) $$PARM.i3DA])) goto lab_66;
              x = min[(long long) $$PARM.i3DA];
              do {   /* id=9 guarded */ /* ~67 */ 
                /* region = 95 */
                $$RET1C2 = MMSP::grid<1, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const($$PARM.this3DD,((char *)$$PARM.p3D9  + (long long) ((x - ((int *)((char *)$$PARM.this3DD + 44))[(long long) $$PARM.i3DA]) * ((int *)((char *)$$PARM.this3DD + 52))[(long long) $$PARM.i3DA]) * 16ll),$$PARM.i3DA + 1,$$PARM.min3DE,$$PARM.max3DF);
  1109 |        size = size + $$RET1C2;
  1108 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i3DA]);    /* ~67 */
            lab_66:
  1110 |    lab_65:
            lab_64:
  1111 |      $$IRET1FB = size;
  1321 |      $$RET1A5 = $$IRET1FB;
  1121 |      $$IRET1FC = $$RET1A5;
  1321 |      size = $$IRET1FC;
  1322 |      buffer.rnnF3 = operator new[](unsigned long)(size);
  1323 |      $$PARM.this3CE = &GRID;
              $$PARM.buffer3CF = buffer.rnnF3;
              $$PARM.min3D0 = &min;
              $$PARM.max3D1 = &max;
              $$PARM.p3CA = &GRID->(grid<1,MMSP::vector<double> >).data@0.rns1410.$$1623;
              $$PARM.i3CB = 0;
  1138 |      size = 0ull;
  1139 |      if (!$$csx4C) goto lab_48;
  1140 |      if (!(min[(long long) $$PARM.i3CB] < max[(long long) $$PARM.i3CB])) goto lab_49;
              x = min[(long long) $$PARM.i3CB];
              do {   /* id=6 guarded */ /* ~50 */ 
                /* region = 96 */
                $$PARM.v32D = ((char *)$$PARM.p3CA  + (long long) ((x - ((int *)((char *)$$PARM.this3CE + 44))[(long long) $$PARM.i3CB]) * ((int *)((char *)$$PARM.this3CE + 52))[(long long) $$PARM.i3CB]) * 16ll);
                $$PARM.buffer32E = ((char *)$$PARM.buffer3CF  + (long long) size);
                $$PARM.this327 = $$PARM.v32D;
                $$PARM.buffer328 = $$PARM.buffer32E;
   102 |        __builtin_memcpy($$PARM.buffer328,($$PARM.this327 + 8),4ull);
   103 |        __builtin_memcpy(((char *)$$PARM.buffer328  + 4ll),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
   104 |        $$IRET1AB = (int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull);
  1140 |        $$RET1CE = $$IRET1AB;
    82 |        $$IRET1AE = $$RET1CE;
  1140 |        $$RET1C3 = (unsigned long long) $$IRET1AE;
  1141 |        size = size + $$RET1C3;
  1140 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i3CB]);    /* ~50 */
            lab_49:
  1142 |      goto lab_53;
            lab_48:
              if (!($$PARM.i3CB >= 0)) goto lab_54;
              if (!($$PARM.i3CB < 1)) goto lab_54;
  1143 |      if (!(min[(long long) $$PARM.i3CB] < max[(long long) $$PARM.i3CB])) goto lab_55;
              x = min[(long long) $$PARM.i3CB];
              do {   /* id=7 guarded */ /* ~56 */ 
                /* region = 97 */
                $$RET1C4 = MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const($$PARM.this3CE,((char *)$$PARM.buffer3CF  + (long long) size),((char *)$$PARM.p3CA  + (long long) ((x - ((int *)((char *)$$PARM.this3CE + 44))[(long long) $$PARM.i3CB]) * ((int *)((char *)$$PARM.this3CE + 52))[(long long) $$PARM.i3CB]) * 16ll),$$PARM.i3CB + 1,$$PARM.min3D0,$$PARM.max3D1);
  1144 |        size = size + $$RET1C4;
  1143 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i3CB]);    /* ~56 */
            lab_55:
  1145 |    lab_54:
            lab_53:
  1146 |      $$IRET1F7 = size;
  1323 |      $$RET1A7 = $$IRET1F7;
  1133 |      $$IRET1F8 = $$RET1A7;
  1324 |      $$PARM.buffer423 = buffer.rnnF3;
              $$PARM.min424 = &min;
              $$PARM.max425 = &max;
              $$PARM.p41E = *((char * *)this);
              $$PARM.i41F = 0;
  1161 |      size = 0ull;
  1162 |      if (!$$csx4C) goto lab_72;
  1163 |      if (!(min[(long long) $$PARM.i41F] < max[(long long) $$PARM.i41F])) goto lab_73;
              x = min[(long long) $$PARM.i41F];
              do {   /* id=10 guarded */ /* ~74 */ 
                /* region = 98 */
                $$PARM.v41A = ((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)this + 44))[(long long) $$PARM.i41F]) * ((int *)((char *)this + 52))[(long long) $$PARM.i41F]) * 16ll);
                $$PARM.buffer41B = ((char *)$$PARM.buffer423  + (long long) size);
                $$PARM.this414 = $$PARM.v41A;
                $$PARM.buffer415 = $$PARM.buffer41B;
   109 |        $$csx50 = *((char * *)$$PARM.this414);
                if (!($$csx50 != NULL)) goto lab_75;
   110 |        operator delete[](void*)($$csx50)
   111 |        *((char * *)$$PARM.this414) = NULL;
   112 |      lab_75:
   113 |        __builtin_memcpy(($$PARM.this414 + 8),$$PARM.buffer415,4ull);
                $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |        *((char * *)$$PARM.this414) = $$RET1D0;
   115 |        __builtin_memcpy($$RET1D0,((char *)$$PARM.buffer415  + 4ll),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   116 |        $$IRET21B = (int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull);
  1163 |        $$RET1CF = $$IRET21B;
    85 |        $$IRET21E = $$RET1CF;
  1163 |        $$RET1C5 = (unsigned long long) $$IRET21E;
  1164 |        size = size + $$RET1C5;
  1163 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i41F]);    /* ~74 */
            lab_73:
  1165 |      goto lab_78;
            lab_72:
              if (!($$PARM.i41F >= 0)) goto lab_79;
              if (!($$PARM.i41F < 1)) goto lab_79;
  1166 |      if (!(min[(long long) $$PARM.i41F] < max[(long long) $$PARM.i41F])) goto lab_80;
              x = min[(long long) $$PARM.i41F];
              do {   /* id=11 guarded */ /* ~81 */ 
                /* region = 99 */
                $$RET1C6 = MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,((char *)$$PARM.buffer423  + (long long) size),((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)this + 44))[(long long) $$PARM.i41F]) * ((int *)((char *)this + 52))[(long long) $$PARM.i41F]) * 16ll),$$PARM.i41F + 1,$$PARM.min424,$$PARM.max425);
  1167 |        size = size + $$RET1C6;
  1166 |        x = x + 1;
              } while (x < max[(long long) $$PARM.i41F]);    /* ~81 */
            lab_80:
  1168 |    lab_79:
            lab_78:
  1169 |      $$IRET21F = size;
  1324 |      $$RET1A9 = $$IRET21F;
  1156 |      $$IRET220 = $$RET1A9;
  1325 |      operator delete[](void*)(buffer.rnnF3)
  1329 |      if (!1) goto lab_37;
              $$CIV49 = 0ll;
              do {   /* id=2 guarded */ /* ~35 */ 
                /* region = 100 */
                /* bump-normalized */
  1330 |        if (!(((int *)((char *)this + 32))[$$CIV49] == lmin[$$CIV49])) goto lab_38;
                ((int *)((char *)this + 56))[$$CIV49] = blo[$$CIV49];
              lab_38:
  1331 |        if (!(((int *)((char *)this + 36))[$$CIV49] == lmax[$$CIV49])) goto lab_40;
                ((int *)((char *)this + 60))[$$CIV49] = bhi[$$CIV49];
              lab_40:
  1329 |        $$CIV49 = ($$CIV49 + 1);
              } while ((unsigned long long) $$CIV49 < 1ull);    /* ~35 */
            lab_37:
  1333 |      __es.__c4@3 = 0u;
              $$PARM.this406 = &GRID;
   331 |      $$csx51 = &GRID->(grid<1,MMSP::vector<double> >).data@0.rns216.$$1626;
              if (!($$csx51 != NULL)) goto lab_70;
   332 |      __cxa_vec_delete3($$csx51,16ll,8ll,&MMSP::vector<double>::~vector(),&operator delete[](void*))
   333 |      &GRID->(grid<1,MMSP::vector<double> >).data@0.rns216.$$1626 = NULL;
   334 |    lab_70:
   335 |      $$IRET214 = $$PARM.this406;
  1333 |      goto lab_42;
            lab_21:
  1335 |      std::istream::seekg(long, std::_Ios_Seekdir)(file,(long long) size_on_disk,1);
  1336 |    lab_42:
  1253 |      i = i + 1;
            } while (i < blocks);    /* ~1 */
          lab_3:
  1342 |    goto lab_47;
  1292 |  lab_45:
   548 |    $$RET17C = (long long) __builtin_strlen("Unable to uncompress data: compiled without zlib.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"Unable to uncompress data: compiled without zlib.",$$RET17C);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns939.(&std::cerr);
  1295 |    exit(1)
            return;
          lab_47:
            return;
  1342 |  } /* function */ 


  1801 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::write_buffer(char*&) const(char * this, char * *buf)
  1103 |  {
            size = 0ull;
  1105 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_25;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=6 guarded */ /* ~26 */ 
              /* region = 24 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)*((char * *)this) + 8))[((long long) (((int *)(this + 52))[0ll] * (x - ((int *)(this + 44))[0ll])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~26 */
          lab_25:
  1804 |    size_in_mem = size;
  1807 |    size_on_disk = size;
  1811 |    header_size = 0ull;
  1812 |    if (!1) goto lab_3;
            $$CIV4B = 0ll;
            do {   /* id=3 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              header_size = header_size + 16ull;
              $$CIV4B = $$CIV4B + 1ll;
            } while ((unsigned long long) $$CIV4B < 1ull);    /* ~1 */
          lab_3:
  1819 |    $$RET17D = operator new[](unsigned long)(16ull + (header_size + size));
  1821 |    *buf = $$RET17D;
  1822 |    dst = $$RET17D;
  1826 |    if (!1) goto lab_6;
            $$CIV4C = 0ll;
            do {   /* id=2 guarded */ /* ~4 */ 
              /* region = 27 */
              /* bump-normalized */
  1828 |      __builtin_memcpy(((char *)$$RET17D  + $$CIV4C * 8ll),((char *)this  + 32ll + (4ll)*($$CIV4C)),4ull);
  1831 |      __builtin_memcpy(((char *)$$RET17D  + ($$CIV4C * 8ll + 4ll)),((char *)this  + 36ll + (4ll)*($$CIV4C)),4ull);
  1826 |      $$CIV4C = $$CIV4C + 1ll;
            } while ((unsigned long long) $$CIV4C < 1ull);    /* ~4 */
            dst = ((char *)$$RET17D  + 8ll);
          lab_6:
  1836 |    if (!1) goto lab_9;
            $$CIV4D = 0ll;
            do {   /* id=1 guarded */ /* ~7 */ 
              /* region = 26 */
              /* bump-normalized */
  1838 |      __builtin_memcpy(((char *)dst  + $$CIV4D * 8ll),((char *)this  + 56ll + (4ll)*($$CIV4D)),4ull);
  1841 |      __builtin_memcpy(((char *)dst  + ($$CIV4D * 8ll + 4ll)),((char *)this  + 60ll + (4ll)*($$CIV4D)),4ull);
  1836 |      $$CIV4D = $$CIV4D + 1ll;
            } while ((unsigned long long) $$CIV4D < 1ull);    /* ~7 */
            dst = ((char *)dst  + 8ll);
          lab_9:
  1847 |    __builtin_memcpy(dst,&size_in_mem,8ull);
  1855 |    __builtin_memcpy(((char *)dst  + 8ll),&size_on_disk,8ull);
  1860 |    $$PARM.p3CA = *((char * *)this);
  1138 |    size = 0ull;
  1140 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_13;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=4 guarded */ /* ~14 */ 
              /* region = 25 */
              $$PARM.this327 = ((char *)$$PARM.p3CA  + (long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll);
   102 |      __builtin_memcpy(((char *)dst  + (long long) (size + 16ull)),(((char *)$$PARM.p3CA  + (long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)dst  + (long long) (size + 20ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~14 */
          lab_13:
  1860 |    size_on_disk = size;
  1891 |    rstr = 16ull + (size + header_size);
            return rstr;
  1892 |  } /* function */ 


  1896 |  void MMSP::grid<1, MMSP::vector<double> >::swap(MMSP::grid<1, MMSP::vector<double> >&)(grid<1,MMSP::vector<double> > *this, grid<1,MMSP::vector<double> > *GRID)
  1899 |  {
            DATA = *((char * *)this);
  1900 |    *((char * *)this) = *((char * *)GRID);
  1901 |    *((char * *)GRID) = DATA;
  1904 |    NODES = *((int *)((char *)this + 8));
  1905 |    *((int *)((char *)this + 8)) = *((int *)((char *)GRID + 8));
  1906 |    *((int *)((char *)GRID + 8)) = NODES;
  1909 |    CELLS = *((int *)((char *)this + 12));
  1910 |    *((int *)((char *)this + 12)) = *((int *)((char *)GRID + 12));
  1911 |    *((int *)((char *)GRID + 12)) = CELLS;
  1914 |    FIELDS = *((int *)((char *)this + 16));
  1915 |    *((int *)((char *)this + 16)) = *((int *)((char *)GRID + 16));
  1916 |    *((int *)((char *)GRID + 16)) = FIELDS;
  1919 |    GHOSTS = *((int *)((char *)this + 20));
  1920 |    *((int *)((char *)this + 20)) = *((int *)((char *)GRID + 20));
  1921 |    *((int *)((char *)GRID + 20)) = GHOSTS;
  1924 |    if (!1) goto lab_3;
            $$CIV4E = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
  1925 |      G0 = ((int *)((char *)this + 24))[$$CIV4E];
  1926 |      ((int *)((char *)this + 24))[$$CIV4E] = ((int *)((char *)GRID + 24))[$$CIV4E];
  1927 |      ((int *)((char *)GRID + 24))[$$CIV4E] = G0;
  1928 |      G1 = ((int *)((char *)this + 28))[$$CIV4E];
  1929 |      ((int *)((char *)this + 28))[$$CIV4E] = ((int *)((char *)GRID + 28))[$$CIV4E];
  1930 |      ((int *)((char *)GRID + 28))[$$CIV4E] = G1;
  1931 |      X0 = ((int *)((char *)this + 32))[$$CIV4E];
  1932 |      ((int *)((char *)this + 32))[$$CIV4E] = ((int *)((char *)GRID + 32))[$$CIV4E];
  1933 |      ((int *)((char *)GRID + 32))[$$CIV4E] = X0;
  1934 |      X1 = ((int *)((char *)this + 36))[$$CIV4E];
  1935 |      ((int *)((char *)this + 36))[$$CIV4E] = ((int *)((char *)GRID + 36))[$$CIV4E];
  1936 |      ((int *)((char *)GRID + 36))[$$CIV4E] = X1;
  1937 |      XX = ((int *)((char *)this + 40))[$$CIV4E];
  1938 |      ((int *)((char *)this + 40))[$$CIV4E] = ((int *)((char *)GRID + 40))[$$CIV4E];
  1939 |      ((int *)((char *)GRID + 40))[$$CIV4E] = XX;
  1940 |      S0 = ((int *)((char *)this + 44))[$$CIV4E];
  1941 |      ((int *)((char *)this + 44))[$$CIV4E] = ((int *)((char *)GRID + 44))[$$CIV4E];
  1942 |      ((int *)((char *)GRID + 44))[$$CIV4E] = S0;
  1943 |      S1 = ((int *)((char *)this + 48))[$$CIV4E];
  1944 |      ((int *)((char *)this + 48))[$$CIV4E] = ((int *)((char *)GRID + 48))[$$CIV4E];
  1945 |      ((int *)((char *)GRID + 48))[$$CIV4E] = S1;
  1946 |      SX = ((int *)((char *)this + 52))[$$CIV4E];
  1947 |      ((int *)((char *)this + 52))[$$CIV4E] = ((int *)((char *)GRID + 52))[$$CIV4E];
  1948 |      ((int *)((char *)GRID + 52))[$$CIV4E] = SX;
  1949 |      B0 = ((int *)((char *)this + 56))[$$CIV4E];
  1950 |      ((int *)((char *)this + 56))[$$CIV4E] = ((int *)((char *)GRID + 56))[$$CIV4E];
  1951 |      ((int *)((char *)GRID + 56))[$$CIV4E] = B0;
  1952 |      B1 = ((int *)((char *)this + 60))[$$CIV4E];
  1953 |      ((int *)((char *)this + 60))[$$CIV4E] = ((int *)((char *)GRID + 60))[$$CIV4E];
  1954 |      ((int *)((char *)GRID + 60))[$$CIV4E] = B1;
  1955 |      DX = ((double *)((char *)this + 64))[$$CIV4E];
  1956 |      ((double *)((char *)this + 64))[$$CIV4E] = ((double *)((char *)GRID + 64))[$$CIV4E];
  1957 |      ((double *)((char *)GRID + 64))[$$CIV4E] = DX;
  1958 |      P0 = ((int *)((char *)this + 72))[$$CIV4E];
  1959 |      ((int *)((char *)this + 72))[$$CIV4E] = ((int *)((char *)GRID + 72))[$$CIV4E];
  1960 |      ((int *)((char *)GRID + 72))[$$CIV4E] = P0;
  1961 |      P1 = ((int *)((char *)this + 76))[$$CIV4E];
  1962 |      ((int *)((char *)this + 76))[$$CIV4E] = ((int *)((char *)GRID + 76))[$$CIV4E];
  1963 |      ((int *)((char *)GRID + 76))[$$CIV4E] = P1;
  1964 |      SP = ((int *)((char *)this + 80))[$$CIV4E];
  1965 |      ((int *)((char *)this + 80))[$$CIV4E] = ((int *)((char *)GRID + 80))[$$CIV4E];
  1966 |      ((int *)((char *)GRID + 80))[$$CIV4E] = SP;
  1967 |      N0 = ((int *)((char *)this + 84))[$$CIV4E];
  1968 |      ((int *)((char *)this + 84))[$$CIV4E] = ((int *)((char *)GRID + 84))[$$CIV4E];
  1969 |      ((int *)((char *)GRID + 84))[$$CIV4E] = N0;
  1970 |      N1 = ((int *)((char *)this + 88))[$$CIV4E];
  1971 |      ((int *)((char *)this + 88))[$$CIV4E] = ((int *)((char *)GRID + 88))[$$CIV4E];
  1972 |      ((int *)((char *)GRID + 88))[$$CIV4E] = N1;
  1924 |      $$CIV4E = ($$CIV4E + 1);
            } while ((unsigned long long) $$CIV4E < 1ull);    /* ~1 */
          lab_3:
  1974 |    return;
          } /* function */ 


   142 |  void MMSP::grid<3, MMSP::vector<double> >::setup(bool)(grid<3,MMSP::vector<double> > *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIV4F = 0ll;
            do {   /* id=5 guarded */ /* ~1 */ 
              /* region = 33 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 48))[$$CIV4F] = ((int *)((char *)this + 24))[$$CIV4F];
   147 |      ((int *)((char *)this + 60))[$$CIV4F] = ((int *)((char *)this + 36))[$$CIV4F];
   149 |      ((int *)((char *)this + 120))[$$CIV4F] = 2;
   150 |      ((int *)((char *)this + 132))[$$CIV4F] = 2;
   152 |      ((double *)((char *)this + 144))[$$CIV4F] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 168))[$$CIV4F] = 0;
   155 |      ((int *)((char *)this + 180))[$$CIV4F] = 1;
   156 |      ((int *)((char *)this + 192))[$$CIV4F] = 1;
   158 |      ((int *)((char *)this + 204))[$$CIV4F] = 0;
   159 |      ((int *)((char *)this + 216))[$$CIV4F] = 0;
   145 |      $$CIV4F = $$CIV4F + 1ll;
            } while ((unsigned long long) $$CIV4F < 3ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIV50 = 0ll;
            do {   /* id=4 guarded */ /* ~4 */ 
              /* region = 32 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 84))[$$CIV50] = ((int *)((char *)this + 48))[$$CIV50] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 96))[$$CIV50] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 60))[$$CIV50];
   301 |      $$CIV50 = $$CIV50 + 1ll;
            } while ((unsigned long long) $$CIV50 < 3ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_29;
            $$DCIV9 = 0ll;
            do {   /* id=6 guarded */ /* ~30 */ 
              /* region = 31 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 72))[$$DCIV9] = 1;
   306 |      ((int *)((char *)this + 108))[$$DCIV9] = 1;
   305 |      $$DCIV9 = $$DCIV9 + 1ll;
            } while ((unsigned long long) $$DCIV9 < 3ull);    /* ~30 */
          lab_29:
            if (!1) goto lab_31;
            $$DCIVA = 0ll;
            do {   /* id=7 guarded */ /* ~32 */ 
              /* region = 30 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIVA + 1 < 3)) goto lab_33;
              $$DCIVB = 0ll;
              $$SCREP6 = ((int *)((char *)this + 72))[$$DCIVA];
              $$SCREP7 = ((int *)((char *)this + 108))[$$DCIVA];
              do {   /* id=8 guarded */ /* ~34 */ 
                /* region = 28 */
                /* bump-normalized */
   310 |        $$SCREP6 = $$SCREP6 * (((int *)((char *)this + 60))[(long long) ((int) (1ll + ($$DCIVB + $$DCIVA)))] - ((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIVB + $$DCIVA)))]);
   309 |        $$SCREP7 = $$SCREP7 * (((int *)((char *)this + 96))[(long long) ((int) (1ll + ($$DCIVB + $$DCIVA)))] - ((int *)((char *)this + 84))[(long long) ((int) (1ll + ($$DCIVB + $$DCIVA)))]);
   308 |        $$DCIVB = $$DCIVB + 1ll;
              } while ((unsigned long long) $$DCIVB < (unsigned long long) (2ll - $$DCIVA));    /* ~34 */
              ((int *)((char *)this + 108))[$$DCIVA] = $$SCREP7;
              ((int *)((char *)this + 72))[$$DCIVA] = $$SCREP6;
            lab_33:
   305 |      $$DCIVA = $$DCIVA + 1ll;
            } while ((unsigned long long) $$DCIVA < 3ull);    /* ~32 */
          lab_31:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 96))[0ll] - ((int *)((char *)this + 84))[0ll]) * ((int *)((char *)this + 108))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 60))[0ll] - ((int *)((char *)this + 48))[0ll]) * ((int *)((char *)this + 72))[0ll];
            $$RET17E = __cxa_vec_new3((unsigned long long) ((((int *)((char *)this + 96))[0ll] - ((int *)((char *)this + 84))[0ll]) * ((int *)((char *)this + 108))[0ll]),16ll,8ll,&MMSP::vector<double>::__dftct(),&MMSP::vector<double>::~vector(),&operator new[](unsigned long),&operator delete[](void*));
   319 |    *((char * *)this) = $$RET17E;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_15;
            i = 0;
            do {   /* id=1 guarded */ /* ~13 */ 
              /* region = 29 */
   101 |      MMSP::vector<double>::resize(int)(((char *)*((char * *)this) + (16ll)*((long long) i)),*((int *)((char *)this + 16)))
   320 |      i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~13 */
          lab_15:
   326 |    return;
          } /* function */ 


   401 |  void MMSP::grid<3, MMSP::vector<double> >::position(int) const(vector<int> *x, grid<3,MMSP::vector<double> > *this, int i)
   402 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   403 |    $$PARM.this396 = x;
    33 |    *((int *)((char *)x + 8)) = 3;
            $$RET1A0 = operator new[](unsigned long)(12ull);
    34 |    *((char * *)$$PARM.this396) = $$RET1A0;
   403 |    __es.__c4@3 = 1u;
   404 |    if (!1) goto lab_3;
            $$CIV53 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   405 |      n = i / ((int *)((char *)this + 72))[$$CIV53];
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__38 = 1;
    30 |      if ((int) $$CIV53 < *((int *)((char *)x + 8))) goto lab_15;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__38;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_15:
   406 |      ((int *)(*((char * *)x)))[$$CIV53] = ((int *)((char *)this + 48))[$$CIV53] + i / ((int *)((char *)this + 72))[$$CIV53];
   407 |      i = i + - (((int *)((char *)this + 72))[$$CIV53] * n);
   404 |      $$CIV53 = $$CIV53 + 1ll;
            } while ((unsigned long long) $$CIV53 < 3ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__38;
          lab_3:
   410 |    return;
          } /* function */ 


   413 |  void MMSP::grid<3, MMSP::vector<double> >::ghostswap()(char * this)
          {
   510 |    return;
          } /* function */ 


  1234 |  void MMSP::grid<3, MMSP::vector<double> >::read(std::basic_ifstream<char, std::char_traits<char> >&, int)(grid<3,MMSP::vector<double> > *this, char * file, int GHOSTS)
  1235 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
  1245 |    std::istream::read(char*, long)(file,&blocks,4ll);
  1253 |    if (!(0 < blocks)) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 38 */
  1257 |      if (!1) goto lab_6;
              $$CIV54 = 0ll;
              do {   /* id=5 guarded */ /* ~4 */ 
                /* region = 37 */
                /* bump-normalized */
  1258 |        std::istream::read(char*, long)(file,((char *)&lmin + (4ll)*($$CIV54)),4ll);
  1259 |        std::istream::read(char*, long)(file,((char *)&lmax + (4ll)*($$CIV54)),4ll);
  1257 |        $$CIV54 = $$CIV54 + 1ll;
              } while ((unsigned long long) $$CIV54 < 3ull);    /* ~4 */
            lab_6:
  1264 |      if (!1) goto lab_9;
              $$CIV55 = 0ll;
              do {   /* id=4 guarded */ /* ~7 */ 
                /* region = 36 */
                /* bump-normalized */
  1265 |        std::istream::read(char*, long)(file,((char *)&blo + (4ll)*($$CIV55)),4ll);
  1266 |        std::istream::read(char*, long)(file,((char *)&bhi + (4ll)*($$CIV55)),4ll);
  1264 |        $$CIV55 = $$CIV55 + 1ll;
              } while ((unsigned long long) $$CIV55 < 3ull);    /* ~7 */
            lab_9:
  1271 |      std::istream::read(char*, long)(file,&size_in_mem,8ll);
  1272 |      std::istream::read(char*, long)(file,&size_on_disk,8ll);
  1277 |      overlap = 1u;
  1278 |      if (!1) goto lab_12;
              __alignx(32,((char *)&min + (4ll)*(0ll)))
              __alignx(32,((char *)&lmin + (4ll)*(0ll)))
              __alignx(32,((char *)&max + (4ll)*(0ll)))
              __alignx(32,((char *)&lmax + (4ll)*(0ll)))
              $$CIV56 = 0ll;
              do {   /* id=3 guarded */ /* ~10 */ 
                /* region = 35 */
                /* bump-normalized */
  1279 |        min[$$CIV56] = max(((int *)((char *)this + 48))[$$CIV56],lmin[$$CIV56]);
  1280 |        max[$$CIV56] = min(((int *)((char *)this + 60))[$$CIV56],lmax[$$CIV56]);
  1281 |        overlap = (max(((int *)((char *)this + 48))[$$CIV56],lmin[$$CIV56]) >= min(((int *)((char *)this + 60))[$$CIV56],lmax[$$CIV56]) ? 0u : overlap);
  1278 |        $$CIV56 = $$CIV56 + 1ll;
              } while ((unsigned long long) $$CIV56 < 3ull);    /* ~10 */
            lab_12:
  1284 |      if (!(overlap != 0u)) goto lab_21;
  1289 |      buffer.rnn11D = operator new[](unsigned long)(size_on_disk);
  1290 |      std::istream::read(char*, long)(file,buffer.rnn11D,(long long) size_on_disk);
  1291 |      MMSP::grid<3, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(&GRID,*((int *)((char *)this + 16)),&lmin,&lmax,0,1u);
              __es.__c4@3 = 1u;
  1292 |      if (size_in_mem != size_on_disk) goto lab_45;
  1316 |      MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*)(&GRID,buffer.rnn11D);
  1317 |      operator delete[](void*)(buffer.rnn11D)
  1321 |      size = MMSP::grid<3, MMSP::vector<double> >::buffer_size(int const*, int const*) const(&GRID,&min,&max);
  1322 |      buffer.rnn11B = operator new[](unsigned long)(size);
  1323 |      MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(&GRID,buffer.rnn11B,&min,&max);
  1324 |      MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(this,buffer.rnn11B,&min,&max);
  1325 |      operator delete[](void*)(buffer.rnn11B)
  1329 |      if (!1) goto lab_37;
              $$CIV57 = 0ll;
              do {   /* id=2 guarded */ /* ~35 */ 
                /* region = 34 */
                /* bump-normalized */
  1330 |        if (!(((int *)((char *)this + 48))[$$CIV57] == lmin[$$CIV57])) goto lab_38;
                ((int *)((char *)this + 120))[$$CIV57] = blo[$$CIV57];
              lab_38:
  1331 |        if (!(((int *)((char *)this + 60))[$$CIV57] == lmax[$$CIV57])) goto lab_40;
                ((int *)((char *)this + 132))[$$CIV57] = bhi[$$CIV57];
              lab_40:
  1329 |        $$CIV57 = $$CIV57 + 1ll;
              } while ((unsigned long long) $$CIV57 < 3ull);    /* ~35 */
            lab_37:
  1333 |      __es.__c4@3 = 0u;
              MMSP::grid<3, MMSP::vector<double> >::~grid()(&GRID);
              goto lab_42;
            lab_21:
  1335 |      std::istream::seekg(long, std::_Ios_Seekdir)(file,(long long) size_on_disk,1);
  1336 |    lab_42:
  1253 |      i = i + 1;
            } while (i < blocks);    /* ~1 */
          lab_3:
  1342 |    goto lab_47;
  1292 |  lab_45:
   548 |    $$RET180 = (long long) __builtin_strlen("Unable to uncompress data: compiled without zlib.");
   510 |    std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)(&std::cerr,"Unable to uncompress data: compiled without zlib.",$$RET180);
   113 |    &std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)->(std::basic_ostream<char,std::char_traits<char> > &(basic_ostream<char,std::char_traits<char> > &)).rns1037.(&std::cerr);
  1295 |    exit(1)
            return;
          lab_47:
            return;
  1342 |  } /* function */ 


  1801 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::write_buffer(char*&) const(char * this, char * *buf)
  1804 |  {
            size_in_mem = MMSP::grid<3, MMSP::vector<double> >::buffer_size() const(this);
  1807 |    size_on_disk = size_in_mem;
  1811 |    header_size = 0ull;
  1812 |    if (!1) goto lab_3;
            $$CIV59 = 0ll;
            do {   /* id=3 guarded */ /* ~1 */ 
              /* region = 18 */
              /* bump-normalized */
              header_size = header_size + 16ull;
              $$CIV59 = $$CIV59 + 1ll;
            } while ((unsigned long long) $$CIV59 < 3ull);    /* ~1 */
          lab_3:
  1819 |    $$RET181 = operator new[](unsigned long)(16ull + (header_size + size_in_mem));
  1821 |    *buf = $$RET181;
  1822 |    dst = $$RET181;
  1826 |    if (!1) goto lab_6;
            $$CIV5A = 0ll;
            do {   /* id=2 guarded */ /* ~4 */ 
              /* region = 17 */
              /* bump-normalized */
  1828 |      __builtin_memcpy(((char *)$$RET181  + $$CIV5A * 8ll),((char *)this  + 48ll + (4ll)*($$CIV5A)),4ull);
  1831 |      __builtin_memcpy(((char *)$$RET181  + ($$CIV5A * 8ll + 4ll)),((char *)this  + 60ll + (4ll)*($$CIV5A)),4ull);
  1826 |      $$CIV5A = $$CIV5A + 1ll;
            } while ((unsigned long long) $$CIV5A < 3ull);    /* ~4 */
            dst = ((char *)$$RET181  + 24ll);
          lab_6:
  1836 |    if (!1) goto lab_9;
            $$CIV5B = 0ll;
            do {   /* id=1 guarded */ /* ~7 */ 
              /* region = 16 */
              /* bump-normalized */
  1838 |      __builtin_memcpy(((char *)dst  + $$CIV5B * 8ll),((char *)this  + 120ll + (4ll)*($$CIV5B)),4ull);
  1841 |      __builtin_memcpy(((char *)dst  + ($$CIV5B * 8ll + 4ll)),((char *)this  + 132ll + (4ll)*($$CIV5B)),4ull);
  1836 |      $$CIV5B = $$CIV5B + 1ll;
            } while ((unsigned long long) $$CIV5B < 3ull);    /* ~7 */
            dst = ((char *)dst  + 24ll);
          lab_9:
  1847 |    __builtin_memcpy(dst,&size_in_mem,8ull);
  1855 |    __builtin_memcpy(((char *)dst  + 8ll),&size_on_disk,8ull);
  1860 |    size_on_disk = MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*) const(this,((char *)dst  + 16ll));
  1891 |    rstr = 16ull + (size_on_disk + header_size);
            return rstr;
  1892 |  } /* function */ 


  1896 |  void MMSP::grid<3, MMSP::vector<double> >::swap(MMSP::grid<3, MMSP::vector<double> >&)(grid<3,MMSP::vector<double> > *this, grid<3,MMSP::vector<double> > *GRID)
  1899 |  {
            DATA = *((char * *)this);
  1900 |    *((char * *)this) = *((char * *)GRID);
  1901 |    *((char * *)GRID) = DATA;
  1904 |    NODES = *((int *)((char *)this + 8));
  1905 |    *((int *)((char *)this + 8)) = *((int *)((char *)GRID + 8));
  1906 |    *((int *)((char *)GRID + 8)) = NODES;
  1909 |    CELLS = *((int *)((char *)this + 12));
  1910 |    *((int *)((char *)this + 12)) = *((int *)((char *)GRID + 12));
  1911 |    *((int *)((char *)GRID + 12)) = CELLS;
  1914 |    FIELDS = *((int *)((char *)this + 16));
  1915 |    *((int *)((char *)this + 16)) = *((int *)((char *)GRID + 16));
  1916 |    *((int *)((char *)GRID + 16)) = FIELDS;
  1919 |    GHOSTS = *((int *)((char *)this + 20));
  1920 |    *((int *)((char *)this + 20)) = *((int *)((char *)GRID + 20));
  1921 |    *((int *)((char *)GRID + 20)) = GHOSTS;
  1924 |    if (!1) goto lab_3;
            $$CIV5C = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
  1925 |      G0 = ((int *)((char *)this + 24))[$$CIV5C];
  1926 |      ((int *)((char *)this + 24))[$$CIV5C] = ((int *)((char *)GRID + 24))[$$CIV5C];
  1927 |      ((int *)((char *)GRID + 24))[$$CIV5C] = G0;
  1928 |      G1 = ((int *)((char *)this + 36))[$$CIV5C];
  1929 |      ((int *)((char *)this + 36))[$$CIV5C] = ((int *)((char *)GRID + 36))[$$CIV5C];
  1930 |      ((int *)((char *)GRID + 36))[$$CIV5C] = G1;
  1931 |      X0 = ((int *)((char *)this + 48))[$$CIV5C];
  1932 |      ((int *)((char *)this + 48))[$$CIV5C] = ((int *)((char *)GRID + 48))[$$CIV5C];
  1933 |      ((int *)((char *)GRID + 48))[$$CIV5C] = X0;
  1934 |      X1 = ((int *)((char *)this + 60))[$$CIV5C];
  1935 |      ((int *)((char *)this + 60))[$$CIV5C] = ((int *)((char *)GRID + 60))[$$CIV5C];
  1936 |      ((int *)((char *)GRID + 60))[$$CIV5C] = X1;
  1937 |      XX = ((int *)((char *)this + 72))[$$CIV5C];
  1938 |      ((int *)((char *)this + 72))[$$CIV5C] = ((int *)((char *)GRID + 72))[$$CIV5C];
  1939 |      ((int *)((char *)GRID + 72))[$$CIV5C] = XX;
  1940 |      S0 = ((int *)((char *)this + 84))[$$CIV5C];
  1941 |      ((int *)((char *)this + 84))[$$CIV5C] = ((int *)((char *)GRID + 84))[$$CIV5C];
  1942 |      ((int *)((char *)GRID + 84))[$$CIV5C] = S0;
  1943 |      S1 = ((int *)((char *)this + 96))[$$CIV5C];
  1944 |      ((int *)((char *)this + 96))[$$CIV5C] = ((int *)((char *)GRID + 96))[$$CIV5C];
  1945 |      ((int *)((char *)GRID + 96))[$$CIV5C] = S1;
  1946 |      SX = ((int *)((char *)this + 108))[$$CIV5C];
  1947 |      ((int *)((char *)this + 108))[$$CIV5C] = ((int *)((char *)GRID + 108))[$$CIV5C];
  1948 |      ((int *)((char *)GRID + 108))[$$CIV5C] = SX;
  1949 |      B0 = ((int *)((char *)this + 120))[$$CIV5C];
  1950 |      ((int *)((char *)this + 120))[$$CIV5C] = ((int *)((char *)GRID + 120))[$$CIV5C];
  1951 |      ((int *)((char *)GRID + 120))[$$CIV5C] = B0;
  1952 |      B1 = ((int *)((char *)this + 132))[$$CIV5C];
  1953 |      ((int *)((char *)this + 132))[$$CIV5C] = ((int *)((char *)GRID + 132))[$$CIV5C];
  1954 |      ((int *)((char *)GRID + 132))[$$CIV5C] = B1;
  1955 |      DX = ((double *)((char *)this + 144))[$$CIV5C];
  1956 |      ((double *)((char *)this + 144))[$$CIV5C] = ((double *)((char *)GRID + 144))[$$CIV5C];
  1957 |      ((double *)((char *)GRID + 144))[$$CIV5C] = DX;
  1958 |      P0 = ((int *)((char *)this + 168))[$$CIV5C];
  1959 |      ((int *)((char *)this + 168))[$$CIV5C] = ((int *)((char *)GRID + 168))[$$CIV5C];
  1960 |      ((int *)((char *)GRID + 168))[$$CIV5C] = P0;
  1961 |      P1 = ((int *)((char *)this + 180))[$$CIV5C];
  1962 |      ((int *)((char *)this + 180))[$$CIV5C] = ((int *)((char *)GRID + 180))[$$CIV5C];
  1963 |      ((int *)((char *)GRID + 180))[$$CIV5C] = P1;
  1964 |      SP = ((int *)((char *)this + 192))[$$CIV5C];
  1965 |      ((int *)((char *)this + 192))[$$CIV5C] = ((int *)((char *)GRID + 192))[$$CIV5C];
  1966 |      ((int *)((char *)GRID + 192))[$$CIV5C] = SP;
  1967 |      N0 = ((int *)((char *)this + 204))[$$CIV5C];
  1968 |      ((int *)((char *)this + 204))[$$CIV5C] = ((int *)((char *)GRID + 204))[$$CIV5C];
  1969 |      ((int *)((char *)GRID + 204))[$$CIV5C] = N0;
  1970 |      N1 = ((int *)((char *)this + 216))[$$CIV5C];
  1971 |      ((int *)((char *)this + 216))[$$CIV5C] = ((int *)((char *)GRID + 216))[$$CIV5C];
  1972 |      ((int *)((char *)GRID + 216))[$$CIV5C] = N1;
  1924 |      $$CIV5C = ($$CIV5C + 1);
            } while ((unsigned long long) $$CIV5C < 3ull);    /* ~1 */
          lab_3:
  1974 |    return;
          } /* function */ 


          char * DistanceVoxel_PriorityQueue::~DistanceVoxel_PriorityQueue()(char * this)
          {
            __es.__l@0 = 2;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
            __es.__c4@3 = 1u;
   614 |    $$PARM.__x3A7 = ((char * *)((char *)this + 24 + 8))[8 / 8];
   968 |    if (!(((char * *)((char *)this + 24 + 8))[8 / 8] != NULL)) goto lab_8;
            do {   /* id=1 guarded */ /* ~9 */ 
              /* region = 10 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)((this + 24),*((char * *)((char *)$$PARM.__x3A7 + 24)))
   509 |      __y = *((char * *)((char *)$$PARM.__x3A7 + 16));
    95 |      operator delete(void*)($$PARM.__x3A7)
   973 |      $$PARM.__x3A7 = __y;
   968 |    } while (__y != NULL);    /* ~9 */
          lab_8:
            __es.__c4@3 = 0u;
            $$csx52 = *((char * *)this);
   145 |    if (!($$csx52 != NULL)) goto lab_2;
    95 |    operator delete(void*)($$csx52)
   110 |  lab_2:
            rstr = this;
            return rstr;
          } /* function */ 


   168 |  void void MMSP::resize<unsigned long>(unsigned long&, int)(char * value, int n)
          {
   170 |    return;
          } /* function */ 


    26 |  int int MMSP::fields<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(grid<2,MMSP::vector<double> > *GRID)
    28 |  {
            rstr = *((int *)((char *)GRID + 16));
            return rstr;
    29 |  } /* function */ 


    34 |  int int MMSP::g0<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   283 |  {
            rstr = ((int *)((char *)GRID + 24))[(long long) i];
            return rstr;
    37 |  } /* function */ 


    38 |  int int MMSP::g1<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   287 |  {
            rstr = ((int *)((char *)GRID + 32))[(long long) i];
            return rstr;
    41 |  } /* function */ 


    42 |  int int MMSP::b0<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   291 |  {
            rstr = ((int *)((char *)GRID + 88))[(long long) i];
            return rstr;
    45 |  } /* function */ 


    46 |  int int MMSP::b1<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   295 |  {
            rstr = ((int *)((char *)GRID + 96))[(long long) i];
            return rstr;
    49 |  } /* function */ 


    80 |  double double MMSP::dx<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&, int)(grid<2,MMSP::vector<double> > *GRID, int i)
   329 |  {
            rstr = ((double *)((char *)GRID + 104))[(long long) i];
            return rstr;
    83 |  } /* function */ 


   100 |  void void MMSP::resize<double>(MMSP::vector<double>&, int)(char * v, int n)
   101 |  {
            MMSP::vector<double>::resize(int)(v,n)
   102 |    return;
          } /* function */ 


   588 |  void std::string MMSP::name<2, MMSP::vector<double> >(MMSP::grid<2, MMSP::vector<double> > const&)(char * __classReturn, char * GRID)
   589 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__19800,"grid:",&__19802);
            __es.__c4@3 = 1u;
            $$PARM.this220 = &__19803;
    11 |    &__19803->(vector<double>).size@8.rns1372.$$1682 = 0;
    12 |    &__19803->(vector<double>).data@0.rns1373.$$1682 = NULL;
    13 |    $$IRET125 = $$PARM.this220;
   101 |    __es.__c4@3 = 2u;
            std::string MMSP::name<double>(MMSP::vector<double> const&)(&__19805,&__19803)
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(__classReturn,&__19800,&__19805)
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19805);
            __es.__c4@3 = 1u;
            $$PARM.this350 = &__19803;
    47 |    if (!(&__19803->(vector<double>).data@0.rns408.$$1686 != NULL)) goto lab_5;
    48 |    operator delete[](void*)(&__19803->(vector<double>).data@0.rns408.$$1686)
    49 |    &__19803->(vector<double>).data@0.rns408.$$1686 = NULL;
    50 |  lab_5:
    51 |    $$IRET1BC = $$PARM.this350;
   101 |    __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19800);
   591 |    return;
          } /* function */ 


    26 |  int int MMSP::fields<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&)(grid<1,MMSP::vector<double> > *GRID)
    28 |  {
            rstr = *((int *)((char *)GRID + 16));
            return rstr;
    29 |  } /* function */ 


    34 |  int int MMSP::g0<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   283 |  {
            rstr = ((int *)((char *)GRID + 24))[(long long) i];
            return rstr;
    37 |  } /* function */ 


    38 |  int int MMSP::g1<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   287 |  {
            rstr = ((int *)((char *)GRID + 28))[(long long) i];
            return rstr;
    41 |  } /* function */ 


    42 |  int int MMSP::b0<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   291 |  {
            rstr = ((int *)((char *)GRID + 56))[(long long) i];
            return rstr;
    45 |  } /* function */ 


    46 |  int int MMSP::b1<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   295 |  {
            rstr = ((int *)((char *)GRID + 60))[(long long) i];
            return rstr;
    49 |  } /* function */ 


    80 |  double double MMSP::dx<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&, int)(grid<1,MMSP::vector<double> > *GRID, int i)
   329 |  {
            rstr = ((double *)((char *)GRID + 64))[(long long) i];
            return rstr;
    83 |  } /* function */ 


   588 |  void std::string MMSP::name<1, MMSP::vector<double> >(MMSP::grid<1, MMSP::vector<double> > const&)(char * __classReturn, char * GRID)
   589 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__19871,"grid:",&__19873);
            __es.__c4@3 = 1u;
            $$PARM.this222 = &__19874;
    11 |    &__19874->(vector<double>).size@8.rns1372.$$1689 = 0;
    12 |    &__19874->(vector<double>).data@0.rns1373.$$1689 = NULL;
    13 |    $$IRET127 = $$PARM.this222;
   101 |    __es.__c4@3 = 2u;
            std::string MMSP::name<double>(MMSP::vector<double> const&)(&__19876,&__19874)
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(__classReturn,&__19871,&__19876)
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19876);
            __es.__c4@3 = 1u;
            $$PARM.this34F = &__19874;
    47 |    if (!(&__19874->(vector<double>).data@0.rns408.$$1693 != NULL)) goto lab_5;
    48 |    operator delete[](void*)(&__19874->(vector<double>).data@0.rns408.$$1693)
    49 |    &__19874->(vector<double>).data@0.rns408.$$1693 = NULL;
    50 |  lab_5:
    51 |    $$IRET1BB = $$PARM.this34F;
   101 |    __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19871);
   591 |    return;
          } /* function */ 


    26 |  int int MMSP::fields<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(grid<3,MMSP::vector<double> > *GRID)
    28 |  {
            rstr = *((int *)((char *)GRID + 16));
            return rstr;
    29 |  } /* function */ 


    34 |  int int MMSP::g0<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   283 |  {
            rstr = ((int *)((char *)GRID + 24))[(long long) i];
            return rstr;
    37 |  } /* function */ 


    38 |  int int MMSP::g1<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   287 |  {
            rstr = ((int *)((char *)GRID + 36))[(long long) i];
            return rstr;
    41 |  } /* function */ 


    42 |  int int MMSP::b0<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   291 |  {
            rstr = ((int *)((char *)GRID + 120))[(long long) i];
            return rstr;
    45 |  } /* function */ 


    46 |  int int MMSP::b1<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   295 |  {
            rstr = ((int *)((char *)GRID + 132))[(long long) i];
            return rstr;
    49 |  } /* function */ 


    80 |  double double MMSP::dx<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&, int)(grid<3,MMSP::vector<double> > *GRID, int i)
   329 |  {
            rstr = ((double *)((char *)GRID + 144))[(long long) i];
            return rstr;
    83 |  } /* function */ 


   588 |  void std::string MMSP::name<3, MMSP::vector<double> >(MMSP::grid<3, MMSP::vector<double> > const&)(char * __classReturn, char * GRID)
   589 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__19942,"grid:",&__19944);
            __es.__c4@3 = 1u;
            $$PARM.this221 = &__19945;
    11 |    &__19945->(vector<double>).size@8.rns1372.$$1696 = 0;
    12 |    &__19945->(vector<double>).data@0.rns1373.$$1696 = NULL;
    13 |    $$IRET126 = $$PARM.this221;
   101 |    __es.__c4@3 = 2u;
            std::string MMSP::name<double>(MMSP::vector<double> const&)(&__19947,&__19945)
            __es.__c4@3 = 3u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(__classReturn,&__19942,&__19947)
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19947);
            __es.__c4@3 = 1u;
            $$PARM.this351 = &__19945;
    47 |    if (!(&__19945->(vector<double>).data@0.rns408.$$1700 != NULL)) goto lab_5;
    48 |    operator delete[](void*)(&__19945->(vector<double>).data@0.rns408.$$1700)
    49 |    &__19945->(vector<double>).data@0.rns408.$$1700 = NULL;
    50 |  lab_5:
    51 |    $$IRET1BD = $$PARM.this351;
   101 |    __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__19942);
   591 |    return;
          } /* function */ 


    67 |  char * std::vector<Point<int>, std::allocator<Point<int> > >* std::__uninitialized_copy<false>::uninitialized_copy<std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*>(std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*, std::vector<Point<int>, std::allocator<Point<int> > >*)(char * __first, char * __last, _Vector_impl *__result)
    69 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    70 |    __cur = __result;
    72 |    __es.__c4@3 = 1u;
    73 |    if (!(__first != __last)) goto lab_5;
            $$CIVFINAL5D = (unsigned long long) ((__last - __first) / 24ll);
            $$CIV5D = 0ll;
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 20 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV5D * 24ll))) goto lab_7;
    74 |      std::vector<Point<int>, std::allocator<Point<int> > >::vector(std::vector<Point<int>, std::allocator<Point<int> > > const&)(((char *)__result  + $$CIV5D * 24ll),((char *)__first  + $$CIV5D * 24ll));
              goto __20044;
              goto __20045;
            lab_7:
    73 |      $$CIV5D = $$CIV5D + 1ll;
            } while ((unsigned long long) $$CIV5D < $$CIVFINAL5D);    /* ~3 */
            __cur = ((char *)__result  + ((__last - __first) / 24ll) * 24ll);
          lab_5:
    76 |    __es.__c4@3 = 0u;
            rstr = __cur;
            return rstr;
    79 |    /* GLAB  id_no=5600{__20045} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __20048 = __int_register_value(29u);
            _Unwind_Resume((char *) __20048)
            /* GLAB  id_no=5594{__20044} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __20047 = __int_register_value(29u);
            __cxa_begin_catch((char *) __20047)
   113 |    if (!(0ll != $$CIV5D * 24ll)) goto lab_12;
            $$CIV5E = 0ll;
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 19 */
              /* bump-normalized */
   145 |      if (!(((char * *)__result)[($$CIV5E * 24ll) / 8] != NULL)) goto lab_16;
    95 |      operator delete(void*)(((char * *)__result)[($$CIV5E * 24ll) / 8])
   110 |    lab_16:
    92 |      $$CIV5E = $$CIV5E + 1ll;
            } while ((unsigned long long) $$CIV5E < (unsigned long long) (($$CIV5D * 24ll) / 24ll));    /* ~10 */
          lab_12:
    81 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
    83 |    return rstr;
          } /* function */ 


    45 |  char * MMSP::grid<2, DistanceVoxel>::grid(int, ...)(grid<2,DistanceVoxel> *this, int FIELDS)
    48 |  {
            *((int *)((char *)this + 16)) = FIELDS;
            $$RET182 = (unsigned long long) __builtinParameterAddress(&FIELDS);
    53 |    if (!1) goto lab_3;
    52 |    list = (char *) ($$RET182 + 11ull & 18446744073709551608ull);
    53 |    $$CIV5F = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    54 |      ((int *)((char *)this + 24))[$$CIV5F] = (((int *)(((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll))) + -4ll / 4)[0ll];
    55 |      list = ((char *)(char *) ((unsigned long long) ((char *)(char *) ((unsigned long long) list + 7ull & 18446744073709551608ull)  + 8ll) + 7ull & 18446744073709551608ull)  + 8ll);
              ((int *)((char *)this + 32))[$$CIV5F] = (list + -4ll / 4)[0ll];
    53 |      $$CIV5F = $$CIV5F + 1ll;
            } while ((unsigned long long) $$CIV5F < 2ull);    /* ~1 */
          lab_3:
    61 |    *((int *)((char *)this + 20)) = 0;
    68 |    MMSP::grid<2, DistanceVoxel>::setup(bool)(this,0u)
    69 |    rstr = this;
            return rstr;
          } /* function */ 


   329 |  char * MMSP::grid<2, DistanceVoxel>::~grid()(grid<2,DistanceVoxel> *this)
   331 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   332 |    operator delete[](void*)(*((char * *)this))
   333 |    *((char * *)this) = NULL;
   334 |  lab_1:
   335 |    rstr = this;
            return rstr;
          } /* function */ 


   374 |  char * MMSP::grid<2, DistanceVoxel>::operator()(MMSP::vector<int>) const(grid<2,DistanceVoxel> *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV60 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__39 = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.iC3 = (int) $$CIV60;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__39 = 1;
    30 |      if ($$PARM.iC3 < *((int *)((char *)x + 8))) goto lab_19;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__39;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$csx53 = (long long) $$PARM.iC3;
              $$IRET52 = ((char *)*((char * *)x) + (4ll)*($$csx53));
   377 |      $$RET183 = $$IRET52;
   378 |      $$PARM.x23 = $$RET183;
              $$PARM.x024 = ((int *)((char *)this + 40))[$$CIV60];
              $$PARM.x125 = ((int *)((char *)this + 48))[$$CIV60];
              $$PARM.b026 = ((int *)((char *)this + 88))[$$CIV60];
              $$PARM.b127 = ((int *)((char *)this + 96))[$$CIV60];
    44 |      if (!(*$$PARM.x23 < $$PARM.x024)) goto lab_4;
    45 |      if ($$PARM.b026 == 1) goto lab_5;
              if (!($$PARM.b026 == 4)) goto lab_6;
            lab_5:
              *$$PARM.x23 = $$PARM.x024;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b026 == 2)) goto lab_8;
              *$$PARM.x23 = *$$PARM.x23 + ($$PARM.x125 - $$PARM.x024);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b026 == 0)) goto lab_16;
              *$$PARM.x23 = $$PARM.x024 * 2 - *$$PARM.x23;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.x23 >= $$PARM.x125)) goto lab_16;
    51 |      if ($$PARM.b127 == 1) goto lab_10;
              if (!($$PARM.b127 == 4)) goto lab_11;
            lab_10:
              *$$PARM.x23 = $$PARM.x125 - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b127 == 2)) goto lab_13;
              *$$PARM.x23 = *$$PARM.x23 + ($$PARM.x024 - $$PARM.x125);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b127 == 0)) goto lab_16;
              *$$PARM.x23 = ($$PARM.x125 * 2 - *$$PARM.x23) - 2;
    57 |    lab_16:
   378 |      $$PARM.iC1 = (int) $$CIV60;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__39 = 1;
    30 |      if ($$PARM.iC1 < *((int *)((char *)x + 8))) goto lab_17;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__39;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$IRET51 = ((char *)*((char * *)x) + (4ll)*($$csx53));
   378 |      $$RET184 = $$IRET51;
   379 |      p = ((char *)p  + (long long) ((*$$RET184 - ((int *)((char *)this + 64))[$$CIV60]) * ((int *)((char *)this + 80))[$$CIV60]) * 24ll);
   377 |      $$CIV60 = ($$CIV60 + 1);
            } while ((unsigned long long) $$CIV60 < 2ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__39;
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


   384 |  char * MMSP::grid<2, DistanceVoxel>::operator()(int) const(grid<2,DistanceVoxel> *this, int i)
   398 |  {
            rstr = ((char *)*((char * *)this) + (24ll)*((long long) i));
            return rstr;
   399 |  } /* function */ 


    58 |  void MMSP::vector<int> getPosition<2, int>(Point<int> const&)(vector<int> *answer, Point<int> *p)
    59 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    60 |    __20067 = 0;
            $$PARM.this21D = answer;
    39 |    *((int *)((char *)answer + 8)) = 2;
            $$RET1B3 = operator new[](unsigned long)(8ull);
    40 |    *((char * *)$$PARM.this21D) = $$RET1B3;
    41 |    if (!(0 < *((int *)((char *)$$PARM.this21D + 8)))) goto lab_8;
            i = 0;
            do {   /* id=1 guarded */ /* ~9 */ 
              /* region = 13 */
    42 |      $$RET1B3[(long long) i] = __20067;
    41 |      i = i + 1;
            } while (i < *((int *)((char *)$$PARM.this21D + 8)));    /* ~9 */
          lab_8:
    60 |    __es.__c4@3 = 1u;
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (0 < *((int *)((char *)answer + 8))) goto lab_6;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_6:
    61 |    $$csx54 = *((char * *)answer);
            ((int *)$$csx54)[0ll] = *((int *)p);
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (1 < *((int *)((char *)answer + 8))) goto lab_4;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_4:
    62 |    ((int *)$$csx54)[1ll] = *((int *)((char *)p + 4));
    65 |    return;
          } /* function */ 


   571 |  void void MMSP::propagate_distance<2>(DistanceVoxel const*, MMSP::grid<2, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(DistanceVoxel *core_voxel, char * grid, char * queue)
   572 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    72 |    x = *((int *)core_voxel);
    73 |    y = *((int *)((char *)core_voxel + 4));
    11 |    __20073.x@0 = *((int *)core_voxel);
            __20073.y@4 = *((int *)((char *)core_voxel + 4));
            __20073.z@8 = 0;
            MMSP::vector<int> getPosition<2, int>(Point<int> const&)(&position,&__20073)
            __es.__c4@3 = 1u;
   577 |    $$RET13A = &position->(vector<int>).size@8.rns899.$$1250$$1721;
    17 |    &__20075->(vector<int>).size@8.rns397.$$1721 = &position->(vector<int>).size@8.rns899.$$1250$$1721;
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    &__20075->(vector<int>).data@0.rns398.$$1721 = $$RET13B;
    19 |    if (!(0 < &__20075->(vector<int>).size@8.rns397.$$1721)) goto lab_185;
            i = 0;
            do {   /* id=16 guarded */ /* ~186 */ 
              /* region = 287 */
    33 |      $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3A = 1;
    34 |      if (i < &position->(vector<int>).size@8.rns896.$$1252$$1721) goto lab_187;
              MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3A;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_187:
    20 |      $$RET13B[(long long) i] = ((int *)&position->(vector<int>).data@0.rns897.$$1252$$1721)[(long long) i];
    19 |      i = i + 1;
            } while (i < &__20075->(vector<int>).size@8.rns397.$$1721);    /* ~186 */
            MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3A;
          lab_185:
   577 |    __es.__c4@3 = 2u;
            $$PARM.x3A3 = copyin((pali((vector<int>).rns1198.UDd,&__20075)), (pali((x{vector<int>})$$1722UDd,$$PARM.x3A3#)))UDb;;
   376 |    p = *((char * *)grid);
   377 |    if (!1) goto lab_231;
            $$CIV60 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=19 guarded */ /* ~232 */ 
              /* region = 305 */
              /* bump-normalized */
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B = 1;
    30 |      if ((int) $$CIV60 < *((int *)((char *)$$PARM.x3A3 + 8))) goto lab_233;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_233:
    44 |      if (!(((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] < ((int *)(grid + 40))[$$CIV60])) goto lab_235;
    45 |      if (((int *)(grid + 88))[$$CIV60] == 1) goto lab_236;
              if (!(((int *)(grid + 88))[$$CIV60] == 4)) goto lab_237;
            lab_236:
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60];
              goto lab_247;
            lab_237:
    47 |      if (!(((int *)(grid + 88))[$$CIV60] == 2)) goto lab_239;
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] + (((int *)(grid + 48))[$$CIV60] - ((int *)(grid + 40))[$$CIV60]);
              goto lab_247;
            lab_239:
    49 |      if (!(((int *)(grid + 88))[$$CIV60] == 0)) goto lab_247;
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60];
    50 |      goto lab_247;
            lab_235:
              if (!(((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] >= ((int *)(grid + 48))[$$CIV60])) goto lab_247;
    51 |      if (((int *)(grid + 96))[$$CIV60] == 1) goto lab_241;
              if (!(((int *)(grid + 96))[$$CIV60] == 4)) goto lab_242;
            lab_241:
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(grid + 48))[$$CIV60] - 1;
              goto lab_247;
            lab_242:
    53 |      if (!(((int *)(grid + 96))[$$CIV60] == 2)) goto lab_244;
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] + (((int *)(grid + 40))[$$CIV60] - ((int *)(grid + 48))[$$CIV60]);
              goto lab_247;
            lab_244:
    55 |      if (!(((int *)(grid + 96))[$$CIV60] == 0)) goto lab_247;
              ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] = (((int *)(grid + 48))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60]) - 2;
    57 |    lab_247:
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B = 1;
    30 |      if ((int) $$CIV60 < *((int *)((char *)$$PARM.x3A3 + 8))) goto lab_248;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_248:
   379 |      p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x3A3)))[$$CIV60] - ((int *)(grid + 64))[$$CIV60]) * ((int *)(grid + 80))[$$CIV60]) * 24ll);
   377 |      $$CIV60 = $$CIV60 + 1ll;
            } while ((unsigned long long) $$CIV60 < 2ull);    /* ~232 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B;
          lab_231:
   382 |    copyout((pali((vector<int>).rns1198.UDd,&__20075)), (pali((x{vector<int>})$$1722UDd,$$PARM.x3A3)))UDb;
    75 |    core_distance = *((double *)((char *)p + 16));
            __es.__c4@3 = 1u;
    47 |    if (!(&__20075->(vector<int>).data@0.rns401.$$1723 != NULL)) goto lab_170;
    48 |    operator delete[](void*)(&__20075->(vector<int>).data@0.rns401.$$1723)
    49 |    &__20075->(vector<int>).data@0.rns401.$$1723 = NULL;
    50 |  lab_170:
   578 |    $$RET13A = &position->(vector<int>).size@8.rns899.$$1250$$1724;
    17 |    &__20076->(vector<int>).size@8.rns397.$$1724 = &position->(vector<int>).size@8.rns899.$$1250$$1724;
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    &__20076->(vector<int>).data@0.rns398.$$1724 = $$RET13B;
    19 |    if (!(0 < &__20076->(vector<int>).size@8.rns397.$$1724)) goto lab_179;
            i = 0;
            do {   /* id=15 guarded */ /* ~180 */ 
              /* region = 288 */
    33 |      $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3A = 1;
    34 |      if (i < &position->(vector<int>).size@8.rns896.$$1252$$1724) goto lab_181;
              MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3A;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_181:
    20 |      $$RET13B[(long long) i] = ((int *)&position->(vector<int>).data@0.rns897.$$1252$$1724)[(long long) i];
    19 |      i = i + 1;
            } while (i < &__20076->(vector<int>).size@8.rns397.$$1724);    /* ~180 */
            MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3A;
          lab_179:
   578 |    __es.__c4@3 = 3u;
            $$PARM.x3A1 = copyin((pali((vector<int>).rns1200.UDd,&__20076)), (pali((x{vector<int>})$$1725UDd,$$PARM.x3A1#)))UDb;;
   376 |    p = *((char * *)grid);
   377 |    if (!1) goto lab_211;
            $$CIV60 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=18 guarded */ /* ~212 */ 
              /* region = 304 */
              /* bump-normalized */
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B = 1;
    30 |      if ((int) $$CIV60 < *((int *)((char *)$$PARM.x3A1 + 8))) goto lab_213;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_213:
    44 |      if (!(((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] < ((int *)(grid + 40))[$$CIV60])) goto lab_215;
    45 |      if (((int *)(grid + 88))[$$CIV60] == 1) goto lab_216;
              if (!(((int *)(grid + 88))[$$CIV60] == 4)) goto lab_217;
            lab_216:
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60];
              goto lab_227;
            lab_217:
    47 |      if (!(((int *)(grid + 88))[$$CIV60] == 2)) goto lab_219;
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] + (((int *)(grid + 48))[$$CIV60] - ((int *)(grid + 40))[$$CIV60]);
              goto lab_227;
            lab_219:
    49 |      if (!(((int *)(grid + 88))[$$CIV60] == 0)) goto lab_227;
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60];
    50 |      goto lab_227;
            lab_215:
              if (!(((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] >= ((int *)(grid + 48))[$$CIV60])) goto lab_227;
    51 |      if (((int *)(grid + 96))[$$CIV60] == 1) goto lab_221;
              if (!(((int *)(grid + 96))[$$CIV60] == 4)) goto lab_222;
            lab_221:
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(grid + 48))[$$CIV60] - 1;
              goto lab_227;
            lab_222:
    53 |      if (!(((int *)(grid + 96))[$$CIV60] == 2)) goto lab_224;
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] + (((int *)(grid + 40))[$$CIV60] - ((int *)(grid + 48))[$$CIV60]);
              goto lab_227;
            lab_224:
    55 |      if (!(((int *)(grid + 96))[$$CIV60] == 0)) goto lab_227;
              ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] = (((int *)(grid + 48))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60]) - 2;
    57 |    lab_227:
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B = 1;
    30 |      if ((int) $$CIV60 < *((int *)((char *)$$PARM.x3A1 + 8))) goto lab_228;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_228:
   379 |      p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x3A1)))[$$CIV60] - ((int *)(grid + 64))[$$CIV60]) * ((int *)(grid + 80))[$$CIV60]) * 24ll);
   377 |      $$CIV60 = $$CIV60 + 1ll;
            } while ((unsigned long long) $$CIV60 < 2ull);    /* ~212 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3B;
          lab_211:
   382 |    copyout((pali((vector<int>).rns1200.UDd,&__20076)), (pali((x{vector<int>})$$1725UDd,$$PARM.x3A1)))UDb;
    76 |    core_id = *((unsigned int *)((char *)p + 12));
            __es.__c4@3 = 1u;
    47 |    if (!(&__20076->(vector<int>).data@0.rns401.$$1726 != NULL)) goto lab_168;
    48 |    operator delete[](void*)(&__20076->(vector<int>).data@0.rns401.$$1726)
    49 |    &__20076->(vector<int>).data@0.rns401.$$1726 = NULL;
    50 |  lab_168:
   580 |    if (!(x - 1 <= x + 1)) goto lab_3;
            $$CIV63 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 303 */
              /* bump-normalized */
   581 |      if (!(y - 1 <= y + 1)) goto lab_6;
              $$CIV62 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 302 */
                /* bump-normalized */
   582 |        $$csx55 = (int) ($$CIV63 + (long long) (x - 1));
                if (!(x == $$csx55)) goto lab_7;
                if (y == (int) ((long long) (y - 1) + $$CIV62)) goto lab_5;
              lab_7:
    11 |        __20078.x@0 = (int) ($$CIV63 + (long long) (x - 1));
                __20078.y@4 = (int) ((long long) (y - 1) + $$CIV62);
                __20078.z@8 = 0;
                MMSP::vector<int> getPosition<2, int>(Point<int> const&)(&p,&__20078)
                __es.__c4@3 = 4u;
   585 |        if (!1) goto lab_12;
                $$CIV61 = 0ll;
                do {   /* id=3 guarded */ /* ~10 */ 
                  /* region = 301 */
                  /* bump-normalized */
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if ((int) $$CIV61 < &p->(vector<int>).size@8.rns391.$$1743) goto lab_48;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_48:
    44 |          $$csx56 = &p->(vector<int>).data@0.rns392.$$1743;
                  if (!(((int *)$$csx56)[$$CIV61] < ((int *)(grid + 40))[$$CIV61])) goto lab_35;
    45 |          if ((((int *)grid) + 88ll / 4)[$$CIV61] == 1) goto lab_36;
                  if (!((((int *)grid) + 88ll / 4)[$$CIV61] == 4)) goto lab_37;
                lab_36:
                  ((int *)$$csx56)[$$CIV61] = ((int *)(grid + 40))[$$CIV61];
                  goto lab_47;
                lab_37:
    47 |          if (!((((int *)grid) + 88ll / 4)[$$CIV61] == 2)) goto lab_39;
                  ((int *)$$csx56)[$$CIV61] = ((int *)$$csx56)[$$CIV61] + (((int *)(grid + 48))[$$CIV61] - ((int *)(grid + 40))[$$CIV61]);
                  goto lab_47;
                lab_39:
    49 |          if (!((((int *)grid) + 88ll / 4)[$$CIV61] == 0)) goto lab_47;
                  ((int *)$$csx56)[$$CIV61] = ((int *)(grid + 40))[$$CIV61] * 2 - ((int *)$$csx56)[$$CIV61];
    50 |          goto lab_47;
                lab_35:
                  if (!(((int *)$$csx56)[$$CIV61] >= ((int *)(grid + 48))[$$CIV61])) goto lab_47;
    51 |          if ((((int *)grid) + 96ll / 4)[$$CIV61] == 1) goto lab_41;
                  if (!((((int *)grid) + 96ll / 4)[$$CIV61] == 4)) goto lab_42;
                lab_41:
                  ((int *)$$csx56)[$$CIV61] = ((int *)(grid + 48))[$$CIV61] - 1;
                  goto lab_47;
                lab_42:
    53 |          if (!((((int *)grid) + 96ll / 4)[$$CIV61] == 2)) goto lab_44;
                  ((int *)$$csx56)[$$CIV61] = ((int *)$$csx56)[$$CIV61] + (((int *)(grid + 40))[$$CIV61] - ((int *)(grid + 48))[$$CIV61]);
                  goto lab_47;
                lab_44:
    55 |          if (!((((int *)grid) + 96ll / 4)[$$CIV61] == 0)) goto lab_47;
                  ((int *)$$csx56)[$$CIV61] = (((int *)(grid + 48))[$$CIV61] * 2 - ((int *)$$csx56)[$$CIV61]) - 2;
    57 |        lab_47:
   585 |          $$CIV61 = $$CIV61 + 1ll;
                } while ((unsigned long long) $$CIV61 < 2ull);    /* ~10 */
              lab_12:
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        $$csx57 = &p->(vector<int>).size@8.rns391.$$1743;
                if (0 < $$csx57) goto lab_50;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_50:
   586 |        $$csx59 = &p->(vector<int>).data@0.rns392.$$1743;
                $$csx58 = ((int *)$$csx59)[0ll];
                if ($$csx58 < ((int *)(grid + 40))[0ll]) goto lab_14;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if (0 < $$csx57) goto lab_52;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_52:
   586 |        if (!($$csx58 >= ((int *)(grid + 48))[0ll])) goto lab_13;
              lab_14:
                __es.__c4@3 = 1u;
    47 |        if (!($$csx59 != NULL)) goto lab_158;
    48 |        operator delete[](void*)($$csx59)
    49 |        &p->(vector<int>).data@0.rns401.$$1730 = NULL;
    50 |      lab_158:
   586 |        goto lab_5;
              lab_13:
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if (1 < $$csx57) goto lab_54;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_54:
   587 |        $$csx5A = ((int *)$$csx59)[1ll];
                if ($$csx5A < ((int *)(grid + 40))[1ll]) goto lab_17;
    29 |        MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |        if (1 < $$csx57) goto lab_56;
                __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                return;
              lab_56:
   587 |        if (!($$csx5A >= ((int *)(grid + 48))[1ll])) goto lab_16;
              lab_17:
                __es.__c4@3 = 1u;
    47 |        if (!($$csx59 != NULL)) goto lab_160;
    48 |        operator delete[](void*)($$csx59)
    49 |        &p->(vector<int>).data@0.rns401.$$1730 = NULL;
    50 |      lab_160:
   587 |        goto lab_5;
              lab_16:
   589 |        $$RET13A = &p->(vector<int>).size@8.rns899.$$1250$$1736;
    17 |        &__20080->(vector<int>).size@8.rns397.$$1736 = $$csx57;
                $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |        &__20080->(vector<int>).data@0.rns398.$$1736 = $$RET13B;
    19 |        if (!(0 < &__20080->(vector<int>).size@8.rns397.$$1736)) goto lab_173;
                i = 0;
                do {   /* id=14 guarded */ /* ~174 */ 
                  /* region = 289 */
    33 |          MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |          if (i < &p->(vector<int>).size@8.rns896.$$1252$$1736) goto lab_175;
                  __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                  return;
                lab_175:
    20 |          $$RET13B[(long long) i] = ((int *)&p->(vector<int>).data@0.rns897.$$1252$$1736)[(long long) i];
    19 |          i = i + 1;
                } while (i < &__20080->(vector<int>).size@8.rns397.$$1736);    /* ~174 */
              lab_173:
   589 |        __es.__c4@3 = 5u;
                $$PARM.x39D = copyin((pali((vector<int>).rns1208.UDd,&__20080)), (pali((x{vector<int>})$$1737UDd,$$PARM.x39D#)))UDb;;
   376 |        p = *((char * *)grid);
   377 |        if (!1) goto lab_191;
                $$CIV60 = 0ll;
                do {   /* id=17 guarded */ /* ~192 */ 
                  /* region = 300 */
                  /* bump-normalized */
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if ((int) $$CIV60 < *((int *)((char *)$$PARM.x39D + 8))) goto lab_193;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_193:
    44 |          if (!(((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] < ((int *)(grid + 40))[$$CIV60])) goto lab_195;
    45 |          if (((int *)(grid + 88))[$$CIV60] == 1) goto lab_196;
                  if (!(((int *)(grid + 88))[$$CIV60] == 4)) goto lab_197;
                lab_196:
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60];
                  goto lab_207;
                lab_197:
    47 |          if (!(((int *)(grid + 88))[$$CIV60] == 2)) goto lab_199;
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] + (((int *)(grid + 48))[$$CIV60] - ((int *)(grid + 40))[$$CIV60]);
                  goto lab_207;
                lab_199:
    49 |          if (!(((int *)(grid + 88))[$$CIV60] == 0)) goto lab_207;
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(grid + 40))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60];
    50 |          goto lab_207;
                lab_195:
                  if (!(((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] >= ((int *)(grid + 48))[$$CIV60])) goto lab_207;
    51 |          if (((int *)(grid + 96))[$$CIV60] == 1) goto lab_201;
                  if (!(((int *)(grid + 96))[$$CIV60] == 4)) goto lab_202;
                lab_201:
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(grid + 48))[$$CIV60] - 1;
                  goto lab_207;
                lab_202:
    53 |          if (!(((int *)(grid + 96))[$$CIV60] == 2)) goto lab_204;
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] + (((int *)(grid + 40))[$$CIV60] - ((int *)(grid + 48))[$$CIV60]);
                  goto lab_207;
                lab_204:
    55 |          if (!(((int *)(grid + 96))[$$CIV60] == 0)) goto lab_207;
                  ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] = (((int *)(grid + 48))[$$CIV60] * 2 - ((int *)(*((char * *)$$PARM.x39D)))[$$CIV60]) - 2;
    57 |        lab_207:
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if ((int) $$CIV60 < *((int *)((char *)$$PARM.x39D + 8))) goto lab_208;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_208:
   379 |          p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x39D)))[$$CIV60] - ((int *)(grid + 64))[$$CIV60]) * ((int *)(grid + 80))[$$CIV60]) * 24ll);
   377 |          $$CIV60 = $$CIV60 + 1ll;
                } while ((unsigned long long) $$CIV60 < 2ull);    /* ~192 */
              lab_191:
   382 |        copyout((pali((vector<int>).rns1208.UDd,&__20080)), (pali((x{vector<int>})$$1737UDd,$$PARM.x39D)))UDb;
   589 |        __es.__c4@3 = 4u;
    47 |        if (!(&__20080->(vector<int>).data@0.rns401.$$1738 != NULL)) goto lab_164;
    48 |        operator delete[](void*)(&__20080->(vector<int>).data@0.rns401.$$1738)
    49 |        &__20080->(vector<int>).data@0.rns401.$$1738 = NULL;
    50 |      lab_164:
    75 |        $$csx5B = core_distance + __sqrt@18((__pow@6((double) (x - $$csx55), 2.0000000000000000E+000) + __pow@6((double) (y - (int) ((long long) (y - 1) + $$CIV62)), 2.0000000000000000E+000)) + __pow@6( 0.0000000000000000E+000, 2.0000000000000000E+000));
                if (!(*((double *)((char *)p + 16)) > $$csx5B)) goto lab_19;
    81 |        *((double *)((char *)p + 16)) = $$csx5B;
    82 |        *((unsigned int *)((char *)p + 12)) = core_id;
    81 |        __20252 = p;
  1434 |        $$PARM.__x14B = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                $$PARM.__y14C = ((queue + 24) + 8);
  1001 |        if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_149;
                do {   /* id=13 guarded */ /* ~150 */ 
                  /* region = 290 */
   505 |          __memset(&__21358,0,1ull);
   230 |          __21371 = (char) (((char * *)((char *)$$PARM.__x14B  + 32))->(DistanceVoxel *).rns1568.$$1797$$1740 < __20252);
                  if (__21371 != 0u) goto lab_151;
  1003 |          $$PARM.__y14C = $$PARM.__x14B;
   513 |          $$PARM.__x14B = *((char * *)($$PARM.__x14B + 16));
                  goto lab_152;
                lab_151:
   521 |          $$PARM.__x14B = *((char * *)($$PARM.__x14B + 24));
                lab_152:
  1001 |        } while ($$PARM.__x14B != NULL);    /* ~150 */
              lab_149:
   243 |        __21357._M_node@0 = $$PARM.__y14C;
                $$IRET82 = __21357;
  1434 |        __j = &$$IRET82->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1312.$$1740;
   243 |        __20726._M_node@0 = ((queue + 24) + 8);
   647 |        __20722 = __20726;
   288 |        $$csx5C = __20726._M_node@0;
                __20732 = (char) (__j._M_node@0 == $$csx5C);
                if (__20732 != 0u) goto lab_154;
   529 |        __20741 = __j._M_node@0;
                __memset(&__20733,0,1ull);
   230 |        __20746 = (char) (__20252 < ((char * *)((char *)__20741  + 32))->(DistanceVoxel *).rns1313.$$1740);
                if (!(__20746 != 0u)) goto lab_155;
              lab_154:
   243 |        __20747._M_node@0 = ((queue + 24) + 8);
   647 |        __20723 = __20747;
                __20751 = &__20723;
                goto lab_156;
              lab_155:
                __20751 = &__j;
              lab_156:
                $$IRET84 = *__20751;
   674 |        __20238 = &$$IRET84->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1211.;
   243 |        __20243._M_node@0 = ((queue + 24) + 8);
    99 |        __20237 = __20243;
    64 |        __20254 = (char) (itr._M_node@0.off0 != $$csx5C);
    84 |        if (__20254 != 0u) goto lab_21;
   593 |        $$PARM.element13D = p;
    88 |        DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::guard___func__4 = 1;
  1421 |        $$PARM.__x119 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                $$PARM.__y11A = ((queue + 24) + 8);
   985 |        if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_58;
                do {   /* id=4 guarded */ /* ~59 */ 
                  /* region = 291 */
   505 |          __memset(&__21707,0,1ull);
   230 |          __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1780$$1742 < $$PARM.element13D);
                  if (__21720 != 0u) goto lab_60;
   987 |          $$PARM.__y11A = $$PARM.__x119;
   509 |          $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
                  goto lab_61;
                lab_60:
   517 |          $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
                lab_61:
   985 |        } while ($$PARM.__x119 != NULL);    /* ~59 */
              lab_58:
   171 |        __21706._M_node@0 = $$PARM.__y11A;
                $$IRET73 = __21706;
  1421 |        __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1780$$1742;
   171 |        __21438._M_node@0 = ((queue + 24) + 8);
   640 |        __21434 = __21438;
   213 |        __21444 = (char) (__j._M_node@0 == $$csx5C);
                if (__21444 != 0u) goto lab_63;
   529 |        __21453 = __j._M_node@0;
                __memset(&__21445,0,1ull);
   230 |        __21458 = (char) ($$PARM.element13D < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1780$$1742);
                if (!(__21458 != 0u)) goto lab_64;
              lab_63:
   171 |        __21459._M_node@0 = ((queue + 24) + 8);
   640 |        __21435 = __21459;
                __21463 = &__21435;
                goto lab_65;
              lab_64:
                __21463 = &__j;
              lab_65:
                $$IRET7C = *__21463;
   659 |        __20570 = &$$IRET7C->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1273.$$1742;
   171 |        __20575._M_node@0 = (queue + 32);
   325 |        __20569 = __20575;
   213 |        __20583 = (char) (itr._M_node@0.off0 == &__20569->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1282.$$1742);
                if (__20583 != 0u) goto lab_67;
                __assert_fail("itr == backpointers.end()","priority_queue.h",90u,&DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::__func__)
                return;
              lab_67:
   735 |        if (!(*((char * *)(queue + 8)) != *((char * *)(queue + 16)))) goto lab_69;
   169 |        if (!(*((char * *)(queue + 8)) != NULL)) goto lab_70;
   105 |        *((char * *)(queue + 8))->(DistanceVoxel *).rns1275.$$1742 = $$PARM.element13D;
              lab_70:
   738 |        *((char * *)(queue + 8)) = ((char *)*((char * *)(queue + 8))  + 8ll);
   739 |        goto lab_71;
              lab_69:
   686 |        __20626._M_current@0 = *((char * *)(queue + 8));
   444 |        std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<DistanceVoxel**, std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> > >, DistanceVoxel* const&)(queue,__20626,&$$PARM.element13D)
              lab_71:
   745 |        $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                $$PARM.__y116 = ((queue + 24) + 8);
   985 |        if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_72;
                do {   /* id=5 guarded */ /* ~73 */ 
                  /* region = 292 */
   505 |          __memset(&__21707,0,1ull);
   230 |          __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1782$$1742 < $$PARM.element13D);
                  if (__21720 != 0u) goto lab_74;
   987 |          $$PARM.__y116 = $$PARM.__x115;
   509 |          $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                  goto lab_75;
                lab_74:
   517 |          $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                lab_75:
   985 |        } while ($$PARM.__x115 != NULL);    /* ~73 */
              lab_72:
   171 |        __21706._M_node@0 = $$PARM.__y116;
                $$IRET72 = __21706;
   745 |        __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782$$1742;
   701 |        __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782$$1742;
   171 |        __21545._M_node@0 = ((queue + 24) + 8);
   325 |        __21528 = __21545;
   213 |        __21553 = (char) (__i._M_node@0.off0 == $$csx5C);
                if (__21553 != 0u) goto lab_77;
   635 |        __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1782$$1742;
   230 |        if (!($$PARM.element13D < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_78;
              lab_77:
   450 |        __21532.first@0 = $$PARM.element13D;
    84 |        __21532.second@8 = 0;
   246 |        __21562._M_node@0 = __i._M_node@0.off0;
   107 |        __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1782$$1742;
   540 |        __i = __21563;
              lab_78:
    92 |        ((int *)((char *)__i._M_node@0  + 40))->(int).rns1276.$$1742 = (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll));
   140 |        if (!((int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll)) > 0)) goto lab_80;
   139 |        __20652 = (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll));
   140 |        do {   /* id=6 guarded */ /* ~81 */ 
                  /* region = 295 */
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20652 > 0) goto lab_82;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_82:
    50 |          $$csx5D = *((char * *)queue);
                  if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - $$csx5D) / 8ll))) goto lab_84;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_84:
    75 |          $$csx5E = *((char * *)($$csx5D + (long long) ((unsigned long long) __20652 * 8ull)));
                  if (!(*((double *)($$csx5E + 16)) < *((char * *)($$csx5D + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull)))->(DistanceVoxel).distance@10.rns1287.$$1742)) goto lab_23;
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20652 > 0) goto lab_86;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_86:
    50 |          if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - $$csx5D) / 8ll))) goto lab_88;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_88:
   129 |          temp = *((char * *)($$csx5D + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull)));
   130 |          *((char * *)($$csx5D + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull))) = $$csx5E;
   131 |          *((char * *)($$csx5D + (long long) ((unsigned long long) __20652 * 8ull))) = temp;
                  $$PARM.__k127 = ((char *)$$csx5D  + (long long) ((unsigned long long) __20652 * 8ull));
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_89;
                  do {   /* id=7 guarded */ /* ~90 */ 
                    /* region = 293 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1785$$1742 < *$$PARM.__k127);
                    if (__21720 != 0u) goto lab_91;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_92;
                  lab_91:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_92:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~90 */
                lab_89:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785$$1742;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785$$1742;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == $$csx5C);
                  if (__21553 != 0u) goto lab_94;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1910$$1785$$1742;
   230 |          if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_95;
                lab_94:
   450 |          __21532.first@0 = *$$PARM.__k127;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1785$$1742;
   540 |          __i = __21563;
                lab_95:
   133 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1622.$$1785$$1742 = __20652;
                  $$PARM.__k125 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull));
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_97;
                  do {   /* id=8 guarded */ /* ~98 */ 
                    /* region = 294 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1785$$1742 < *$$PARM.__k125);
                    if (__21720 != 0u) goto lab_99;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_100;
                  lab_99:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_100:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~98 */
                lab_97:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785$$1742;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785$$1742;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == $$csx5C);
                  if (__21553 != 0u) goto lab_102;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1911$$1785$$1742;
   230 |          if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_103;
                lab_102:
   450 |          __21532.first@0 = *$$PARM.__k125;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1785$$1742;
   540 |          __i = __21563;
                lab_103:
   134 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1624.$$1785$$1742 = (__20652 - 1) / 2;
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20652 > 0) goto lab_106;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_106:
    50 |          if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_108;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_108:
   145 |          __20652 = (__20652 - 1) / 2;
   140 |        } while (__20652 > 0);    /* ~81 */
              lab_80:
    94 |        goto lab_23;
   593 |      lab_21:
   594 |        $$PARM.element149 = p;
    98 |        DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::guard___func__4 = 1;
  1421 |        $$PARM.__x119 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                $$PARM.__y11A = ((queue + 24) + 8);
   985 |        if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_109;
                do {   /* id=9 guarded */ /* ~110 */ 
                  /* region = 296 */
   505 |          __memset(&__21707,0,1ull);
   230 |          __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1788$$1741 < $$PARM.element149);
                  if (__21720 != 0u) goto lab_111;
   987 |          $$PARM.__y11A = $$PARM.__x119;
   509 |          $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
                  goto lab_112;
                lab_111:
   517 |          $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
                lab_112:
   985 |        } while ($$PARM.__x119 != NULL);    /* ~110 */
              lab_109:
   171 |        __21706._M_node@0 = $$PARM.__y11A;
                $$IRET73 = __21706;
  1421 |        __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1788$$1741;
   171 |        __21438._M_node@0 = ((queue + 24) + 8);
   640 |        __21434 = __21438;
   213 |        __21444 = (char) (__j._M_node@0 == $$csx5C);
                if (__21444 != 0u) goto lab_114;
   529 |        __21453 = __j._M_node@0;
                __memset(&__21445,0,1ull);
   230 |        __21458 = (char) ($$PARM.element149 < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1788$$1741);
                if (!(__21458 != 0u)) goto lab_115;
              lab_114:
   171 |        __21459._M_node@0 = ((queue + 24) + 8);
   640 |        __21435 = __21459;
                __21463 = &__21435;
                goto lab_116;
              lab_115:
                __21463 = &__j;
              lab_116:
                $$IRET7D = *__21463;
   659 |        __20658 = &$$IRET7D->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1290.$$1741;
   171 |        __20663._M_node@0 = (queue + 32);
   325 |        __20657 = __20663;
   217 |        __20671 = (char) (itr._M_node@0.off0 != &__20657->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1295.$$1741);
                if (__20671 != 0u) goto lab_118;
                __assert_fail("itr != backpointers.end()","priority_queue.h",100u,&DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::__func__)
                return;
              lab_118:
   140 |        if (!(((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4] > 0)) goto lab_120;
   139 |        __20714 = ((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4];
   140 |        do {   /* id=10 guarded */ /* ~121 */ 
                  /* region = 299 */
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20714 > 0) goto lab_122;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_122:
    50 |          $$csx5F = *((char * *)queue);
                  if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - $$csx5F) / 8ll))) goto lab_124;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_124:
    75 |          $$csx60 = *((char * *)($$csx5F + (long long) ((unsigned long long) __20714 * 8ull)));
                  if (!(*((double *)($$csx60 + 16)) < *((char * *)($$csx5F + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull)))->(DistanceVoxel).distance@10.rns1300.$$1741)) goto lab_120;
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20714 > 0) goto lab_126;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_126:
    50 |          if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - $$csx5F) / 8ll))) goto lab_128;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_128:
   129 |          temp = *((char * *)($$csx5F + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull)));
   130 |          *((char * *)($$csx5F + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull))) = $$csx60;
   131 |          *((char * *)($$csx5F + (long long) ((unsigned long long) __20714 * 8ull))) = temp;
                  $$PARM.__k127 = ((char *)$$csx5F  + (long long) ((unsigned long long) __20714 * 8ull));
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_129;
                  do {   /* id=11 guarded */ /* ~130 */ 
                    /* region = 297 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1792$$1741 < *$$PARM.__k127);
                    if (__21720 != 0u) goto lab_131;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_132;
                  lab_131:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_132:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~130 */
                lab_129:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792$$1741;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792$$1741;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == $$csx5C);
                  if (__21553 != 0u) goto lab_134;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1910$$1792$$1741;
   230 |          if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_135;
                lab_134:
   450 |          __21532.first@0 = *$$PARM.__k127;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1792$$1741;
   540 |          __i = __21563;
                lab_135:
   133 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1622.$$1792$$1741 = __20714;
                  $$PARM.__k125 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull));
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_137;
                  do {   /* id=12 guarded */ /* ~138 */ 
                    /* region = 298 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1792$$1741 < *$$PARM.__k125);
                    if (__21720 != 0u) goto lab_139;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_140;
                  lab_139:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_140:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~138 */
                lab_137:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792$$1741;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792$$1741;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == $$csx5C);
                  if (__21553 != 0u) goto lab_142;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1911$$1792$$1741;
   230 |          if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_143;
                lab_142:
   450 |          __21532.first@0 = *$$PARM.__k125;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1792$$1741;
   540 |          __i = __21563;
                lab_143:
   134 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1624.$$1792$$1741 = (__20714 - 1) / 2;
    48 |          DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |          if (__20714 > 0) goto lab_146;
                  __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_146:
    50 |          if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_148;
                  __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                  return;
                lab_148:
   145 |          __20714 = (__20714 - 1) / 2;
   140 |        } while (__20714 > 0);    /* ~121 */
              lab_120:
   102 |        DistanceVoxel_PriorityQueue::percolate_down(int)(queue,((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4])
   594 |      lab_23:
   595 |      lab_19:
   596 |        __es.__c4@3 = 1u;
    47 |        $$csx61 = &p->(vector<int>).data@0.rns401.$$1730;
                if (!($$csx61 != NULL)) goto lab_162;
    48 |        operator delete[](void*)($$csx61)
    49 |        &p->(vector<int>).data@0.rns401.$$1730 = NULL;
    50 |      lab_162:
   596 |      lab_5:
   581 |        $$CIV62 = $$CIV62 + 1ll;
              } while ((unsigned long long) $$CIV62 < (unsigned long long) (1ll + ((long long) (y + 1) - (long long) (y - 1))));    /* ~4 */
            lab_6:
   580 |      $$CIV63 = $$CIV63 + 1ll;
            } while ((unsigned long long) $$CIV63 < (unsigned long long) (1ll + ((long long) (x + 1) - (long long) (x - 1))));    /* ~1 */
          lab_3:
   598 |    __es.__c4@3 = 0u;
    47 |    $$csx62 = &position->(vector<int>).data@0.rns401.$$1727;
            if (!($$csx62 != NULL)) goto lab_166;
    48 |    operator delete[](void*)($$csx62)
    49 |    &position->(vector<int>).data@0.rns401.$$1727 = NULL;
    50 |  lab_166:
   628 |    return;
          } /* function */ 


   571 |  void void MMSP::propagate_distance<3>(DistanceVoxel const*, MMSP::grid<3, DistanceVoxel>&, DistanceVoxel_PriorityQueue&)(DistanceVoxel *core_voxel, char * grid, char * queue)
   572 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    72 |    x = *((int *)core_voxel);
    73 |    y = *((int *)((char *)core_voxel + 4));
    74 |    z = *((int *)((char *)core_voxel + 8));
    11 |    __20308.x@0 = *((int *)core_voxel);
            __20308.y@4 = *((int *)((char *)core_voxel + 4));
            __20308.z@8 = *((int *)((char *)core_voxel + 8));
            MMSP::vector<int> getPosition<3, int>(Point<int> const&)(&position,&__20308)
            __es.__c4@3 = 1u;
   603 |    $$RET13A = &position->(vector<int>).size@8.rns899.$$1250$$1746;
    17 |    &__20310->(vector<int>).size@8.rns397.$$1746 = &position->(vector<int>).size@8.rns899.$$1250$$1746;
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    &__20310->(vector<int>).data@0.rns398.$$1746 = $$RET13B;
    19 |    if (!(0 < &__20310->(vector<int>).size@8.rns397.$$1746)) goto lab_252;
            i = 0;
            do {   /* id=19 guarded */ /* ~253 */ 
              /* region = 301 */
    33 |      $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3C = 1;
    34 |      if (i < &position->(vector<int>).size@8.rns896.$$1252$$1746) goto lab_254;
              MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3C;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_254:
    20 |      $$RET13B[(long long) i] = ((int *)&position->(vector<int>).data@0.rns897.$$1252$$1746)[(long long) i];
    19 |      i = i + 1;
            } while (i < &__20310->(vector<int>).size@8.rns397.$$1746);    /* ~253 */
            MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3C;
          lab_252:
   603 |    __es.__c4@3 = 2u;
            $$PARM.x1D2 = copyin((pali((vector<int>).rns1224.UDd,&__20310)), (pali((x{vector<int>})$$1747UDd,$$PARM.x1D2#)))UDb;;
   376 |    p = *((char * *)grid);
   377 |    if (!1) goto lab_225;
            $$CIV72 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=17 guarded */ /* ~226 */ 
              /* region = 320 */
              /* bump-normalized */
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D = 1;
    30 |      if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1D2 + 8))) goto lab_227;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_227:
    44 |      if (!(((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] < ((int *)(grid + 48))[$$CIV72])) goto lab_229;
    45 |      if (((int *)(grid + 120))[$$CIV72] == 1) goto lab_230;
              if (!(((int *)(grid + 120))[$$CIV72] == 4)) goto lab_231;
            lab_230:
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72];
              goto lab_241;
            lab_231:
    47 |      if (!(((int *)(grid + 120))[$$CIV72] == 2)) goto lab_233;
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] + (((int *)(grid + 60))[$$CIV72] - ((int *)(grid + 48))[$$CIV72]);
              goto lab_241;
            lab_233:
    49 |      if (!(((int *)(grid + 120))[$$CIV72] == 0)) goto lab_241;
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72];
    50 |      goto lab_241;
            lab_229:
              if (!(((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] >= ((int *)(grid + 60))[$$CIV72])) goto lab_241;
    51 |      if (((int *)(grid + 132))[$$CIV72] == 1) goto lab_235;
              if (!(((int *)(grid + 132))[$$CIV72] == 4)) goto lab_236;
            lab_235:
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(grid + 60))[$$CIV72] - 1;
              goto lab_241;
            lab_236:
    53 |      if (!(((int *)(grid + 132))[$$CIV72] == 2)) goto lab_238;
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] + (((int *)(grid + 48))[$$CIV72] - ((int *)(grid + 60))[$$CIV72]);
              goto lab_241;
            lab_238:
    55 |      if (!(((int *)(grid + 132))[$$CIV72] == 0)) goto lab_241;
              ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] = (((int *)(grid + 60))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72]) - 2;
    57 |    lab_241:
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D = 1;
    30 |      if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1D2 + 8))) goto lab_242;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_242:
   379 |      p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x1D2)))[$$CIV72] - ((int *)(grid + 84))[$$CIV72]) * ((int *)(grid + 108))[$$CIV72]) * 24ll);
   377 |      $$CIV72 = $$CIV72 + 1ll;
            } while ((unsigned long long) $$CIV72 < 3ull);    /* ~226 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D;
          lab_225:
   382 |    copyout((pali((vector<int>).rns1224.UDd,&__20310)), (pali((x{vector<int>})$$1747UDd,$$PARM.x1D2)))UDb;
    75 |    core_distance = *((double *)((char *)p + 16));
            __es.__c4@3 = 1u;
    47 |    if (!(&__20310->(vector<int>).data@0.rns401.$$1748 != NULL)) goto lab_179;
    48 |    operator delete[](void*)(&__20310->(vector<int>).data@0.rns401.$$1748)
    49 |    &__20310->(vector<int>).data@0.rns401.$$1748 = NULL;
    50 |  lab_179:
   604 |    $$RET13A = &position->(vector<int>).size@8.rns899.$$1250$$1749;
    17 |    &__20311->(vector<int>).size@8.rns397.$$1749 = &position->(vector<int>).size@8.rns899.$$1250$$1749;
            $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |    &__20311->(vector<int>).data@0.rns398.$$1749 = $$RET13B;
    19 |    if (!(0 < &__20311->(vector<int>).size@8.rns397.$$1749)) goto lab_258;
            i = 0;
            do {   /* id=20 guarded */ /* ~259 */ 
              /* region = 302 */
    33 |      $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3C = 1;
    34 |      if (i < &position->(vector<int>).size@8.rns896.$$1252$$1749) goto lab_260;
              MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3C;
              __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
              return;
            lab_260:
    20 |      $$RET13B[(long long) i] = ((int *)&position->(vector<int>).data@0.rns897.$$1252$$1749)[(long long) i];
    19 |      i = i + 1;
            } while (i < &__20311->(vector<int>).size@8.rns397.$$1749);    /* ~259 */
            MMSP::vector<int>::operator[](int) const::guard___func__3 = $$ICM._ZZNK4MMSP6vectorIiEixEiE15guard___func__3C;
          lab_258:
   604 |    __es.__c4@3 = 3u;
            $$PARM.x1D0 = copyin((pali((vector<int>).rns1226.UDd,&__20311)), (pali((x{vector<int>})$$1750UDd,$$PARM.x1D0#)))UDb;;
   376 |    p = *((char * *)grid);
   377 |    if (!1) goto lab_205;
            $$CIV72 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=16 guarded */ /* ~206 */ 
              /* region = 319 */
              /* bump-normalized */
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D = 1;
    30 |      if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1D0 + 8))) goto lab_207;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_207:
    44 |      if (!(((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] < ((int *)(grid + 48))[$$CIV72])) goto lab_209;
    45 |      if (((int *)(grid + 120))[$$CIV72] == 1) goto lab_210;
              if (!(((int *)(grid + 120))[$$CIV72] == 4)) goto lab_211;
            lab_210:
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72];
              goto lab_221;
            lab_211:
    47 |      if (!(((int *)(grid + 120))[$$CIV72] == 2)) goto lab_213;
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] + (((int *)(grid + 60))[$$CIV72] - ((int *)(grid + 48))[$$CIV72]);
              goto lab_221;
            lab_213:
    49 |      if (!(((int *)(grid + 120))[$$CIV72] == 0)) goto lab_221;
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72];
    50 |      goto lab_221;
            lab_209:
              if (!(((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] >= ((int *)(grid + 60))[$$CIV72])) goto lab_221;
    51 |      if (((int *)(grid + 132))[$$CIV72] == 1) goto lab_215;
              if (!(((int *)(grid + 132))[$$CIV72] == 4)) goto lab_216;
            lab_215:
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(grid + 60))[$$CIV72] - 1;
              goto lab_221;
            lab_216:
    53 |      if (!(((int *)(grid + 132))[$$CIV72] == 2)) goto lab_218;
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] + (((int *)(grid + 48))[$$CIV72] - ((int *)(grid + 60))[$$CIV72]);
              goto lab_221;
            lab_218:
    55 |      if (!(((int *)(grid + 132))[$$CIV72] == 0)) goto lab_221;
              ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] = (((int *)(grid + 60))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72]) - 2;
    57 |    lab_221:
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D = 1;
    30 |      if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1D0 + 8))) goto lab_222;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_222:
   379 |      p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x1D0)))[$$CIV72] - ((int *)(grid + 84))[$$CIV72]) * ((int *)(grid + 108))[$$CIV72]) * 24ll);
   377 |      $$CIV72 = $$CIV72 + 1ll;
            } while ((unsigned long long) $$CIV72 < 3ull);    /* ~206 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3D;
          lab_205:
   382 |    copyout((pali((vector<int>).rns1226.UDd,&__20311)), (pali((x{vector<int>})$$1750UDd,$$PARM.x1D0)))UDb;
    76 |    core_id = *((unsigned int *)((char *)p + 12));
            __es.__c4@3 = 1u;
    47 |    if (!(&__20311->(vector<int>).data@0.rns401.$$1751 != NULL)) goto lab_181;
    48 |    operator delete[](void*)(&__20311->(vector<int>).data@0.rns401.$$1751)
    49 |    &__20311->(vector<int>).data@0.rns401.$$1751 = NULL;
    50 |  lab_181:
   606 |    if (!(x - 1 <= x + 1)) goto lab_3;
            $$CIV67 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 318 */
              /* bump-normalized */
   607 |      if (!(y - 1 <= y + 1)) goto lab_6;
              $$CIV66 = 0ll;
              do {   /* id=2 guarded */ /* ~4 */ 
                /* region = 317 */
                /* bump-normalized */
   608 |        if (!(z - 1 <= z + 1)) goto lab_9;
                $$CIV65 = 0ll;
                do {   /* id=3 guarded */ /* ~7 */ 
                  /* region = 316 */
                  /* bump-normalized */
   609 |          $$csx63 = (int) ($$CIV67 + (long long) (x - 1));
                  if (!(x == $$csx63)) goto lab_10;
                  if (!(y == (int) ($$CIV66 + (long long) (y - 1)))) goto lab_10;
                  if (z == (int) ((long long) (z - 1) + $$CIV65)) goto lab_8;
                lab_10:
    11 |          __20313.x@0 = (int) ($$CIV67 + (long long) (x - 1));
                  $$csx64 = $$CIV66 + (long long) (y - 1);
                  __20313.y@4 = (int) $$csx64;
                  __20313.z@8 = (int) ((long long) (z - 1) + $$CIV65);
                  MMSP::vector<int> getPosition<3, int>(Point<int> const&)(&p,&__20313)
                  __es.__c4@3 = 4u;
   612 |          if (!1) goto lab_16;
                  $$CIV64 = 0ll;
                  do {   /* id=4 guarded */ /* ~14 */ 
                    /* region = 315 */
                    /* bump-normalized */
    29 |            MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |            if ((int) $$CIV64 < &p->(vector<int>).size@8.rns391.$$1771) goto lab_55;
                    __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                    return;
                  lab_55:
    44 |            $$csx65 = &p->(vector<int>).data@0.rns392.$$1771;
                    if (!(((int *)$$csx65)[$$CIV64] < ((int *)(grid + 48))[$$CIV64])) goto lab_42;
    45 |            if ((((int *)grid) + 120ll / 4)[$$CIV64] == 1) goto lab_43;
                    if (!((((int *)grid) + 120ll / 4)[$$CIV64] == 4)) goto lab_44;
                  lab_43:
                    ((int *)$$csx65)[$$CIV64] = ((int *)(grid + 48))[$$CIV64];
                    goto lab_54;
                  lab_44:
    47 |            if (!((((int *)grid) + 120ll / 4)[$$CIV64] == 2)) goto lab_46;
                    ((int *)$$csx65)[$$CIV64] = ((int *)$$csx65)[$$CIV64] + (((int *)(grid + 60))[$$CIV64] - ((int *)(grid + 48))[$$CIV64]);
                    goto lab_54;
                  lab_46:
    49 |            if (!((((int *)grid) + 120ll / 4)[$$CIV64] == 0)) goto lab_54;
                    ((int *)$$csx65)[$$CIV64] = ((int *)(grid + 48))[$$CIV64] * 2 - ((int *)$$csx65)[$$CIV64];
    50 |            goto lab_54;
                  lab_42:
                    if (!(((int *)$$csx65)[$$CIV64] >= ((int *)(grid + 60))[$$CIV64])) goto lab_54;
    51 |            if ((((int *)grid) + 132ll / 4)[$$CIV64] == 1) goto lab_48;
                    if (!((((int *)grid) + 132ll / 4)[$$CIV64] == 4)) goto lab_49;
                  lab_48:
                    ((int *)$$csx65)[$$CIV64] = ((int *)(grid + 60))[$$CIV64] - 1;
                    goto lab_54;
                  lab_49:
    53 |            if (!((((int *)grid) + 132ll / 4)[$$CIV64] == 2)) goto lab_51;
                    ((int *)$$csx65)[$$CIV64] = ((int *)$$csx65)[$$CIV64] + (((int *)(grid + 48))[$$CIV64] - ((int *)(grid + 60))[$$CIV64]);
                    goto lab_54;
                  lab_51:
    55 |            if (!((((int *)grid) + 132ll / 4)[$$CIV64] == 0)) goto lab_54;
                    ((int *)$$csx65)[$$CIV64] = (((int *)(grid + 60))[$$CIV64] * 2 - ((int *)$$csx65)[$$CIV64]) - 2;
    57 |          lab_54:
   612 |            $$CIV64 = $$CIV64 + 1ll;
                  } while ((unsigned long long) $$CIV64 < 3ull);    /* ~14 */
                lab_16:
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          $$csx66 = &p->(vector<int>).size@8.rns391.$$1771;
                  if (0 < $$csx66) goto lab_57;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_57:
   613 |          $$csx68 = &p->(vector<int>).data@0.rns392.$$1771;
                  $$csx67 = ((int *)$$csx68)[0ll];
                  if ($$csx67 < ((int *)(grid + 48))[0ll]) goto lab_18;
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (0 < $$csx66) goto lab_59;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_59:
   613 |          if (!($$csx67 >= ((int *)(grid + 60))[0ll])) goto lab_17;
                lab_18:
                  __es.__c4@3 = 1u;
    47 |          if (!($$csx68 != NULL)) goto lab_169;
    48 |          operator delete[](void*)($$csx68)
    49 |          &p->(vector<int>).data@0.rns401.$$1755 = NULL;
    50 |        lab_169:
   613 |          goto lab_8;
                lab_17:
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (1 < $$csx66) goto lab_61;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_61:
   614 |          $$csx69 = ((int *)$$csx68)[1ll];
                  if ($$csx69 < ((int *)(grid + 48))[1ll]) goto lab_21;
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (1 < $$csx66) goto lab_63;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_63:
   614 |          if (!($$csx69 >= ((int *)(grid + 60))[1ll])) goto lab_20;
                lab_21:
                  __es.__c4@3 = 1u;
    47 |          if (!($$csx68 != NULL)) goto lab_171;
    48 |          operator delete[](void*)($$csx68)
    49 |          &p->(vector<int>).data@0.rns401.$$1755 = NULL;
    50 |        lab_171:
   614 |          goto lab_8;
                lab_20:
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (2 < $$csx66) goto lab_65;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_65:
   615 |          $$csx6A = ((int *)$$csx68)[2ll];
                  if ($$csx6A < ((int *)(grid + 48))[2ll]) goto lab_24;
    29 |          MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |          if (2 < $$csx66) goto lab_67;
                  __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                  return;
                lab_67:
   615 |          if (!($$csx6A >= ((int *)(grid + 60))[2ll])) goto lab_23;
                lab_24:
                  __es.__c4@3 = 1u;
    47 |          if (!($$csx68 != NULL)) goto lab_173;
    48 |          operator delete[](void*)($$csx68)
    49 |          &p->(vector<int>).data@0.rns401.$$1755 = NULL;
    50 |        lab_173:
   615 |          goto lab_8;
                lab_23:
   617 |          $$RET13A = &p->(vector<int>).size@8.rns899.$$1250$$1764;
    17 |          &__20315->(vector<int>).size@8.rns397.$$1764 = $$csx66;
                  $$RET13B = operator new[](unsigned long)((unsigned long long) $$RET13A * 4ull);
    18 |          &__20315->(vector<int>).data@0.rns398.$$1764 = $$RET13B;
    19 |          if (!(0 < &__20315->(vector<int>).size@8.rns397.$$1764)) goto lab_246;
                  i = 0;
                  do {   /* id=18 guarded */ /* ~247 */ 
                    /* region = 303 */
    33 |            MMSP::vector<int>::operator[](int) const::guard___func__3 = 1;
    34 |            if (i < &p->(vector<int>).size@8.rns896.$$1252$$1764) goto lab_248;
                    __assert_fail("i < size","./include/MMSP.vector.h",34u,&MMSP::vector<int>::operator[](int) const::__func__)
                    return;
                  lab_248:
    20 |            $$RET13B[(long long) i] = ((int *)&p->(vector<int>).data@0.rns897.$$1252$$1764)[(long long) i];
    19 |            i = i + 1;
                  } while (i < &__20315->(vector<int>).size@8.rns397.$$1764);    /* ~247 */
                lab_246:
   617 |          __es.__c4@3 = 5u;
                  $$PARM.x1CE = copyin((pali((vector<int>).rns1236.UDd,&__20315)), (pali((x{vector<int>})$$1765UDd,$$PARM.x1CE#)))UDb;;
   376 |          p = *((char * *)grid);
   377 |          if (!1) goto lab_185;
                  $$CIV72 = 0ll;
                  do {   /* id=15 guarded */ /* ~186 */ 
                    /* region = 314 */
                    /* bump-normalized */
    29 |            MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |            if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1CE + 8))) goto lab_187;
                    __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                    return;
                  lab_187:
    44 |            if (!(((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] < ((int *)(grid + 48))[$$CIV72])) goto lab_189;
    45 |            if (((int *)(grid + 120))[$$CIV72] == 1) goto lab_190;
                    if (!(((int *)(grid + 120))[$$CIV72] == 4)) goto lab_191;
                  lab_190:
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72];
                    goto lab_201;
                  lab_191:
    47 |            if (!(((int *)(grid + 120))[$$CIV72] == 2)) goto lab_193;
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] + (((int *)(grid + 60))[$$CIV72] - ((int *)(grid + 48))[$$CIV72]);
                    goto lab_201;
                  lab_193:
    49 |            if (!(((int *)(grid + 120))[$$CIV72] == 0)) goto lab_201;
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(grid + 48))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72];
    50 |            goto lab_201;
                  lab_189:
                    if (!(((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] >= ((int *)(grid + 60))[$$CIV72])) goto lab_201;
    51 |            if (((int *)(grid + 132))[$$CIV72] == 1) goto lab_195;
                    if (!(((int *)(grid + 132))[$$CIV72] == 4)) goto lab_196;
                  lab_195:
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(grid + 60))[$$CIV72] - 1;
                    goto lab_201;
                  lab_196:
    53 |            if (!(((int *)(grid + 132))[$$CIV72] == 2)) goto lab_198;
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] + (((int *)(grid + 48))[$$CIV72] - ((int *)(grid + 60))[$$CIV72]);
                    goto lab_201;
                  lab_198:
    55 |            if (!(((int *)(grid + 132))[$$CIV72] == 0)) goto lab_201;
                    ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] = (((int *)(grid + 60))[$$CIV72] * 2 - ((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72]) - 2;
    57 |          lab_201:
    29 |            MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |            if ((int) $$CIV72 < *((int *)((char *)$$PARM.x1CE + 8))) goto lab_202;
                    __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
                    return;
                  lab_202:
   379 |            p = ((char *)p  + (long long) ((((int *)(*((char * *)$$PARM.x1CE)))[$$CIV72] - ((int *)(grid + 84))[$$CIV72]) * ((int *)(grid + 108))[$$CIV72]) * 24ll);
   377 |            $$CIV72 = $$CIV72 + 1ll;
                  } while ((unsigned long long) $$CIV72 < 3ull);    /* ~186 */
                lab_185:
   382 |          copyout((pali((vector<int>).rns1236.UDd,&__20315)), (pali((x{vector<int>})$$1765UDd,$$PARM.x1CE)))UDb;
   617 |          __es.__c4@3 = 4u;
    47 |          if (!(&__20315->(vector<int>).data@0.rns401.$$1766 != NULL)) goto lab_175;
    48 |          operator delete[](void*)(&__20315->(vector<int>).data@0.rns401.$$1766)
    49 |          &__20315->(vector<int>).data@0.rns401.$$1766 = NULL;
    50 |        lab_175:
    75 |          $$csx6B = core_distance + __sqrt@18((__pow@6((double) (x - $$csx63), 2.0000000000000000E+000) + __pow@6((double) (y - (int) $$csx64), 2.0000000000000000E+000)) + __pow@6((double) (z - (int) ((long long) (z - 1) + $$CIV65)), 2.0000000000000000E+000));
                  if (!(*((double *)((char *)p + 16)) > $$csx6B)) goto lab_26;
    81 |          *((double *)((char *)p + 16)) = $$csx6B;
    82 |          *((unsigned int *)((char *)p + 12)) = core_id;
    81 |          __20435 = p;
  1434 |          $$PARM.__x14B = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y14C = ((queue + 24) + 8);
  1001 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_160;
                  do {   /* id=14 guarded */ /* ~161 */ 
                    /* region = 304 */
   505 |            __memset(&__21358,0,1ull);
   230 |            __21371 = (char) (((char * *)((char *)$$PARM.__x14B  + 32))->(DistanceVoxel *).rns1568.$$1797$$1768 < __20435);
                    if (__21371 != 0u) goto lab_162;
  1003 |            $$PARM.__y14C = $$PARM.__x14B;
   513 |            $$PARM.__x14B = *((char * *)($$PARM.__x14B + 16));
                    goto lab_163;
                  lab_162:
   521 |            $$PARM.__x14B = *((char * *)($$PARM.__x14B + 24));
                  lab_163:
  1001 |          } while ($$PARM.__x14B != NULL);    /* ~161 */
                lab_160:
   243 |          __21357._M_node@0 = $$PARM.__y14C;
                  $$IRET82 = __21357;
  1434 |          __j = &$$IRET82->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1312.$$1768;
   243 |          __20726._M_node@0 = ((queue + 24) + 8);
   647 |          __20722 = __20726;
   288 |          $$csx6C = __20726._M_node@0;
                  __20732 = (char) (__j._M_node@0 == $$csx6C);
                  if (__20732 != 0u) goto lab_165;
   529 |          __20741 = __j._M_node@0;
                  __memset(&__20733,0,1ull);
   230 |          __20746 = (char) (__20435 < ((char * *)((char *)__20741  + 32))->(DistanceVoxel *).rns1313.$$1768);
                  if (!(__20746 != 0u)) goto lab_166;
                lab_165:
   243 |          __20747._M_node@0 = ((queue + 24) + 8);
   647 |          __20723 = __20747;
                  __20751 = &__20723;
                  goto lab_167;
                lab_166:
                  __20751 = &__j;
                lab_167:
                  $$IRET83 = *__20751;
   674 |          __20421 = &$$IRET83->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1239.;
   243 |          __20426._M_node@0 = ((queue + 24) + 8);
    99 |          __20420 = __20426;
    64 |          __20437 = (char) (itr._M_node@0.off0 != $$csx6C);
    84 |          if (__20437 != 0u) goto lab_28;
   621 |          $$PARM.element13B = p;
    88 |          DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::guard___func__4 = 1;
  1421 |          $$PARM.__x119 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y11A = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_69;
                  do {   /* id=5 guarded */ /* ~70 */ 
                    /* region = 305 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1780$$1770 < $$PARM.element13B);
                    if (__21720 != 0u) goto lab_71;
   987 |            $$PARM.__y11A = $$PARM.__x119;
   509 |            $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
                    goto lab_72;
                  lab_71:
   517 |            $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
                  lab_72:
   985 |          } while ($$PARM.__x119 != NULL);    /* ~70 */
                lab_69:
   171 |          __21706._M_node@0 = $$PARM.__y11A;
                  $$IRET73 = __21706;
  1421 |          __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1780$$1770;
   171 |          __21438._M_node@0 = ((queue + 24) + 8);
   640 |          __21434 = __21438;
   213 |          __21444 = (char) (__j._M_node@0 == $$csx6C);
                  if (__21444 != 0u) goto lab_74;
   529 |          __21453 = __j._M_node@0;
                  __memset(&__21445,0,1ull);
   230 |          __21458 = (char) ($$PARM.element13B < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1780$$1770);
                  if (!(__21458 != 0u)) goto lab_75;
                lab_74:
   171 |          __21459._M_node@0 = ((queue + 24) + 8);
   640 |          __21435 = __21459;
                  __21463 = &__21435;
                  goto lab_76;
                lab_75:
                  __21463 = &__j;
                lab_76:
                  $$IRET7C = *__21463;
   659 |          __20570 = &$$IRET7C->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1273.$$1770;
   171 |          __20575._M_node@0 = (queue + 32);
   325 |          __20569 = __20575;
   213 |          __20583 = (char) (itr._M_node@0.off0 == &__20569->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1282.$$1770);
                  if (__20583 != 0u) goto lab_78;
                  __assert_fail("itr == backpointers.end()","priority_queue.h",90u,&DistanceVoxel_PriorityQueue::push(DistanceVoxel*)::__func__)
                  return;
                lab_78:
   735 |          if (!(*((char * *)(queue + 8)) != *((char * *)(queue + 16)))) goto lab_80;
   169 |          if (!(*((char * *)(queue + 8)) != NULL)) goto lab_81;
   105 |          *((char * *)(queue + 8))->(DistanceVoxel *).rns1275.$$1770 = $$PARM.element13B;
                lab_81:
   738 |          *((char * *)(queue + 8)) = ((char *)*((char * *)(queue + 8))  + 8ll);
   739 |          goto lab_82;
                lab_80:
   686 |          __20626._M_current@0 = *((char * *)(queue + 8));
   444 |          std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<DistanceVoxel**, std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> > >, DistanceVoxel* const&)(queue,__20626,&$$PARM.element13B)
                lab_82:
   745 |          $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y116 = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_83;
                  do {   /* id=6 guarded */ /* ~84 */ 
                    /* region = 306 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1782$$1770 < $$PARM.element13B);
                    if (__21720 != 0u) goto lab_85;
   987 |            $$PARM.__y116 = $$PARM.__x115;
   509 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                    goto lab_86;
                  lab_85:
   517 |            $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                  lab_86:
   985 |          } while ($$PARM.__x115 != NULL);    /* ~84 */
                lab_83:
   171 |          __21706._M_node@0 = $$PARM.__y116;
                  $$IRET72 = __21706;
   745 |          __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782$$1770;
   701 |          __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1782$$1770;
   171 |          __21545._M_node@0 = ((queue + 24) + 8);
   325 |          __21528 = __21545;
   213 |          __21553 = (char) (__i._M_node@0.off0 == $$csx6C);
                  if (__21553 != 0u) goto lab_88;
   635 |          __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1782$$1770;
   230 |          if (!($$PARM.element13B < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_89;
                lab_88:
   450 |          __21532.first@0 = $$PARM.element13B;
    84 |          __21532.second@8 = 0;
   246 |          __21562._M_node@0 = __i._M_node@0.off0;
   107 |          __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1782$$1770;
   540 |          __i = __21563;
                lab_89:
    92 |          ((int *)((char *)__i._M_node@0  + 40))->(int).rns1276.$$1770 = (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll));
   140 |          if (!((int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll)) > 0)) goto lab_91;
   139 |          __20652 = (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll - 1ll));
   140 |          do {   /* id=7 guarded */ /* ~92 */ 
                    /* region = 309 */
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20652 > 0) goto lab_93;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_93:
    50 |            $$csx6D = *((char * *)queue);
                    if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - $$csx6D) / 8ll))) goto lab_95;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_95:
    75 |            $$csx6E = *((char * *)($$csx6D + (long long) ((unsigned long long) __20652 * 8ull)));
                    if (!(*((double *)($$csx6E + 16)) < *((char * *)($$csx6D + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull)))->(DistanceVoxel).distance@10.rns1287.$$1770)) goto lab_30;
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20652 > 0) goto lab_97;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_97:
    50 |            if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - $$csx6D) / 8ll))) goto lab_99;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_99:
   129 |            temp = *((char * *)($$csx6D + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull)));
   130 |            *((char * *)($$csx6D + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull))) = $$csx6E;
   131 |            *((char * *)($$csx6D + (long long) ((unsigned long long) __20652 * 8ull))) = temp;
                    $$PARM.__k127 = ((char *)$$csx6D  + (long long) ((unsigned long long) __20652 * 8ull));
   745 |            $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                    $$PARM.__y116 = ((queue + 24) + 8);
   985 |            if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_100;
                    do {   /* id=8 guarded */ /* ~101 */ 
                      /* region = 307 */
   505 |              __memset(&__21707,0,1ull);
   230 |              __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1785$$1770 < *$$PARM.__k127);
                      if (__21720 != 0u) goto lab_102;
   987 |              $$PARM.__y116 = $$PARM.__x115;
   509 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                      goto lab_103;
                    lab_102:
   517 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                    lab_103:
   985 |            } while ($$PARM.__x115 != NULL);    /* ~101 */
                  lab_100:
   171 |            __21706._M_node@0 = $$PARM.__y116;
                    $$IRET72 = __21706;
   745 |            __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785$$1770;
   701 |            __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1785$$1770;
   171 |            __21545._M_node@0 = ((queue + 24) + 8);
   325 |            __21528 = __21545;
   213 |            __21553 = (char) (__i._M_node@0.off0 == $$csx6C);
                    if (__21553 != 0u) goto lab_105;
   635 |            __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1910$$1785$$1770;
   230 |            if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_106;
                  lab_105:
   450 |            __21532.first@0 = *$$PARM.__k127;
    84 |            __21532.second@8 = 0;
   246 |            __21562._M_node@0 = __i._M_node@0.off0;
   107 |            __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1785$$1770;
   540 |            __i = __21563;
                  lab_106:
   133 |            ((int *)((char *)__i._M_node@0  + 40))->(int).rns1622.$$1785$$1770 = __20652;
                    $$PARM.__k125 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) ((__20652 - 1) / 2) * 8ull));
   745 |            $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                    $$PARM.__y116 = ((queue + 24) + 8);
   985 |            if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_108;
                    do {   /* id=9 guarded */ /* ~109 */ 
                      /* region = 308 */
   505 |              __memset(&__21707,0,1ull);
   230 |              __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1785$$1770 < *$$PARM.__k125);
                      if (__21720 != 0u) goto lab_110;
   987 |              $$PARM.__y116 = $$PARM.__x115;
   509 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                      goto lab_111;
                    lab_110:
   517 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                    lab_111:
   985 |            } while ($$PARM.__x115 != NULL);    /* ~109 */
                  lab_108:
   171 |            __21706._M_node@0 = $$PARM.__y116;
                    $$IRET72 = __21706;
   745 |            __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785$$1770;
   701 |            __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1785$$1770;
   171 |            __21545._M_node@0 = ((queue + 24) + 8);
   325 |            __21528 = __21545;
   213 |            __21553 = (char) (__i._M_node@0.off0 == $$csx6C);
                    if (__21553 != 0u) goto lab_113;
   635 |            __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1911$$1785$$1770;
   230 |            if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_114;
                  lab_113:
   450 |            __21532.first@0 = *$$PARM.__k125;
    84 |            __21532.second@8 = 0;
   246 |            __21562._M_node@0 = __i._M_node@0.off0;
   107 |            __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1785$$1770;
   540 |            __i = __21563;
                  lab_114:
   134 |            ((int *)((char *)__i._M_node@0  + 40))->(int).rns1624.$$1785$$1770 = (__20652 - 1) / 2;
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20652 > 0) goto lab_117;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_117:
    50 |            if (__20652 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_119;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_119:
   145 |            __20652 = (__20652 - 1) / 2;
   140 |          } while (__20652 > 0);    /* ~92 */
                lab_91:
    94 |          goto lab_30;
   621 |        lab_28:
   622 |          $$PARM.element147 = p;
    98 |          DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::guard___func__4 = 1;
  1421 |          $$PARM.__x119 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                  $$PARM.__y11A = ((queue + 24) + 8);
   985 |          if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_120;
                  do {   /* id=10 guarded */ /* ~121 */ 
                    /* region = 310 */
   505 |            __memset(&__21707,0,1ull);
   230 |            __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902$$1788$$1769 < $$PARM.element147);
                    if (__21720 != 0u) goto lab_122;
   987 |            $$PARM.__y11A = $$PARM.__x119;
   509 |            $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
                    goto lab_123;
                  lab_122:
   517 |            $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
                  lab_123:
   985 |          } while ($$PARM.__x119 != NULL);    /* ~121 */
                lab_120:
   171 |          __21706._M_node@0 = $$PARM.__y11A;
                  $$IRET73 = __21706;
  1421 |          __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.$$1788$$1769;
   171 |          __21438._M_node@0 = ((queue + 24) + 8);
   640 |          __21434 = __21438;
   213 |          __21444 = (char) (__j._M_node@0 == $$csx6C);
                  if (__21444 != 0u) goto lab_125;
   529 |          __21453 = __j._M_node@0;
                  __memset(&__21445,0,1ull);
   230 |          __21458 = (char) ($$PARM.element147 < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.$$1788$$1769);
                  if (!(__21458 != 0u)) goto lab_126;
                lab_125:
   171 |          __21459._M_node@0 = ((queue + 24) + 8);
   640 |          __21435 = __21459;
                  __21463 = &__21435;
                  goto lab_127;
                lab_126:
                  __21463 = &__j;
                lab_127:
                  $$IRET7D = *__21463;
   659 |          __20658 = &$$IRET7D->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1290.$$1769;
   171 |          __20663._M_node@0 = (queue + 32);
   325 |          __20657 = __20663;
   217 |          __20671 = (char) (itr._M_node@0.off0 != &__20657->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1295.$$1769);
                  if (__20671 != 0u) goto lab_129;
                  __assert_fail("itr != backpointers.end()","priority_queue.h",100u,&DistanceVoxel_PriorityQueue::update_position(DistanceVoxel*)::__func__)
                  return;
                lab_129:
   140 |          if (!(((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4] > 0)) goto lab_131;
   139 |          __20714 = ((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4];
   140 |          do {   /* id=11 guarded */ /* ~132 */ 
                    /* region = 313 */
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20714 > 0) goto lab_133;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_133:
    50 |            $$csx6F = *((char * *)queue);
                    if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - $$csx6F) / 8ll))) goto lab_135;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_135:
    75 |            $$csx70 = *((char * *)($$csx6F + (long long) ((unsigned long long) __20714 * 8ull)));
                    if (!(*((double *)($$csx70 + 16)) < *((char * *)($$csx6F + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull)))->(DistanceVoxel).distance@10.rns1300.$$1769)) goto lab_131;
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20714 > 0) goto lab_137;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_137:
    50 |            if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - $$csx6F) / 8ll))) goto lab_139;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_139:
   129 |            temp = *((char * *)($$csx6F + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull)));
   130 |            *((char * *)($$csx6F + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull))) = $$csx70;
   131 |            *((char * *)($$csx6F + (long long) ((unsigned long long) __20714 * 8ull))) = temp;
                    $$PARM.__k127 = ((char *)$$csx6F  + (long long) ((unsigned long long) __20714 * 8ull));
   745 |            $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                    $$PARM.__y116 = ((queue + 24) + 8);
   985 |            if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_140;
                    do {   /* id=12 guarded */ /* ~141 */ 
                      /* region = 311 */
   505 |              __memset(&__21707,0,1ull);
   230 |              __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1910$$1792$$1769 < *$$PARM.__k127);
                      if (__21720 != 0u) goto lab_142;
   987 |              $$PARM.__y116 = $$PARM.__x115;
   509 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                      goto lab_143;
                    lab_142:
   517 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                    lab_143:
   985 |            } while ($$PARM.__x115 != NULL);    /* ~141 */
                  lab_140:
   171 |            __21706._M_node@0 = $$PARM.__y116;
                    $$IRET72 = __21706;
   745 |            __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792$$1769;
   701 |            __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1910$$1792$$1769;
   171 |            __21545._M_node@0 = ((queue + 24) + 8);
   325 |            __21528 = __21545;
   213 |            __21553 = (char) (__i._M_node@0.off0 == $$csx6C);
                    if (__21553 != 0u) goto lab_145;
   635 |            __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1910$$1792$$1769;
   230 |            if (!(*$$PARM.__k127 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_146;
                  lab_145:
   450 |            __21532.first@0 = *$$PARM.__k127;
    84 |            __21532.second@8 = 0;
   246 |            __21562._M_node@0 = __i._M_node@0.off0;
   107 |            __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1910$$1792$$1769;
   540 |            __i = __21563;
                  lab_146:
   133 |            ((int *)((char *)__i._M_node@0  + 40))->(int).rns1622.$$1792$$1769 = __20714;
                    $$PARM.__k125 = ((char *)*((char * *)queue)  + (long long) ((unsigned long long) ((__20714 - 1) / 2) * 8ull));
   745 |            $$PARM.__x115 = ((char * *)((char *)queue + 24 + 8))[8 / 8];
                    $$PARM.__y116 = ((queue + 24) + 8);
   985 |            if (!(((char * *)((char *)queue + 24 + 8))[8 / 8] != NULL)) goto lab_148;
                    do {   /* id=13 guarded */ /* ~149 */ 
                      /* region = 312 */
   505 |              __memset(&__21707,0,1ull);
   230 |              __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1911$$1792$$1769 < *$$PARM.__k125);
                      if (__21720 != 0u) goto lab_150;
   987 |              $$PARM.__y116 = $$PARM.__x115;
   509 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                      goto lab_151;
                    lab_150:
   517 |              $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
                    lab_151:
   985 |            } while ($$PARM.__x115 != NULL);    /* ~149 */
                  lab_148:
   171 |            __21706._M_node@0 = $$PARM.__y116;
                    $$IRET72 = __21706;
   745 |            __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792$$1769;
   701 |            __i = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1911$$1792$$1769;
   171 |            __21545._M_node@0 = ((queue + 24) + 8);
   325 |            __21528 = __21545;
   213 |            __21553 = (char) (__i._M_node@0.off0 == $$csx6C);
                    if (__21553 != 0u) goto lab_153;
   635 |            __21529 = ((aggr1 *)((char *)queue  + 24))->(_Rb_tree_impl<std::less<DistanceVoxel *>,0>)._M_key_compare@0.rns1618.$$1911$$1792$$1769;
   230 |            if (!(*$$PARM.__k125 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_154;
                  lab_153:
   450 |            __21532.first@0 = *$$PARM.__k125;
    84 |            __21532.second@8 = 0;
   246 |            __21562._M_node@0 = __i._M_node@0.off0;
   107 |            __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)((queue + 24),__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1911$$1792$$1769;
   540 |            __i = __21563;
                  lab_154:
   134 |            ((int *)((char *)__i._M_node@0  + 40))->(int).rns1624.$$1792$$1769 = (__20714 - 1) / 2;
    48 |            DistanceVoxel_PriorityQueue::get_parent(int)::guard___func__3 = 1;
    49 |            if (__20714 > 0) goto lab_157;
                    __assert_fail("i > 0","priority_queue.h",49u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_157:
    50 |            if (__20714 < (int) ((unsigned long long) ((*((char * *)(queue + 8)) - *((char * *)queue)) / 8ll))) goto lab_159;
                    __assert_fail("i < size()","priority_queue.h",50u,&DistanceVoxel_PriorityQueue::get_parent(int)::__func__)
                    return;
                  lab_159:
   145 |            __20714 = (__20714 - 1) / 2;
   140 |          } while (__20714 > 0);    /* ~132 */
                lab_131:
   102 |          DistanceVoxel_PriorityQueue::percolate_down(int)(queue,((int *)((char *)itr._M_node@0.off0 + 8))[32 / 4])
   622 |        lab_30:
   623 |        lab_26:
   624 |          __es.__c4@3 = 1u;
    47 |          $$csx71 = &p->(vector<int>).data@0.rns401.$$1755;
                  if (!($$csx71 != NULL)) goto lab_177;
    48 |          operator delete[](void*)($$csx71)
    49 |          &p->(vector<int>).data@0.rns401.$$1755 = NULL;
    50 |        lab_177:
   624 |        lab_8:
   608 |          $$CIV65 = $$CIV65 + 1ll;
                } while ((unsigned long long) $$CIV65 < (unsigned long long) (1ll + ((long long) (z + 1) - (long long) (z - 1))));    /* ~7 */
              lab_9:
   607 |        $$CIV66 = $$CIV66 + 1ll;
              } while ((unsigned long long) $$CIV66 < (unsigned long long) (1ll + ((long long) (y + 1) - (long long) (y - 1))));    /* ~4 */
            lab_6:
   606 |      $$CIV67 = $$CIV67 + 1ll;
            } while ((unsigned long long) $$CIV67 < (unsigned long long) (1ll + ((long long) (x + 1) - (long long) (x - 1))));    /* ~1 */
          lab_3:
   627 |    __es.__c4@3 = 0u;
    47 |    $$csx72 = &position->(vector<int>).data@0.rns401.$$1752;
            if (!($$csx72 != NULL)) goto lab_183;
    48 |    operator delete[](void*)($$csx72)
    49 |    &position->(vector<int>).data@0.rns401.$$1752 = NULL;
    50 |  lab_183:
   628 |    return;
          } /* function */ 


    67 |  char * Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int>*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(aggr8 __first, aggr8 __last, Point<int> *__result)
    70 |  {
            __cur = __result;
    73 |    if (!(__first._M_current@0 != __last._M_current@0)) goto lab_3;
            $$CIV68 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV68 * 12ll))) goto lab_5;
    12 |      ((int *)__result)[($$CIV68 * 12ll) / 4] = ((int *)__first._M_current@0)[($$CIV68 * 12ll) / 4];
              ((int *)((char *)__result + 4))[($$CIV68 * 12ll) / 4] = ((int *)((char *)__first._M_current@0 + 4))[($$CIV68 * 12ll) / 4];
              ((int *)((char *)__result + 8))[($$CIV68 * 12ll) / 4] = ((int *)((char *)__first._M_current@0 + 8))[($$CIV68 * 12ll) / 4];
            lab_5:
   710 |      $$CIV68 = $$CIV68 + 1ll;
            } while ((unsigned long long) $$CIV68 < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
          lab_3:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 


   458 |  char * double* std::copy<double*, double*>(double*, double*, double*)(char * __first, char * __last, char * __result)
   392 |  {
   378 |    __builtin_memmove(__result,__first,(unsigned long long) (((__last - __first) / 8ll) * 8ll));
   437 |    rstr = ((char *)__result  + ((__last - __first) / 8ll) * 8ll);
            return rstr;
   469 |  } /* function */ 


  1369 |  unsigned long long std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(DistanceVoxel* const&)(char * this, char * *__x)
  1051 |  {
            __y = (this + 8);
  1052 |    if (!(((char * *)(this + 8))[8 / 8] != NULL)) goto lab_1;
  1050 |    __x = ((char * *)(this + 8))[8 / 8];
  1052 |    do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 30 */
   505 |      __memset(&__21476,0,1ull);
   230 |      __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795 < *__x);
              if (!(__21489 != 0u)) goto lab_3;
   517 |      __x = *((char * *)(__x + 24));
              goto lab_4;
            lab_3:
   505 |      __memset(&__21493,0,1ull);
   230 |      __21506 = (char) (*__x < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.$$1795);
              if (!(__21506 != 0u)) goto lab_5;
  1057 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
  1066 |    lab_4:
  1052 |    } while (__x != NULL);    /* ~2 */
          lab_1:
   171 |    __21472._M_node@0 = __y;
            __21473._M_node@0 = __y;
            __21471.first@0 = __21472;
    84 |    __21471.second@8 = __21473;
            $$IRET1E5 = __21471;
            goto lab_6;
   509 |  lab_5:
   517 |    __xu.rnn170 = *((char * *)(__x + 24));
    84 |    $$PARM.__x11D = *((char * *)(__x + 16));
            $$PARM.__y11E = __x;
   985 |    if (!(*((char * *)(__x + 16)) != NULL)) goto lab_7;
            do {   /* id=2 guarded */ /* ~8 */ 
              /* region = 28 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906$$1795 < *__x);
              if (__21720 != 0u) goto lab_9;
   987 |      $$PARM.__y11E = $$PARM.__x11D;
   509 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
              goto lab_10;
            lab_9:
   517 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
            lab_10:
   985 |    } while ($$PARM.__x11D != NULL);    /* ~8 */
          lab_7:
   171 |    __21706._M_node@0 = $$PARM.__y11E;
            $$IRET74 = __21706;
    84 |    __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.$$1795;
            $$PARM.__x3AB = __xu.rnn170;
            $$PARM.__y3AC = __y;
  1017 |    if (!(__xu.rnn170 != NULL)) goto lab_12;
            do {   /* id=3 guarded */ /* ~13 */ 
              /* region = 29 */
   505 |      __memset(&__21730,0,1ull);
   230 |      __21743 = (char) (*__x < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907$$1795);
              if (!(__21743 != 0u)) goto lab_14;
  1019 |      $$PARM.__y3AC = $$PARM.__x3AB;
   509 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
              goto lab_15;
            lab_14:
   517 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
            lab_15:
  1017 |    } while ($$PARM.__x3AB != NULL);    /* ~13 */
          lab_12:
   171 |    __21729._M_node@0 = $$PARM.__y3AC;
            $$IRET1E4 = __21729;
    84 |    __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.$$1795;
            __21466.first@0 = __21467;
            __21466.second@8 = __21468;
            $$IRET1E5 = __21466;
  1070 |  lab_6:
  1372 |    __p = &$$IRET1E5->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> > >).rns1304.;
  1373 |    __old_size = *((unsigned long long *)(this + 40));
  1374 |    std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)(this,__p.first@0,__p.second@8)
  1375 |    rstr = __old_size - *((unsigned long long *)(this + 40));
            return rstr;
  1376 |  } /* function */ 


  1431 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::find(DistanceVoxel* const&) const(_Rb_tree_node_base;_Rb_tree<DistanceVoxel *,std::pair<DistanceVoxel * const,int>,std::_Select1st<std::pair<DistanceVoxel * const,int> >,std::less<DistanceVoxel *>,std::allocator<std::pair<DistanceVoxel * const,int> > > *this, char * *__k)
  1434 |  {
            $$PARM.__x14B = ((char * *)((char *)this + 8))[8 / 8];
            $$PARM.__y14C = (this + 8);
  1001 |    if (!(((char * *)((char *)this + 8))[8 / 8] != NULL)) goto lab_5;
            do {   /* id=1 guarded */ /* ~6 */ 
              /* region = 15 */
   505 |      __memset(&__21358,0,1ull);
   230 |      __21371 = (char) (((char * *)((char *)$$PARM.__x14B  + 32))->(DistanceVoxel *).rns1568.$$1797 < *__k);
              if (__21371 != 0u) goto lab_7;
  1003 |      $$PARM.__y14C = $$PARM.__x14B;
   513 |      $$PARM.__x14B = *((char * *)($$PARM.__x14B + 16));
              goto lab_8;
            lab_7:
   521 |      $$PARM.__x14B = *((char * *)($$PARM.__x14B + 24));
            lab_8:
  1001 |    } while ($$PARM.__x14B != NULL);    /* ~6 */
          lab_5:
   243 |    __21357._M_node@0 = $$PARM.__y14C;
            $$IRET82 = __21357;
  1434 |    __j = &$$IRET82->(_Rb_tree_const_iterator<std::pair<DistanceVoxel * const,int> >).rns1312.;
   243 |    __20726._M_node@0 = (this + 8);
   647 |    __20722 = __20726;
   288 |    __20732 = (char) (__j._M_node@0 == __20726._M_node@0);
            if (__20732 != 0u) goto lab_1;
   529 |    __20741 = __j._M_node@0;
            __memset(&__20733,0,1ull);
   230 |    __20746 = (char) (*__k < ((char * *)((char *)__20741  + 32))->(DistanceVoxel *).rns1313.);
            if (!(__20746 != 0u)) goto lab_2;
          lab_1:
   243 |    __20747._M_node@0 = (this + 8);
   647 |    __20723 = __20747;
            __20751 = &__20723;
            goto lab_3;
          lab_2:
            __20751 = &__j;
          lab_3:
            rstr = *__20751;
            return rstr;
  1438 |  } /* function */ 


   154 |  void DistanceVoxel_PriorityQueue::percolate_down(int)(_Vector_impl *this, int i)
    56 |  {
            if (!(i * 2 + 1 < (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll)))) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 51 */
    60 |      $$csx75 = *((char * *)this);
              $$csx74 = (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - $$csx75) / 8ll));
              $$csx76 = i * 2;
              $$csx73 = $$csx76 + 2 < $$csx74;
              if (!$$csx73) goto lab_4;
   611 |      $$PARM.this13E = this;
              $$PARM.i13F = i;
    67 |      DistanceVoxel_PriorityQueue::get_right_child(int)::guard___func__3 = 1;
    68 |      $$csx77 = $$PARM.i13F >= 0;
              if (!$$csx77) goto lab_37;
    60 |      if ($$csx73) goto lab_38;
            lab_37:
              __assert_fail("i >= 0 && has_right_child( i )","priority_queue.h",68u,&DistanceVoxel_PriorityQueue::get_right_child(int)::__func__)
              return;
            lab_38:
    69 |      $$IRET7E = $$csx76 + 2;
   611 |      __20764 = (unsigned long long) $$IRET7E;
    75 |      $$BD171 = *((char * *)($$csx75 + (long long) (__20764 * 8ull)))->(DistanceVoxel).distance@10.rns1327.;
   611 |      $$PARM.this142 = this;
              $$PARM.i143 = i;
    62 |      DistanceVoxel_PriorityQueue::get_left_child(int)::guard___func__3 = 1;
    63 |      if (!$$csx77) goto lab_43;
    56 |      if ($$csx76 + 1 < $$csx74) goto lab_44;
            lab_43:
              __assert_fail("i >= 0 && has_left_child( i )","priority_queue.h",63u,&DistanceVoxel_PriorityQueue::get_left_child(int)::__func__)
              return;
            lab_44:
    64 |      $$IRET80 = $$csx76 + 1;
   611 |      __20773 = (unsigned long long) $$IRET80;
    75 |      if (!($$BD171 < *((char * *)($$csx75 + (long long) (__20773 * 8ull)))->(DistanceVoxel).distance@10.rns1328.)) goto lab_4;
   162 |      $$PARM.this140 = this;
              $$PARM.i141 = i;
    67 |      DistanceVoxel_PriorityQueue::get_right_child(int)::guard___func__3 = 1;
    68 |      if (!$$csx77) goto lab_40;
    60 |      if ($$csx73) goto lab_41;
            lab_40:
              __assert_fail("i >= 0 && has_right_child( i )","priority_queue.h",68u,&DistanceVoxel_PriorityQueue::get_right_child(int)::__func__)
              return;
            lab_41:
    69 |      $$IRET7F = $$csx76 + 2;
   162 |      child = $$IRET7F;
   163 |      goto lab_7;
            lab_4:
   164 |      $$PARM.this144 = this;
              $$PARM.i145 = i;
    62 |      DistanceVoxel_PriorityQueue::get_left_child(int)::guard___func__3 = 1;
    63 |      if (!($$PARM.i145 >= 0)) goto lab_46;
    56 |      if ($$csx76 + 1 < $$csx74) goto lab_47;
            lab_46:
              __assert_fail("i >= 0 && has_left_child( i )","priority_queue.h",63u,&DistanceVoxel_PriorityQueue::get_left_child(int)::__func__)
              return;
            lab_47:
    64 |      $$IRET81 = $$csx76 + 1;
   164 |      child = $$IRET81;
            lab_7:
    75 |      $$csx78 = *((char * *)($$csx75 + (long long) ((unsigned long long) child * 8ull)));
              if (!(*((double *)($$csx78 + 16)) < *((char * *)($$csx75 + (long long) ((unsigned long long) i * 8ull)))->(DistanceVoxel).distance@10.rns1329.)) goto lab_3;
   129 |      temp = *((char * *)($$csx75 + (long long) ((unsigned long long) i * 8ull)));
   130 |      *((char * *)($$csx75 + (long long) ((unsigned long long) i * 8ull))) = $$csx78;
   131 |      *((char * *)($$csx75 + (long long) ((unsigned long long) child * 8ull))) = temp;
              $$PARM.this122 = (this + 24);
              $$PARM.__k123 = ((char *)$$csx75  + (long long) ((unsigned long long) child * 8ull));
   745 |      $$PARM.this114 = $$PARM.this122;
              $$csx79 = ((char *)$$PARM.this122  + 8);
              $$PARM.__x115 = *((char * *)($$csx79 + 8));
              $$PARM.__y116 = ($$PARM.this122 + 8);
   985 |      if (!($$PARM.__x115 != NULL)) goto lab_29;
              do {   /* id=3 guarded */ /* ~30 */ 
                /* region = 49 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1800 < *$$PARM.__k123);
                if (__21720 != 0u) goto lab_31;
   987 |        $$PARM.__y116 = $$PARM.__x115;
   509 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                goto lab_32;
              lab_31:
   517 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
              lab_32:
   985 |      } while ($$PARM.__x115 != NULL);    /* ~30 */
            lab_29:
   171 |      __21706._M_node@0 = $$PARM.__y116;
              $$IRET72 = __21706;
   745 |      __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1800;
   701 |      __i = __21536;
   171 |      __21545._M_node@0 = ($$PARM.this122 + 8);
   325 |      __21528 = __21545;
   213 |      __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
              if (__21553 != 0u) goto lab_34;
   635 |      __21529 = *((aggr1 *)$$PARM.this122);
   230 |      if (!(*$$PARM.__k123 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_35;
            lab_34:
   450 |      __21532.first@0 = *$$PARM.__k123;
    84 |      __21532.second@8 = 0;
   246 |      __21562._M_node@0 = __i._M_node@0.off0;
   107 |      __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this122,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1800;
   540 |      __i = __21563;
            lab_35:
   451 |      $$IRET76 = (__i._M_node@0 + 40);
   131 |      $$RET198 = $$IRET76;
   133 |      *$$RET198 = child;
              $$PARM.this120 = (this + 24);
              $$PARM.__k121 = ((char *)*((char * *)this)  + (long long) ((unsigned long long) i * 8ull));
   745 |      $$PARM.this114 = $$PARM.this120;
              $$PARM.__x115 = *((char * *)($$csx79 + 8));
              $$PARM.__y116 = ($$PARM.this120 + 8);
   985 |      if (!($$PARM.__x115 != NULL)) goto lab_21;
              do {   /* id=2 guarded */ /* ~22 */ 
                /* region = 50 */
   505 |        __memset(&__21707,0,1ull);
   230 |        __21720 = (char) (((char * *)((char *)$$PARM.__x115  + 32))->(DistanceVoxel *).rns1700.$$1908$$1801 < *$$PARM.__k121);
                if (__21720 != 0u) goto lab_23;
   987 |        $$PARM.__y116 = $$PARM.__x115;
   509 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 16));
                goto lab_24;
              lab_23:
   517 |        $$PARM.__x115 = *((char * *)($$PARM.__x115 + 24));
              lab_24:
   985 |      } while ($$PARM.__x115 != NULL);    /* ~22 */
            lab_21:
   171 |      __21706._M_node@0 = $$PARM.__y116;
              $$IRET72 = __21706;
   745 |      __21536 = &$$IRET72->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1612.$$1801;
   701 |      __i = __21536;
   171 |      __21545._M_node@0 = ($$PARM.this120 + 8);
   325 |      __21528 = __21545;
   213 |      __21553 = (char) (__i._M_node@0.off0 == (_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1617..mga.__21528);
              if (__21553 != 0u) goto lab_26;
   635 |      __21529 = *((aggr1 *)$$PARM.this120);
   230 |      if (!(*$$PARM.__k121 < ((char * *)__i._M_node@0.off0)[32 / 8])) goto lab_27;
            lab_26:
   450 |      __21532.first@0 = *$$PARM.__k121;
    84 |      __21532.second@8 = 0;
   246 |      __21562._M_node@0 = __i._M_node@0.off0;
   107 |      __21563 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)($$PARM.this120,__21562,&__21532)->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1615.$$1801;
   540 |      __i = __21563;
            lab_27:
   451 |      $$IRET75 = (__i._M_node@0 + 40);
   133 |      $$RET199 = $$IRET75;
   134 |      *$$RET199 = i;
   168 |      i = child;
    56 |    } while (child * 2 + 1 < (int) ((unsigned long long) ((*((char * *)((char *)this + 8)) - *((char * *)this)) / 8ll)));    /* ~1 */
          lab_3:
   175 |    return;
          } /* function */ 


    22 |  char * MMSP::grid<2, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(grid<2,MMSP::vector<double> > *this, int FIELDS, int *min, int *max, int GHOSTS, char SINGLE)
    25 |  {
            *((int *)((char *)this + 16)) = FIELDS;
    28 |    if (!1) goto lab_3;
            $$CIV69 = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    29 |      ((int *)((char *)this + 24))[$$CIV69] = min[$$CIV69];
    30 |      ((int *)((char *)this + 32))[$$CIV69] = max[$$CIV69];
    28 |      $$CIV69 = $$CIV69 + 1ll;
            } while ((unsigned long long) $$CIV69 < 2ull);    /* ~1 */
          lab_3:
    34 |    *((int *)((char *)this + 20)) = 0;
    41 |    MMSP::grid<2, MMSP::vector<double> >::setup(bool)(this,SINGLE)
    42 |    rstr = this;
            return rstr;
          } /* function */ 


  1114 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::buffer_size() const(char * this)
          {
            $$PARM.p344 = *((char * *)this);
  1103 |    size = 0ull;
  1108 |    if (!(((int *)(this + 40))[0ll] < ((int *)(this + 48))[0ll])) goto lab_8;
            x = ((int *)(this + 40))[0ll];
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 8 */
              $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)$$PARM.p344  + (long long) ((x - ((int *)(this + 64))[0ll]) * ((int *)(this + 80))[0ll]) * 16ll),1,(this + 40),(this + 48));
  1109 |      size = size + $$RET1BC;
  1108 |      x = x + 1;
            } while (x < ((int *)(this + 48))[0ll]);    /* ~9 */
          lab_8:
  1116 |    rstr = size;
            return rstr;
  1117 |  } /* function */ 


  1119 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::buffer_size(int const*, int const*) const(grid<2,MMSP::vector<double> > *this, int *min, int *max)
          {
            $$PARM.p344 = *((char * *)this);
  1103 |    size = 0ull;
  1108 |    if (!(min[0ll] < max[0ll])) goto lab_8;
            x = min[0ll];
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 8 */
              $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)$$PARM.p344  + (long long) ((x - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]) * 16ll),1,min,max);
  1109 |      size = size + $$RET1BC;
  1108 |      x = x + 1;
            } while (x < max[0ll]);    /* ~9 */
          lab_8:
  1121 |    rstr = size;
            return rstr;
  1122 |  } /* function */ 


  1126 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*) const(char * this, char * buffer)
          {
            $$PARM.p331 = *((char * *)this);
  1138 |    size = 0ull;
  1143 |    if (!(((int *)(this + 40))[0ll] < ((int *)(this + 48))[0ll])) goto lab_8;
            x = ((int *)(this + 40))[0ll];
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 8 */
              $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)$$PARM.p331  + (long long) ((x - ((int *)(this + 64))[0ll]) * ((int *)(this + 80))[0ll]) * 16ll),1,(this + 40),(this + 48));
  1144 |      size = size + $$RET1BE;
  1143 |      x = x + 1;
            } while (x < ((int *)(this + 48))[0ll]);    /* ~9 */
          lab_8:
  1128 |    rstr = size;
            return rstr;
  1129 |  } /* function */ 


  1131 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(grid<2,MMSP::vector<double> > *this, char * buffer, int *min, int *max)
          {
            $$PARM.p331 = *((char * *)this);
  1138 |    size = 0ull;
  1143 |    if (!(min[0ll] < max[0ll])) goto lab_8;
            x = min[0ll];
            do {   /* id=2 guarded */ /* ~9 */ 
              /* region = 8 */
              $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)$$PARM.p331  + (long long) ((x - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]) * 16ll),1,min,max);
  1144 |      size = size + $$RET1BE;
  1143 |      x = x + 1;
            } while (x < max[0ll]);    /* ~9 */
          lab_8:
  1133 |    rstr = size;
            return rstr;
  1134 |  } /* function */ 


  1149 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*)(char * this, char * buffer)
          {
            $$RET19E = MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(this,buffer,(this + 40),(this + 48));
  1151 |    rstr = $$RET19E;
            return rstr;
  1152 |  } /* function */ 


  1154 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(grid<2,MMSP::vector<double> > *this, char * buffer, char * min, char * max)
          {
            $$RET19F = MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,buffer,*((char * *)this),0,min,max);
  1156 |    rstr = $$RET19F;
            return rstr;
  1157 |  } /* function */ 


          void std::vector<Point<int>, std::allocator<Point<int> > >::__dftbdt(std::_Vector_base<Point<int>, std::allocator<Point<int> > >*)(_Vector_impl *__20816)
   145 |  {
            if (!(*((char * *)__20816) != NULL)) goto lab_4;
    95 |    operator delete(void*)(*((char * *)__20816))
   110 |  lab_4:
   132 |    $$PARM.this2 = __20816;
   109 |    $$PARM.this0 = $$PARM.this2;
    73 |    $$IRET0 = $$PARM.this0;
   109 |    $$IRET1 = $$PARM.this2;
   132 |    $$IRET2 = $$PARM.this2;
   133 |    $$IRET4 = __20816;
            return;
          } /* function */ 


    31 |  char * MMSP::vector<int>::vector(int)(vector<int> *this, int N)
    33 |  {
            *((int *)((char *)this + 8)) = N;
            $$RET1A0 = operator new[](unsigned long)((unsigned long long) N * 4ull);
    34 |    *((char * *)this) = $$RET1A0;
    35 |    rstr = this;
            return rstr;
          } /* function */ 


     9 |  char * MMSP::vector<double>::vector()(vector<double> *this)
    11 |  {
            *((int *)((char *)this + 8)) = 0;
    12 |    *((char * *)this) = NULL;
    13 |    rstr = this;
            return rstr;
          } /* function */ 


   136 |  void MMSP::vector<double>::resize(int)(vector<double> *this, int N)
   138 |  {
            if (!(*((int *)((char *)this + 8)) == 0)) goto lab_1;
   139 |    *((int *)((char *)this + 8)) = N;
            $$RET1A1 = operator new[](unsigned long)((unsigned long long) N * 8ull);
   140 |    *((char * *)this) = $$RET1A1;
   141 |    goto lab_3;
          lab_1:
            if (!(N > *((int *)((char *)this + 8)))) goto lab_4;
   142 |    temp = operator new[](unsigned long)((unsigned long long) N * 8ull);
   143 |    __builtin_memcpy(temp,*((char * *)this),(unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   144 |    if (!(*((char * *)this) != NULL)) goto lab_6;
   145 |    operator delete[](void*)(*((char * *)this))
   146 |    *((char * *)this) = NULL;
   147 |  lab_6:
   148 |    *((int *)((char *)this + 8)) = N;
            $$RET1A2 = operator new[](unsigned long)((unsigned long long) N * 8ull);
   149 |    *((char * *)this) = $$RET1A2;
   150 |    __builtin_memcpy($$RET1A2,temp,(unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   151 |    if (!(temp != NULL)) goto lab_10;
   152 |    operator delete[](void*)(temp)
   155 |    goto lab_10;
          lab_4:
            if (!(N < *((int *)((char *)this + 8)))) goto lab_11;
   156 |    temp = operator new[](unsigned long)((unsigned long long) N * 8ull);
   157 |    __builtin_memcpy(temp,*((char * *)this),(unsigned long long) N * 8ull);
   158 |    if (!(*((char * *)this) != NULL)) goto lab_13;
   159 |    operator delete[](void*)(*((char * *)this))
   160 |    *((char * *)this) = NULL;
   161 |  lab_13:
   162 |    *((int *)((char *)this + 8)) = N;
            $$RET1A3 = operator new[](unsigned long)((unsigned long long) N * 8ull);
   163 |    *((char * *)this) = $$RET1A3;
   164 |    __builtin_memcpy($$RET1A3,temp,(unsigned long long) N * 8ull);
   165 |    if (!(temp != NULL)) goto lab_15;
   166 |    operator delete[](void*)(temp)
   168 |  lab_15:
   169 |  lab_11:
          lab_10:
          lab_3:
   170 |    return;
          } /* function */ 


    22 |  char * MMSP::grid<1, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(grid<1,MMSP::vector<double> > *this, int FIELDS, int *min, int *max, int GHOSTS, char SINGLE)
    25 |  {
            *((int *)((char *)this + 16)) = FIELDS;
    28 |    if (!1) goto lab_3;
            $$CIV6A = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    29 |      ((int *)((char *)this + 24))[$$CIV6A] = min[$$CIV6A];
    30 |      ((int *)((char *)this + 28))[$$CIV6A] = max[$$CIV6A];
    28 |      $$CIV6A = $$CIV6A + 1ll;
            } while ((unsigned long long) $$CIV6A < 1ull);    /* ~1 */
          lab_3:
    34 |    *((int *)((char *)this + 20)) = 0;
    41 |    MMSP::grid<1, MMSP::vector<double> >::setup(bool)(this,SINGLE)
    42 |    rstr = this;
            return rstr;
          } /* function */ 


  1114 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::buffer_size() const(char * this)
  1103 |  {
            size = 0ull;
  1105 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_2;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 8 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)*((char * *)this) + 8))[((long long) (((int *)(this + 52))[0ll] * (x - ((int *)(this + 44))[0ll])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~3 */
          lab_2:
  1116 |    rstr = size;
            return rstr;
  1117 |  } /* function */ 


  1119 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::buffer_size(int const*, int const*) const(grid<1,MMSP::vector<double> > *this, int *min, int *max)
  1103 |  {
            size = 0ull;
  1105 |    if (!(min[0ll] < max[0ll])) goto lab_2;
            x = min[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 8 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)*((char * *)this) + 8))[((long long) (((int *)((char *)this + 52))[0ll] * (x - ((int *)((char *)this + 44))[0ll])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < max[0ll]);    /* ~3 */
          lab_2:
  1121 |    rstr = size;
            return rstr;
  1122 |  } /* function */ 


  1126 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*) const(char * this, char * buffer)
          {
            $$PARM.p3CA = *((char * *)this);
  1138 |    size = 0ull;
  1140 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_2;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 8 */
              $$csx7A = ((int *)(this + 44))[0ll];
              $$csx7B = ((int *)(this + 52))[0ll];
              $$PARM.this327 = ((char *)$$PARM.p3CA  + (long long) ((x - $$csx7A) * $$csx7B) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)$$PARM.p3CA  + (long long) ((x - $$csx7A) * $$csx7B) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~3 */
          lab_2:
  1128 |    rstr = size;
            return rstr;
  1129 |  } /* function */ 


  1131 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(grid<1,MMSP::vector<double> > *this, char * buffer, int *min, int *max)
          {
            $$PARM.p3CA = *((char * *)this);
  1138 |    size = 0ull;
  1140 |    if (!(min[0ll] < max[0ll])) goto lab_2;
            x = min[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 8 */
              $$csx7C = ((int *)((char *)this + 44))[0ll];
              $$csx7D = ((int *)((char *)this + 52))[0ll];
              $$PARM.this327 = ((char *)$$PARM.p3CA  + (long long) ((x - $$csx7C) * $$csx7D) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)$$PARM.p3CA  + (long long) ((x - $$csx7C) * $$csx7D) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < max[0ll]);    /* ~3 */
          lab_2:
  1133 |    rstr = size;
            return rstr;
  1134 |  } /* function */ 


  1149 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*)(char * this, char * buffer)
          {
            $$PARM.p41E = *((char * *)this);
  1161 |    size = 0ull;
  1163 |    if (!(((int *)(this + 32))[0ll] < ((int *)(this + 36))[0ll])) goto lab_2;
            x = ((int *)(this + 32))[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 10 */
              $$PARM.this414 = ((char *)$$PARM.p41E  + (long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll);
   109 |      $$csx7E = ((char * *)$$PARM.p41E)[((long long) ((x - ((int *)(this + 44))[0ll]) * ((int *)(this + 52))[0ll]) * 16ll) / 8];
              if (!($$csx7E != NULL)) goto lab_4;
   110 |      operator delete[](void*)($$csx7E)
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_4:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < ((int *)(this + 36))[0ll]);    /* ~3 */
          lab_2:
  1151 |    rstr = size;
            return rstr;
  1152 |  } /* function */ 


  1154 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(grid<1,MMSP::vector<double> > *this, char * buffer, int *min, int *max)
          {
            $$PARM.p41E = *((char * *)this);
  1161 |    size = 0ull;
  1163 |    if (!(min[0ll] < max[0ll])) goto lab_2;
            x = min[0ll];
            do {   /* id=1 guarded */ /* ~3 */ 
              /* region = 10 */
              $$PARM.this414 = ((char *)$$PARM.p41E  + (long long) ((x - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]) * 16ll);
   109 |      $$csx7F = ((char * *)$$PARM.p41E)[((long long) ((x - ((int *)((char *)this + 44))[0ll]) * ((int *)((char *)this + 52))[0ll]) * 16ll) / 8];
              if (!($$csx7F != NULL)) goto lab_4;
   110 |      operator delete[](void*)($$csx7F)
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_4:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < max[0ll]);    /* ~3 */
          lab_2:
  1156 |    rstr = size;
            return rstr;
  1157 |  } /* function */ 


    22 |  char * MMSP::grid<3, MMSP::vector<double> >::grid(int, int*, int*, int, bool)(grid<3,MMSP::vector<double> > *this, int FIELDS, int *min, int *max, int GHOSTS, char SINGLE)
    25 |  {
            *((int *)((char *)this + 16)) = FIELDS;
    28 |    if (!1) goto lab_3;
            $$CIV6B = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
              /* bump-normalized */
    29 |      ((int *)((char *)this + 24))[$$CIV6B] = min[$$CIV6B];
    30 |      ((int *)((char *)this + 36))[$$CIV6B] = max[$$CIV6B];
    28 |      $$CIV6B = $$CIV6B + 1ll;
            } while ((unsigned long long) $$CIV6B < 3ull);    /* ~1 */
          lab_3:
    34 |    *((int *)((char *)this + 20)) = 0;
    41 |    MMSP::grid<3, MMSP::vector<double> >::setup(bool)(this,SINGLE)
    42 |    rstr = this;
            return rstr;
          } /* function */ 


  1114 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::buffer_size() const(char * this)
          {
            $$RET1AA = MMSP::grid<3, MMSP::vector<double> >::buffer_size(int const*, int const*) const(this,(this + 48),(this + 60));
  1116 |    rstr = $$RET1AA;
            return rstr;
  1117 |  } /* function */ 


  1119 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::buffer_size(int const*, int const*) const(grid<3,MMSP::vector<double> > *this, char * min, char * max)
          {
            $$RET1AB = MMSP::grid<3, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,*((char * *)this),0,min,max);
  1121 |    rstr = $$RET1AB;
            return rstr;
  1122 |  } /* function */ 


  1126 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*) const(char * this, char * buffer)
          {
            $$RET1AC = MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(this,buffer,(this + 48),(this + 60));
  1128 |    rstr = $$RET1AC;
            return rstr;
  1129 |  } /* function */ 


  1131 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, int const*, int const*) const(grid<3,MMSP::vector<double> > *this, char * buffer, char * min, char * max)
          {
            $$RET1AD = MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,buffer,*((char * *)this),0,min,max);
  1133 |    rstr = $$RET1AD;
            return rstr;
  1134 |  } /* function */ 


  1149 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*)(char * this, char * buffer)
          {
            $$RET1AE = MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(this,buffer,(this + 48),(this + 60));
  1151 |    rstr = $$RET1AE;
            return rstr;
  1152 |  } /* function */ 


  1154 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, int const*, int const*)(grid<3,MMSP::vector<double> > *this, char * buffer, char * min, char * max)
          {
            $$RET1AF = MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,buffer,*((char * *)this),0,min,max);
  1156 |    rstr = $$RET1AF;
            return rstr;
  1157 |  } /* function */ 


          char * std::map<DistanceVoxel*, int, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::~map()(_Rb_tree_node_base *this)
   614 |  {
            $$PARM.__x3A7 = ((char * *)((char *)this + 8))[8 / 8];
   968 |    if (!(((char * *)((char *)this + 8))[8 / 8] != NULL)) goto lab_1;
            do {   /* id=1 guarded */ /* ~2 */ 
              /* region = 8 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(this,*((char * *)((char *)$$PARM.__x3A7 + 24)))
   509 |      __y = *((char * *)((char *)$$PARM.__x3A7 + 16));
    95 |      operator delete(void*)($$PARM.__x3A7)
   973 |      $$PARM.__x3A7 = __y;
   968 |    } while (__y != NULL);    /* ~2 */
          lab_1:
            rstr = this;
            return rstr;
          } /* function */ 


    67 |  char * Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(aggr8 __first, aggr8 __last, Point<int> *__result)
    70 |  {
            __cur = __result;
    73 |    if (!(__first._M_current@0 != __last._M_current@0)) goto lab_3;
            $$CIV6C = 0ll;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 10 */
              /* bump-normalized */
   101 |      if (!(NULL != ((char *)__result  + $$CIV6C * 12ll))) goto lab_5;
    12 |      ((int *)__result)[($$CIV6C * 12ll) / 4] = ((int *)__first._M_current@0)[($$CIV6C * 12ll) / 4];
              ((int *)((char *)__result + 4))[($$CIV6C * 12ll) / 4] = ((int *)((char *)__first._M_current@0 + 4))[($$CIV6C * 12ll) / 4];
              ((int *)((char *)__result + 8))[($$CIV6C * 12ll) / 4] = ((int *)((char *)__first._M_current@0 + 8))[($$CIV6C * 12ll) / 4];
            lab_5:
   710 |      $$CIV6C = $$CIV6C + 1ll;
            } while ((unsigned long long) $$CIV6C < (unsigned long long) ((__last._M_current@0 - __first._M_current@0) / 12ll));    /* ~1 */
            __cur = ((char *)__result  + ((__last._M_current@0 - __first._M_current@0) / 12ll) * 12ll);
          lab_3:
    76 |    rstr = __cur;
            return rstr;
    83 |  } /* function */ 


   142 |  void MMSP::grid<2, DistanceVoxel>::setup(bool)(grid<2,DistanceVoxel> *this, char SINGLE)
   145 |  {
            if (!1) goto lab_3;
            $$CIV6D = 0ll;
            do {   /* id=6 guarded */ /* ~1 */ 
              /* region = 39 */
              /* bump-normalized */
   146 |      ((int *)((char *)this + 40))[$$CIV6D] = ((int *)((char *)this + 24))[$$CIV6D];
   147 |      ((int *)((char *)this + 48))[$$CIV6D] = ((int *)((char *)this + 32))[$$CIV6D];
   149 |      ((int *)((char *)this + 88))[$$CIV6D] = 2;
   150 |      ((int *)((char *)this + 96))[$$CIV6D] = 2;
   152 |      ((double *)((char *)this + 104))[$$CIV6D] =  1.0000000000000000E+000;
   154 |      ((int *)((char *)this + 120))[$$CIV6D] = 0;
   155 |      ((int *)((char *)this + 128))[$$CIV6D] = 1;
   156 |      ((int *)((char *)this + 136))[$$CIV6D] = 1;
   158 |      ((int *)((char *)this + 144))[$$CIV6D] = 0;
   159 |      ((int *)((char *)this + 152))[$$CIV6D] = 0;
   145 |      $$CIV6D = $$CIV6D + 1ll;
            } while ((unsigned long long) $$CIV6D < 2ull);    /* ~1 */
          lab_3:
   301 |    if (!1) goto lab_6;
            $$CIV6E = 0ll;
            do {   /* id=5 guarded */ /* ~4 */ 
              /* region = 38 */
              /* bump-normalized */
   302 |      ((int *)((char *)this + 64))[$$CIV6E] = ((int *)((char *)this + 40))[$$CIV6E] - *((int *)((char *)this + 20));
   303 |      ((int *)((char *)this + 72))[$$CIV6E] = *((int *)((char *)this + 20)) + ((int *)((char *)this + 48))[$$CIV6E];
   301 |      $$CIV6E = $$CIV6E + 1ll;
            } while ((unsigned long long) $$CIV6E < 2ull);    /* ~4 */
          lab_6:
   305 |    if (!1) goto lab_34;
            $$DCIVC = 0ll;
            do {   /* id=7 guarded */ /* ~35 */ 
              /* region = 37 */
              /* bump-normalized */
              /* independent */
   307 |      ((int *)((char *)this + 56))[$$DCIVC] = 1;
   306 |      ((int *)((char *)this + 80))[$$DCIVC] = 1;
   305 |      $$DCIVC = $$DCIVC + 1ll;
            } while ((unsigned long long) $$DCIVC < 2ull);    /* ~35 */
          lab_34:
            if (!1) goto lab_36;
            $$DCIVD = 0ll;
            do {   /* id=8 guarded */ /* ~37 */ 
              /* region = 36 */
              /* bump-normalized */
              /* independent */
   308 |      if (!((int) $$DCIVD + 1 < 2)) goto lab_38;
              $$DCIVE = 0ll;
              $$SCREP8 = ((int *)((char *)this + 56))[$$DCIVD];
              $$SCREP9 = ((int *)((char *)this + 80))[$$DCIVD];
              do {   /* id=9 guarded */ /* ~39 */ 
                /* region = 33 */
                /* bump-normalized */
   310 |        $$SCREP8 = $$SCREP8 * (((int *)((char *)this + 48))[(long long) ((int) (1ll + ($$DCIVE + $$DCIVD)))] - ((int *)((char *)this + 40))[(long long) ((int) (1ll + ($$DCIVE + $$DCIVD)))]);
   309 |        $$SCREP9 = $$SCREP9 * (((int *)((char *)this + 72))[(long long) ((int) (1ll + ($$DCIVE + $$DCIVD)))] - ((int *)((char *)this + 64))[(long long) ((int) (1ll + ($$DCIVE + $$DCIVD)))]);
   308 |        $$DCIVE = $$DCIVE + 1ll;
              } while ((unsigned long long) $$DCIVE < (unsigned long long) (1ll - $$DCIVD));    /* ~39 */
              ((int *)((char *)this + 80))[$$DCIVD] = $$SCREP9;
              ((int *)((char *)this + 56))[$$DCIVD] = $$SCREP8;
            lab_38:
   305 |      $$DCIVD = $$DCIVD + 1ll;
            } while ((unsigned long long) $$DCIVD < 2ull);    /* ~37 */
          lab_36:
   315 |    *((int *)((char *)this + 12)) = (((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll];
   316 |    *((int *)((char *)this + 8)) = (((int *)((char *)this + 48))[0ll] - ((int *)((char *)this + 40))[0ll]) * ((int *)((char *)this + 56))[0ll];
   319 |    __20868 = operator new[](unsigned long)((unsigned long long) ((((int *)((char *)this + 72))[0ll] - ((int *)((char *)this + 64))[0ll]) * ((int *)((char *)this + 80))[0ll]) * 24ull);
            if (!(__20868 != NULL)) goto lab_13;
            if (!(0ull < (unsigned long long) *((int *)((char *)this + 12)))) goto lab_17;
            $$CIV71 = 0ll;
            do {   /* id=2 guarded */ /* ~15 */ 
              /* region = 34 */
              /* bump-normalized */
    70 |      *(((int *)__20868) + $$CIV71 * 24ll / 4) = -1;
              *(((int *)((char *)__20868 + 4)) + $$CIV71 * 24ll / 4) = -1;
              *(((int *)((char *)__20868 + 8)) + $$CIV71 * 24ll / 4) = 0;
              *(((double *)((char *)__20868 + 16)) + $$CIV71 * 24ll / 8) =  1.7976931348623157E+308;
   319 |      $$CIV71 = $$CIV71 + 1ll;
            } while ((unsigned long long) $$CIV71 < (unsigned long long) *((int *)((char *)this + 12)));    /* ~15 */
          lab_17:
          lab_13:
            *((char * *)this) = __20868;
   320 |    if (!(0 < *((int *)((char *)this + 12)))) goto lab_20;
            i = 0;
            do {   /* id=1 guarded */ /* ~18 */ 
              /* region = 35 */
              i = i + 1;
            } while (i < *((int *)((char *)this + 12)));    /* ~18 */
          lab_20:
   326 |    return;
          } /* function */ 


   374 |  char * MMSP::grid<3, DistanceVoxel>::operator()(MMSP::vector<int>) const(grid<3,DistanceVoxel> *this, vector<int> *x /*copyin((NULL), (pali((x{vector<int>})UDd,x#)))UDp;*/ )
   376 |  {
            p = *((char * *)this);
   377 |    if (!1) goto lab_3;
            $$CIV72 = 0ll;
            $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3E = MMSP::vector<int>::operator[](int)::guard___func__3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 28 */
              /* bump-normalized */
              $$PARM.i4D = (int) $$CIV72;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3E = 1;
    30 |      if ($$PARM.i4D < *((int *)((char *)x + 8))) goto lab_19;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3E;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_19:
    31 |      $$csx80 = (long long) $$PARM.i4D;
              $$IRET17 = ((char *)*((char * *)x) + (4ll)*($$csx80));
   377 |      $$RET1B0 = $$IRET17;
   378 |      $$PARM.x1E = $$RET1B0;
              $$PARM.x01F = ((int *)((char *)this + 48))[$$CIV72];
              $$PARM.x120 = ((int *)((char *)this + 60))[$$CIV72];
              $$PARM.b021 = ((int *)((char *)this + 120))[$$CIV72];
              $$PARM.b122 = ((int *)((char *)this + 132))[$$CIV72];
    44 |      if (!(*$$PARM.x1E < $$PARM.x01F)) goto lab_4;
    45 |      if ($$PARM.b021 == 1) goto lab_5;
              if (!($$PARM.b021 == 4)) goto lab_6;
            lab_5:
              *$$PARM.x1E = $$PARM.x01F;
              goto lab_16;
            lab_6:
    47 |      if (!($$PARM.b021 == 2)) goto lab_8;
              *$$PARM.x1E = *$$PARM.x1E + ($$PARM.x120 - $$PARM.x01F);
              goto lab_16;
            lab_8:
    49 |      if (!($$PARM.b021 == 0)) goto lab_16;
              *$$PARM.x1E = $$PARM.x01F * 2 - *$$PARM.x1E;
    50 |      goto lab_16;
            lab_4:
              if (!(*$$PARM.x1E >= $$PARM.x120)) goto lab_16;
    51 |      if ($$PARM.b122 == 1) goto lab_10;
              if (!($$PARM.b122 == 4)) goto lab_11;
            lab_10:
              *$$PARM.x1E = $$PARM.x120 - 1;
              goto lab_16;
            lab_11:
    53 |      if (!($$PARM.b122 == 2)) goto lab_13;
              *$$PARM.x1E = *$$PARM.x1E + ($$PARM.x01F - $$PARM.x120);
              goto lab_16;
            lab_13:
    55 |      if (!($$PARM.b122 == 0)) goto lab_16;
              *$$PARM.x1E = ($$PARM.x120 * 2 - *$$PARM.x1E) - 2;
    57 |    lab_16:
   378 |      $$PARM.i47 = (int) $$CIV72;
    29 |      $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3E = 1;
    30 |      if ($$PARM.i47 < *((int *)((char *)x + 8))) goto lab_17;
              MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3E;
              __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
              return;
            lab_17:
    31 |      $$IRET14 = ((char *)*((char * *)x) + (4ll)*($$csx80));
   378 |      $$RET1B1 = $$IRET14;
   379 |      p = ((char *)p  + (long long) ((*$$RET1B1 - ((int *)((char *)this + 84))[$$CIV72]) * ((int *)((char *)this + 108))[$$CIV72]) * 24ll);
   377 |      $$CIV72 = ($$CIV72 + 1);
            } while ((unsigned long long) $$CIV72 < 3ull);    /* ~1 */
            MMSP::vector<int>::operator[](int)::guard___func__3 = $$ICM._ZZN4MMSP6vectorIiEixEiE15guard___func__3E;
          lab_3:
   381 |    rstr = p;
            return rstr;
   382 |  } /* function */ 


   960 |  char * Point<int>* std::vector<Point<int>, std::allocator<Point<int> > >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > > >(unsigned long, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >)(char * this, unsigned long long __n, aggr8 __first, aggr8 __last)
   962 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   140 |    if (!(__n != 0ull)) goto lab_4;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__n > 1537228672809129301ull),0ll))) goto lab_6;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_6:
    89 |    __20898 = operator new(unsigned long)(__n * 12ull);
   107 |    __20949 = __20898;
            goto lab_5;
          lab_4:
            __20949 = NULL;
          lab_5:
   965 |    __es.__c4@3 = 1u;
   257 |    Point<int>* std::__uninitialized_copy<false>::uninitialized_copy<__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*>(__gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, __gnu_cxx::__normal_iterator<Point<int> const*, std::vector<Point<int>, std::allocator<Point<int> > > >, Point<int>*)(__first,__last,__20949);
            goto __20944;
            goto __20945;
   968 |    __es.__c4@3 = 0u;
            rstr = __20949;
            return rstr;
   971 |  lab_14:
            /* GLAB  id_no=6178{__20944} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __20947 = __int_register_value(29u);
            __cxa_begin_catch((char *) __20947)
   145 |    if (!(__20949 != NULL)) goto lab_9;
    95 |    operator delete(void*)(__20949)
   110 |  lab_9:
   973 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
   975 |    return rstr;
   971 |    /* GLAB  id_no=6184{__20945} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __20948 = __int_register_value(29u);
            _Unwind_Resume((char *) __20948)
            goto lab_14;
   975 |  } /* function */ 


   115 |  void std::string MMSP::name<double>(MMSP::vector<double> const&)(char * __classReturn, char * s)
          {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
   101 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)(&__20963,"vector:",&__20965);
            __es.__c4@3 = 1u;
            __20966 =  0.0000000000000000E+000;
            $$PARM.__classReturn352 = &__20967;
            $$PARM.value353 = &__20966;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)($$PARM.__classReturn352,"double",&__108);
            __es.__c4@3 = 2u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(__classReturn,&__20963,&__20967)
            __es.__c4@3 = 1u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__20967);
            __es.__c4@3 = 0u;
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&__20963);
   117 |    return;
          } /* function */ 


  2161 |  void std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)(char * __str, char * __lhs, char * __rhs)
  2163 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
  2164 |    std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)(__str,__lhs);
            __es.__c4@3 = 1u;
  2165 |    std::string::append(std::string const&)(__str,__rhs);
  2167 |    return;
          } /* function */ 


    37 |  char * MMSP::vector<int>::vector<int>(int, int const&)(vector<int> *this, int N, int *value)
    39 |  {
            *((int *)((char *)this + 8)) = N;
            $$RET1B3 = operator new[](unsigned long)((unsigned long long) N * 4ull);
    40 |    *((char * *)this) = $$RET1B3;
    41 |    if (!(0 < *((int *)((char *)this + 8)))) goto lab_3;
            i = 0;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
    42 |      $$RET1B3[(long long) i] = *value;
    41 |      i = i + 1;
            } while (i < *((int *)((char *)this + 8)));    /* ~1 */
          lab_3:
    43 |    rstr = this;
            return rstr;
          } /* function */ 


    58 |  void MMSP::vector<int> getPosition<3, int>(Point<int> const&)(vector<int> *answer, Point<int> *p)
    59 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = NULL;
            __es.__i@18 = 0;
    60 |    __21024 = 0;
            $$PARM.this21A = answer;
    39 |    *((int *)((char *)answer + 8)) = 3;
            $$RET1B3 = operator new[](unsigned long)(12ull);
    40 |    *((char * *)$$PARM.this21A) = $$RET1B3;
    41 |    if (!(0 < *((int *)((char *)$$PARM.this21A + 8)))) goto lab_10;
            i = 0;
            do {   /* id=1 guarded */ /* ~11 */ 
              /* region = 15 */
    42 |      $$RET1B3[(long long) i] = __21024;
    41 |      i = i + 1;
            } while (i < *((int *)((char *)$$PARM.this21A + 8)));    /* ~11 */
          lab_10:
    60 |    __es.__c4@3 = 1u;
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (0 < *((int *)((char *)answer + 8))) goto lab_8;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_8:
    61 |    $$csx81 = *((char * *)answer);
            ((int *)$$csx81)[0ll] = *((int *)p);
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (1 < *((int *)((char *)answer + 8))) goto lab_4;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_4:
    62 |    ((int *)$$csx81)[1ll] = *((int *)((char *)p + 4));
    29 |    MMSP::vector<int>::operator[](int)::guard___func__3 = 1;
    30 |    if (2 < *((int *)((char *)answer + 8))) goto lab_6;
            __assert_fail("i < size","./include/MMSP.vector.h",30u,&MMSP::vector<int>::operator[](int)::__func__)
            return;
          lab_6:
    63 |    ((int *)$$csx81)[2ll] = *((int *)((char *)p + 8));
    65 |    return;
          } /* function */ 


   295 |  void std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<DistanceVoxel**, std::vector<DistanceVoxel*, std::allocator<DistanceVoxel*> > >, DistanceVoxel* const&)(char * this, aggr8 __position, char * *__x)
   298 |  {
            __es.__l@0 = 0;
            __es.__t@8 = &__fsm_tab;
            __es.__this@10 = this;
            __es.__i@18 = 0;
   299 |    $$csx82 = *((char * *)(this + 8));
            if (!($$csx82 != *((char * *)(this + 16)))) goto lab_3;
    55 |    if (!($$csx82 != NULL)) goto lab_6;
   105 |    *((char * *)$$csx82) = ((char * *)((char *)$$csx82  - 8ll))->(DistanceVoxel *).rns1546.;
          lab_6:
   304 |    *((char * *)(this + 8)) = ((char *)$$csx82  + 8ll);
   306 |    __x_copy = *__x;
   638 |    $$PARM.__first130 = __position._M_current@0;
            $$PARM.__last131 = ((char *)*((char * *)(this + 8))  - 16ll);
            $$PARM.__result132 = ((char *)*((char * *)(this + 8))  - 8ll);
   575 |    __builtin_memmove(((char *)$$PARM.__result132  - (($$PARM.__last131 - $$PARM.__first130) / 8ll) * 8ll),$$PARM.__first130,(unsigned long long) ((($$PARM.__last131 - $$PARM.__first130) / 8ll) * 8ll));
   577 |    $$IRET7A = ((char *)$$PARM.__result132  - (($$PARM.__last131 - $$PARM.__first130) / 8ll) * 8ll);
   312 |    *__position._M_current@0 = __x_copy;
   316 |    goto lab_8;
          lab_3:
   319 |    $$PARM.__n134 = 1ull;
            $$PARM.__s135 = "vector::_M_insert_aux";
   538 |    $$csx83 = *((char * *)this);
            if (!((unsigned long long) (2305843009213693951ll - ($$csx82 - $$csx83) / 8ll) < $$PARM.__n134)) goto lab_47;
  1137 |    std::__throw_length_error(char const*)($$PARM.__s135)
            return;
          lab_47:
  1139 |    __21630 = (unsigned long long) (($$csx82 - $$csx83) / 8ll);
   215 |    __21641 = ((unsigned long long) (($$csx82 - $$csx83) / 8ll) < $$PARM.__n134 ? &$$PARM.__n134 : &__21630);
   216 |    $$csx84 = *__21641;
  1140 |    if ($$csx84 + (unsigned long long) (($$csx82 - $$csx83) / 8ll) < (unsigned long long) (($$csx82 - $$csx83) / 8ll)) goto lab_49;
   538 |    if (!($$csx84 + (unsigned long long) (($$csx82 - $$csx83) / 8ll) > 2305843009213693951ull)) goto lab_50;
          lab_49:
            __21655 = 2305843009213693951ull;
            goto lab_51;
          lab_50:
            __21655 = $$csx84 + (unsigned long long) (($$csx82 - $$csx83) / 8ll);
          lab_51:
            $$IRET7B = __21655;
   319 |    __len = $$IRET7B;
   686 |    __21139._M_current@0 = *((char * *)this);
   426 |    __21061 = __21139;
   140 |    if (!(__len != 0ull)) goto lab_10;
   111 |    if (!(0ll != __builtin_expect@34((long long) (__len > 2305843009213693951ull),0ll))) goto lab_12;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_12:
    89 |    __21152 = operator new(unsigned long)(__len * 8ull);
   107 |    __21354 = __21152;
            goto lab_11;
          lab_10:
            __21354 = NULL;
          lab_11:
   325 |    __es.__c4@3 = 1u;
    55 |    if (!(NULL != ((char *)__21354  + ((__position._M_current@0 - $$csx83) / 8ll) * 8ll))) goto lab_15;
   105 |    __21354[(__position._M_current@0 - $$csx83) / 8ll] = *__x;
          lab_15:
   336 |    __new_finish = NULL;
   264 |    $$RET1B7 = DistanceVoxel** std::copy<DistanceVoxel**, DistanceVoxel**>(DistanceVoxel**, DistanceVoxel**, DistanceVoxel**)(*((char * *)this),__position._M_current@0,__21354);
            goto __21349;
            goto __21350;
   342 |    __new_finish = ((char *)$$RET1B7  + 8ll);
   264 |    $$RET1B8 = DistanceVoxel** std::copy<DistanceVoxel**, DistanceVoxel**>(DistanceVoxel**, DistanceVoxel**, DistanceVoxel**)(__position._M_current@0,*((char * *)(this + 8)),((char *)$$RET1B7  + 8ll));
            goto __21349;
            goto __21350;
   268 |    __new_finish = $$RET1B8;
   349 |    __es.__c4@3 = 0u;
            goto @21351;
   351 |  lab_36:
            /* GLAB  id_no=6300{__21349} labtype=USR_LAB          */
            __es.__c4@3 = 2u;
            __21352 = __int_register_value(29u);
            __cxa_begin_catch((char *) __21352)
   352 |    if (__new_finish != NULL) goto lab_18;
   115 |    goto lab_20;
          lab_18:
   141 |    if (!(__21354 != __new_finish)) goto lab_23;
    92 |  lab_23:
   143 |  lab_20:
   145 |    if (!(__21354 != NULL)) goto lab_24;
    95 |    operator delete(void*)(__21354)
   110 |  lab_24:
   357 |    __cxa_rethrow()
            __cxa_end_catch()
            __es.__c4@3 = 0u;
          @21351:
   141 |    $$csx85 = *((char * *)(this + 8));
            $$csx86 = *((char * *)this);
            if (!($$csx86 != $$csx85)) goto lab_28;
    92 |  lab_28:
   145 |    if (!($$csx86 != NULL)) goto lab_29;
    95 |    operator delete(void*)($$csx86)
   110 |  lab_29:
   364 |    *((char * *)this) = __21354;
   365 |    *((char * *)(this + 8)) = __new_finish;
   366 |    *((char * *)(this + 16)) = ((char *)__21354  + (long long) (__len * 8ull));
   367 |  lab_8:
   368 |    return;
   351 |    /* GLAB  id_no=6306{__21350} labtype=USR_LAB          */
            __cxa_end_catch()
            __es.__c4@3 = 0u;
            __21353 = __int_register_value(29u);
            _Unwind_Resume((char *) __21353)
            goto lab_36;
   368 |  } /* function */ 


   997 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> > const*, std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> > const*, DistanceVoxel* const&) const(char * this, char * __x, char * __y, char * *__k)
  1001 |  {
            if (!(__x != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
   505 |      __memset(&__21358,0,1ull);
   230 |      __21371 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1568. < *__k);
              if (__21371 != 0u) goto lab_4;
  1003 |      __y = __x;
   513 |      __x = *((char * *)(__x + 16));
              goto lab_6;
            lab_4:
   521 |      __x = *((char * *)(__x + 24));
            lab_6:
  1001 |    } while (__x != NULL);    /* ~1 */
          lab_3:
   243 |    __21357._M_node@0 = __y;
            rstr = __21357;
            return rstr;
  1007 |  } /* function */ 


  1381 |  void std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::erase(std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >, std::_Rb_tree_iterator<std::pair<DistanceVoxel* const, int> >)(char * this, aggr8 __first, aggr8 __last)
   171 |  {
            __21385._M_node@0 = ((char * *)(this + 16))[8 / 8];
   629 |    __21381 = __21385;
   213 |    __21392 = (char) (__first._M_node@0 == &__21381->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1578.);
            if (!(__21392 != 0u)) goto lab_1;
   171 |    __21393._M_node@0 = (this + 8);
   640 |    __21383 = __21393;
   213 |    __21399 = (char) (__last._M_node@0 == &__21383->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1579.);
            if (!(__21399 != 0u)) goto lab_1;
   726 |    $$PARM.__x3A5 = ((char * *)(this + 8))[8 / 8];
   968 |    if (!(((char * *)(this + 8))[8 / 8] != NULL)) goto lab_13;
            do {   /* id=2 guarded */ /* ~14 */ 
              /* region = 15 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(this,*((char * *)((char *)$$PARM.__x3A5 + 24)))
   509 |      __y = *((char * *)((char *)$$PARM.__x3A5 + 16));
    95 |      operator delete(void*)($$PARM.__x3A5)
   973 |      $$PARM.__x3A5 = __y;
   968 |    } while (__y != NULL);    /* ~14 */
          lab_13:
   727 |    ((char * *)(this + 16))[8 / 8] = (this + 8);
   728 |    ((char * *)(this + 8))[8 / 8] = NULL;
   729 |    ((char * *)(this + 24))[8 / 8] = (this + 8);
   730 |    *((unsigned long long *)(this + 40)) = 0ull;
   731 |    goto lab_4;
          lab_1:
  1387 |    if (!(__first._M_node@0 != __last._M_node@0)) goto lab_7;
            do {   /* id=1 guarded */ /* ~5 */ 
              /* region = 16 */
   191 |      __tmp = __first;
   192 |      __first._M_node@0 = std::_Rb_tree_increment(std::_Rb_tree_node_base*)(__first._M_node@0);
  1344 |      __y = std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21423._M_node@0.off0,(this + 8));
    95 |      operator delete(void*)(__y)
  1349 |      *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) - 1ull;
   217 |    } while (__first._M_node@0 != __last._M_node@0);    /* ~5 */
          lab_7:
          lab_4:
  1389 |    return;
          } /* function */ 


  1418 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::find(DistanceVoxel* const&)(_Rb_tree_node_base *this, char * *__k)
  1421 |  {
            $$PARM.__x119 = ((char * *)((char *)this + 8))[8 / 8];
            $$PARM.__y11A = (this + 8);
   985 |    if (!(((char * *)((char *)this + 8))[8 / 8] != NULL)) goto lab_5;
            do {   /* id=1 guarded */ /* ~6 */ 
              /* region = 15 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x119  + 32))->(DistanceVoxel *).rns1700.$$1902 < *__k);
              if (__21720 != 0u) goto lab_7;
   987 |      $$PARM.__y11A = $$PARM.__x119;
   509 |      $$PARM.__x119 = *((char * *)($$PARM.__x119 + 16));
              goto lab_8;
            lab_7:
   517 |      $$PARM.__x119 = *((char * *)($$PARM.__x119 + 24));
            lab_8:
   985 |    } while ($$PARM.__x119 != NULL);    /* ~6 */
          lab_5:
   171 |    __21706._M_node@0 = $$PARM.__y11A;
            $$IRET73 = __21706;
  1421 |    __j = &$$IRET73->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1587.;
   171 |    __21438._M_node@0 = (this + 8);
   640 |    __21434 = __21438;
   213 |    __21444 = (char) (__j._M_node@0 == __21438._M_node@0);
            if (__21444 != 0u) goto lab_1;
   529 |    __21453 = __j._M_node@0;
            __memset(&__21445,0,1ull);
   230 |    __21458 = (char) (*__k < ((char * *)((char *)__21453  + 32))->(DistanceVoxel *).rns1588.);
            if (!(__21458 != 0u)) goto lab_2;
          lab_1:
   171 |    __21459._M_node@0 = (this + 8);
   640 |    __21435 = __21459;
            __21463 = &__21435;
            goto lab_3;
          lab_2:
            __21463 = &__j;
          lab_3:
            rstr = *__21463;
            return rstr;
  1425 |  } /* function */ 


  1047 |  aggr16 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::equal_range(DistanceVoxel* const&)(_Rb_tree_node_base *this, char * *__k)
  1051 |  {
            __y = (this + 8);
  1052 |    if (!(((char * *)((char *)this + 8))[8 / 8] != NULL)) goto lab_3;
  1050 |    __x = ((char * *)((char *)this + 8))[8 / 8];
  1052 |    do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 29 */
   505 |      __memset(&__21476,0,1ull);
   230 |      __21489 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593. < *__k);
              if (!(__21489 != 0u)) goto lab_4;
   517 |      __x = *((char * *)(__x + 24));
              goto lab_6;
            lab_4:
   505 |      __memset(&__21493,0,1ull);
   230 |      __21506 = (char) (*__k < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1593.);
              if (!(__21506 != 0u)) goto lab_7;
  1057 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
  1066 |    lab_6:
  1052 |    } while (__x != NULL);    /* ~1 */
          lab_3:
   171 |    __21472._M_node@0 = __y;
            __21473._M_node@0 = __y;
            __21471.first@0 = __21472;
    84 |    __21471.second@8 = __21473;
            rstr = __21471;
            return rstr;
   509 |  lab_7:
   517 |    __xu.rnn170 = *((char * *)(__x + 24));
    84 |    $$PARM.__x11D = *((char * *)(__x + 16));
            $$PARM.__y11E = __x;
   985 |    if (!(*((char * *)(__x + 16)) != NULL)) goto lab_10;
            do {   /* id=2 guarded */ /* ~11 */ 
              /* region = 27 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)$$PARM.__x11D  + 32))->(DistanceVoxel *).rns1700.$$1906 < *__k);
              if (__21720 != 0u) goto lab_12;
   987 |      $$PARM.__y11E = $$PARM.__x11D;
   509 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 16));
              goto lab_13;
            lab_12:
   517 |      $$PARM.__x11D = *((char * *)($$PARM.__x11D + 24));
            lab_13:
   985 |    } while ($$PARM.__x11D != NULL);    /* ~11 */
          lab_10:
   171 |    __21706._M_node@0 = $$PARM.__y11E;
            $$IRET74 = __21706;
    84 |    __21467 = &$$IRET74->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1599.;
            $$PARM.__x3AB = __xu.rnn170;
            $$PARM.__y3AC = __y;
  1017 |    if (!(__xu.rnn170 != NULL)) goto lab_15;
            do {   /* id=3 guarded */ /* ~16 */ 
              /* region = 28 */
   505 |      __memset(&__21730,0,1ull);
   230 |      __21743 = (char) (*__k < ((char * *)((char *)$$PARM.__x3AB  + 32))->(DistanceVoxel *).rns1703.$$1907);
              if (!(__21743 != 0u)) goto lab_17;
  1019 |      $$PARM.__y3AC = $$PARM.__x3AB;
   509 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 16));
              goto lab_18;
            lab_17:
   517 |      $$PARM.__x3AB = *((char * *)($$PARM.__x3AB + 24));
            lab_18:
  1017 |    } while ($$PARM.__x3AB != NULL);    /* ~16 */
          lab_15:
   171 |    __21729._M_node@0 = $$PARM.__y3AC;
            $$IRET1E4 = __21729;
    84 |    __21468 = &$$IRET1E4->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1602.;
            __21466.first@0 = __21467;
            __21466.second@8 = __21468;
            rstr = __21466;
            return rstr;
  1070 |  } /* function */ 


  1101 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(grid<2,MMSP::vector<double> > *this, vector<double> *p, int i, int *min, int *max)
  1103 |  {
            size = 0ull;
  1104 |    if (!(i == 1)) goto lab_1;
  1105 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)p + 8))[((long long) (((int *)((char *)this + 80))[(long long) i] * (x - ((int *)((char *)this + 64))[(long long) i])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1107 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 2)) goto lab_7;
  1108 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1BC = MMSP::grid<2, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll),i + 1,min,max);
  1109 |      size = size + $$RET1BC;
  1108 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1110 |  lab_7:
          lab_6:
  1111 |    rstr = size;
            return rstr;
  1112 |  } /* function */ 


  1136 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(grid<2,MMSP::vector<double> > *this, char * buffer, char * p, int i, int *min, int *max)
  1138 |  {
            size = 0ull;
  1139 |    if (!(i == 1)) goto lab_1;
  1140 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
              $$csx87 = ((int *)((char *)this + 64))[(long long) i];
              $$csx88 = ((int *)((char *)this + 80))[(long long) i];
              $$PARM.this327 = ((char *)p  + (long long) ((x - $$csx87) * $$csx88) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)p  + (long long) ((x - $$csx87) * $$csx88) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1142 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 2)) goto lab_7;
  1143 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1BE = MMSP::grid<2, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll),i + 1,min,max);
  1144 |      size = size + $$RET1BE;
  1143 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1145 |  lab_7:
          lab_6:
  1146 |    rstr = size;
            return rstr;
  1147 |  } /* function */ 


  1159 |  unsigned long long MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(grid<2,MMSP::vector<double> > *this, char * buffer, vector<double> *p, int i, int *min, int *max)
  1161 |  {
            size = 0ull;
  1162 |    if (!(i == 1)) goto lab_1;
  1163 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 18 */
              $$PARM.this414 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll);
   109 |      $$csx89 = ((char * *)p)[((long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll) / 8];
              if (!($$csx89 != NULL)) goto lab_13;
   110 |      operator delete[](void*)($$csx89)
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_13:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1165 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 2)) goto lab_7;
  1166 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 19 */
              $$RET1C0 = MMSP::grid<2, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 64))[(long long) i]) * ((int *)((char *)this + 80))[(long long) i]) * 16ll),i + 1,min,max);
  1167 |      size = size + $$RET1C0;
  1166 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1168 |  lab_7:
          lab_6:
  1169 |    rstr = size;
            return rstr;
  1170 |  } /* function */ 


  1101 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(grid<1,MMSP::vector<double> > *this, vector<double> *p, int i, int *min, int *max)
  1103 |  {
            size = 0ull;
  1104 |    if (!(i == 0)) goto lab_1;
  1105 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)p + 8))[((long long) (((int *)((char *)this + 52))[(long long) i] * (x - ((int *)((char *)this + 44))[(long long) i])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1107 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 1)) goto lab_7;
  1108 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1C2 = MMSP::grid<1, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll),i + 1,min,max);
  1109 |      size = size + $$RET1C2;
  1108 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1110 |  lab_7:
          lab_6:
  1111 |    rstr = size;
            return rstr;
  1112 |  } /* function */ 


  1136 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(grid<1,MMSP::vector<double> > *this, char * buffer, char * p, int i, int *min, int *max)
  1138 |  {
            size = 0ull;
  1139 |    if (!(i == 0)) goto lab_1;
  1140 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
              $$csx8A = ((int *)((char *)this + 44))[(long long) i];
              $$csx8B = ((int *)((char *)this + 52))[(long long) i];
              $$PARM.this327 = ((char *)p  + (long long) ((x - $$csx8A) * $$csx8B) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)p  + (long long) ((x - $$csx8A) * $$csx8B) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1142 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 1)) goto lab_7;
  1143 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1C4 = MMSP::grid<1, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll),i + 1,min,max);
  1144 |      size = size + $$RET1C4;
  1143 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1145 |  lab_7:
          lab_6:
  1146 |    rstr = size;
            return rstr;
  1147 |  } /* function */ 


  1159 |  unsigned long long MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(grid<1,MMSP::vector<double> > *this, char * buffer, vector<double> *p, int i, int *min, int *max)
  1161 |  {
            size = 0ull;
  1162 |    if (!(i == 0)) goto lab_1;
  1163 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 18 */
              $$PARM.this414 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll);
   109 |      $$csx8C = ((char * *)p)[((long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll) / 8];
              if (!($$csx8C != NULL)) goto lab_13;
   110 |      operator delete[](void*)($$csx8C)
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_13:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1165 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 1)) goto lab_7;
  1166 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 19 */
              $$RET1C6 = MMSP::grid<1, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 44))[(long long) i]) * ((int *)((char *)this + 52))[(long long) i]) * 16ll),i + 1,min,max);
  1167 |      size = size + $$RET1C6;
  1166 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1168 |  lab_7:
          lab_6:
  1169 |    rstr = size;
            return rstr;
  1170 |  } /* function */ 


  1101 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(grid<3,MMSP::vector<double> > *this, vector<double> *p, int i, int *min, int *max)
  1103 |  {
            size = 0ull;
  1104 |    if (!(i == 2)) goto lab_1;
  1105 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
  1106 |      size = size + (unsigned long long) ((int) ((unsigned long long) ((int *)((char *)p + 8))[((long long) (((int *)((char *)this + 108))[(long long) i] * (x - ((int *)((char *)this + 84))[(long long) i])) * 16ll) / 4] * 8ull + 4ull));
  1105 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1107 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 3)) goto lab_7;
  1108 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1C8 = MMSP::grid<3, MMSP::vector<double> >::buffer_size(MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll),i + 1,min,max);
  1109 |      size = size + $$RET1C8;
  1108 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1110 |  lab_7:
          lab_6:
  1111 |    rstr = size;
            return rstr;
  1112 |  } /* function */ 


  1136 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(grid<3,MMSP::vector<double> > *this, char * buffer, char * p, int i, int *min, int *max)
  1138 |  {
            size = 0ull;
  1139 |    if (!(i == 2)) goto lab_1;
  1140 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 16 */
              $$csx8D = ((int *)((char *)this + 84))[(long long) i];
              $$csx8E = ((int *)((char *)this + 108))[(long long) i];
              $$PARM.this327 = ((char *)p  + (long long) ((x - $$csx8D) * $$csx8E) * 16ll);
   102 |      __builtin_memcpy(((char *)buffer  + (long long) size),(((char *)p  + (long long) ((x - $$csx8D) * $$csx8E) * 16ll) + 8),4ull);
   103 |      __builtin_memcpy(((char *)buffer  + (long long) (size + 4ull)),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
  1141 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull));
  1140 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1142 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 3)) goto lab_7;
  1143 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 17 */
              $$RET1CA = MMSP::grid<3, MMSP::vector<double> >::to_buffer(char*, MMSP::vector<double>*, int, int const*, int const*) const(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll),i + 1,min,max);
  1144 |      size = size + $$RET1CA;
  1143 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1145 |  lab_7:
          lab_6:
  1146 |    rstr = size;
            return rstr;
  1147 |  } /* function */ 


  1159 |  unsigned long long MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(grid<3,MMSP::vector<double> > *this, char * buffer, vector<double> *p, int i, int *min, int *max)
  1161 |  {
            size = 0ull;
  1162 |    if (!(i == 2)) goto lab_1;
  1163 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_5;
            x = min[(long long) i];
            do {   /* id=2 guarded */ /* ~3 */ 
              /* region = 18 */
              $$PARM.this414 = ((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll);
   109 |      $$csx8F = ((char * *)p)[((long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll) / 8];
              if (!($$csx8F != NULL)) goto lab_13;
   110 |      operator delete[](void*)($$csx8F)
   111 |      *((char * *)$$PARM.this414) = NULL;
   112 |    lab_13:
   113 |      __builtin_memcpy(($$PARM.this414 + 8),((char *)buffer  + (long long) size),4ull);
              $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |      *((char * *)$$PARM.this414) = $$RET1D0;
   115 |      __builtin_memcpy($$RET1D0,((char *)buffer  + (long long) (size + 4ull)),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
  1164 |      size = size + (unsigned long long) ((int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull));
  1163 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~3 */
          lab_5:
  1165 |    goto lab_6;
          lab_1:
            if (!(i >= 0)) goto lab_7;
            if (!(i < 3)) goto lab_7;
  1166 |    if (!(min[(long long) i] < max[(long long) i])) goto lab_12;
            x = min[(long long) i];
            do {   /* id=1 guarded */ /* ~10 */ 
              /* region = 19 */
              $$RET1CC = MMSP::grid<3, MMSP::vector<double> >::from_buffer(char*, MMSP::vector<double>*, int, int const*, int const*)(this,((char *)buffer  + (long long) size),((char *)p  + (long long) ((x - ((int *)((char *)this + 84))[(long long) i]) * ((int *)((char *)this + 108))[(long long) i]) * 16ll),i + 1,min,max);
  1167 |      size = size + $$RET1CC;
  1166 |      x = x + 1;
            } while (x < max[(long long) i]);    /* ~10 */
          lab_12:
  1168 |  lab_7:
          lab_6:
  1169 |    rstr = size;
            return rstr;
  1170 |  } /* function */ 


   168 |  void void MMSP::resize<DistanceVoxel>(DistanceVoxel&, int)(char * value, int n)
          {
   170 |    return;
          } /* function */ 


   964 |  void std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(char * this, _Rb_tree_node_base *__x)
   968 |  {
            if (!(__x != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 8 */
   517 |      std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*)(this,*((char * *)((char *)__x + 24)))
   509 |      __y = *((char * *)((char *)__x + 16));
    95 |      operator delete(void*)(__x)
   973 |      __x = __y;
   968 |    } while (__y != NULL);    /* ~1 */
          lab_3:
   975 |    return;
          } /* function */ 


   981 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*, std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*, DistanceVoxel* const&)(char * this, char * __x, char * __y, char * *__k)
   985 |  {
            if (!(__x != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
   505 |      __memset(&__21707,0,1ull);
   230 |      __21720 = (char) (((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1700. < *__k);
              if (__21720 != 0u) goto lab_4;
   987 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
              goto lab_6;
            lab_4:
   517 |      __x = *((char * *)(__x + 24));
            lab_6:
   985 |    } while (__x != NULL);    /* ~1 */
          lab_3:
   171 |    __21706._M_node@0 = __y;
            rstr = __21706;
            return rstr;
   991 |  } /* function */ 


  1013 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_upper_bound(std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*, std::_Rb_tree_node<std::pair<DistanceVoxel* const, int> >*, DistanceVoxel* const&)(char * this, char * __x, char * __y, char * *__k)
  1017 |  {
            if (!(__x != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 11 */
   505 |      __memset(&__21730,0,1ull);
   230 |      __21743 = (char) (*__k < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1703.);
              if (!(__21743 != 0u)) goto lab_4;
  1019 |      __y = __x;
   509 |      __x = *((char * *)(__x + 16));
              goto lab_6;
            lab_4:
   517 |      __x = *((char * *)(__x + 24));
            lab_6:
  1017 |    } while (__x != NULL);    /* ~1 */
          lab_3:
   171 |    __21729._M_node@0 = __y;
            rstr = __21729;
            return rstr;
  1023 |  } /* function */ 


  1206 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique_(std::_Rb_tree_const_iterator<std::pair<DistanceVoxel* const, int> >, std::pair<DistanceVoxel* const, int> const&)(char * this, aggr8 __position, char * *__v)
  1210 |  {
            $$csx91 = (this + 8);
            $$csx90 = __position._M_node@0 == $$csx91;
            if (!$$csx90) goto lab_1;
  1212 |    if (!(*((unsigned long long *)(this + 40)) > 0ull)) goto lab_3;
   529 |    __21779 = ((char * *)(this + 24))[8 / 8];
            __memset(&__21771,0,1ull);
            __memset(&__21752,0,1ull);
   230 |    __21787 = (char) (((char * *)((char *)__21779  + 32))->(DistanceVoxel *).rns1708. < *__v);
            if (!(__21787 != 0u)) goto lab_3;
  1215 |    $$PARM.this104 = this;
            $$PARM.__x105 = NULL;
            $$PARM.__p106 = ((char * *)(this + 24))[8 / 8];
            $$PARM.__v107 = __v;
   877 |    if ($$PARM.__x105 != NULL) goto lab_56;
            if ($$PARM.__p106 == $$csx91) goto lab_56;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v107 < ((char * *)((char *)$$PARM.__p106  + 32))->(DistanceVoxel *).rns1751.$$1959);
            if (__21930 != 0u) goto lab_56;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this104;
            $$PARM.__xEF = $$PARM.__v107;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_57;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_57:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_59;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1959 = *$$PARM.__xEF;
          lab_59:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p106,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this104 + 40)) = *((unsigned long long *)((char *)$$PARM.this104 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6E = __21912;
            goto lab_60;
   230 |  lab_56:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this104;
            $$PARM.__xED = $$PARM.__v107;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_61;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_61:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_63;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1959 = *$$PARM.__xED;
          lab_63:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p106,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this104 + 40)) = *((unsigned long long *)((char *)$$PARM.this104 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6E = __21912;
   888 |  lab_60:
  1215 |    __21753 = &$$IRET6E->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1713.;
            rstr = __21753;
            return rstr;
          lab_3:
  1217 |    __21754 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique(std::pair<DistanceVoxel* const, int> const&)(this,__v)->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,bool>).rns1714.;
            rstr = __21754.first@0;
            return rstr;
  1218 |  lab_1:
   230 |    __memset(&__21755,0,1ull);
   529 |    __memset(&__21791,0,1ull);
   230 |    $$csx92 = (__position._M_node@0 + 32);
            __21805 = (char) (*__v < *((char * *)$$csx92));
            if (!(__21805 != 0u)) goto lab_8;
  1223 |    __before = __position;
  1224 |    if (!(__position._M_node@0 == ((char * *)(this + 16))[8 / 8])) goto lab_10;
  1225 |    $$PARM.this100 = this;
            $$PARM.__x101 = ((char * *)(this + 16))[8 / 8];
            $$PARM.__p102 = ((char * *)(this + 16))[8 / 8];
            $$PARM.__v103 = __v;
   877 |    if ($$PARM.__x101 != NULL) goto lab_48;
            if ($$PARM.__p102 == $$csx91) goto lab_48;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v103 < ((char * *)((char *)$$PARM.__p102  + 32))->(DistanceVoxel *).rns1751.$$1955);
            if (__21930 != 0u) goto lab_48;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this100;
            $$PARM.__xEF = $$PARM.__v103;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_49;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_49:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_51;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1955 = *$$PARM.__xEF;
          lab_51:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p102,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this100 + 40)) = *((unsigned long long *)((char *)$$PARM.this100 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6D = __21912;
            goto lab_52;
   230 |  lab_48:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this100;
            $$PARM.__xED = $$PARM.__v103;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_53;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_53:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_55;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1955 = *$$PARM.__xED;
          lab_55:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p102,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this100 + 40)) = *((unsigned long long *)((char *)$$PARM.this100 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6D = __21912;
   888 |  lab_52:
  1225 |    __21756 = &$$IRET6D->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1717.;
            rstr = __21756;
            return rstr;
          lab_10:
   274 |    __before._M_node@0 = std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)(__position._M_node@0);
   276 |    __21819 = __before._M_node@0;
   529 |    __memset(&__21811,0,1ull);
            __memset(&__21757,0,1ull);
   230 |    __21827 = (char) (((char * *)((char *)__21819  + 32))->(DistanceVoxel *).rns1719. < *__v);
            if (!(__21827 != 0u)) goto lab_13;
   521 |    if (!(*((char * *)((char *)__before._M_node@0 + 24)) == NULL)) goto lab_15;
  1230 |    $$PARM.this108 = this;
            $$PARM.__x109 = NULL;
            $$PARM.__p10A = __before._M_node@0;
            $$PARM.__v10B = __v;
   877 |    if ($$PARM.__x109 != NULL) goto lab_64;
            if ($$PARM.__p10A == $$csx91) goto lab_64;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v10B < ((char * *)((char *)$$PARM.__p10A  + 32))->(DistanceVoxel *).rns1751.$$1954);
            if (__21930 != 0u) goto lab_64;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this108;
            $$PARM.__xEF = $$PARM.__v10B;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_65;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_65:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_67;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1954 = *$$PARM.__xEF;
          lab_67:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p10A,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this108 + 40)) = *((unsigned long long *)((char *)$$PARM.this108 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6F = __21912;
            goto lab_68;
   230 |  lab_64:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this108;
            $$PARM.__xED = $$PARM.__v10B;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_69;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_69:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_71;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1954 = *$$PARM.__xED;
          lab_71:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p10A,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this108 + 40)) = *((unsigned long long *)((char *)$$PARM.this108 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6F = __21912;
   888 |  lab_68:
  1230 |    __21758 = &$$IRET6F->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1721.;
            rstr = __21758;
            return rstr;
          lab_15:
  1232 |    $$PARM.thisF4 = this;
            $$PARM.__xF5 = __position._M_node@0;
            $$PARM.__pF6 = __position._M_node@0;
            $$PARM.__vF7 = __v;
   877 |    if ($$PARM.__xF5 != NULL) goto lab_32;
            if ($$csx90) goto lab_32;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__vF7 < *((char * *)$$csx92));
            if (__21930 != 0u) goto lab_32;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.thisF4;
            $$PARM.__xEF = $$PARM.__vF7;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_33;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_33:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_35;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1953 = *$$PARM.__xEF;
          lab_35:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__pF6,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.thisF4 + 40)) = *((unsigned long long *)((char *)$$PARM.thisF4 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6A = __21912;
            goto lab_36;
   230 |  lab_32:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.thisF4;
            $$PARM.__xED = $$PARM.__vF7;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_37;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_37:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_39;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1953 = *$$PARM.__xED;
          lab_39:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__pF6,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.thisF4 + 40)) = *((unsigned long long *)((char *)$$PARM.thisF4 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6A = __21912;
   888 |  lab_36:
  1232 |    __21759 = &$$IRET6A->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1723.;
            rstr = __21759;
            return rstr;
  1234 |  lab_13:
  1236 |    __21760 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique(std::pair<DistanceVoxel* const, int> const&)(this,__v)->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,bool>).rns1724.;
            rstr = __21760.first@0;
            return rstr;
  1237 |  lab_8:
   529 |    __memset(&__21831,0,1ull);
            __memset(&__21761,0,1ull);
   230 |    __21847 = (char) (*((char * *)$$csx92) < *__v);
            if (!(__21847 != 0u)) goto lab_20;
  1242 |    __after = __position;
  1243 |    if (!(__position._M_node@0 == ((char * *)(this + 24))[8 / 8])) goto lab_22;
  1244 |    $$PARM.this10C = this;
            $$PARM.__x10D = NULL;
            $$PARM.__p10E = ((char * *)(this + 24))[8 / 8];
            $$PARM.__v10F = __v;
   877 |    if ($$PARM.__x10D != NULL) goto lab_72;
            if ($$PARM.__p10E == $$csx91) goto lab_72;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v10F < ((char * *)((char *)$$PARM.__p10E  + 32))->(DistanceVoxel *).rns1751.$$1948);
            if (__21930 != 0u) goto lab_72;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this10C;
            $$PARM.__xEF = $$PARM.__v10F;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_73;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_73:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_75;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1948 = *$$PARM.__xEF;
          lab_75:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p10E,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this10C + 40)) = *((unsigned long long *)((char *)$$PARM.this10C + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET70 = __21912;
            goto lab_76;
   230 |  lab_72:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this10C;
            $$PARM.__xED = $$PARM.__v10F;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_77;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_77:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_79;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1948 = *$$PARM.__xED;
          lab_79:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p10E,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this10C + 40)) = *((unsigned long long *)((char *)$$PARM.this10C + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET70 = __21912;
   888 |  lab_76:
  1244 |    __21762 = &$$IRET70->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1726.;
            rstr = __21762;
            return rstr;
          lab_22:
   230 |    __memset(&__21763,0,1ull);
   259 |    __after._M_node@0 = std::_Rb_tree_increment(std::_Rb_tree_node_base const*)(__after._M_node@0);
   261 |    __21862 = __after._M_node@0;
   529 |    __memset(&__21854,0,1ull);
   230 |    __21868 = (char) (*__v < ((char * *)((char *)__21862  + 32))->(DistanceVoxel *).rns1728.);
            if (!(__21868 != 0u)) goto lab_25;
   521 |    if (!(*((char * *)(__position._M_node@0 + 24)) == NULL)) goto lab_27;
  1249 |    $$PARM.this110 = this;
            $$PARM.__x111 = NULL;
            $$PARM.__p112 = __position._M_node@0;
            $$PARM.__v113 = __v;
   877 |    if ($$PARM.__x111 != NULL) goto lab_80;
            if ($$csx90) goto lab_80;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__v113 < *((char * *)$$csx92));
            if (__21930 != 0u) goto lab_80;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.this110;
            $$PARM.__xEF = $$PARM.__v113;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_81;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_81:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_83;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1947 = *$$PARM.__xEF;
          lab_83:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p112,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this110 + 40)) = *((unsigned long long *)((char *)$$PARM.this110 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET71 = __21912;
            goto lab_84;
   230 |  lab_80:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.this110;
            $$PARM.__xED = $$PARM.__v113;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_85;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_85:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_87;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1947 = *$$PARM.__xED;
          lab_87:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__p112,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.this110 + 40)) = *((unsigned long long *)((char *)$$PARM.this110 + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET71 = __21912;
   888 |  lab_84:
  1249 |    __21764 = &$$IRET71->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1729.;
            rstr = __21764;
            return rstr;
          lab_27:
  1251 |    $$PARM.thisFC = this;
            $$PARM.__xFD = __after._M_node@0;
            $$PARM.__pFE = __after._M_node@0;
            $$PARM.__vFF = __v;
   877 |    if ($$PARM.__xFD != NULL) goto lab_40;
            if ($$PARM.__pFE == $$csx91) goto lab_40;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*$$PARM.__vFF < ((char * *)((char *)$$PARM.__pFE  + 32))->(DistanceVoxel *).rns1751.$$1946);
            if (__21930 != 0u) goto lab_40;
            __21958 = 0u;
   881 |    $$PARM.thisEE = $$PARM.thisFC;
            $$PARM.__xEF = $$PARM.__vFF;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_41;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_41:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_43;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1946 = *$$PARM.__xEF;
          lab_43:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__pFE,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.thisFC + 40)) = *((unsigned long long *)((char *)$$PARM.thisFC + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6C = __21912;
            goto lab_44;
   230 |  lab_40:
            __21958 = 1u;
   881 |    $$PARM.thisEC = $$PARM.thisFC;
            $$PARM.__xED = $$PARM.__vFF;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_45;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_45:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_47;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1946 = *$$PARM.__xED;
          lab_47:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,$$PARM.__pFE,$$csx91)
   886 |    *((unsigned long long *)((char *)$$PARM.thisFC + 40)) = *((unsigned long long *)((char *)$$PARM.thisFC + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            $$IRET6C = __21912;
   888 |  lab_44:
  1251 |    __21765 = &$$IRET6C->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1731.;
            rstr = __21765;
            return rstr;
  1252 |  lab_25:
  1254 |    __21766 = std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique(std::pair<DistanceVoxel* const, int> const&)(this,__v)->(pair<std::_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >,bool>).rns1732.;
            rstr = __21766.first@0;
            return rstr;
  1255 |  lab_20:
   171 |    __21767._M_node@0 = __position._M_node@0;
            rstr = __21767;
            return rstr;
  1260 |  } /* function */ 


   458 |  char * DistanceVoxel** std::copy<DistanceVoxel**, DistanceVoxel**>(DistanceVoxel**, DistanceVoxel**, DistanceVoxel**)(char * __first, char * __last, char * __result)
   392 |  {
   378 |    __builtin_memmove(__result,__first,(unsigned long long) (((__last - __first) / 8ll) * 8ll));
   437 |    rstr = ((char *)__result  + ((__last - __first) / 8ll) * 8ll);
            return rstr;
   469 |  } /* function */ 


    78 |  int int MMSP::buffer_size<double>(MMSP::vector<double> const&)(vector<double> *v)
    97 |  {
            $$IRET1B3 = (int) ((unsigned long long) *((int *)((char *)v + 8)) * 8ull + 4ull);
            $$RET1CD = $$IRET1B3;
    79 |    rstr = $$RET1CD;
            return rstr;
    80 |  } /* function */ 


    81 |  int int MMSP::to_buffer<double>(MMSP::vector<double> const&, char*)(char * v, char * buffer)
          {
            $$PARM.this327 = v;
            $$PARM.buffer328 = buffer;
   102 |    __builtin_memcpy($$PARM.buffer328,($$PARM.this327 + 8),4ull);
   103 |    __builtin_memcpy(((char *)$$PARM.buffer328  + 4ll),*((char * *)$$PARM.this327),(unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull);
   104 |    $$IRET1AB = (int) ((unsigned long long) *((int *)((char *)$$PARM.this327 + 8)) * 8ull + 4ull);
            $$RET1CE = $$IRET1AB;
    82 |    rstr = $$RET1CE;
            return rstr;
    83 |  } /* function */ 


    84 |  int int MMSP::from_buffer<double>(MMSP::vector<double>&, char const*)(char * v, char * buffer)
          {
            $$PARM.this414 = v;
            $$PARM.buffer415 = buffer;
   109 |    if (!(*((char * *)$$PARM.this414) != NULL)) goto lab_1;
   110 |    operator delete[](void*)(*((char * *)$$PARM.this414))
   111 |    *((char * *)$$PARM.this414) = NULL;
   112 |  lab_1:
   113 |    __builtin_memcpy(($$PARM.this414 + 8),$$PARM.buffer415,4ull);
            $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   114 |    *((char * *)$$PARM.this414) = $$RET1D0;
   115 |    __builtin_memcpy($$RET1D0,((char *)$$PARM.buffer415  + 4ll),(unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull);
   116 |    $$IRET21B = (int) ((unsigned long long) *((int *)((char *)$$PARM.this414 + 8)) * 8ull + 4ull);
            $$RET1CF = $$IRET21B;
    85 |    rstr = $$RET1CF;
            return rstr;
    86 |  } /* function */ 


   874 |  aggr8 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<DistanceVoxel* const, int> const&)(_Rb_tree_impl<std::less<DistanceVoxel *>,0> *this, char * __x, char * *__p, char * *__v)
   877 |  {
            if (__x != NULL) goto lab_2;
            if (__p == (this + 8)) goto lab_2;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*__v < ((char * *)((char *)__p  + 32))->(DistanceVoxel *).rns1751.);
            if (__21930 != 0u) goto lab_2;
            __21958 = 0u;
   881 |    $$PARM.thisEE = this;
            $$PARM.__xEF = __v;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_9;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_9:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_11;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971 = *$$PARM.__xEF;
          lab_11:
   377 |    $$IRET68 = __23645;
   881 |    __z = $$IRET68;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,__p,(this + 8))
   886 |    *((unsigned long long *)((char *)this + 40)) = *((unsigned long long *)((char *)this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            rstr = __21912;
            return rstr;
   230 |  lab_2:
            __21958 = 1u;
   881 |    $$PARM.thisEC = this;
            $$PARM.__xED = __v;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_6;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_6:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_8;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967 = *$$PARM.__xED;
          lab_8:
   377 |    $$IRET67 = __23645;
   881 |    __z = $$IRET67;
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(__21958,__z,__p,(this + 8))
   886 |    *((unsigned long long *)((char *)this + 40)) = *((unsigned long long *)((char *)this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __z;
            rstr = __21912;
            return rstr;
   888 |  } /* function */ 


  1161 |  aggr16 std::_Rb_tree<DistanceVoxel*, std::pair<DistanceVoxel* const, int>, std::_Select1st<std::pair<DistanceVoxel* const, int> >, std::less<DistanceVoxel*>, std::allocator<std::pair<DistanceVoxel* const, int> > >::_M_insert_unique(std::pair<DistanceVoxel* const, int> const&)(char * this, char * __v)
  1164 |  {
            __x = ((char * *)(this + 8))[8 / 8];
  1165 |    __y = (this + 8);
  1166 |    __comp = 1u;
  1167 |    if (!(((char * *)(this + 8))[8 / 8] != NULL)) goto lab_3;
            do {   /* id=1 guarded */ /* ~1 */ 
              /* region = 43 */
  1169 |      __y = __x;
   230 |      __memset(&__21959,0,1ull);
   505 |      __memset(&__21978,0,1ull);
   230 |      __comp = (char) (*((char * *)__v) < ((char * *)((char *)__x  + 32))->(DistanceVoxel *).rns1759.);
  1171 |      if (!(__comp != 0u)) goto lab_5;
   509 |      __22032 = *((char * *)(__x + 16));
              goto lab_6;
            lab_5:
   517 |      __22032 = *((char * *)(__x + 24));
            lab_6:
              __x = __22032;
  1167 |    } while (__22032 != NULL);    /* ~1 */
          lab_3:
   171 |    __j._M_node@0 = __y;
  1174 |    if (!(__comp != 0u)) goto lab_7;
   171 |    __22001._M_node@0 = ((char * *)(this + 16))[8 / 8];
   629 |    __21962 = __22001;
   213 |    __22008 = (char) (__y == &__21962->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >)._M_node@0.rns1773.);
            if (!(__22008 != 0u)) goto lab_9;
   877 |    if (__x != NULL) goto lab_22;
            if (__y == (this + 8)) goto lab_22;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*((char * *)__v) < ((char * *)((char *)__y  + 32))->(DistanceVoxel *).rns1751.$$1977);
            if (__21930 != 0u) goto lab_22;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_23;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_23:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_25;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1977 = *((aggr16 *)__v);
          lab_25:
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(0u,__23645,__y,(this + 8))
   886 |    *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __23645;
            $$IRET6B = __21912;
            goto lab_26;
   230 |  lab_22:
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_27;
    87 |    std::__throw_bad_alloc()()
            return;
          lab_27:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_29;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1977 = *((aggr16 *)__v);
          lab_29:
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(1u,__23645,__y,(this + 8))
   886 |    *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __23645;
            $$IRET6B = __21912;
   888 |  lab_26:
    84 |    __21965 = &$$IRET6B->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1765.;
  1177 |    __21964.first@0 = __21965;
    84 |    __21964.second@8 = 1u;
            rstr = __21964;
            return rstr;
          lab_9:
   199 |    __j._M_node@0 = std::_Rb_tree_decrement(std::_Rb_tree_node_base*)(__y);
  1180 |  lab_7:
   529 |    __memset(&__22012,0,1ull);
            __memset(&__21967,0,1ull);
   230 |    __22028 = (char) (((char * *)((char *)__j._M_node@0  + 32))->(DistanceVoxel *).rns1767. < *((char * *)__v));
            if (!(__22028 != 0u)) goto lab_12;
   877 |    if (__x != NULL) goto lab_14;
            if (__y == (this + 8)) goto lab_14;
   230 |    __memset(&__21911,0,1ull);
   529 |    __memset(&__21916,0,1ull);
   230 |    __21930 = (char) (*((char * *)__v) < ((char * *)((char *)__y  + 32))->(DistanceVoxel *).rns1751.$$1975);
            if (__21930 != 0u) goto lab_14;
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_15;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_15:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_17;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1971$$1975 = *((aggr16 *)__v);
          lab_17:
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(0u,__23645,__y,(this + 8))
   886 |    *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __23645;
            $$IRET69 = __21912;
            goto lab_18;
   230 |  lab_14:
   363 |    if (!(0ll != __builtin_expect@34(0ll,0ll))) goto lab_19;
    87 |    std::__throw_bad_alloc()()
            return rstr;
          lab_19:
    89 |    __23645 = operator new(unsigned long)(48ull);
    55 |    if (!(NULL != (__23645 + 32))) goto lab_21;
   105 |    ((aggr16 *)((char *)__23645  + 32))->(pair<DistanceVoxel * const,int>).rns1790.$$1967$$1975 = *((aggr16 *)__v);
          lab_21:
   883 |    std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)(1u,__23645,__y,(this + 8))
   886 |    *((unsigned long long *)(this + 40)) = *((unsigned long long *)(this + 40)) + 1ull;
   171 |    __21912._M_node@0 = __23645;
            $$IRET69 = __21912;
   888 |  lab_18:
    84 |    __21970 = &$$IRET69->(_Rb_tree_iterator<std::pair<DistanceVoxel * const,int> >).rns1768.;
  1182 |    __21969.first@0 = __21970;
    84 |    __21969.second@8 = 1u;
            rstr = __21969;
            return rstr;
          lab_12:
  1183 |    __21972.first@0 = __j;
    84 |    __21972.second@8 = 0u;
            rstr = __21972;
            return rstr;
  1184 |  } /* function */ 


    95 |  int MMSP::vector<double>::buffer_size() const(vector<double> *this)
    97 |  {
            rstr = (int) ((unsigned long long) *((int *)((char *)this + 8)) * 8ull + 4ull);
            return rstr;
    98 |  } /* function */ 


   100 |  int MMSP::vector<double>::to_buffer(char*) const(vector<double> *this, char * buffer)
   102 |  {
            __builtin_memcpy(buffer,(this + 8),4ull);
   103 |    __builtin_memcpy(((char *)buffer  + 4ll),*((char * *)this),(unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   104 |    rstr = (int) ((unsigned long long) *((int *)((char *)this + 8)) * 8ull + 4ull);
            return rstr;
   105 |  } /* function */ 


   107 |  int MMSP::vector<double>::from_buffer(char const*)(vector<double> *this, char * buffer)
   109 |  {
            if (!(*((char * *)this) != NULL)) goto lab_1;
   110 |    operator delete[](void*)(*((char * *)this))
   111 |    *((char * *)this) = NULL;
   112 |  lab_1:
   113 |    __builtin_memcpy((this + 8),buffer,4ull);
            $$RET1D0 = operator new[](unsigned long)((unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   114 |    *((char * *)this) = $$RET1D0;
   115 |    __builtin_memcpy($$RET1D0,((char *)buffer  + 4ll),(unsigned long long) *((int *)((char *)this + 8)) * 8ull);
   116 |    rstr = (int) ((unsigned long long) *((int *)((char *)this + 8)) * 8ull + 4ull);
            return rstr;
   117 |  } /* function */ 


          void __sinit65535()()
    72 |  {
            std::ios_base::Init::Init()(&__ioinit);
            __cxa_atexit(&__srterm__0(),NULL,&__dso_handle);
     5 |    __init__0()()
     6 |    __init__1()()
            return;
          } /* function */ 


          void __srterm__0()()
    72 |  {
            std::ios_base::Init::~Init()(&__ioinit);
            return;
          } /* function */ 


          void __srterm__1()()
     5 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&PROGRAM);
            return;
          } /* function */ 


          void __srterm__2()()
     6 |  {
            std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()(&MESSAGE);
            return;
          } /* function */ 


